{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/reading-time/lib/reading-time.js"],"sourcesContent":["/*!\n * reading-time\n * Copyright (c) Nicolas Gryman <ngryman@gmail.com>\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * @typedef {import('reading-time').Options['wordBound']} WordBoundFunction\n */\n\n/**\n * @param {number} number\n * @param {number[][]} arrayOfRanges\n */\nfunction codeIsInRanges(number, arrayOfRanges) {\n  return arrayOfRanges.some(([lowerBound, upperBound]) =>\n    (lowerBound <= number) && (number <= upperBound)\n  )\n}\n\n/**\n * @type {WordBoundFunction}\n */\nfunction isCJK(c) {\n  if ('string' !== typeof c) {\n    return false\n  }\n  const charCode = c.charCodeAt(0)\n  // Help wanted!\n  // This should be good for most cases, but if you find it unsatisfactory\n  // (e.g. some other language where each character should be standalone words),\n  // contributions welcome!\n  return codeIsInRanges(\n    charCode,\n    [\n      // Hiragana (Katakana not included on purpose,\n      // context: https://github.com/ngryman/reading-time/pull/35#issuecomment-853364526)\n      // If you think Katakana should be included and have solid reasons, improvement is welcomed\n      [0x3040, 0x309f],\n      // CJK Unified ideographs\n      [0x4e00, 0x9fff],\n      // Hangul\n      [0xac00, 0xd7a3],\n      // CJK extensions\n      [0x20000, 0x2ebe0]\n    ]\n  )\n}\n\n/**\n * @type {WordBoundFunction}\n */\nfunction isAnsiWordBound(c) {\n  return ' \\n\\r\\t'.includes(c)\n}\n\n/**\n * @type {WordBoundFunction}\n */\nfunction isPunctuation(c) {\n  if ('string' !== typeof c) {\n    return false\n  }\n  const charCode = c.charCodeAt(0)\n  return codeIsInRanges(\n    charCode,\n    [\n      [0x21, 0x2f],\n      [0x3a, 0x40],\n      [0x5b, 0x60],\n      [0x7b, 0x7e],\n      // CJK Symbols and Punctuation\n      [0x3000, 0x303f],\n      // Full-width ASCII punctuation variants\n      [0xff00, 0xffef]\n    ]\n  )\n}\n\n/**\n * @type {import('reading-time').default}\n */\nfunction readingTime(text, options = {}) {\n  let words = 0, start = 0, end = text.length - 1\n\n  // use provided value if available\n  const wordsPerMinute = options.wordsPerMinute || 200\n\n  // use provided function if available\n  const isWordBound = options.wordBound || isAnsiWordBound\n\n  // fetch bounds\n  while (isWordBound(text[start])) start++\n  while (isWordBound(text[end])) end--\n\n  // Add a trailing word bound to make handling edges more convenient\n  const normalizedText = `${text}\\n`\n\n  // calculate the number of words\n  for (let i = start; i <= end; i++) {\n    // A CJK character is a always word;\n    // A non-word bound followed by a word bound / CJK is the end of a word.\n    if (\n      isCJK(normalizedText[i]) ||\n      (!isWordBound(normalizedText[i]) &&\n        (isWordBound(normalizedText[i + 1]) || isCJK(normalizedText[i + 1]))\n      )\n    ) {\n      words++\n    }\n    // In case of CJK followed by punctuations, those characters have to be eaten as well\n    if (isCJK(normalizedText[i])) {\n      while (\n        i <= end &&\n        (isPunctuation(normalizedText[i + 1]) || isWordBound(normalizedText[i + 1]))\n      ) {\n        i++\n      }\n    }\n  }\n\n  // reading time stats\n  const minutes = words / wordsPerMinute\n  // Math.round used to resolve floating point funkyness\n  //   http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html\n  const time = Math.round(minutes * 60 * 1000)\n  const displayed = Math.ceil(minutes.toFixed(2))\n\n  return {\n    text: displayed + ' min read',\n    minutes: minutes,\n    time: time,\n    words: words\n  }\n}\n\n/**\n * Export\n */\nmodule.exports = readingTime\n"],"names":[],"mappings":"AAAA;;;;CAIC,GAED;AAEA;;CAEC,GAED;;;CAGC,GACD,SAAS,eAAe,MAAM,EAAE,aAAa;IAC3C,OAAO,cAAc,IAAI,CAAC,CAAC,CAAC,YAAY,WAAW,GACjD,AAAC,cAAc,UAAY,UAAU;AAEzC;AAEA;;CAEC,GACD,SAAS,MAAM,CAAC;IACd,IAAI,aAAa,OAAO,GAAG;QACzB,OAAO;IACT;IACA,MAAM,WAAW,EAAE,UAAU,CAAC;IAC9B,eAAe;IACf,wEAAwE;IACxE,8EAA8E;IAC9E,yBAAyB;IACzB,OAAO,eACL,UACA;QACE,8CAA8C;QAC9C,mFAAmF;QACnF,2FAA2F;QAC3F;YAAC;YAAQ;SAAO;QAChB,yBAAyB;QACzB;YAAC;YAAQ;SAAO;QAChB,SAAS;QACT;YAAC;YAAQ;SAAO;QAChB,iBAAiB;QACjB;YAAC;YAAS;SAAQ;KACnB;AAEL;AAEA;;CAEC,GACD,SAAS,gBAAgB,CAAC;IACxB,OAAO,UAAU,QAAQ,CAAC;AAC5B;AAEA;;CAEC,GACD,SAAS,cAAc,CAAC;IACtB,IAAI,aAAa,OAAO,GAAG;QACzB,OAAO;IACT;IACA,MAAM,WAAW,EAAE,UAAU,CAAC;IAC9B,OAAO,eACL,UACA;QACE;YAAC;YAAM;SAAK;QACZ;YAAC;YAAM;SAAK;QACZ;YAAC;YAAM;SAAK;QACZ;YAAC;YAAM;SAAK;QACZ,8BAA8B;QAC9B;YAAC;YAAQ;SAAO;QAChB,wCAAwC;QACxC;YAAC;YAAQ;SAAO;KACjB;AAEL;AAEA;;CAEC,GACD,SAAS,YAAY,IAAI,EAAE,UAAU,CAAC,CAAC;IACrC,IAAI,QAAQ,GAAG,QAAQ,GAAG,MAAM,KAAK,MAAM,GAAG;IAE9C,kCAAkC;IAClC,MAAM,iBAAiB,QAAQ,cAAc,IAAI;IAEjD,qCAAqC;IACrC,MAAM,cAAc,QAAQ,SAAS,IAAI;IAEzC,eAAe;IACf,MAAO,YAAY,IAAI,CAAC,MAAM,EAAG;IACjC,MAAO,YAAY,IAAI,CAAC,IAAI,EAAG;IAE/B,mEAAmE;IACnE,MAAM,iBAAiB,GAAG,KAAK,EAAE,CAAC;IAElC,gCAAgC;IAChC,IAAK,IAAI,IAAI,OAAO,KAAK,KAAK,IAAK;QACjC,oCAAoC;QACpC,wEAAwE;QACxE,IACE,MAAM,cAAc,CAAC,EAAE,KACtB,CAAC,YAAY,cAAc,CAAC,EAAE,KAC7B,CAAC,YAAY,cAAc,CAAC,IAAI,EAAE,KAAK,MAAM,cAAc,CAAC,IAAI,EAAE,CAAC,GAErE;YACA;QACF;QACA,qFAAqF;QACrF,IAAI,MAAM,cAAc,CAAC,EAAE,GAAG;YAC5B,MACE,KAAK,OACL,CAAC,cAAc,cAAc,CAAC,IAAI,EAAE,KAAK,YAAY,cAAc,CAAC,IAAI,EAAE,CAAC,EAC3E;gBACA;YACF;QACF;IACF;IAEA,qBAAqB;IACrB,MAAM,UAAU,QAAQ;IACxB,sDAAsD;IACtD,mEAAmE;IACnE,MAAM,OAAO,KAAK,KAAK,CAAC,UAAU,KAAK;IACvC,MAAM,YAAY,KAAK,IAAI,CAAC,QAAQ,OAAO,CAAC;IAE5C,OAAO;QACL,MAAM,YAAY;QAClB,SAAS;QACT,MAAM;QACN,OAAO;IACT;AACF;AAEA;;CAEC,GACD,OAAO,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/reading-time/lib/stream.js"],"sourcesContent":["/*!\n * reading-time\n * Copyright (c) Nicolas Gryman <ngryman@gmail.com>\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n */\nconst readingTime = require('./reading-time')\nconst Transform = require('stream').Transform\nconst util = require('util')\n\n/**\n * @typedef {import('reading-time').Options} Options\n * @typedef {import('reading-time').Options['wordBound']} WordBoundFunction\n * @typedef {import('reading-time').readingTimeStream} ReadingTimeStream\n * @typedef {import('stream').TransformCallback} TransformCallback\n */\n\n/**\n * @param {Options} options\n * @returns {ReadingTimeStream}\n */\nfunction ReadingTimeStream(options) {\n  // allow use without new\n  if (!(this instanceof ReadingTimeStream)) {\n    return new ReadingTimeStream(options)\n  }\n\n  Transform.call(this, { objectMode: true })\n\n  this.options = options || {}\n  this.stats = {\n    minutes: 0,\n    time: 0,\n    words: 0\n  }\n}\nutil.inherits(ReadingTimeStream, Transform)\n\n/**\n * @param {Buffer} chunk\n * @param {BufferEncoding} encoding\n * @param {TransformCallback} callback\n */\nReadingTimeStream.prototype._transform = function(chunk, encoding, callback) {\n  const stats = readingTime(chunk.toString(encoding), this.options)\n\n  this.stats.minutes += stats.minutes\n  this.stats.time += stats.time\n  this.stats.words += stats.words\n\n  callback()\n}\n\n/**\n * @param {TransformCallback} callback\n */\nReadingTimeStream.prototype._flush = function(callback) {\n  this.stats.text = Math.ceil(this.stats.minutes.toFixed(2)) + ' min read'\n\n  this.push(this.stats)\n  callback()\n}\n\n/**\n * Export\n */\nmodule.exports = ReadingTimeStream\n"],"names":[],"mappings":"AAAA;;;;CAIC,GAED;AAEA;;CAEC,GACD,MAAM;AACN,MAAM,YAAY,oHAAkB,SAAS;AAC7C,MAAM;AAEN;;;;;CAKC,GAED;;;CAGC,GACD,SAAS,kBAAkB,OAAO;IAChC,wBAAwB;IACxB,IAAI,CAAC,CAAC,IAAI,YAAY,iBAAiB,GAAG;QACxC,OAAO,IAAI,kBAAkB;IAC/B;IAEA,UAAU,IAAI,CAAC,IAAI,EAAE;QAAE,YAAY;IAAK;IAExC,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC;IAC3B,IAAI,CAAC,KAAK,GAAG;QACX,SAAS;QACT,MAAM;QACN,OAAO;IACT;AACF;AACA,KAAK,QAAQ,CAAC,mBAAmB;AAEjC;;;;CAIC,GACD,kBAAkB,SAAS,CAAC,UAAU,GAAG,SAAS,KAAK,EAAE,QAAQ,EAAE,QAAQ;IACzE,MAAM,QAAQ,YAAY,MAAM,QAAQ,CAAC,WAAW,IAAI,CAAC,OAAO;IAEhE,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,MAAM,OAAO;IACnC,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,MAAM,IAAI;IAC7B,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,MAAM,KAAK;IAE/B;AACF;AAEA;;CAEC,GACD,kBAAkB,SAAS,CAAC,MAAM,GAAG,SAAS,QAAQ;IACpD,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM;IAE7D,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK;IACpB;AACF;AAEA;;CAEC,GACD,OAAO,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/reading-time/index.js"],"sourcesContent":["module.exports.default = module.exports = require('./lib/reading-time')\nmodule.exports.readingTimeStream = require('./lib/stream')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO,CAAC,OAAO,GAAG,OAAO,OAAO;AACvC,OAAO,OAAO,CAAC,iBAAiB","ignoreList":[0]}},
    {"offset": {"line": 206, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 212, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/remark-reading-time/node_modules/unist-util-is/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n"],"names":[],"mappings":"AAAA;;;CAGC,GAED;;;;;;;;;;;;;;;;;CAiBC,GAED;;;;;CAKC,GAED;;;;;;;;;;;;;;;CAeC,GAED;;;;;;;;;;;CAWC,GAED;;;;;;;;;;;;;;;CAeC,GAED;;;;;;;;;;;;;CAaC;;;;AACM,MAAM,KAWT;;;;;;;KAOC,GACD,sCAAsC;AACtC,SAAS,GAAG,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO;IAC5C,MAAM,QAAQ,QAAQ;IAEtB,IACE,UAAU,aACV,UAAU,QACV,CAAC,OAAO,UAAU,YAChB,QAAQ,KACR,UAAU,OAAO,iBAAiB,GACpC;QACA,MAAM,IAAI,MAAM;IAClB;IAEA,IACE,WAAW,aACX,WAAW,QACX,CAAC,CAAC,GAAG,WAAW,CAAC,OAAO,QAAQ,GAChC;QACA,MAAM,IAAI,MAAM;IAClB;IAEA,IACE,CAAC,WAAW,aAAa,WAAW,IAAI,MACxC,CAAC,UAAU,aAAa,UAAU,IAAI,GACtC;QACA,MAAM,IAAI,MAAM;IAClB;IAEA,sCAAsC;IACtC,OAAO,QAAQ,KAAK,IAAI,IAAI,OAAO,KAAK,IAAI,KAAK,WAC7C,QAAQ,MAAM,IAAI,CAAC,SAAS,MAAM,OAAO,WACzC;AACN;AAqBG,MAAM,UAQT;;;KAGC,GACD,SAAU,IAAI;IACZ,IAAI,SAAS,aAAa,SAAS,MAAM;QACvC,OAAO;IACT;IAEA,IAAI,OAAO,SAAS,UAAU;QAC5B,OAAO,YAAY;IACrB;IAEA,IAAI,OAAO,SAAS,UAAU;QAC5B,OAAO,MAAM,OAAO,CAAC,QAAQ,WAAW,QAAQ,aAAa;IAC/D;IAEA,IAAI,OAAO,SAAS,YAAY;QAC9B,OAAO,YAAY;IACrB;IAEA,MAAM,IAAI,MAAM;AAClB;AAGJ;;;CAGC,GACD,SAAS,WAAW,KAAK;IACvB,kCAAkC,GAClC,MAAM,SAAS,EAAE;IACjB,IAAI,QAAQ,CAAC;IAEb,MAAO,EAAE,QAAQ,MAAM,MAAM,CAAE;QAC7B,MAAM,CAAC,MAAM,GAAG,QAAQ,KAAK,CAAC,MAAM;IACtC;IAEA,OAAO,YAAY;;IAEnB;;;;GAIC,GACD,SAAS,IAAI,GAAG,UAAU;QACxB,IAAI,QAAQ,CAAC;QAEb,MAAO,EAAE,QAAQ,OAAO,MAAM,CAAE;YAC9B,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,aAAa,OAAO;QACtD;QAEA,OAAO;IACT;AACF;AAEA;;;;;CAKC,GACD,SAAS,aAAa,KAAK;IACzB,OAAO,YAAY;;IAEnB;;;GAGC,GACD,SAAS,IAAI,IAAI;QACf,mBAAmB,GACnB,IAAI;QAEJ,IAAK,OAAO,MAAO;YACjB,qDAAqD;YACrD,IAAI,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,EAAE,OAAO;QACvC;QAEA,OAAO;IACT;AACF;AAEA;;;;;CAKC,GACD,SAAS,YAAY,KAAK;IACxB,OAAO,YAAY;;IAEnB;;GAEC,GACD,SAAS,KAAK,IAAI;QAChB,OAAO,QAAQ,KAAK,IAAI,KAAK;IAC/B;AACF;AAEA;;;;;CAKC,GACD,SAAS,YAAY,KAAK;IACxB,OAAO;;IAEP;;;;;GAKC,GACD,SAAS,UAAU,IAAI,EAAE,GAAG,UAAU;QACpC,OAAO,QACL,QACE,OAAO,SAAS,YAChB,UAAU,QACV,0BAA0B;QAC1B,QAAQ,MAAM,IAAI,CAAC,IAAI,EAAE,SAAS;IAExC;AACF;AAEA,SAAS;IACP,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 413, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 419, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/remark-reading-time/node_modules/unist-util-visit-parents/color.browser.js"],"sourcesContent":["/**\n * @param {string} d\n * @returns {string}\n */\nexport function color(d) {\n  return d\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AACM,SAAS,MAAM,CAAC;IACrB,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 428, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 434, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/remark-reading-time/node_modules/unist-util-visit-parents/index.js"],"sourcesContent":["/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {CONTINUE|SKIP|EXIT} Action Union of the action types\n * @typedef {number} Index Move to the sibling at index next (after node itself is completely traversed). Useful if mutating the tree, such as removing the node the visitor is currently on, or any of its previous siblings (or next siblings, in case of reverse) Results less than 0 or greater than or equal to children.length stop traversing the parent\n * @typedef {[(Action|null|undefined|void)?, (Index|null|undefined)?]} ActionTuple List with one or two values, the first an action, the second an index.\n * @typedef {null|undefined|Action|Index|ActionTuple|void} VisitorResult Any value that can be returned from a visitor\n */\n\n/**\n * Invoked when a node (matching test, if given) is found.\n * Visitors are free to transform node.\n * They can also transform the parent of node (the last of ancestors).\n * Replacing node itself, if `SKIP` is not returned, still causes its descendants to be visited.\n * If adding or removing previous siblings (or next siblings, in case of reverse) of node,\n * visitor should return a new index (number) to specify the sibling to traverse after node is traversed.\n * Adding or removing next siblings of node (or previous siblings, in case of reverse)\n * is handled as expected without needing to return a new index.\n * Removing the children property of an ancestor still results in them being traversed.\n *\n * @template {Node} V\n * @callback Visitor\n * @param {V} node Found node\n * @param {Array.<Parent>} ancestors Ancestors of node\n * @returns {VisitorResult}\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<T extends Node>(tree: Node, test: T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>>, visitor: Visitor<T>, reverse?: boolean) => void) &\n   *   ((tree: Node, test: Test, visitor: Visitor<Node>, reverse?: boolean) => void) &\n   *   ((tree: Node, visitor: Visitor<Node>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * Visit children of tree which pass a test\n     *\n     * @param {Node} tree Abstract syntax tree to walk\n     * @param {Test} test test Test node\n     * @param {Visitor<Node>} visitor Function to run for each node\n     * @param {boolean} [reverse] Fisit the tree in reverse, defaults to false\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-ignore no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      var is = convert(test)\n      var step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array.<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Object.<string, unknown>} */\n        var value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string} */\n        var name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          var result = []\n          /** @type {ActionTuple} */\n          var subresult\n          /** @type {number} */\n          var offset\n          /** @type {Array.<Parent>} */\n          var grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          if (node.children && result[0] !== SKIP) {\n            // @ts-ignore looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-ignore looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-ignore looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC,GAED;;;;;CAKC,GAED;;;;;;;;;;;;;;;;CAgBC;;;;;;AAED;AACA;;;AAKO,MAAM,WAAW;AAIjB,MAAM,OAAO;AAIb,MAAM,OAAO;AAEb,MAAM,eAST;;;;;;;KAOC,GACD,SAAU,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO;IACpC,IAAI,OAAO,SAAS,cAAc,OAAO,YAAY,YAAY;QAC/D,UAAU;QACV,qDAAqD;QACrD,UAAU;QACV,OAAO;IACT;IAEA,IAAI,KAAK,CAAA,GAAA,4LAAA,CAAA,UAAO,AAAD,EAAE;IACjB,IAAI,OAAO,UAAU,CAAC,IAAI;IAE1B,QAAQ,MAAM,MAAM,EAAE;IAEtB;;;;OAIC,GACD,SAAS,QAAQ,IAAI,EAAE,KAAK,EAAE,OAAO;QACnC,qCAAqC,GACrC,IAAI,QAAQ,OAAO,SAAS,YAAY,SAAS,OAAO,OAAO,CAAC;QAChE,mBAAmB,GACnB,IAAI;QAEJ,IAAI,OAAO,MAAM,IAAI,KAAK,UAAU;YAClC,OACE,OAAO,MAAM,OAAO,KAAK,WACrB,MAAM,OAAO,GACb,OAAO,MAAM,IAAI,KAAK,WACtB,MAAM,IAAI,GACV;YAEN,OAAO,cAAc,CAAC,OAAO,QAAQ;gBACnC,OACE,WACA,CAAA,GAAA,8MAAA,CAAA,QAAK,AAAD,EAAE,MAAM,IAAI,GAAG,CAAC,OAAO,MAAM,OAAO,MAAM,EAAE,KAChD;YACJ;QACF;QAEA,OAAO;;QAEP,SAAS;YACP,wBAAwB,GACxB,IAAI,SAAS,EAAE;YACf,wBAAwB,GACxB,IAAI;YACJ,mBAAmB,GACnB,IAAI;YACJ,2BAA2B,GAC3B,IAAI;YAEJ,IAAI,CAAC,QAAQ,GAAG,MAAM,OAAO,OAAO,CAAC,QAAQ,MAAM,GAAG,EAAE,IAAI,OAAO;gBACjE,SAAS,SAAS,QAAQ,MAAM;gBAEhC,IAAI,MAAM,CAAC,EAAE,KAAK,MAAM;oBACtB,OAAO;gBACT;YACF;YAEA,IAAI,KAAK,QAAQ,IAAI,MAAM,CAAC,EAAE,KAAK,MAAM;gBACvC,kCAAkC;gBAClC,SAAS,CAAC,UAAU,KAAK,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI;gBACjD,kCAAkC;gBAClC,eAAe,QAAQ,MAAM,CAAC;gBAE9B,kCAAkC;gBAClC,MAAO,SAAS,CAAC,KAAK,SAAS,KAAK,QAAQ,CAAC,MAAM,CAAE;oBACnD,YAAY,QAAQ,KAAK,QAAQ,CAAC,OAAO,EAAE,QAAQ;oBAEnD,IAAI,SAAS,CAAC,EAAE,KAAK,MAAM;wBACzB,OAAO;oBACT;oBAEA,SACE,OAAO,SAAS,CAAC,EAAE,KAAK,WAAW,SAAS,CAAC,EAAE,GAAG,SAAS;gBAC/D;YACF;YAEA,OAAO;QACT;IACF;AACF;AAGJ;;;CAGC,GACD,SAAS,SAAS,KAAK;IACrB,IAAI,MAAM,OAAO,CAAC,QAAQ;QACxB,OAAO;IACT;IAEA,IAAI,OAAO,UAAU,UAAU;QAC7B,OAAO;YAAC;YAAU;SAAM;IAC1B;IAEA,OAAO;QAAC;KAAM;AAChB","ignoreList":[0]}},
    {"offset": {"line": 550, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 556, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/remark-reading-time/node_modules/unist-util-visit/index.js"],"sourcesContent":["/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Invoked when a node (matching test, if given) is found.\n * Visitors are free to transform node.\n * They can also transform the parent of node (the last of ancestors).\n * Replacing node itself, if `SKIP` is not returned, still causes its descendants to be visited.\n * If adding or removing previous siblings (or next siblings, in case of reverse) of node,\n * visitor should return a new index (number) to specify the sibling to traverse after node is traversed.\n * Adding or removing next siblings of node (or previous siblings, in case of reverse)\n * is handled as expected without needing to return a new index.\n * Removing the children property of an ancestor still results in them being traversed.\n *\n * @template {Node} V\n * @callback Visitor\n * @param {V} node Found node\n * @param {number|null} index Position of `node` in `parent`\n * @param {Parent|null} parent Parent of `node`\n * @returns {VisitorResult}\n */\n\nimport {visitParents, CONTINUE, SKIP, EXIT} from 'unist-util-visit-parents'\n\nexport {CONTINUE, SKIP, EXIT}\n\nexport const visit =\n  /**\n   * @type {(\n   *   (<T extends Node>(tree: Node, test: T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>>, visitor: Visitor<T>, reverse?: boolean) => void) &\n   *   ((tree: Node, test: Test, visitor: Visitor<Node>, reverse?: boolean) => void) &\n   *   ((tree: Node, visitor: Visitor<Node>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * Visit children of tree which pass a test\n     *\n     * @param {Node} tree Abstract syntax tree to walk\n     * @param {Test} test test Test node\n     * @param {Visitor<Node>} visitor Function to run for each node\n     * @param {boolean} [reverse] Fisit the tree in reverse, defaults to false\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array.<Parent>} parents\n       */\n      function overload(node, parents) {\n        var parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n"],"names":[],"mappings":"AAAA;;;;;CAKC,GAED;;;;;;;;;;;;;;;;;CAiBC;;;AAED;;;AAIO,MAAM,QAST;;;;;;;KAOC,GACD,SAAU,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO;IACpC,IAAI,OAAO,SAAS,cAAc,OAAO,YAAY,YAAY;QAC/D,UAAU;QACV,UAAU;QACV,OAAO;IACT;IAEA,CAAA,GAAA,mMAAA,CAAA,eAAY,AAAD,EAAE,MAAM,MAAM,UAAU;IAEnC;;;OAGC,GACD,SAAS,SAAS,IAAI,EAAE,OAAO;QAC7B,IAAI,SAAS,OAAO,CAAC,QAAQ,MAAM,GAAG,EAAE;QACxC,OAAO,QACL,MACA,SAAS,OAAO,QAAQ,CAAC,OAAO,CAAC,QAAQ,MACzC;IAEJ;AACF","ignoreList":[0]}},
    {"offset": {"line": 606, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 612, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/remark-reading-time/index.js"],"sourcesContent":["import getReadingTime from \"reading-time\";\nimport { visit } from \"unist-util-visit\";\n\nexport default function readingTime({\n  /**\n   * The attribute name to store the reading time under data.\n   *\n   * @type {string}\n   * @default \"readingTime\"\n   */\n  attribute = \"readingTime\",\n} = {}) {\n  return function (info, file) {\n    let text = \"\";\n\n    visit(info, [\"text\", \"code\"], (node) => {\n      text += node.value;\n    });\n\n    file.data[attribute] = getReadingTime(text);\n  };\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEe,SAAS,YAAY,EAClC;;;;;GAKC,GACD,YAAY,aAAa,EAC1B,GAAG,CAAC,CAAC;IACJ,OAAO,SAAU,IAAI,EAAE,IAAI;QACzB,IAAI,OAAO;QAEX,CAAA,GAAA,wMAAA,CAAA,QAAK,AAAD,EAAE,MAAM;YAAC;YAAQ;SAAO,EAAE,CAAC;YAC7B,QAAQ,KAAK,KAAK;QACpB;QAEA,KAAK,IAAI,CAAC,UAAU,GAAG,CAAA,GAAA,oIAAA,CAAA,UAAc,AAAD,EAAE;IACxC;AACF","ignoreList":[0]}},
    {"offset": {"line": 636, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 642, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/unist-util-is/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n"],"names":[],"mappings":"AAAA;;;CAGC,GAED;;;;CAIC,GAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAoCC,GAED;;;;;;;;;;;;;;;CAeC;;;;AACM,MAAM,KAaT;;;;;;;KAOC,GACD,sCAAsC;AACtC,SAAU,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO;IAC1C,MAAM,QAAQ,QAAQ;IAEtB,IACE,UAAU,aACV,UAAU,QACV,CAAC,OAAO,UAAU,YAChB,QAAQ,KACR,UAAU,OAAO,iBAAiB,GACpC;QACA,MAAM,IAAI,MAAM;IAClB;IAEA,IACE,WAAW,aACX,WAAW,QACX,CAAC,CAAC,GAAG,WAAW,CAAC,OAAO,QAAQ,GAChC;QACA,MAAM,IAAI,MAAM;IAClB;IAEA,IACE,CAAC,WAAW,aAAa,WAAW,IAAI,MACxC,CAAC,UAAU,aAAa,UAAU,IAAI,GACtC;QACA,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO,eAAe,QAClB,MAAM,IAAI,CAAC,SAAS,MAAM,OAAO,UACjC;AACN;AAqBG,MAAM,UAYT;;;KAGC,GACD,SAAU,IAAI;IACZ,IAAI,SAAS,QAAQ,SAAS,WAAW;QACvC,OAAO;IACT;IAEA,IAAI,OAAO,SAAS,YAAY;QAC9B,OAAO,YAAY;IACrB;IAEA,IAAI,OAAO,SAAS,UAAU;QAC5B,OAAO,MAAM,OAAO,CAAC,QAAQ,WAAW,QAAQ,aAAa;IAC/D;IAEA,IAAI,OAAO,SAAS,UAAU;QAC5B,OAAO,YAAY;IACrB;IAEA,MAAM,IAAI,MAAM;AAClB;AAGJ;;;CAGC,GACD,SAAS,WAAW,KAAK;IACvB,yBAAyB,GACzB,MAAM,SAAS,EAAE;IACjB,IAAI,QAAQ,CAAC;IAEb,MAAO,EAAE,QAAQ,MAAM,MAAM,CAAE;QAC7B,MAAM,CAAC,MAAM,GAAG,QAAQ,KAAK,CAAC,MAAM;IACtC;IAEA,OAAO,YAAY;;IAEnB;;;GAGC,GACD,SAAS,IAAI,GAAG,UAAU;QACxB,IAAI,QAAQ,CAAC;QAEb,MAAO,EAAE,QAAQ,OAAO,MAAM,CAAE;YAC9B,IAAI,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,aAAa,OAAO;QACpD;QAEA,OAAO;IACT;AACF;AAEA;;;;;CAKC,GACD,SAAS,aAAa,KAAK;IACzB,MAAM,gBAAwD;IAE9D,OAAO,YAAY;;IAEnB;;;GAGC,GACD,SAAS,IAAI,IAAI;QACf,MAAM,eACoB;QAG1B,mBAAmB,GACnB,IAAI;QAEJ,IAAK,OAAO,MAAO;YACjB,IAAI,YAAY,CAAC,IAAI,KAAK,aAAa,CAAC,IAAI,EAAE,OAAO;QACvD;QAEA,OAAO;IACT;AACF;AAEA;;;;;CAKC,GACD,SAAS,YAAY,KAAK;IACxB,OAAO,YAAY;;IAEnB;;GAEC,GACD,SAAS,KAAK,IAAI;QAChB,OAAO,QAAQ,KAAK,IAAI,KAAK;IAC/B;AACF;AAEA;;;;;CAKC,GACD,SAAS,YAAY,YAAY;IAC/B,OAAO;;IAEP;;;GAGC,GACD,SAAS,MAAM,KAAK,EAAE,KAAK,EAAE,MAAM;QACjC,OAAO,QACL,eAAe,UACb,aAAa,IAAI,CACf,IAAI,EACJ,OACA,OAAO,UAAU,WAAW,QAAQ,WACpC,UAAU;IAGlB;AACF;AAEA,SAAS;IACP,OAAO;AACT;AAEA;;;CAGC,GACD,SAAS,eAAe,KAAK;IAC3B,OAAO,UAAU,QAAQ,OAAO,UAAU,YAAY,UAAU;AAClE","ignoreList":[0]}},
    {"offset": {"line": 824, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 830, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/unist-util-visit-parents/lib/color.js"],"sourcesContent":["/**\n * @param {string} d\n * @returns {string}\n */\nexport function color(d) {\n  return d\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AACM,SAAS,MAAM,CAAC;IACrB,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 839, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 845, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/unist-util-visit-parents/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1128, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1134, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/unist-util-visit/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC,GAED;;;;;;;CAOC,GAED,uEAAuE;AAEvE;;;;;;;;;;;CAWC,GAED;;;;;;;;;;;;;;;;;;;CAmBC,GAED;;;;;;;;;;;CAWC,GAED;;;CAGC,GAED;;;;;CAKC,GAED;;;;;;;;;;;;;CAaC,GAED;;;;;;;CAOC,GAED;;;;;;;;;;;;;;;;;CAiBC,GAED;;;;;;;;;;;;;;;;;;;;;;;;CAwBC,GAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAqCC,GAED;;;;;;;;;CASC,GAED;;;;;;;;;;;;;;CAcC,GAED;;;;;;;;;;;;;;CAcC;;;AAED;;;AAmDO,SAAS,MAAM,IAAI,EAAE,aAAa,EAAE,gBAAgB,EAAE,YAAY;IACvE,uCAAuC,GACvC,IAAI;IACJ,iBAAiB,GACjB,IAAI;IACJ,oBAAoB,GACpB,IAAI;IAEJ,IACE,OAAO,kBAAkB,cACzB,OAAO,qBAAqB,YAC5B;QACA,OAAO;QACP,UAAU;QACV,UAAU;IACZ,OAAO;QACL,6DAA6D;QAC7D,OAAO;QACP,6DAA6D;QAC7D,UAAU;QACV,UAAU;IACZ;IAEA,CAAA,GAAA,6JAAA,CAAA,eAAY,AAAD,EAAE,MAAM,MAAM,UAAU;IAEnC;;;GAGC,GACD,SAAS,SAAS,IAAI,EAAE,OAAO;QAC7B,MAAM,SAAS,OAAO,CAAC,QAAQ,MAAM,GAAG,EAAE;QAC1C,MAAM,QAAQ,SAAS,OAAO,QAAQ,CAAC,OAAO,CAAC,QAAQ;QACvD,OAAO,QAAQ,MAAM,OAAO;IAC9B;AACF","ignoreList":[0]}},
    {"offset": {"line": 1361, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1366, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/extend/index.js"],"sourcesContent":["'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1472, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1478, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/is-plain-obj/index.js"],"sourcesContent":["export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n"],"names":[],"mappings":";;;AAAe,SAAS,cAAc,KAAK;IAC1C,IAAI,OAAO,UAAU,YAAY,UAAU,MAAM;QAChD,OAAO;IACR;IAEA,MAAM,YAAY,OAAO,cAAc,CAAC;IACxC,OAAO,CAAC,cAAc,QAAQ,cAAc,OAAO,SAAS,IAAI,OAAO,cAAc,CAAC,eAAe,IAAI,KAAK,CAAC,CAAC,OAAO,WAAW,IAAI,KAAK,KAAK,CAAC,CAAC,OAAO,QAAQ,IAAI,KAAK;AAC3K","ignoreList":[0]}},
    {"offset": {"line": 1488, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1494, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/trough/lib/index.js"],"sourcesContent":["// To do: remove `void`s\n// To do: remove `null` from output of our APIs, allow it as user APIs.\n\n/**\n * @typedef {(error?: Error | null | undefined, ...output: Array<any>) => void} Callback\n *   Callback.\n *\n * @typedef {(...input: Array<any>) => any} Middleware\n *   Ware.\n *\n * @typedef Pipeline\n *   Pipeline.\n * @property {Run} run\n *   Run the pipeline.\n * @property {Use} use\n *   Add middleware.\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n *\n *   Calls `done` on completion with either an error or the output of the\n *   last middleware.\n *\n *   > 👉 **Note**: as the length of input defines whether async functions get a\n *   > `next` function,\n *   > it’s recommended to keep `input` at one value normally.\n\n *\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n *   Pipeline.\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error | null | undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware` into a uniform interface.\n *\n * You can pass all input to the resulting function.\n * `callback` is then called with the output of `middleware`.\n *\n * If `middleware` accepts more arguments than the later given in input,\n * an extra `done` function is passed to it after that input,\n * which must be called by `middleware`.\n *\n * The first value in `input` is the main input value.\n * All other input values are the rest input values.\n * The values given to `callback` are the input values,\n * merged with every non-nullish output value.\n *\n * * if `middleware` throws an error,\n *   returns a promise that is rejected,\n *   or calls the given `done` function with an error,\n *   `callback` is called with that error\n * * if `middleware` returns a value or returns a promise that is resolved,\n *   that value is the main output value\n * * if `middleware` calls `done`,\n *   all non-nullish values except for the first one (the error) overwrite the\n *   output values\n *\n * @param {Middleware} middleware\n *   Function to wrap.\n * @param {Callback} callback\n *   Callback called with the output of `middleware`.\n * @returns {Run}\n *   Wrapped middleware.\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result && result.then && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   *\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n"],"names":[],"mappings":"AAAA,wBAAwB;AACxB,uEAAuE;AAEvE;;;;;;;;;;;;;;;;;;;;;;;;;;;CA2BC,GAED;;;;;CAKC;;;;AACM,SAAS;IACd,8BAA8B,GAC9B,MAAM,MAAM,EAAE;IACd,qBAAqB,GACrB,MAAM,WAAW;QAAC;QAAK;IAAG;IAE1B,OAAO;;IAEP,gBAAgB,GAChB,SAAS,IAAI,GAAG,MAAM;QACpB,IAAI,kBAAkB,CAAC;QACvB,qBAAqB,GACrB,MAAM,WAAW,OAAO,GAAG;QAE3B,IAAI,OAAO,aAAa,YAAY;YAClC,MAAM,IAAI,UAAU,6CAA6C;QACnE;QAEA,KAAK,SAAS;QAEd;;;;;KAKC,GACD,SAAS,KAAK,KAAK,EAAE,GAAG,MAAM;YAC5B,MAAM,KAAK,GAAG,CAAC,EAAE,gBAAgB;YACjC,IAAI,QAAQ,CAAC;YAEb,IAAI,OAAO;gBACT,SAAS;gBACT;YACF;YAEA,sCAAsC;YACtC,MAAO,EAAE,QAAQ,OAAO,MAAM,CAAE;gBAC9B,IAAI,MAAM,CAAC,MAAM,KAAK,QAAQ,MAAM,CAAC,MAAM,KAAK,WAAW;oBACzD,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM;gBAC/B;YACF;YAEA,qDAAqD;YACrD,SAAS;YAET,gBAAgB;YAChB,IAAI,IAAI;gBACN,KAAK,IAAI,SAAS;YACpB,OAAO;gBACL,SAAS,SAAS;YACpB;QACF;IACF;IAEA,gBAAgB,GAChB,SAAS,IAAI,UAAU;QACrB,IAAI,OAAO,eAAe,YAAY;YACpC,MAAM,IAAI,UACR,iDAAiD;QAErD;QAEA,IAAI,IAAI,CAAC;QACT,OAAO;IACT;AACF;AAkCO,SAAS,KAAK,UAAU,EAAE,QAAQ;IACvC,oBAAoB,GACpB,IAAI;IAEJ,OAAO;;IAEP;;;;;GAKC,GACD,SAAS,QAAQ,GAAG,UAAU;QAC5B,MAAM,oBAAoB,WAAW,MAAM,GAAG,WAAW,MAAM;QAC/D,gBAAgB,GAChB,IAAI;QAEJ,IAAI,mBAAmB;YACrB,WAAW,IAAI,CAAC;QAClB;QAEA,IAAI;YACF,SAAS,WAAW,KAAK,CAAC,IAAI,EAAE;QAClC,EAAE,OAAO,OAAO;YACd,MAAM,YAAkC;YAExC,kCAAkC;YAClC,yEAAyE;YACzE,kBAAkB;YAClB,2DAA2D;YAC3D,IAAI,qBAAqB,QAAQ;gBAC/B,MAAM;YACR;YAEA,OAAO,KAAK;QACd;QAEA,IAAI,CAAC,mBAAmB;YACtB,IAAI,UAAU,OAAO,IAAI,IAAI,OAAO,OAAO,IAAI,KAAK,YAAY;gBAC9D,OAAO,IAAI,CAAC,MAAM;YACpB,OAAO,IAAI,kBAAkB,OAAO;gBAClC,KAAK;YACP,OAAO;gBACL,KAAK;YACP;QACF;IACF;IAEA;;;;GAIC,GACD,SAAS,KAAK,KAAK,EAAE,GAAG,MAAM;QAC5B,IAAI,CAAC,QAAQ;YACX,SAAS;YACT,SAAS,UAAU;QACrB;IACF;IAEA;;;;GAIC,GACD,SAAS,KAAK,KAAK;QACjB,KAAK,MAAM;IACb;AACF","ignoreList":[0]}},
    {"offset": {"line": 1639, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1645, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/dequal/dist/index.mjs"],"sourcesContent":["var has = Object.prototype.hasOwnProperty;\n\nfunction find(iter, tar, key) {\n\tfor (key of iter.keys()) {\n\t\tif (dequal(key, tar)) return key;\n\t}\n}\n\nexport function dequal(foo, bar) {\n\tvar ctor, len, tmp;\n\tif (foo === bar) return true;\n\n\tif (foo && bar && (ctor=foo.constructor) === bar.constructor) {\n\t\tif (ctor === Date) return foo.getTime() === bar.getTime();\n\t\tif (ctor === RegExp) return foo.toString() === bar.toString();\n\n\t\tif (ctor === Array) {\n\t\t\tif ((len=foo.length) === bar.length) {\n\t\t\t\twhile (len-- && dequal(foo[len], bar[len]));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (ctor === Set) {\n\t\t\tif (foo.size !== bar.size) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (len of foo) {\n\t\t\t\ttmp = len;\n\t\t\t\tif (tmp && typeof tmp === 'object') {\n\t\t\t\t\ttmp = find(bar, tmp);\n\t\t\t\t\tif (!tmp) return false;\n\t\t\t\t}\n\t\t\t\tif (!bar.has(tmp)) return false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tif (ctor === Map) {\n\t\t\tif (foo.size !== bar.size) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (len of foo) {\n\t\t\t\ttmp = len[0];\n\t\t\t\tif (tmp && typeof tmp === 'object') {\n\t\t\t\t\ttmp = find(bar, tmp);\n\t\t\t\t\tif (!tmp) return false;\n\t\t\t\t}\n\t\t\t\tif (!dequal(len[1], bar.get(tmp))) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tif (ctor === ArrayBuffer) {\n\t\t\tfoo = new Uint8Array(foo);\n\t\t\tbar = new Uint8Array(bar);\n\t\t} else if (ctor === DataView) {\n\t\t\tif ((len=foo.byteLength) === bar.byteLength) {\n\t\t\t\twhile (len-- && foo.getInt8(len) === bar.getInt8(len));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (ArrayBuffer.isView(foo)) {\n\t\t\tif ((len=foo.byteLength) === bar.byteLength) {\n\t\t\t\twhile (len-- && foo[len] === bar[len]);\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (!ctor || typeof foo === 'object') {\n\t\t\tlen = 0;\n\t\t\tfor (ctor in foo) {\n\t\t\t\tif (has.call(foo, ctor) && ++len && !has.call(bar, ctor)) return false;\n\t\t\t\tif (!(ctor in bar) || !dequal(foo[ctor], bar[ctor])) return false;\n\t\t\t}\n\t\t\treturn Object.keys(bar).length === len;\n\t\t}\n\t}\n\n\treturn foo !== foo && bar !== bar;\n}\n"],"names":[],"mappings":";;;AAAA,IAAI,MAAM,OAAO,SAAS,CAAC,cAAc;AAEzC,SAAS,KAAK,IAAI,EAAE,GAAG,EAAE,GAAG;IAC3B,KAAK,OAAO,KAAK,IAAI,GAAI;QACxB,IAAI,OAAO,KAAK,MAAM,OAAO;IAC9B;AACD;AAEO,SAAS,OAAO,GAAG,EAAE,GAAG;IAC9B,IAAI,MAAM,KAAK;IACf,IAAI,QAAQ,KAAK,OAAO;IAExB,IAAI,OAAO,OAAO,CAAC,OAAK,IAAI,WAAW,MAAM,IAAI,WAAW,EAAE;QAC7D,IAAI,SAAS,MAAM,OAAO,IAAI,OAAO,OAAO,IAAI,OAAO;QACvD,IAAI,SAAS,QAAQ,OAAO,IAAI,QAAQ,OAAO,IAAI,QAAQ;QAE3D,IAAI,SAAS,OAAO;YACnB,IAAI,CAAC,MAAI,IAAI,MAAM,MAAM,IAAI,MAAM,EAAE;gBACpC,MAAO,SAAS,OAAO,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI;YAC1C;YACA,OAAO,QAAQ,CAAC;QACjB;QAEA,IAAI,SAAS,KAAK;YACjB,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,EAAE;gBAC1B,OAAO;YACR;YACA,KAAK,OAAO,IAAK;gBAChB,MAAM;gBACN,IAAI,OAAO,OAAO,QAAQ,UAAU;oBACnC,MAAM,KAAK,KAAK;oBAChB,IAAI,CAAC,KAAK,OAAO;gBAClB;gBACA,IAAI,CAAC,IAAI,GAAG,CAAC,MAAM,OAAO;YAC3B;YACA,OAAO;QACR;QAEA,IAAI,SAAS,KAAK;YACjB,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,EAAE;gBAC1B,OAAO;YACR;YACA,KAAK,OAAO,IAAK;gBAChB,MAAM,GAAG,CAAC,EAAE;gBACZ,IAAI,OAAO,OAAO,QAAQ,UAAU;oBACnC,MAAM,KAAK,KAAK;oBAChB,IAAI,CAAC,KAAK,OAAO;gBAClB;gBACA,IAAI,CAAC,OAAO,GAAG,CAAC,EAAE,EAAE,IAAI,GAAG,CAAC,OAAO;oBAClC,OAAO;gBACR;YACD;YACA,OAAO;QACR;QAEA,IAAI,SAAS,aAAa;YACzB,MAAM,IAAI,WAAW;YACrB,MAAM,IAAI,WAAW;QACtB,OAAO,IAAI,SAAS,UAAU;YAC7B,IAAI,CAAC,MAAI,IAAI,UAAU,MAAM,IAAI,UAAU,EAAE;gBAC5C,MAAO,SAAS,IAAI,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC;YAClD;YACA,OAAO,QAAQ,CAAC;QACjB;QAEA,IAAI,YAAY,MAAM,CAAC,MAAM;YAC5B,IAAI,CAAC,MAAI,IAAI,UAAU,MAAM,IAAI,UAAU,EAAE;gBAC5C,MAAO,SAAS,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,IAAI;YACtC;YACA,OAAO,QAAQ,CAAC;QACjB;QAEA,IAAI,CAAC,QAAQ,OAAO,QAAQ,UAAU;YACrC,MAAM;YACN,IAAK,QAAQ,IAAK;gBACjB,IAAI,IAAI,IAAI,CAAC,KAAK,SAAS,EAAE,OAAO,CAAC,IAAI,IAAI,CAAC,KAAK,OAAO,OAAO;gBACjE,IAAI,CAAC,CAAC,QAAQ,GAAG,KAAK,CAAC,OAAO,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,KAAK,GAAG,OAAO;YAC7D;YACA,OAAO,OAAO,IAAI,CAAC,KAAK,MAAM,KAAK;QACpC;IACD;IAEA,OAAO,QAAQ,OAAO,QAAQ;AAC/B","ignoreList":[0]}},
    {"offset": {"line": 1722, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1728, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/devlop/lib/development.js"],"sourcesContent":["import {dequal} from 'dequal'\n\n/**\n * @type {Set<string>}\n */\nconst codesWarned = new Set()\n\nclass AssertionError extends Error {\n  name = /** @type {const} */ ('Assertion')\n  code = /** @type {const} */ ('ERR_ASSERTION')\n\n  /**\n   * Create an assertion error.\n   *\n   * @param {string} message\n   *   Message explaining error.\n   * @param {unknown} actual\n   *   Value.\n   * @param {unknown} expected\n   *   Baseline.\n   * @param {string} operator\n   *   Name of equality operation.\n   * @param {boolean} generated\n   *   Whether `message` is a custom message or not\n   * @returns\n   *   Instance.\n   */\n  // eslint-disable-next-line max-params\n  constructor(message, actual, expected, operator, generated) {\n    super(message)\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor)\n    }\n\n    /**\n     * @type {unknown}\n     */\n    this.actual = actual\n\n    /**\n     * @type {unknown}\n     */\n    this.expected = expected\n\n    /**\n     * @type {boolean}\n     */\n    this.generated = generated\n\n    /**\n     * @type {string}\n     */\n    this.operator = operator\n  }\n}\n\nclass DeprecationError extends Error {\n  name = /** @type {const} */ ('DeprecationWarning')\n\n  /**\n   * Create a deprecation message.\n   *\n   * @param {string} message\n   *   Message explaining deprecation.\n   * @param {string | undefined} code\n   *   Deprecation identifier; deprecation messages will be generated only once per code.\n   * @returns\n   *   Instance.\n   */\n  constructor(message, code) {\n    super(message)\n\n    /**\n     * @type {string | undefined}\n     */\n    this.code = code\n  }\n}\n\n/**\n * Wrap a function or class to show a deprecation message when first called.\n *\n * > 👉 **Important**: only shows a message when the `development` condition is\n * > used, does nothing in production.\n *\n * When the resulting wrapped `fn` is called, emits a warning once to\n * `console.error` (`stderr`).\n * If a code is given, one warning message will be emitted in total per code.\n *\n * @template {Function} T\n *   Function or class kind.\n * @param {T} fn\n *   Function or class.\n * @param {string} message\n *   Message explaining deprecation.\n * @param {string | null | undefined} [code]\n *   Deprecation identifier (optional); deprecation messages will be generated\n *   only once per code.\n * @returns {T}\n *   Wrapped `fn`.\n */\nexport function deprecate(fn, message, code) {\n  let warned = false\n\n  // The wrapper will keep the same prototype as fn to maintain prototype chain\n  Object.setPrototypeOf(deprecated, fn)\n\n  // @ts-expect-error: it’s perfect, typescript…\n  return deprecated\n\n  /**\n   * @this {unknown}\n   * @param  {...Array<unknown>} args\n   * @returns {unknown}\n   */\n  function deprecated(...args) {\n    if (!warned) {\n      warned = true\n\n      if (typeof code === 'string' && codesWarned.has(code)) {\n        // Empty.\n      } else {\n        console.error(new DeprecationError(message, code || undefined))\n\n        if (typeof code === 'string') codesWarned.add(code)\n      }\n    }\n\n    return new.target\n      ? Reflect.construct(fn, args, new.target)\n      : Reflect.apply(fn, this, args)\n  }\n}\n\n/**\n * Assert deep strict equivalence.\n *\n * > 👉 **Important**: only asserts when the `development` condition is used,\n * > does nothing in production.\n *\n * @template {unknown} T\n *   Expected kind.\n * @param {unknown} actual\n *   Value.\n * @param {T} expected\n *   Baseline.\n * @param {Error | string | null | undefined} [message]\n *   Message for assertion error (default: `'Expected values to be deeply equal'`).\n * @returns {asserts actual is T}\n *   Nothing; throws when `actual` is not deep strict equal to `expected`.\n * @throws {AssertionError}\n *   Throws when `actual` is not deep strict equal to `expected`.\n */\nexport function equal(actual, expected, message) {\n  assert(\n    dequal(actual, expected),\n    actual,\n    expected,\n    'equal',\n    'Expected values to be deeply equal',\n    message\n  )\n}\n\n/**\n * Assert if `value` is truthy.\n *\n * > 👉 **Important**: only asserts when the `development` condition is used,\n * > does nothing in production.\n *\n * @param {unknown} value\n *   Value to assert.\n * @param {Error | string | null | undefined} [message]\n *   Message for assertion error (default: `'Expected value to be truthy'`).\n * @returns {asserts value}\n *   Nothing; throws when `value` is falsey.\n * @throws {AssertionError}\n *   Throws when `value` is falsey.\n */\nexport function ok(value, message) {\n  assert(\n    Boolean(value),\n    false,\n    true,\n    'ok',\n    'Expected value to be truthy',\n    message\n  )\n}\n\n/**\n * Assert that a code path never happens.\n *\n * > 👉 **Important**: only asserts when the `development` condition is used,\n * > does nothing in production.\n *\n * @param {Error | string | null | undefined} [message]\n *   Message for assertion error (default: `'Unreachable'`).\n * @returns {never}\n *   Nothing; always throws.\n * @throws {AssertionError}\n *   Throws when `value` is falsey.\n */\nexport function unreachable(message) {\n  assert(false, false, true, 'ok', 'Unreachable', message)\n}\n\n/**\n * @param {boolean} bool\n *   Whether to skip this operation.\n * @param {unknown} actual\n *   Actual value.\n * @param {unknown} expected\n *   Expected value.\n * @param {string} operator\n *   Operator.\n * @param {string} defaultMessage\n *   Default message for operation.\n * @param {Error | string | null | undefined} userMessage\n *   User-provided message.\n * @returns {asserts bool}\n *   Nothing; throws when falsey.\n */\n// eslint-disable-next-line max-params\nfunction assert(bool, actual, expected, operator, defaultMessage, userMessage) {\n  if (!bool) {\n    throw userMessage instanceof Error\n      ? userMessage\n      : new AssertionError(\n          userMessage || defaultMessage,\n          actual,\n          expected,\n          operator,\n          !userMessage\n        )\n  }\n}\n"],"names":[],"mappings":";;;;;;AAAA;;AAEA;;CAEC,GACD,MAAM,cAAc,IAAI;AAExB,MAAM,uBAAuB;IAC3B,OAA6B,YAAY;IACzC,OAA6B,gBAAgB;IAE7C;;;;;;;;;;;;;;;GAeC,GACD,sCAAsC;IACtC,YAAY,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,CAAE;QAC1D,KAAK,CAAC;QAEN,IAAI,MAAM,iBAAiB,EAAE;YAC3B,MAAM,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW;QAChD;QAEA;;KAEC,GACD,IAAI,CAAC,MAAM,GAAG;QAEd;;KAEC,GACD,IAAI,CAAC,QAAQ,GAAG;QAEhB;;KAEC,GACD,IAAI,CAAC,SAAS,GAAG;QAEjB;;KAEC,GACD,IAAI,CAAC,QAAQ,GAAG;IAClB;AACF;AAEA,MAAM,yBAAyB;IAC7B,OAA6B,qBAAqB;IAElD;;;;;;;;;GASC,GACD,YAAY,OAAO,EAAE,IAAI,CAAE;QACzB,KAAK,CAAC;QAEN;;KAEC,GACD,IAAI,CAAC,IAAI,GAAG;IACd;AACF;AAwBO,SAAS,UAAU,EAAE,EAAE,OAAO,EAAE,IAAI;IACzC,IAAI,SAAS;IAEb,6EAA6E;IAC7E,OAAO,cAAc,CAAC,YAAY;IAElC,8CAA8C;IAC9C,OAAO;;IAEP;;;;GAIC,GACD,SAAS,WAAW,GAAG,IAAI;QACzB,IAAI,CAAC,QAAQ;YACX,SAAS;YAET,IAAI,OAAO,SAAS,YAAY,YAAY,GAAG,CAAC,OAAO;YACrD,SAAS;YACX,OAAO;gBACL,QAAQ,KAAK,CAAC,IAAI,iBAAiB,SAAS,QAAQ;gBAEpD,IAAI,OAAO,SAAS,UAAU,YAAY,GAAG,CAAC;YAChD;QACF;QAEA,OAAO,aACH,QAAQ,SAAS,CAAC,IAAI,MAAM,cAC5B,QAAQ,KAAK,CAAC,IAAI,IAAI,EAAE;IAC9B;AACF;AAqBO,SAAS,MAAM,MAAM,EAAE,QAAQ,EAAE,OAAO;IAC7C,OACE,CAAA,GAAA,oIAAA,CAAA,SAAM,AAAD,EAAE,QAAQ,WACf,QACA,UACA,SACA,sCACA;AAEJ;AAiBO,SAAS,GAAG,KAAK,EAAE,OAAO;IAC/B,OACE,QAAQ,QACR,OACA,MACA,MACA,+BACA;AAEJ;AAeO,SAAS,YAAY,OAAO;IACjC,OAAO,OAAO,OAAO,MAAM,MAAM,eAAe;AAClD;AAEA;;;;;;;;;;;;;;;CAeC,GACD,sCAAsC;AACtC,SAAS,OAAO,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,cAAc,EAAE,WAAW;IAC3E,IAAI,CAAC,MAAM;QACT,MAAM,uBAAuB,QACzB,cACA,IAAI,eACF,eAAe,gBACf,QACA,UACA,UACA,CAAC;IAET;AACF","ignoreList":[0]}},
    {"offset": {"line": 1849, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1855, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/bail/index.js"],"sourcesContent":["/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;CAMC;;;AACM,SAAS,KAAK,KAAK;IACxB,IAAI,OAAO;QACT,MAAM;IACR;AACF","ignoreList":[0]}},
    {"offset": {"line": 1869, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1875, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/unified/lib/callable-instance.js"],"sourcesContent":["export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const value = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return value.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        // Not needed for us in `unified`: we only call this on the `copy`\n        // function,\n        // and we don't need to add its fields (`length`, `name`)\n        // over.\n        // See also: GH-246.\n        // const names = Object.getOwnPropertyNames(value)\n        //\n        // for (const p of names) {\n        //   const descriptor = Object.getOwnPropertyDescriptor(value, p)\n        //   if (descriptor) Object.defineProperty(apply, p, descriptor)\n        // }\n\n        return apply\n      }\n    )\n  )\n"],"names":[],"mappings":";;;AAAO,MAAM,mBAOP;;;;OAIC,GACD,SAAU,QAAQ;IAChB,MAAM,OAAO,IAAI;IACjB,MAAM,SAAS,KAAK,WAAW;IAC/B,MAAM,QACJ,uBAAuB;IACvB,iCAAiC;IACjC,OAAO,SAAS;IAElB,MAAM,QAAQ,KAAK,CAAC,SAAS;IAC7B,uDAAuD,GACvD,MAAM,QAAQ;QACZ,OAAO,MAAM,KAAK,CAAC,OAAO;IAC5B;IAEA,OAAO,cAAc,CAAC,OAAO;IAE7B,kEAAkE;IAClE,YAAY;IACZ,yDAAyD;IACzD,QAAQ;IACR,oBAAoB;IACpB,kDAAkD;IAClD,EAAE;IACF,2BAA2B;IAC3B,iEAAiE;IACjE,gEAAgE;IAChE,IAAI;IAEJ,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 1906, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1912, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/unified/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@linkcode CompileResultMap}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@linkcode Node}\n *   and {@linkcode VFile} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@linkcode CompileResultMap}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@linkcode VFile} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@linkcode Node}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@linkcode VFile} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@linkcode VFile}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@linkcode Processor}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > **Note**: to register custom data in TypeScript, augment the\n   * > {@linkcode Data} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;CAWC,GAED;;;;;;CAMC,GAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAiCC,GAED;;;;;;;;;;;;;;;;CAgBC,GAED;;;;;;;CAOC,GAED;;;CAGC,GAED,4DAA4D;AAC5D,2DAA2D;AAC3D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA8CC,GAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA+BC,GAED;;;;;;;;;CASC,GAED;;;;;;;;;;;;;CAaC,GAED;;;;;;;;;;;;;;;CAeC,GAED;;;;;;;;;;;;;;;;CAgBC,GAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA0CC,GAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAwDC,GAED;;;;;;;;;;;;CAYC;;;;AAGD;AAEA;AACA;AAFA;AAFA;AAMA;AADA;;;;;;;;AAGA,kEAAkE;AAElE,4EAA4E;AAC5E,qBAAqB;AACrB,6EAA6E;AAE7E,MAAM,MAAM,CAAC,EAAE,cAAc;AAetB,MAAM,kBAAkB,kJAAA,CAAA,mBAAgB;IAC7C;;GAEC,GACD,aAAc;QACZ,kEAAkE;QAClE,KAAK,CAAC;QAEN;;;;;;;;;;;;KAYC,GACD,IAAI,CAAC,QAAQ,GAAG;QAEhB;;;;;;;;;KASC,GACD,IAAI,CAAC,MAAM,GAAG;QAEd,qDAAqD;QACrD,mEAAmE;QACnE,mEAAmE;QACnE,0EAA0E;QAC1E;;;;;;KAMC,GACD,IAAI,CAAC,SAAS,GAAG,EAAE;QAEnB;;;;;;;;;;KAUC,GACD,IAAI,CAAC,QAAQ,GAAG;QAEhB;;;;;;KAMC,GACD,IAAI,CAAC,WAAW,GAAG,CAAC;QAEpB;;;;;;KAMC,GACD,IAAI,CAAC,MAAM,GAAG;QAEd;;;;;;KAMC,GACD,IAAI,CAAC,SAAS,GAAG,CAAC;QAElB;;;;;;;KAOC,GACD,IAAI,CAAC,MAAM,GAAG;QAEd;;;;;;KAMC,GACD,IAAI,CAAC,YAAY,GAAG,CAAA,GAAA,kIAAA,CAAA,SAAM,AAAD;IAC3B;IAEA;;;;;;;;;;GAUC,GACD,OAAO;QACL,gEAAgE;QAChE,MAAM,cAEF,IAAI;QAER,IAAI,QAAQ,CAAC;QAEb,MAAO,EAAE,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,CAAE;YACtC,MAAM,WAAW,IAAI,CAAC,SAAS,CAAC,MAAM;YACtC,YAAY,GAAG,IAAI;QACrB;QAEA,YAAY,IAAI,CAAC,CAAA,GAAA,2HAAA,CAAA,UAAM,AAAD,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC,SAAS;QAEhD,OAAO;IACT;IAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA0DC,GACD,KAAK,GAAG,EAAE,KAAK,EAAE;QACf,IAAI,OAAO,QAAQ,UAAU;YAC3B,aAAa;YACb,IAAI,UAAU,MAAM,KAAK,GAAG;gBAC1B,eAAe,QAAQ,IAAI,CAAC,MAAM;gBAClC,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG;gBACtB,OAAO,IAAI;YACb;YAEA,aAAa;YACb,OAAO,AAAC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,IAAI,CAAC,SAAS,CAAC,IAAI,IAAK;QACnE;QAEA,aAAa;QACb,IAAI,KAAK;YACP,eAAe,QAAQ,IAAI,CAAC,MAAM;YAClC,IAAI,CAAC,SAAS,GAAG;YACjB,OAAO,IAAI;QACb;QAEA,aAAa;QACb,OAAO,IAAI,CAAC,SAAS;IACvB;IAEA;;;;;;;;;;;;;;;;GAgBC,GACD,SAAS;QACP,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,OAAO,IAAI;QACb;QAEA,2CAA2C;QAC3C,yEAAyE;QACzE,wBAAwB;QACxB,MAAM,OAAyD,IAAI;QAEnE,MAAO,EAAE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAE;YACjD,MAAM,CAAC,UAAU,GAAG,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC;YAE/D,IAAI,OAAO,CAAC,EAAE,KAAK,OAAO;gBACxB;YACF;YAEA,IAAI,OAAO,CAAC,EAAE,KAAK,MAAM;gBACvB,OAAO,CAAC,EAAE,GAAG;YACf;YAEA,MAAM,cAAc,SAAS,IAAI,CAAC,SAAS;YAE3C,IAAI,OAAO,gBAAgB,YAAY;gBACrC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC;YACxB;QACF;QAEA,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,WAAW,GAAG,OAAO,iBAAiB;QAE3C,OAAO,IAAI;IACb;IAEA;;;;;;;;;;;;;GAaC,GACD,MAAM,IAAI,EAAE;QACV,IAAI,CAAC,MAAM;QACX,MAAM,WAAW,MAAM;QACvB,MAAM,SAAS,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM;QACzC,aAAa,SAAS;QACtB,OAAO,OAAO,OAAO,WAAW;IAClC;IAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAyCC,GACD,QAAQ,IAAI,EAAE,IAAI,EAAE;QAClB,MAAM,OAAO,IAAI;QAEjB,IAAI,CAAC,MAAM;QACX,aAAa,WAAW,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM;QAClD,eAAe,WAAW,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ;QAExD,OAAO,OAAO,SAAS,WAAW,QAAQ,IAAI,QAAQ;;QAEtD,+BAA+B;QAC/B;;;;KAIC,GACD,SAAS,SAAS,OAAO,EAAE,MAAM;YAC/B,MAAM,WAAW,MAAM;YACvB,wEAAwE;YACxE,iCAAiC;YACjC,MAAM,YAEsB,KAAK,KAAK,CAAC;YAGvC,KAAK,GAAG,CAAC,WAAW,UAAU,SAAU,KAAK,EAAE,IAAI,EAAE,IAAI;gBACvD,IAAI,SAAS,CAAC,QAAQ,CAAC,MAAM;oBAC3B,OAAO,SAAS;gBAClB;gBAEA,+DAA+D;gBAC/D,6CAA6C;gBAC7C,MAAM,cAEsB;gBAG5B,MAAM,gBAAgB,KAAK,SAAS,CAAC,aAAa;gBAElD,IAAI,gBAAgB,gBAAgB;oBAClC,KAAK,KAAK,GAAG;gBACf,OAAO;oBACL,KAAK,MAAM,GAAG;gBAChB;gBAEA,SAAS,OAAsD;YACjE;YAEA;;;;OAIC,GACD,SAAS,SAAS,KAAK,EAAE,IAAI;gBAC3B,IAAI,SAAS,CAAC,MAAM;oBAClB,OAAO;gBACT,OAAO,IAAI,SAAS;oBAClB,QAAQ;gBACV,OAAO;oBACL,CAAA,GAAA,wIAAA,CAAA,KAAM,AAAD,EAAE,MAAM;oBACb,KAAK,WAAW;gBAClB;YACF;QACF;IACF;IAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA8BC,GACD,YAAY,IAAI,EAAE;QAChB,oBAAoB,GACpB,IAAI,WAAW;QACf,uDAAuD,GACvD,IAAI;QAEJ,IAAI,CAAC,MAAM;QACX,aAAa,eAAe,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM;QACtD,eAAe,eAAe,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ;QAE5D,IAAI,CAAC,OAAO,CAAC,MAAM;QACnB,WAAW,eAAe,WAAW;QACrC,CAAA,GAAA,wIAAA,CAAA,KAAM,AAAD,EAAE,QAAQ;QAEf,OAAO;;QAEP;;KAEC,GACD,SAAS,SAAS,KAAK,EAAE,IAAI;YAC3B,WAAW;YACX,CAAA,GAAA,yHAAA,CAAA,OAAI,AAAD,EAAE;YACL,SAAS;QACX;IACF;IAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAqCC,GACD,IAAI,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;QACpB,WAAW;QACX,IAAI,CAAC,MAAM;QAEX,MAAM,eAAe,IAAI,CAAC,YAAY;QAEtC,IAAI,CAAC,QAAQ,OAAO,SAAS,YAAY;YACvC,OAAO;YACP,OAAO;QACT;QAEA,OAAO,OAAO,SAAS,WAAW,QAAQ,IAAI,QAAQ;;QAEtD,+BAA+B;QAC/B;;;;;;;KAOC,GACD,SAAS,SAAS,OAAO,EAAE,MAAM;YAC/B,CAAA,GAAA,wIAAA,CAAA,KAAM,AAAD,EACH,OAAO,SAAS,YAChB;YAEF,MAAM,WAAW,MAAM;YACvB,aAAa,GAAG,CAAC,MAAM,UAAU;YAEjC;;;;;OAKC,GACD,SAAS,SAAS,KAAK,EAAE,UAAU,EAAE,IAAI;gBACvC,MAAM,gBAEF,cAAc;gBAGlB,IAAI,OAAO;oBACT,OAAO;gBACT,OAAO,IAAI,SAAS;oBAClB,QAAQ;gBACV,OAAO;oBACL,CAAA,GAAA,wIAAA,CAAA,KAAM,AAAD,EAAE,MAAM;oBACb,KAAK,WAAW,eAAe;gBACjC;YACF;QACF;IACF;IAEA;;;;;;;;;;;;;;;;GAgBC,GACD,QAAQ,IAAI,EAAE,IAAI,EAAE;QAClB,oBAAoB,GACpB,IAAI,WAAW;QACf,uEAAuE,GACvE,IAAI;QAEJ,IAAI,CAAC,GAAG,CAAC,MAAM,MAAM;QAErB,WAAW,WAAW,OAAO;QAC7B,CAAA,GAAA,wIAAA,CAAA,KAAM,AAAD,EAAE,QAAQ;QACf,OAAO;;QAEP;;KAEC,GACD,SAAS,SAAS,KAAK,EAAE,IAAI;YAC3B,CAAA,GAAA,yHAAA,CAAA,OAAI,AAAD,EAAE;YACL,SAAS;YACT,WAAW;QACb;IACF;IAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4BC,GACD,UAAU,IAAI,EAAE,IAAI,EAAE;QACpB,IAAI,CAAC,MAAM;QACX,MAAM,WAAW,MAAM;QACvB,MAAM,WAAW,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ;QAC/C,eAAe,aAAa;QAC5B,WAAW;QAEX,OAAO,SAAS,MAAM;IACxB;IAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAwDC,GACD,IAAI,KAAK,EAAE,GAAG,UAAU,EAAE;QACxB,MAAM,YAAY,IAAI,CAAC,SAAS;QAChC,MAAM,YAAY,IAAI,CAAC,SAAS;QAEhC,eAAe,OAAO,IAAI,CAAC,MAAM;QAEjC,IAAI,UAAU,QAAQ,UAAU,WAAW;QACzC,SAAS;QACX,OAAO,IAAI,OAAO,UAAU,YAAY;YACtC,UAAU,OAAO;QACnB,OAAO,IAAI,OAAO,UAAU,UAAU;YACpC,IAAI,MAAM,OAAO,CAAC,QAAQ;gBACxB,QAAQ;YACV,OAAO;gBACL,UAAU;YACZ;QACF,OAAO;YACL,MAAM,IAAI,UAAU,iCAAiC,QAAQ;QAC/D;QAEA,OAAO,IAAI;;QAEX;;;KAGC,GACD,SAAS,IAAI,KAAK;YAChB,IAAI,OAAO,UAAU,YAAY;gBAC/B,UAAU,OAAO,EAAE;YACrB,OAAO,IAAI,OAAO,UAAU,UAAU;gBACpC,IAAI,MAAM,OAAO,CAAC,QAAQ;oBACxB,MAAM,CAAC,QAAQ,GAAG,WAAW,GACiB;oBAC9C,UAAU,QAAQ;gBACpB,OAAO;oBACL,UAAU;gBACZ;YACF,OAAO;gBACL,MAAM,IAAI,UAAU,iCAAiC,QAAQ;YAC/D;QACF;QAEA;;;KAGC,GACD,SAAS,UAAU,MAAM;YACvB,IAAI,CAAC,CAAC,aAAa,MAAM,KAAK,CAAC,CAAC,cAAc,MAAM,GAAG;gBACrD,MAAM,IAAI,MACR;YAEJ;YAEA,QAAQ,OAAO,OAAO;YAEtB,IAAI,OAAO,QAAQ,EAAE;gBACnB,UAAU,QAAQ,GAAG,CAAA,GAAA,2HAAA,CAAA,UAAM,AAAD,EAAE,MAAM,UAAU,QAAQ,EAAE,OAAO,QAAQ;YACvE;QACF;QAEA;;;KAGC,GACD,SAAS,QAAQ,OAAO;YACtB,IAAI,QAAQ,CAAC;YAEb,IAAI,YAAY,QAAQ,YAAY,WAAW;YAC7C,SAAS;YACX,OAAO,IAAI,MAAM,OAAO,CAAC,UAAU;gBACjC,MAAO,EAAE,QAAQ,QAAQ,MAAM,CAAE;oBAC/B,MAAM,QAAQ,OAAO,CAAC,MAAM;oBAC5B,IAAI;gBACN;YACF,OAAO;gBACL,MAAM,IAAI,UAAU,sCAAsC,UAAU;YACtE;QACF;QAEA;;;;KAIC,GACD,SAAS,UAAU,MAAM,EAAE,UAAU;YACnC,IAAI,QAAQ,CAAC;YACb,IAAI,aAAa,CAAC;YAElB,MAAO,EAAE,QAAQ,UAAU,MAAM,CAAE;gBACjC,IAAI,SAAS,CAAC,MAAM,CAAC,EAAE,KAAK,QAAQ;oBAClC,aAAa;oBACb;gBACF;YACF;YAEA,IAAI,eAAe,CAAC,GAAG;gBACrB,UAAU,IAAI,CAAC;oBAAC;uBAAW;iBAAW;YACxC,OAGK,IAAI,WAAW,MAAM,GAAG,GAAG;gBAC9B,IAAI,CAAC,SAAS,GAAG,KAAK,GAAG;gBACzB,MAAM,iBAAiB,SAAS,CAAC,WAAW,CAAC,EAAE;gBAC/C,IAAI,CAAA,GAAA,uIAAA,CAAA,UAAU,AAAD,EAAE,mBAAmB,CAAA,GAAA,uIAAA,CAAA,UAAU,AAAD,EAAE,UAAU;oBACrD,UAAU,CAAA,GAAA,2HAAA,CAAA,UAAM,AAAD,EAAE,MAAM,gBAAgB;gBACzC;gBAEA,SAAS,CAAC,WAAW,GAAG;oBAAC;oBAAQ;uBAAY;iBAAK;YACpD;QACF;IACF;AACF;AA8BO,MAAM,UAAU,IAAI,YAAY,MAAM;AAE7C;;;;;;CAMC,GACD,SAAS,aAAa,IAAI,EAAE,KAAK;IAC/B,IAAI,OAAO,UAAU,YAAY;QAC/B,MAAM,IAAI,UAAU,aAAa,OAAO;IAC1C;AACF;AAEA;;;;;;CAMC,GACD,SAAS,eAAe,IAAI,EAAE,KAAK;IACjC,IAAI,OAAO,UAAU,YAAY;QAC/B,MAAM,IAAI,UAAU,aAAa,OAAO;IAC1C;AACF;AAEA;;;;;;CAMC,GACD,SAAS,eAAe,IAAI,EAAE,MAAM;IAClC,IAAI,QAAQ;QACV,MAAM,IAAI,MACR,kBACE,OACA;IAEN;AACF;AAEA;;;;;CAKC,GACD,SAAS,WAAW,IAAI;IACtB,8DAA8D;IAC9D,iCAAiC;IACjC,IAAI,CAAC,CAAA,GAAA,uIAAA,CAAA,UAAU,AAAD,EAAE,SAAS,OAAO,KAAK,IAAI,KAAK,UAAU;QACtD,MAAM,IAAI,UAAU,yBAAyB,OAAO;IACpD,QAAQ;IACV;AACF;AAEA;;;;;;;CAOC,GACD,SAAS,WAAW,IAAI,EAAE,SAAS,EAAE,QAAQ;IAC3C,IAAI,CAAC,UAAU;QACb,MAAM,IAAI,MACR,MAAM,OAAO,4BAA4B,YAAY;IAEzD;AACF;AAEA;;;CAGC,GACD,SAAS,MAAM,KAAK;IAClB,OAAO,gBAAgB,SAAS,QAAQ,IAAI,iIAAA,CAAA,QAAK,CAAC;AACpD;AAEA;;;CAGC,GACD,SAAS,gBAAgB,KAAK;IAC5B,OAAO,QACL,SACE,OAAO,UAAU,YACjB,aAAa,SACb,cAAc;AAEpB;AAEA;;;CAGC,GACD,SAAS,gBAAgB,KAAK;IAC5B,OAAO,OAAO,UAAU,YAAY,aAAa;AACnD;AAEA;;;;;;;CAOC,GACD,SAAS,aAAa,KAAK;IACzB,OAAO,QACL,SACE,OAAO,UAAU,YACjB,gBAAgB,SAChB,gBAAgB;AAEtB","ignoreList":[0]}},
    {"offset": {"line": 3024, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3030, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/vfile/lib/minurl.shared.js"],"sourcesContent":["/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;CAiBC,GACD,+EAA+E;;;;AACxE,SAAS,MAAM,aAAa;IACjC,OAAO,QACL,kBAAkB,QAChB,OAAO,kBAAkB,YACzB,UAAU,iBACV,cAAc,IAAI,IAClB,cAAc,iBACd,cAAc,QAAQ,IACtB,sCAAsC;IACtC,cAAc,IAAI,KAAK;AAE7B","ignoreList":[0]}},
    {"offset": {"line": 3055, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3061, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/vfile/lib/minproc.browser.js"],"sourcesContent":["// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const minproc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n"],"names":[],"mappings":"AAAA,qBAAqB;AACrB,0EAA0E;AAC1E,iEAAiE;;;;AAC1D,MAAM,UAAU;IAAC;AAAG;AAE3B,SAAS;IACP,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 3073, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3079, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/vfile/lib/minpath.browser.js"],"sourcesContent":["// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const minpath = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [extname]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, extname) {\n  if (extname !== undefined && typeof extname !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (\n    extname === undefined ||\n    extname.length === 0 ||\n    extname.length > path.length\n  ) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (extname === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extnameIndex = extname.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extnameIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === extname.codePointAt(extnameIndex--)) {\n          if (extnameIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extnameIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n      ? '//'\n      : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3427, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3433, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/vfile/lib/minurl.browser.js"],"sourcesContent":["import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n"],"names":[],"mappings":";;;AAAA;;;AAYO,SAAS,UAAU,IAAI;IAC5B,IAAI,OAAO,SAAS,UAAU;QAC5B,OAAO,IAAI,IAAI;IACjB,OAAO,IAAI,CAAC,CAAA,GAAA,4IAAA,CAAA,QAAK,AAAD,EAAE,OAAO;QACvB,kCAAkC,GAClC,MAAM,QAAQ,IAAI,UAChB,iFACE,OACA;QAEJ,MAAM,IAAI,GAAG;QACb,MAAM;IACR;IAEA,IAAI,KAAK,QAAQ,KAAK,SAAS;QAC7B,kCAAkC,GAClC,MAAM,QAAQ,IAAI,UAAU;QAC5B,MAAM,IAAI,GAAG;QACb,MAAM;IACR;IAEA,OAAO,oBAAoB;AAC7B;AAEA;;;;;;;CAOC,GACD,SAAS,oBAAoB,GAAG;IAC9B,IAAI,IAAI,QAAQ,KAAK,IAAI;QACvB,kCAAkC,GAClC,MAAM,QAAQ,IAAI,UAChB;QAEF,MAAM,IAAI,GAAG;QACb,MAAM;IACR;IAEA,MAAM,WAAW,IAAI,QAAQ;IAC7B,IAAI,QAAQ,CAAC;IAEb,MAAO,EAAE,QAAQ,SAAS,MAAM,CAAE;QAChC,IACE,SAAS,WAAW,CAAC,WAAW,GAAG,OAAO,OAC1C,SAAS,WAAW,CAAC,QAAQ,OAAO,GAAG,OAAO,KAC9C;YACA,MAAM,QAAQ,SAAS,WAAW,CAAC,QAAQ;YAC3C,IAAI,UAAU,GAAG,OAAO,OAAM,UAAU,IAAI,OAAO,KAAI;gBACrD,kCAAkC,GAClC,MAAM,QAAQ,IAAI,UAChB;gBAEF,MAAM,IAAI,GAAG;gBACb,MAAM;YACR;QACF;IACF;IAEA,OAAO,mBAAmB;AAC5B","ignoreList":[0]}},
    {"offset": {"line": 3481, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3487, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/vfile/lib/index.js"],"sourcesContent":["/**\n * @import {Node, Point, Position} from 'unist'\n * @import {Options as MessageOptions} from 'vfile-message'\n * @import {Compatible, Data, Map, Options, Value} from 'vfile'\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {minpath} from '#minpath'\nimport {minproc} from '#minproc'\nimport {urlToPath, isUrl} from '#minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    // Prevent calling `cwd` (which could be expensive) if it’s not needed;\n    // the empty string will be overridden in the next block.\n    this.cwd = 'cwd' in options ? '' : minproc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const field = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        field in options &&\n        options[field] !== undefined &&\n        options[field] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[field] = field === 'history' ? [...options[field]] : options[field]\n      }\n    }\n\n    /** @type {string} */\n    let field\n\n    // Set non-path related properties.\n    for (field in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(field)) {\n        // @ts-expect-error: fine to set other things.\n        this[field] = options[field]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path)\n      : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = minpath.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string'\n      ? minpath.dirname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = minpath.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string'\n      ? minpath.extname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = minpath.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = minpath.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(minpath.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + minpath.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4035, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4041, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/unist-util-stringify-position/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC,GAED;;;;;;;;;;;;;CAaC,GAED;;;;;;;;;;;;;;CAcC;;;AACM,SAAS,kBAAkB,KAAK;IACrC,WAAW;IACX,IAAI,CAAC,SAAS,OAAO,UAAU,UAAU;QACvC,OAAO;IACT;IAEA,QAAQ;IACR,IAAI,cAAc,SAAS,UAAU,OAAO;QAC1C,OAAO,SAAS,MAAM,QAAQ;IAChC;IAEA,YAAY;IACZ,IAAI,WAAW,SAAS,SAAS,OAAO;QACtC,OAAO,SAAS;IAClB;IAEA,SAAS;IACT,IAAI,UAAU,SAAS,YAAY,OAAO;QACxC,OAAO,MAAM;IACf;IAEA,IAAI;IACJ,OAAO;AACT;AAEA;;;CAGC,GACD,SAAS,MAAM,KAAK;IAClB,OAAO,MAAM,SAAS,MAAM,IAAI,IAAI,MAAM,MAAM,SAAS,MAAM,MAAM;AACvE;AAEA;;;CAGC,GACD,SAAS,SAAS,GAAG;IACnB,OAAO,MAAM,OAAO,IAAI,KAAK,IAAI,MAAM,MAAM,OAAO,IAAI,GAAG;AAC7D;AAEA;;;CAGC,GACD,SAAS,MAAM,KAAK;IAClB,OAAO,SAAS,OAAO,UAAU,WAAW,QAAQ;AACtD","ignoreList":[0]}},
    {"offset": {"line": 4113, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4119, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/vfile-message/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4371, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4377, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/parse-latin/lib/expressions.js"],"sourcesContent":["// This module is generated by `script/build-expressions.js`.\nexport const affixSymbol =\n  /^([!\"').?\\u0F3B\\u0F3D\\u169C\\u2019\\u201D\\u2026\\u203A\\u203D\\u2046\\u207E\\u208E\\u2309\\u230B\\u232A\\u2769\\u276B\\u276D\\u276F\\u2771\\u2773\\u2775\\u27C6\\u27E7\\u27E9\\u27EB\\u27ED\\u27EF\\u2984\\u2986\\u2988\\u298A\\u298C\\u298E\\u2990\\u2992\\u2994\\u2996\\u2998\\u29D9\\u29DB\\u29FD\\u2E03\\u2E05\\u2E0A\\u2E0D\\u2E1D\\u2E21\\u2E23\\u2E25\\u2E27\\u2E29\\u2E56\\u2E58\\u2E5A\\u2E5C\\u3009\\u300B\\u300D\\u300F\\u3011\\u3015\\u3017\\u3019\\u301B\\u301E\\u301F\\uFD3E\\uFE18\\uFE36\\uFE38\\uFE3A\\uFE3C\\uFE3E\\uFE40\\uFE42\\uFE44\\uFE48\\uFE5A\\uFE5C\\uFE5E\\uFF09\\uFF3D\\uFF5D\\uFF60\\uFF63\\u00BB\\]}])\\1*$/\nexport const newLine = /^[ \\t]*((\\r?\\n|\\r)[\\t ]*)+$/\nexport const terminalMarker = /^([!.?\\u2026\\u203D]+)$/\nexport const wordSymbolInner =\n  /^([&'\\-.:=?@\\u00AD\\u00B7\\u2010\\u2011\\u2019\\u2027]|_+)$/\nexport const numerical =\n  /^(?:[\\d\\u00B2\\u00B3\\u00B9\\u00BC-\\u00BE\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u09F4-\\u09F9\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0B72-\\u0B77\\u0BE6-\\u0BF2\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0CE6-\\u0CEF\\u0D58-\\u0D5E\\u0D66-\\u0D78\\u0DE6-\\u0DEF\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F33\\u1040-\\u1049\\u1090-\\u1099\\u1369-\\u137C\\u16EE-\\u16F0\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19DA\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2150-\\u2182\\u2185-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2CFD\\u3007\\u3021-\\u3029\\u3038-\\u303A\\u3192-\\u3195\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\uA620-\\uA629\\uA6E6-\\uA6EF\\uA830-\\uA835\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uA9F0-\\uA9F9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19]|\\uD800[\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDEE1-\\uDEFB\\uDF20-\\uDF23\\uDF41\\uDF4A\\uDFD1-\\uDFD5]|\\uD801[\\uDCA0-\\uDCA9]|\\uD802[\\uDC58-\\uDC5F\\uDC79-\\uDC7F\\uDCA7-\\uDCAF\\uDCFB-\\uDCFF\\uDD16-\\uDD1B\\uDDBC\\uDDBD\\uDDC0-\\uDDCF\\uDDD2-\\uDDFF\\uDE40-\\uDE48\\uDE7D\\uDE7E\\uDE9D-\\uDE9F\\uDEEB-\\uDEEF\\uDF58-\\uDF5F\\uDF78-\\uDF7F\\uDFA9-\\uDFAF]|\\uD803[\\uDCFA-\\uDCFF\\uDD30-\\uDD39\\uDE60-\\uDE7E\\uDF1D-\\uDF26\\uDF51-\\uDF54\\uDFC5-\\uDFCB]|\\uD804[\\uDC52-\\uDC6F\\uDCF0-\\uDCF9\\uDD36-\\uDD3F\\uDDD0-\\uDDD9\\uDDE1-\\uDDF4\\uDEF0-\\uDEF9]|\\uD805[\\uDC50-\\uDC59\\uDCD0-\\uDCD9\\uDE50-\\uDE59\\uDEC0-\\uDEC9\\uDF30-\\uDF3B]|\\uD806[\\uDCE0-\\uDCF2\\uDD50-\\uDD59]|\\uD807[\\uDC50-\\uDC6C\\uDD50-\\uDD59\\uDDA0-\\uDDA9\\uDF50-\\uDF59\\uDFC0-\\uDFD4]|\\uD809[\\uDC00-\\uDC6E]|\\uD81A[\\uDE60-\\uDE69\\uDEC0-\\uDEC9\\uDF50-\\uDF59\\uDF5B-\\uDF61]|\\uD81B[\\uDE80-\\uDE96]|\\uD834[\\uDEC0-\\uDED3\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD835[\\uDFCE-\\uDFFF]|\\uD838[\\uDD40-\\uDD49\\uDEF0-\\uDEF9]|\\uD839[\\uDCF0-\\uDCF9]|\\uD83A[\\uDCC7-\\uDCCF\\uDD50-\\uDD59]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D]|\\uD83C[\\uDD00-\\uDD0C]|\\uD83E[\\uDFF0-\\uDFF9])+$/\nexport const digitStart = /^\\d/\nexport const lowerInitial =\n  /^(?:[a-z\\u00B5\\u00DF-\\u00F6\\u00F8-\\u00FF\\u0101\\u0103\\u0105\\u0107\\u0109\\u010B\\u010D\\u010F\\u0111\\u0113\\u0115\\u0117\\u0119\\u011B\\u011D\\u011F\\u0121\\u0123\\u0125\\u0127\\u0129\\u012B\\u012D\\u012F\\u0131\\u0133\\u0135\\u0137\\u0138\\u013A\\u013C\\u013E\\u0140\\u0142\\u0144\\u0146\\u0148\\u0149\\u014B\\u014D\\u014F\\u0151\\u0153\\u0155\\u0157\\u0159\\u015B\\u015D\\u015F\\u0161\\u0163\\u0165\\u0167\\u0169\\u016B\\u016D\\u016F\\u0171\\u0173\\u0175\\u0177\\u017A\\u017C\\u017E-\\u0180\\u0183\\u0185\\u0188\\u018C\\u018D\\u0192\\u0195\\u0199-\\u019B\\u019E\\u01A1\\u01A3\\u01A5\\u01A8\\u01AA\\u01AB\\u01AD\\u01B0\\u01B4\\u01B6\\u01B9\\u01BA\\u01BD-\\u01BF\\u01C6\\u01C9\\u01CC\\u01CE\\u01D0\\u01D2\\u01D4\\u01D6\\u01D8\\u01DA\\u01DC\\u01DD\\u01DF\\u01E1\\u01E3\\u01E5\\u01E7\\u01E9\\u01EB\\u01ED\\u01EF\\u01F0\\u01F3\\u01F5\\u01F9\\u01FB\\u01FD\\u01FF\\u0201\\u0203\\u0205\\u0207\\u0209\\u020B\\u020D\\u020F\\u0211\\u0213\\u0215\\u0217\\u0219\\u021B\\u021D\\u021F\\u0221\\u0223\\u0225\\u0227\\u0229\\u022B\\u022D\\u022F\\u0231\\u0233-\\u0239\\u023C\\u023F\\u0240\\u0242\\u0247\\u0249\\u024B\\u024D\\u024F-\\u0293\\u0295-\\u02AF\\u0371\\u0373\\u0377\\u037B-\\u037D\\u0390\\u03AC-\\u03CE\\u03D0\\u03D1\\u03D5-\\u03D7\\u03D9\\u03DB\\u03DD\\u03DF\\u03E1\\u03E3\\u03E5\\u03E7\\u03E9\\u03EB\\u03ED\\u03EF-\\u03F3\\u03F5\\u03F8\\u03FB\\u03FC\\u0430-\\u045F\\u0461\\u0463\\u0465\\u0467\\u0469\\u046B\\u046D\\u046F\\u0471\\u0473\\u0475\\u0477\\u0479\\u047B\\u047D\\u047F\\u0481\\u048B\\u048D\\u048F\\u0491\\u0493\\u0495\\u0497\\u0499\\u049B\\u049D\\u049F\\u04A1\\u04A3\\u04A5\\u04A7\\u04A9\\u04AB\\u04AD\\u04AF\\u04B1\\u04B3\\u04B5\\u04B7\\u04B9\\u04BB\\u04BD\\u04BF\\u04C2\\u04C4\\u04C6\\u04C8\\u04CA\\u04CC\\u04CE\\u04CF\\u04D1\\u04D3\\u04D5\\u04D7\\u04D9\\u04DB\\u04DD\\u04DF\\u04E1\\u04E3\\u04E5\\u04E7\\u04E9\\u04EB\\u04ED\\u04EF\\u04F1\\u04F3\\u04F5\\u04F7\\u04F9\\u04FB\\u04FD\\u04FF\\u0501\\u0503\\u0505\\u0507\\u0509\\u050B\\u050D\\u050F\\u0511\\u0513\\u0515\\u0517\\u0519\\u051B\\u051D\\u051F\\u0521\\u0523\\u0525\\u0527\\u0529\\u052B\\u052D\\u052F\\u0560-\\u0588\\u10D0-\\u10FA\\u10FD-\\u10FF\\u13F8-\\u13FD\\u1C80-\\u1C88\\u1D00-\\u1D2B\\u1D6B-\\u1D77\\u1D79-\\u1D9A\\u1E01\\u1E03\\u1E05\\u1E07\\u1E09\\u1E0B\\u1E0D\\u1E0F\\u1E11\\u1E13\\u1E15\\u1E17\\u1E19\\u1E1B\\u1E1D\\u1E1F\\u1E21\\u1E23\\u1E25\\u1E27\\u1E29\\u1E2B\\u1E2D\\u1E2F\\u1E31\\u1E33\\u1E35\\u1E37\\u1E39\\u1E3B\\u1E3D\\u1E3F\\u1E41\\u1E43\\u1E45\\u1E47\\u1E49\\u1E4B\\u1E4D\\u1E4F\\u1E51\\u1E53\\u1E55\\u1E57\\u1E59\\u1E5B\\u1E5D\\u1E5F\\u1E61\\u1E63\\u1E65\\u1E67\\u1E69\\u1E6B\\u1E6D\\u1E6F\\u1E71\\u1E73\\u1E75\\u1E77\\u1E79\\u1E7B\\u1E7D\\u1E7F\\u1E81\\u1E83\\u1E85\\u1E87\\u1E89\\u1E8B\\u1E8D\\u1E8F\\u1E91\\u1E93\\u1E95-\\u1E9D\\u1E9F\\u1EA1\\u1EA3\\u1EA5\\u1EA7\\u1EA9\\u1EAB\\u1EAD\\u1EAF\\u1EB1\\u1EB3\\u1EB5\\u1EB7\\u1EB9\\u1EBB\\u1EBD\\u1EBF\\u1EC1\\u1EC3\\u1EC5\\u1EC7\\u1EC9\\u1ECB\\u1ECD\\u1ECF\\u1ED1\\u1ED3\\u1ED5\\u1ED7\\u1ED9\\u1EDB\\u1EDD\\u1EDF\\u1EE1\\u1EE3\\u1EE5\\u1EE7\\u1EE9\\u1EEB\\u1EED\\u1EEF\\u1EF1\\u1EF3\\u1EF5\\u1EF7\\u1EF9\\u1EFB\\u1EFD\\u1EFF-\\u1F07\\u1F10-\\u1F15\\u1F20-\\u1F27\\u1F30-\\u1F37\\u1F40-\\u1F45\\u1F50-\\u1F57\\u1F60-\\u1F67\\u1F70-\\u1F7D\\u1F80-\\u1F87\\u1F90-\\u1F97\\u1FA0-\\u1FA7\\u1FB0-\\u1FB4\\u1FB6\\u1FB7\\u1FBE\\u1FC2-\\u1FC4\\u1FC6\\u1FC7\\u1FD0-\\u1FD3\\u1FD6\\u1FD7\\u1FE0-\\u1FE7\\u1FF2-\\u1FF4\\u1FF6\\u1FF7\\u210A\\u210E\\u210F\\u2113\\u212F\\u2134\\u2139\\u213C\\u213D\\u2146-\\u2149\\u214E\\u2184\\u2C30-\\u2C5F\\u2C61\\u2C65\\u2C66\\u2C68\\u2C6A\\u2C6C\\u2C71\\u2C73\\u2C74\\u2C76-\\u2C7B\\u2C81\\u2C83\\u2C85\\u2C87\\u2C89\\u2C8B\\u2C8D\\u2C8F\\u2C91\\u2C93\\u2C95\\u2C97\\u2C99\\u2C9B\\u2C9D\\u2C9F\\u2CA1\\u2CA3\\u2CA5\\u2CA7\\u2CA9\\u2CAB\\u2CAD\\u2CAF\\u2CB1\\u2CB3\\u2CB5\\u2CB7\\u2CB9\\u2CBB\\u2CBD\\u2CBF\\u2CC1\\u2CC3\\u2CC5\\u2CC7\\u2CC9\\u2CCB\\u2CCD\\u2CCF\\u2CD1\\u2CD3\\u2CD5\\u2CD7\\u2CD9\\u2CDB\\u2CDD\\u2CDF\\u2CE1\\u2CE3\\u2CE4\\u2CEC\\u2CEE\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\uA641\\uA643\\uA645\\uA647\\uA649\\uA64B\\uA64D\\uA64F\\uA651\\uA653\\uA655\\uA657\\uA659\\uA65B\\uA65D\\uA65F\\uA661\\uA663\\uA665\\uA667\\uA669\\uA66B\\uA66D\\uA681\\uA683\\uA685\\uA687\\uA689\\uA68B\\uA68D\\uA68F\\uA691\\uA693\\uA695\\uA697\\uA699\\uA69B\\uA723\\uA725\\uA727\\uA729\\uA72B\\uA72D\\uA72F-\\uA731\\uA733\\uA735\\uA737\\uA739\\uA73B\\uA73D\\uA73F\\uA741\\uA743\\uA745\\uA747\\uA749\\uA74B\\uA74D\\uA74F\\uA751\\uA753\\uA755\\uA757\\uA759\\uA75B\\uA75D\\uA75F\\uA761\\uA763\\uA765\\uA767\\uA769\\uA76B\\uA76D\\uA76F\\uA771-\\uA778\\uA77A\\uA77C\\uA77F\\uA781\\uA783\\uA785\\uA787\\uA78C\\uA78E\\uA791\\uA793-\\uA795\\uA797\\uA799\\uA79B\\uA79D\\uA79F\\uA7A1\\uA7A3\\uA7A5\\uA7A7\\uA7A9\\uA7AF\\uA7B5\\uA7B7\\uA7B9\\uA7BB\\uA7BD\\uA7BF\\uA7C1\\uA7C3\\uA7C8\\uA7CA\\uA7D1\\uA7D3\\uA7D5\\uA7D7\\uA7D9\\uA7F6\\uA7FA\\uAB30-\\uAB5A\\uAB60-\\uAB68\\uAB70-\\uABBF\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF41-\\uFF5A]|\\uD801[\\uDC28-\\uDC4F\\uDCD8-\\uDCFB\\uDD97-\\uDDA1\\uDDA3-\\uDDB1\\uDDB3-\\uDDB9\\uDDBB\\uDDBC]|\\uD803[\\uDCC0-\\uDCF2]|\\uD806[\\uDCC0-\\uDCDF]|\\uD81B[\\uDE60-\\uDE7F]|\\uD835[\\uDC1A-\\uDC33\\uDC4E-\\uDC54\\uDC56-\\uDC67\\uDC82-\\uDC9B\\uDCB6-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDCCF\\uDCEA-\\uDD03\\uDD1E-\\uDD37\\uDD52-\\uDD6B\\uDD86-\\uDD9F\\uDDBA-\\uDDD3\\uDDEE-\\uDE07\\uDE22-\\uDE3B\\uDE56-\\uDE6F\\uDE8A-\\uDEA5\\uDEC2-\\uDEDA\\uDEDC-\\uDEE1\\uDEFC-\\uDF14\\uDF16-\\uDF1B\\uDF36-\\uDF4E\\uDF50-\\uDF55\\uDF70-\\uDF88\\uDF8A-\\uDF8F\\uDFAA-\\uDFC2\\uDFC4-\\uDFC9\\uDFCB]|\\uD837[\\uDF00-\\uDF09\\uDF0B-\\uDF1E\\uDF25-\\uDF2A]|\\uD83A[\\uDD22-\\uDD43])/\nexport const surrogates = /[\\uD800-\\uDFFF]/\nexport const punctuation =\n  /[!\"'-),-/:;?[-\\]_{}\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u201F\\u2022-\\u2027\\u2032-\\u203A\\u203C-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDEAD\\uDF55-\\uDF59\\uDF86-\\uDF89]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5A\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDEB9\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDD44-\\uDD46\\uDDE2\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2\\uDF00-\\uDF09]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8\\uDF43-\\uDF4F\\uDFFF]|\\uD809[\\uDC70-\\uDC74]|\\uD80B[\\uDFF1\\uDFF2]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A\\uDFE2]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/\nexport const word =\n  /[\\dA-Za-z\\u00AA\\u00B2\\u00B3\\u00B5\\u00B9\\u00BA\\u00BC-\\u00BE\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u07FD\\u0800-\\u082D\\u0840-\\u085B\\u0860-\\u086A\\u0870-\\u0887\\u0889-\\u088E\\u0898-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u09F4-\\u09F9\\u09FC\\u09FE\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9-\\u0AFF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B55-\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71-\\u0B77\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BF2\\u0C00-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3C-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C5D\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDD\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1-\\u0CF3\\u0D00-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D63\\u0D66-\\u0D78\\u0D7A-\\u0D7F\\u0D81-\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECE\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F33\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u1715\\u171F-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u17F0-\\u17F9\\u180B-\\u180D\\u180F-\\u1819\\u1820-\\u1878\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ACE\\u1B00-\\u1B4C\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CD0-\\u1CD2\\u1CD4-\\u1CFA\\u1D00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u20D0-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2150-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2C00-\\u2CE4\\u2CEB-\\u2CF3\\u2CFD\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3192-\\u3195\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA672\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA827\\uA82C\\uA830-\\uA835\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0-\\uDEFB\\uDF00-\\uDF23\\uDF2D-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDD70-\\uDD7A\\uDD7C-\\uDD8A\\uDD8C-\\uDD92\\uDD94\\uDD95\\uDD97-\\uDDA1\\uDDA3-\\uDDB1\\uDDB3-\\uDDB9\\uDDBB\\uDDBC\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67\\uDF80-\\uDF85\\uDF87-\\uDFB0\\uDFB2-\\uDFBA]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC58-\\uDC76\\uDC79-\\uDC9E\\uDCA7-\\uDCAF\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDD1B\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE38-\\uDE3A\\uDE3F-\\uDE48\\uDE60-\\uDE7E\\uDE80-\\uDE9F\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDEEB-\\uDEEF\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF58-\\uDF72\\uDF78-\\uDF91\\uDFA9-\\uDFAF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDD27\\uDD30-\\uDD39\\uDE60-\\uDE7E\\uDE80-\\uDEA9\\uDEAB\\uDEAC\\uDEB0\\uDEB1\\uDEFD-\\uDF27\\uDF30-\\uDF54\\uDF70-\\uDF85\\uDFB0-\\uDFCB\\uDFE0-\\uDFF6]|\\uD804[\\uDC00-\\uDC46\\uDC52-\\uDC75\\uDC7F-\\uDCBA\\uDCC2\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD44-\\uDD47\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDC9-\\uDDCC\\uDDCE-\\uDDDA\\uDDDC\\uDDE1-\\uDDF4\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E-\\uDE41\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3B-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC5E-\\uDC61\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF1D-\\uDF2B\\uDF30-\\uDF3B\\uDF40-\\uDF46]|\\uD806[\\uDC00-\\uDC3A\\uDCA0-\\uDCF2\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD35\\uDD37\\uDD38\\uDD3B-\\uDD43\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD7\\uDDDA-\\uDDE1\\uDDE3\\uDDE4\\uDE00-\\uDE3E\\uDE47\\uDE50-\\uDE99\\uDE9D\\uDEB0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC6C\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD36\\uDD3A\\uDD3C\\uDD3D\\uDD3F-\\uDD47\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD8E\\uDD90\\uDD91\\uDD93-\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF6\\uDF00-\\uDF10\\uDF12-\\uDF3A\\uDF3E-\\uDF42\\uDF50-\\uDF59\\uDFB0\\uDFC0-\\uDFD4]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|\\uD80B[\\uDF90-\\uDFF0]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883\\uD885-\\uD887][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2F\\uDC40-\\uDC55]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDE70-\\uDEBE\\uDEC0-\\uDEC9\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE96\\uDF00-\\uDF4A\\uDF4F-\\uDF87\\uDF8F-\\uDF9F\\uDFE0\\uDFE1\\uDFE3\\uDFE4\\uDFF0\\uDFF1]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82B[\\uDFF0-\\uDFF3\\uDFF5-\\uDFFB\\uDFFD\\uDFFE]|\\uD82C[\\uDC00-\\uDD22\\uDD32\\uDD50-\\uDD52\\uDD55\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD833[\\uDF00-\\uDF2D\\uDF30-\\uDF46]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44\\uDEC0-\\uDED3\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD837[\\uDF00-\\uDF1E\\uDF25-\\uDF2A]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A\\uDC30-\\uDC6D\\uDC8F\\uDD00-\\uDD2C\\uDD30-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDE90-\\uDEAE\\uDEC0-\\uDEF9]|\\uD839[\\uDCD0-\\uDCF9\\uDFE0-\\uDFE6\\uDFE8-\\uDFEB\\uDFED\\uDFEE\\uDFF0-\\uDFFE]|\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCD6\\uDD00-\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83C[\\uDD00-\\uDD0C]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDF\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF39\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A\\uDF50-\\uDFFF]|\\uD888[\\uDC00-\\uDFAF]|\\uDB40[\\uDD00-\\uDDEF]/\nexport const whiteSpace =\n  /[\\t-\\r \\u0085\\u00A0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/\n"],"names":[],"mappings":"AAAA,6DAA6D;;;;;;;;;;;;;;AACtD,MAAM,cACX;AACK,MAAM,UAAU;AAChB,MAAM,iBAAiB;AACvB,MAAM,kBACX;AACK,MAAM,YACX;AACK,MAAM,aAAa;AACnB,MAAM,eACX;AACK,MAAM,aAAa;AACnB,MAAM,cACX;AACK,MAAM,OACX;AACK,MAAM,aACX","ignoreList":[0]}},
    {"offset": {"line": 4402, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4408, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/parse-latin/lib/plugin/merge-initial-word-symbol.js"],"sourcesContent":["/**\n * @typedef {import('nlcst').Sentence} Sentence\n */\n\nimport {toString} from 'nlcst-to-string'\nimport {modifyChildren} from 'unist-util-modify-children'\n\n// Merge certain punctuation marks into their following words.\nexport const mergeInitialWordSymbol = modifyChildren(\n  /**\n   * @type {import('unist-util-modify-children').Modifier<Sentence>}\n   */\n  function (child, index, parent) {\n    if (\n      (child.type !== 'SymbolNode' && child.type !== 'PunctuationNode') ||\n      toString(child) !== '&'\n    ) {\n      return\n    }\n\n    const children = parent.children\n    const next = children[index + 1]\n\n    // If either a previous word, or no following word, exists, exit early.\n    if (\n      (index > 0 && children[index - 1].type === 'WordNode') ||\n      !(next && next.type === 'WordNode')\n    ) {\n      return\n    }\n\n    // Remove `child` from parent.\n    children.splice(index, 1)\n\n    // Add the punctuation mark at the start of the next node.\n    next.children.unshift(child)\n\n    // Update position.\n    if (next.position && child.position) {\n      next.position.start = child.position.start\n    }\n\n    // Next, iterate over the node at the previous position, as it's now adjacent\n    // to a following word.\n    return index - 1\n  }\n)\n"],"names":[],"mappings":"AAAA;;CAEC;;;AAGD;AADA;;;AAIO,MAAM,yBAAyB,CAAA,GAAA,+JAAA,CAAA,iBAAc,AAAD,EACjD;;GAEC,GACD,SAAU,KAAK,EAAE,KAAK,EAAE,MAAM;IAC5B,IACE,AAAC,MAAM,IAAI,KAAK,gBAAgB,MAAM,IAAI,KAAK,qBAC/C,CAAA,GAAA,iJAAA,CAAA,WAAQ,AAAD,EAAE,WAAW,KACpB;QACA;IACF;IAEA,MAAM,WAAW,OAAO,QAAQ;IAChC,MAAM,OAAO,QAAQ,CAAC,QAAQ,EAAE;IAEhC,uEAAuE;IACvE,IACE,AAAC,QAAQ,KAAK,QAAQ,CAAC,QAAQ,EAAE,CAAC,IAAI,KAAK,cAC3C,CAAC,CAAC,QAAQ,KAAK,IAAI,KAAK,UAAU,GAClC;QACA;IACF;IAEA,8BAA8B;IAC9B,SAAS,MAAM,CAAC,OAAO;IAEvB,0DAA0D;IAC1D,KAAK,QAAQ,CAAC,OAAO,CAAC;IAEtB,mBAAmB;IACnB,IAAI,KAAK,QAAQ,IAAI,MAAM,QAAQ,EAAE;QACnC,KAAK,QAAQ,CAAC,KAAK,GAAG,MAAM,QAAQ,CAAC,KAAK;IAC5C;IAEA,6EAA6E;IAC7E,uBAAuB;IACvB,OAAO,QAAQ;AACjB","ignoreList":[0]}},
    {"offset": {"line": 4441, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4447, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/parse-latin/lib/plugin/merge-final-word-symbol.js"],"sourcesContent":["/**\n * @typedef {import('nlcst').Sentence} Sentence\n */\n\nimport {toString} from 'nlcst-to-string'\nimport {modifyChildren} from 'unist-util-modify-children'\n\n// Merge certain punctuation marks into their preceding words.\nexport const mergeFinalWordSymbol = modifyChildren(\n  /**\n   * @type {import('unist-util-modify-children').Modifier<Sentence>}\n   */\n  function (child, index, parent) {\n    if (\n      index > 0 &&\n      (child.type === 'SymbolNode' || child.type === 'PunctuationNode') &&\n      toString(child) === '-'\n    ) {\n      const children = parent.children\n      const previous = children[index - 1]\n      const next = children[index + 1]\n\n      if (\n        (!next || next.type !== 'WordNode') &&\n        previous &&\n        previous.type === 'WordNode'\n      ) {\n        // Remove `child` from parent.\n        children.splice(index, 1)\n\n        // Add the punctuation mark at the end of the previous node.\n        previous.children.push(child)\n\n        // Update position.\n        if (previous.position && child.position) {\n          previous.position.end = child.position.end\n        }\n\n        // Next, iterate over the node *now* at the current position (which was\n        // the next node).\n        return index\n      }\n    }\n  }\n)\n"],"names":[],"mappings":"AAAA;;CAEC;;;AAGD;AADA;;;AAIO,MAAM,uBAAuB,CAAA,GAAA,+JAAA,CAAA,iBAAc,AAAD,EAC/C;;GAEC,GACD,SAAU,KAAK,EAAE,KAAK,EAAE,MAAM;IAC5B,IACE,QAAQ,KACR,CAAC,MAAM,IAAI,KAAK,gBAAgB,MAAM,IAAI,KAAK,iBAAiB,KAChE,CAAA,GAAA,iJAAA,CAAA,WAAQ,AAAD,EAAE,WAAW,KACpB;QACA,MAAM,WAAW,OAAO,QAAQ;QAChC,MAAM,WAAW,QAAQ,CAAC,QAAQ,EAAE;QACpC,MAAM,OAAO,QAAQ,CAAC,QAAQ,EAAE;QAEhC,IACE,CAAC,CAAC,QAAQ,KAAK,IAAI,KAAK,UAAU,KAClC,YACA,SAAS,IAAI,KAAK,YAClB;YACA,8BAA8B;YAC9B,SAAS,MAAM,CAAC,OAAO;YAEvB,4DAA4D;YAC5D,SAAS,QAAQ,CAAC,IAAI,CAAC;YAEvB,mBAAmB;YACnB,IAAI,SAAS,QAAQ,IAAI,MAAM,QAAQ,EAAE;gBACvC,SAAS,QAAQ,CAAC,GAAG,GAAG,MAAM,QAAQ,CAAC,GAAG;YAC5C;YAEA,uEAAuE;YACvE,kBAAkB;YAClB,OAAO;QACT;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 4478, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4484, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/parse-latin/lib/plugin/merge-inner-word-symbol.js"],"sourcesContent":["/**\n * @typedef {import('nlcst').Sentence} Sentence\n * @typedef {import('nlcst').WordContent} WordContent\n */\n\nimport {toString} from 'nlcst-to-string'\nimport {modifyChildren} from 'unist-util-modify-children'\n// Symbols part of surrounding words.\nimport {wordSymbolInner} from '../expressions.js'\n\n// Merge words joined by certain punctuation marks.\nexport const mergeInnerWordSymbol = modifyChildren(\n  /**\n   * @type {import('unist-util-modify-children').Modifier<Sentence>}\n   */\n  function (child, index, parent) {\n    if (\n      index > 0 &&\n      (child.type === 'SymbolNode' || child.type === 'PunctuationNode')\n    ) {\n      const siblings = parent.children\n      const previous = siblings[index - 1]\n\n      if (previous && previous.type === 'WordNode') {\n        let position = index - 1\n        /** @type {Array<WordContent>} */\n        const tokens = []\n        /** @type {Array<WordContent>} */\n        let queue = []\n\n        // -   If a token which is neither word nor inner word symbol is found,\n        //     the loop is broken\n        // -   If an inner word symbol is found,  it’s queued\n        // -   If a word is found, it’s queued (and the queue stored and emptied)\n        while (siblings[++position]) {\n          const sibling = siblings[position]\n\n          if (sibling.type === 'WordNode') {\n            tokens.push(...queue, ...sibling.children)\n\n            queue = []\n          } else if (\n            (sibling.type === 'SymbolNode' ||\n              sibling.type === 'PunctuationNode') &&\n            wordSymbolInner.test(toString(sibling))\n          ) {\n            queue.push(sibling)\n          } else {\n            break\n          }\n        }\n\n        if (tokens.length > 0) {\n          // If there is a queue, remove its length from `position`.\n          if (queue.length > 0) {\n            position -= queue.length\n          }\n\n          // Remove every (one or more) inner-word punctuation marks and children\n          // of words.\n          siblings.splice(index, position - index)\n\n          // Add all found tokens to `prev`s children.\n          previous.children.push(...tokens)\n\n          const last = tokens[tokens.length - 1]\n\n          // Update position.\n          if (previous.position && last.position) {\n            previous.position.end = last.position.end\n          }\n\n          // Next, iterate over the node *now* at the current position.\n          return index\n        }\n      }\n    }\n  }\n)\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AAGD;AACA,qCAAqC;AACrC;AAHA;;;;AAMO,MAAM,uBAAuB,CAAA,GAAA,+JAAA,CAAA,iBAAc,AAAD,EAC/C;;GAEC,GACD,SAAU,KAAK,EAAE,KAAK,EAAE,MAAM;IAC5B,IACE,QAAQ,KACR,CAAC,MAAM,IAAI,KAAK,gBAAgB,MAAM,IAAI,KAAK,iBAAiB,GAChE;QACA,MAAM,WAAW,OAAO,QAAQ;QAChC,MAAM,WAAW,QAAQ,CAAC,QAAQ,EAAE;QAEpC,IAAI,YAAY,SAAS,IAAI,KAAK,YAAY;YAC5C,IAAI,WAAW,QAAQ;YACvB,+BAA+B,GAC/B,MAAM,SAAS,EAAE;YACjB,+BAA+B,GAC/B,IAAI,QAAQ,EAAE;YAEd,uEAAuE;YACvE,yBAAyB;YACzB,qDAAqD;YACrD,yEAAyE;YACzE,MAAO,QAAQ,CAAC,EAAE,SAAS,CAAE;gBAC3B,MAAM,UAAU,QAAQ,CAAC,SAAS;gBAElC,IAAI,QAAQ,IAAI,KAAK,YAAY;oBAC/B,OAAO,IAAI,IAAI,UAAU,QAAQ,QAAQ;oBAEzC,QAAQ,EAAE;gBACZ,OAAO,IACL,CAAC,QAAQ,IAAI,KAAK,gBAChB,QAAQ,IAAI,KAAK,iBAAiB,KACpC,gJAAA,CAAA,kBAAe,CAAC,IAAI,CAAC,CAAA,GAAA,iJAAA,CAAA,WAAQ,AAAD,EAAE,WAC9B;oBACA,MAAM,IAAI,CAAC;gBACb,OAAO;oBACL;gBACF;YACF;YAEA,IAAI,OAAO,MAAM,GAAG,GAAG;gBACrB,0DAA0D;gBAC1D,IAAI,MAAM,MAAM,GAAG,GAAG;oBACpB,YAAY,MAAM,MAAM;gBAC1B;gBAEA,uEAAuE;gBACvE,YAAY;gBACZ,SAAS,MAAM,CAAC,OAAO,WAAW;gBAElC,4CAA4C;gBAC5C,SAAS,QAAQ,CAAC,IAAI,IAAI;gBAE1B,MAAM,OAAO,MAAM,CAAC,OAAO,MAAM,GAAG,EAAE;gBAEtC,mBAAmB;gBACnB,IAAI,SAAS,QAAQ,IAAI,KAAK,QAAQ,EAAE;oBACtC,SAAS,QAAQ,CAAC,GAAG,GAAG,KAAK,QAAQ,CAAC,GAAG;gBAC3C;gBAEA,6DAA6D;gBAC7D,OAAO;YACT;QACF;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 4543, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4549, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/parse-latin/lib/plugin/merge-inner-word-slash.js"],"sourcesContent":["/**\n * @typedef {import('nlcst').Sentence} Sentence\n * @typedef {import('nlcst').SentenceContent} SentenceContent\n * @typedef {import('nlcst').WordContent} WordContent\n */\n\nimport {toString} from 'nlcst-to-string'\nimport {modifyChildren} from 'unist-util-modify-children'\n\n// Merge words joined by certain punctuation marks.\nexport const mergeInnerWordSlash = modifyChildren(\n  /**\n   * @type {import('unist-util-modify-children').Modifier<Sentence>}\n   */\n  function (child, index, parent) {\n    const siblings = parent.children\n    const previous = siblings[index - 1]\n\n    if (\n      previous &&\n      previous.type === 'WordNode' &&\n      (child.type === 'SymbolNode' || child.type === 'PunctuationNode') &&\n      toString(child) === '/'\n    ) {\n      const previousValue = toString(previous)\n      /** @type {SentenceContent} */\n      let tail = child\n      /** @type {Array<WordContent>} */\n      const queue = [child]\n      let count = 1\n      let nextValue = ''\n      const next = siblings[index + 1]\n\n      if (next && next.type === 'WordNode') {\n        nextValue = toString(next)\n        tail = next\n        queue.push(...next.children)\n        count++\n      }\n\n      if (previousValue.length < 3 && (!nextValue || nextValue.length < 3)) {\n        // Add all found tokens to `prev`s children.\n        previous.children.push(...queue)\n\n        siblings.splice(index, count)\n\n        // Update position.\n        if (previous.position && tail.position) {\n          previous.position.end = tail.position.end\n        }\n\n        // Next, iterate over the node *now* at the current position.\n        return index\n      }\n    }\n  }\n)\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;AAGD;AADA;;;AAIO,MAAM,sBAAsB,CAAA,GAAA,+JAAA,CAAA,iBAAc,AAAD,EAC9C;;GAEC,GACD,SAAU,KAAK,EAAE,KAAK,EAAE,MAAM;IAC5B,MAAM,WAAW,OAAO,QAAQ;IAChC,MAAM,WAAW,QAAQ,CAAC,QAAQ,EAAE;IAEpC,IACE,YACA,SAAS,IAAI,KAAK,cAClB,CAAC,MAAM,IAAI,KAAK,gBAAgB,MAAM,IAAI,KAAK,iBAAiB,KAChE,CAAA,GAAA,iJAAA,CAAA,WAAQ,AAAD,EAAE,WAAW,KACpB;QACA,MAAM,gBAAgB,CAAA,GAAA,iJAAA,CAAA,WAAQ,AAAD,EAAE;QAC/B,4BAA4B,GAC5B,IAAI,OAAO;QACX,+BAA+B,GAC/B,MAAM,QAAQ;YAAC;SAAM;QACrB,IAAI,QAAQ;QACZ,IAAI,YAAY;QAChB,MAAM,OAAO,QAAQ,CAAC,QAAQ,EAAE;QAEhC,IAAI,QAAQ,KAAK,IAAI,KAAK,YAAY;YACpC,YAAY,CAAA,GAAA,iJAAA,CAAA,WAAQ,AAAD,EAAE;YACrB,OAAO;YACP,MAAM,IAAI,IAAI,KAAK,QAAQ;YAC3B;QACF;QAEA,IAAI,cAAc,MAAM,GAAG,KAAK,CAAC,CAAC,aAAa,UAAU,MAAM,GAAG,CAAC,GAAG;YACpE,4CAA4C;YAC5C,SAAS,QAAQ,CAAC,IAAI,IAAI;YAE1B,SAAS,MAAM,CAAC,OAAO;YAEvB,mBAAmB;YACnB,IAAI,SAAS,QAAQ,IAAI,KAAK,QAAQ,EAAE;gBACtC,SAAS,QAAQ,CAAC,GAAG,GAAG,KAAK,QAAQ,CAAC,GAAG;YAC3C;YAEA,6DAA6D;YAC7D,OAAO;QACT;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 4593, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4599, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/parse-latin/lib/plugin/merge-initialisms.js"],"sourcesContent":["/**\n * @typedef {import('nlcst').Sentence} Sentence\n */\n\nimport {toString} from 'nlcst-to-string'\nimport {modifyChildren} from 'unist-util-modify-children'\nimport {numerical} from '../expressions.js'\n\n// Merge initialisms.\nexport const mergeInitialisms = modifyChildren(\n  /**\n   * @type {import('unist-util-modify-children').Modifier<Sentence>}\n   */\n  function (child, index, parent) {\n    if (\n      index > 0 &&\n      child.type === 'PunctuationNode' &&\n      toString(child) === '.'\n    ) {\n      const previous = parent.children[index - 1]\n\n      if (\n        previous.type === 'WordNode' &&\n        previous.children &&\n        previous.children.length !== 1 &&\n        previous.children.length % 2 !== 0\n      ) {\n        let position = previous.children.length\n        let isAllDigits = true\n\n        while (previous.children[--position]) {\n          const otherChild = previous.children[position]\n\n          const value = toString(otherChild)\n\n          if (position % 2 === 0) {\n            // Initialisms consist of one character values.\n            if (value.length > 1) {\n              return\n            }\n\n            if (!numerical.test(value)) {\n              isAllDigits = false\n            }\n          } else if (value !== '.') {\n            if (position < previous.children.length - 2) {\n              break\n            } else {\n              return\n            }\n          }\n        }\n\n        if (!isAllDigits) {\n          // Remove `child` from parent.\n          parent.children.splice(index, 1)\n\n          // Add child to the previous children.\n          previous.children.push(child)\n\n          // Update position.\n          if (previous.position && child.position) {\n            previous.position.end = child.position.end\n          }\n\n          // Next, iterate over the node *now* at the current position.\n          return index\n        }\n      }\n    }\n  }\n)\n"],"names":[],"mappings":"AAAA;;CAEC;;;AAGD;AADA;AAEA;;;;AAGO,MAAM,mBAAmB,CAAA,GAAA,+JAAA,CAAA,iBAAc,AAAD,EAC3C;;GAEC,GACD,SAAU,KAAK,EAAE,KAAK,EAAE,MAAM;IAC5B,IACE,QAAQ,KACR,MAAM,IAAI,KAAK,qBACf,CAAA,GAAA,iJAAA,CAAA,WAAQ,AAAD,EAAE,WAAW,KACpB;QACA,MAAM,WAAW,OAAO,QAAQ,CAAC,QAAQ,EAAE;QAE3C,IACE,SAAS,IAAI,KAAK,cAClB,SAAS,QAAQ,IACjB,SAAS,QAAQ,CAAC,MAAM,KAAK,KAC7B,SAAS,QAAQ,CAAC,MAAM,GAAG,MAAM,GACjC;YACA,IAAI,WAAW,SAAS,QAAQ,CAAC,MAAM;YACvC,IAAI,cAAc;YAElB,MAAO,SAAS,QAAQ,CAAC,EAAE,SAAS,CAAE;gBACpC,MAAM,aAAa,SAAS,QAAQ,CAAC,SAAS;gBAE9C,MAAM,QAAQ,CAAA,GAAA,iJAAA,CAAA,WAAQ,AAAD,EAAE;gBAEvB,IAAI,WAAW,MAAM,GAAG;oBACtB,+CAA+C;oBAC/C,IAAI,MAAM,MAAM,GAAG,GAAG;wBACpB;oBACF;oBAEA,IAAI,CAAC,gJAAA,CAAA,YAAS,CAAC,IAAI,CAAC,QAAQ;wBAC1B,cAAc;oBAChB;gBACF,OAAO,IAAI,UAAU,KAAK;oBACxB,IAAI,WAAW,SAAS,QAAQ,CAAC,MAAM,GAAG,GAAG;wBAC3C;oBACF,OAAO;wBACL;oBACF;gBACF;YACF;YAEA,IAAI,CAAC,aAAa;gBAChB,8BAA8B;gBAC9B,OAAO,QAAQ,CAAC,MAAM,CAAC,OAAO;gBAE9B,sCAAsC;gBACtC,SAAS,QAAQ,CAAC,IAAI,CAAC;gBAEvB,mBAAmB;gBACnB,IAAI,SAAS,QAAQ,IAAI,MAAM,QAAQ,EAAE;oBACvC,SAAS,QAAQ,CAAC,GAAG,GAAG,MAAM,QAAQ,CAAC,GAAG;gBAC5C;gBAEA,6DAA6D;gBAC7D,OAAO;YACT;QACF;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 4652, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4658, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/parse-latin/lib/plugin/patch-position.js"],"sourcesContent":["/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('nlcst').Paragraph} Paragraph\n * @typedef {import('unist').Position} Position\n * @typedef {import('nlcst').Root} Root\n * @typedef {import('nlcst').Sentence} Sentence\n */\n\nimport {visitChildren} from 'unist-util-visit-children'\n\n// Patch the position on a parent node based on its first and last child.\nexport const patchPosition = visitChildren(\n  /**\n   * @type {import('unist-util-visit-children').Visitor<Paragraph | Root | Sentence>}\n   */\n  function (child, index, node) {\n    const siblings = node.children\n\n    if (\n      child.position &&\n      index < 1 &&\n      /* c8 ignore next */\n      (!node.position || !node.position.start)\n    ) {\n      patch(node)\n      node.position.start = child.position.start\n    }\n\n    if (\n      child.position &&\n      index === siblings.length - 1 &&\n      (!node.position || !node.position.end)\n    ) {\n      patch(node)\n      node.position.end = child.position.end\n    }\n  }\n)\n\n/**\n * @param {Node} node\n * @returns {asserts node is Node & {position: Position}}\n */\nfunction patch(node) {\n  if (!node.position) {\n    // @ts-expect-error: fine, we’ll fill it later.\n    node.position = {}\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;CAMC;;;AAED;;AAGO,MAAM,gBAAgB,CAAA,GAAA,8JAAA,CAAA,gBAAa,AAAD,EACvC;;GAEC,GACD,SAAU,KAAK,EAAE,KAAK,EAAE,IAAI;IAC1B,MAAM,WAAW,KAAK,QAAQ;IAE9B,IACE,MAAM,QAAQ,IACd,QAAQ,KACR,kBAAkB,GAClB,CAAC,CAAC,KAAK,QAAQ,IAAI,CAAC,KAAK,QAAQ,CAAC,KAAK,GACvC;QACA,MAAM;QACN,KAAK,QAAQ,CAAC,KAAK,GAAG,MAAM,QAAQ,CAAC,KAAK;IAC5C;IAEA,IACE,MAAM,QAAQ,IACd,UAAU,SAAS,MAAM,GAAG,KAC5B,CAAC,CAAC,KAAK,QAAQ,IAAI,CAAC,KAAK,QAAQ,CAAC,GAAG,GACrC;QACA,MAAM;QACN,KAAK,QAAQ,CAAC,GAAG,GAAG,MAAM,QAAQ,CAAC,GAAG;IACxC;AACF;AAGF;;;CAGC,GACD,SAAS,MAAM,IAAI;IACjB,IAAI,CAAC,KAAK,QAAQ,EAAE;QAClB,+CAA+C;QAC/C,KAAK,QAAQ,GAAG,CAAC;IACnB;AACF","ignoreList":[0]}},
    {"offset": {"line": 4691, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4697, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/parse-latin/lib/plugin/merge-non-word-sentences.js"],"sourcesContent":["/**\n * @typedef {import('nlcst').Paragraph} Paragraph\n */\n\nimport {modifyChildren} from 'unist-util-modify-children'\n\n// Merge a sentence into the following sentence, when the sentence does not\n// contain word tokens.\nexport const mergeNonWordSentences = modifyChildren(\n  /**\n   * @type {import('unist-util-modify-children').Modifier<Paragraph>}\n   */\n  function (child, index, parent) {\n    if ('children' in child) {\n      let position = -1\n\n      while (child.children[++position]) {\n        if (child.children[position].type === 'WordNode') {\n          return\n        }\n      }\n\n      const previous = parent.children[index - 1]\n\n      if (previous && 'children' in previous) {\n        previous.children.push(...child.children)\n\n        // Remove the child.\n        parent.children.splice(index, 1)\n\n        // Patch position.\n        if (previous.position && child.position) {\n          previous.position.end = child.position.end\n        }\n\n        // Next, iterate over the node *now* at the current position (which was the\n        // next node).\n        return index\n      }\n\n      const next = parent.children[index + 1]\n\n      if (next && 'children' in next) {\n        next.children.unshift(...child.children)\n\n        // Patch position.\n        if (next.position && child.position) {\n          next.position.start = child.position.start\n        }\n\n        // Remove the child.\n        parent.children.splice(index, 1)\n      }\n    }\n  }\n)\n"],"names":[],"mappings":"AAAA;;CAEC;;;AAED;;AAIO,MAAM,wBAAwB,CAAA,GAAA,+JAAA,CAAA,iBAAc,AAAD,EAChD;;GAEC,GACD,SAAU,KAAK,EAAE,KAAK,EAAE,MAAM;IAC5B,IAAI,cAAc,OAAO;QACvB,IAAI,WAAW,CAAC;QAEhB,MAAO,MAAM,QAAQ,CAAC,EAAE,SAAS,CAAE;YACjC,IAAI,MAAM,QAAQ,CAAC,SAAS,CAAC,IAAI,KAAK,YAAY;gBAChD;YACF;QACF;QAEA,MAAM,WAAW,OAAO,QAAQ,CAAC,QAAQ,EAAE;QAE3C,IAAI,YAAY,cAAc,UAAU;YACtC,SAAS,QAAQ,CAAC,IAAI,IAAI,MAAM,QAAQ;YAExC,oBAAoB;YACpB,OAAO,QAAQ,CAAC,MAAM,CAAC,OAAO;YAE9B,kBAAkB;YAClB,IAAI,SAAS,QAAQ,IAAI,MAAM,QAAQ,EAAE;gBACvC,SAAS,QAAQ,CAAC,GAAG,GAAG,MAAM,QAAQ,CAAC,GAAG;YAC5C;YAEA,2EAA2E;YAC3E,cAAc;YACd,OAAO;QACT;QAEA,MAAM,OAAO,OAAO,QAAQ,CAAC,QAAQ,EAAE;QAEvC,IAAI,QAAQ,cAAc,MAAM;YAC9B,KAAK,QAAQ,CAAC,OAAO,IAAI,MAAM,QAAQ;YAEvC,kBAAkB;YAClB,IAAI,KAAK,QAAQ,IAAI,MAAM,QAAQ,EAAE;gBACnC,KAAK,QAAQ,CAAC,KAAK,GAAG,MAAM,QAAQ,CAAC,KAAK;YAC5C;YAEA,oBAAoB;YACpB,OAAO,QAAQ,CAAC,MAAM,CAAC,OAAO;QAChC;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 4739, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4745, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/parse-latin/lib/plugin/merge-affix-symbol.js"],"sourcesContent":["/**\n * @typedef {import('nlcst').Paragraph} Paragraph\n */\n\nimport {toString} from 'nlcst-to-string'\nimport {modifyChildren} from 'unist-util-modify-children'\n// Closing or final punctuation, or terminal markers that should still be\n// included in the previous sentence, even though they follow the sentence’s\n// terminal marker.\nimport {affixSymbol} from '../expressions.js'\n\n// Move certain punctuation following a terminal marker (thus in the next\n// sentence) to the previous sentence.\nexport const mergeAffixSymbol = modifyChildren(\n  /**\n   * @type {import('unist-util-modify-children').Modifier<Paragraph>}\n   */\n  function (child, index, parent) {\n    if ('children' in child && child.children.length > 0 && index > 0) {\n      const previous = parent.children[index - 1]\n      const first = child.children[0]\n      const second = child.children[1]\n\n      if (\n        previous &&\n        previous.type === 'SentenceNode' &&\n        (first.type === 'SymbolNode' || first.type === 'PunctuationNode') &&\n        affixSymbol.test(toString(first))\n      ) {\n        child.children.shift() // Remove `first`.\n        previous.children.push(first)\n\n        // Update position.\n        if (first.position && previous.position) {\n          previous.position.end = first.position.end\n        }\n\n        if (second && second.position && child.position) {\n          child.position.start = second.position.start\n        }\n\n        // Next, iterate over the previous node again.\n        return index - 1\n      }\n    }\n  }\n)\n"],"names":[],"mappings":"AAAA;;CAEC;;;AAGD;AACA,yEAAyE;AACzE,4EAA4E;AAC5E,mBAAmB;AACnB;AALA;;;;AASO,MAAM,mBAAmB,CAAA,GAAA,+JAAA,CAAA,iBAAc,AAAD,EAC3C;;GAEC,GACD,SAAU,KAAK,EAAE,KAAK,EAAE,MAAM;IAC5B,IAAI,cAAc,SAAS,MAAM,QAAQ,CAAC,MAAM,GAAG,KAAK,QAAQ,GAAG;QACjE,MAAM,WAAW,OAAO,QAAQ,CAAC,QAAQ,EAAE;QAC3C,MAAM,QAAQ,MAAM,QAAQ,CAAC,EAAE;QAC/B,MAAM,SAAS,MAAM,QAAQ,CAAC,EAAE;QAEhC,IACE,YACA,SAAS,IAAI,KAAK,kBAClB,CAAC,MAAM,IAAI,KAAK,gBAAgB,MAAM,IAAI,KAAK,iBAAiB,KAChE,gJAAA,CAAA,cAAW,CAAC,IAAI,CAAC,CAAA,GAAA,iJAAA,CAAA,WAAQ,AAAD,EAAE,SAC1B;YACA,MAAM,QAAQ,CAAC,KAAK,GAAG,kBAAkB;;YACzC,SAAS,QAAQ,CAAC,IAAI,CAAC;YAEvB,mBAAmB;YACnB,IAAI,MAAM,QAAQ,IAAI,SAAS,QAAQ,EAAE;gBACvC,SAAS,QAAQ,CAAC,GAAG,GAAG,MAAM,QAAQ,CAAC,GAAG;YAC5C;YAEA,IAAI,UAAU,OAAO,QAAQ,IAAI,MAAM,QAAQ,EAAE;gBAC/C,MAAM,QAAQ,CAAC,KAAK,GAAG,OAAO,QAAQ,CAAC,KAAK;YAC9C;YAEA,8CAA8C;YAC9C,OAAO,QAAQ;QACjB;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 4782, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4788, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/parse-latin/lib/plugin/merge-initial-lower-case-letter-sentences.js"],"sourcesContent":["/**\n * @typedef {import('nlcst').Paragraph} Paragraph\n */\n\nimport {toString} from 'nlcst-to-string'\nimport {modifyChildren} from 'unist-util-modify-children'\n// Initial lowercase letter.\nimport {lowerInitial} from '../expressions.js'\n\n// Merge a sentence into its previous sentence, when the sentence starts with a\n// lower case letter.\nexport const mergeInitialLowerCaseLetterSentences = modifyChildren(\n  /**\n   * @type {import('unist-util-modify-children').Modifier<Paragraph>}\n   */\n  function (child, index, parent) {\n    if (child.type === 'SentenceNode' && index > 0) {\n      const previous = parent.children[index - 1]\n      const children = child.children\n\n      if (children.length > 0 && previous.type === 'SentenceNode') {\n        let position = -1\n\n        while (children[++position]) {\n          const node = children[position]\n\n          if (node.type === 'WordNode') {\n            if (!lowerInitial.test(toString(node))) {\n              return\n            }\n\n            previous.children.push(...children)\n\n            parent.children.splice(index, 1)\n\n            // Update position.\n            if (previous.position && child.position) {\n              previous.position.end = child.position.end\n            }\n\n            // Next, iterate over the node *now* at the current position.\n            return index\n          }\n\n          if (node.type === 'SymbolNode' || node.type === 'PunctuationNode') {\n            return\n          }\n        }\n      }\n    }\n  }\n)\n"],"names":[],"mappings":"AAAA;;CAEC;;;AAGD;AACA,4BAA4B;AAC5B;AAHA;;;;AAOO,MAAM,uCAAuC,CAAA,GAAA,+JAAA,CAAA,iBAAc,AAAD,EAC/D;;GAEC,GACD,SAAU,KAAK,EAAE,KAAK,EAAE,MAAM;IAC5B,IAAI,MAAM,IAAI,KAAK,kBAAkB,QAAQ,GAAG;QAC9C,MAAM,WAAW,OAAO,QAAQ,CAAC,QAAQ,EAAE;QAC3C,MAAM,WAAW,MAAM,QAAQ;QAE/B,IAAI,SAAS,MAAM,GAAG,KAAK,SAAS,IAAI,KAAK,gBAAgB;YAC3D,IAAI,WAAW,CAAC;YAEhB,MAAO,QAAQ,CAAC,EAAE,SAAS,CAAE;gBAC3B,MAAM,OAAO,QAAQ,CAAC,SAAS;gBAE/B,IAAI,KAAK,IAAI,KAAK,YAAY;oBAC5B,IAAI,CAAC,gJAAA,CAAA,eAAY,CAAC,IAAI,CAAC,CAAA,GAAA,iJAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ;wBACtC;oBACF;oBAEA,SAAS,QAAQ,CAAC,IAAI,IAAI;oBAE1B,OAAO,QAAQ,CAAC,MAAM,CAAC,OAAO;oBAE9B,mBAAmB;oBACnB,IAAI,SAAS,QAAQ,IAAI,MAAM,QAAQ,EAAE;wBACvC,SAAS,QAAQ,CAAC,GAAG,GAAG,MAAM,QAAQ,CAAC,GAAG;oBAC5C;oBAEA,6DAA6D;oBAC7D,OAAO;gBACT;gBAEA,IAAI,KAAK,IAAI,KAAK,gBAAgB,KAAK,IAAI,KAAK,mBAAmB;oBACjE;gBACF;YACF;QACF;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 4830, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4836, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/parse-latin/lib/plugin/merge-initial-digit-sentences.js"],"sourcesContent":["/**\n * @typedef {import('nlcst').Paragraph} Paragraph\n */\n\nimport {toString} from 'nlcst-to-string'\nimport {modifyChildren} from 'unist-util-modify-children'\nimport {digitStart} from '../expressions.js'\n\n// Merge a sentence into its previous sentence, when the sentence starts with a\n// lower case letter.\nexport const mergeInitialDigitSentences = modifyChildren(\n  /**\n   * @type {import('unist-util-modify-children').Modifier<Paragraph>}\n   */\n  function (child, index, parent) {\n    const previous = parent.children[index - 1]\n\n    if (\n      previous &&\n      previous.type === 'SentenceNode' &&\n      child.type === 'SentenceNode'\n    ) {\n      const head = child.children[0]\n\n      if (head && head.type === 'WordNode' && digitStart.test(toString(head))) {\n        previous.children.push(...child.children)\n        parent.children.splice(index, 1)\n\n        // Update position.\n        if (previous.position && child.position) {\n          previous.position.end = child.position.end\n        }\n\n        // Next, iterate over the node *now* at the current position.\n        return index\n      }\n    }\n  }\n)\n"],"names":[],"mappings":"AAAA;;CAEC;;;AAGD;AACA;AAFA;;;;AAMO,MAAM,6BAA6B,CAAA,GAAA,+JAAA,CAAA,iBAAc,AAAD,EACrD;;GAEC,GACD,SAAU,KAAK,EAAE,KAAK,EAAE,MAAM;IAC5B,MAAM,WAAW,OAAO,QAAQ,CAAC,QAAQ,EAAE;IAE3C,IACE,YACA,SAAS,IAAI,KAAK,kBAClB,MAAM,IAAI,KAAK,gBACf;QACA,MAAM,OAAO,MAAM,QAAQ,CAAC,EAAE;QAE9B,IAAI,QAAQ,KAAK,IAAI,KAAK,cAAc,gJAAA,CAAA,aAAU,CAAC,IAAI,CAAC,CAAA,GAAA,iJAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ;YACvE,SAAS,QAAQ,CAAC,IAAI,IAAI,MAAM,QAAQ;YACxC,OAAO,QAAQ,CAAC,MAAM,CAAC,OAAO;YAE9B,mBAAmB;YACnB,IAAI,SAAS,QAAQ,IAAI,MAAM,QAAQ,EAAE;gBACvC,SAAS,QAAQ,CAAC,GAAG,GAAG,MAAM,QAAQ,CAAC,GAAG;YAC5C;YAEA,6DAA6D;YAC7D,OAAO;QACT;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 4865, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4871, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/parse-latin/lib/plugin/merge-prefix-exceptions.js"],"sourcesContent":["/**\n * @typedef {import('nlcst').Paragraph} Paragraph\n */\n\nimport {toString} from 'nlcst-to-string'\nimport {modifyChildren} from 'unist-util-modify-children'\n\n// Full stop characters that should not be treated as terminal sentence markers:\n// A case-insensitive abbreviation.\nconst abbreviationPrefix = new RegExp(\n  '^(' +\n    '[0-9]{1,3}|' +\n    '[a-z]|' +\n    // Common Latin Abbreviations:\n    // Based on: <https://en.wikipedia.org/wiki/List_of_Latin_abbreviations>.\n    // Where only the abbreviations written without joining full stops,\n    // but with a final full stop, were extracted.\n    //\n    // circa, capitulus, confer, compare, centum weight, eadem, (et) alii,\n    // et cetera, floruit, foliis, ibidem, idem, nemine && contradicente,\n    // opere && citato, (per) cent, (per) procurationem, (pro) tempore,\n    // sic erat scriptum, (et) sequentia, statim, videlicet. */\n    'al|ca|cap|cca|cent|cf|cit|con|cp|cwt|ead|etc|ff|' +\n    'fl|ibid|id|nem|op|pro|seq|sic|stat|tem|viz' +\n    ')$'\n)\n\n// Merge a sentence into its next sentence, when the sentence ends with a\n// certain word.\nexport const mergePrefixExceptions = modifyChildren(\n  /**\n   * @type {import('unist-util-modify-children').Modifier<Paragraph>}\n   */\n  function (child, index, parent) {\n    if ('children' in child && child.children.length > 1) {\n      const period = child.children[child.children.length - 1]\n\n      if (\n        period &&\n        (period.type === 'PunctuationNode' || period.type === 'SymbolNode') &&\n        toString(period) === '.'\n      ) {\n        const node = child.children[child.children.length - 2]\n\n        if (\n          node &&\n          node.type === 'WordNode' &&\n          abbreviationPrefix.test(toString(node).toLowerCase())\n        ) {\n          // Merge period into abbreviation.\n          node.children.push(period)\n          child.children.pop()\n\n          // Update position.\n          if (period.position && node.position) {\n            node.position.end = period.position.end\n          }\n\n          // Merge sentences.\n          const next = parent.children[index + 1]\n\n          if (next && next.type === 'SentenceNode') {\n            child.children.push(...next.children)\n            parent.children.splice(index + 1, 1)\n\n            // Update position.\n            if (next.position && child.position) {\n              child.position.end = next.position.end\n            }\n\n            // Next, iterate over the current node again.\n            return index - 1\n          }\n        }\n      }\n    }\n  }\n)\n"],"names":[],"mappings":"AAAA;;CAEC;;;AAGD;AADA;;;AAGA,gFAAgF;AAChF,mCAAmC;AACnC,MAAM,qBAAqB,IAAI,OAC7B,OACE,gBACA,WACA,8BAA8B;AAC9B,yEAAyE;AACzE,mEAAmE;AACnE,8CAA8C;AAC9C,EAAE;AACF,sEAAsE;AACtE,qEAAqE;AACrE,mEAAmE;AACnE,2DAA2D;AAC3D,qDACA,+CACA;AAKG,MAAM,wBAAwB,CAAA,GAAA,+JAAA,CAAA,iBAAc,AAAD,EAChD;;GAEC,GACD,SAAU,KAAK,EAAE,KAAK,EAAE,MAAM;IAC5B,IAAI,cAAc,SAAS,MAAM,QAAQ,CAAC,MAAM,GAAG,GAAG;QACpD,MAAM,SAAS,MAAM,QAAQ,CAAC,MAAM,QAAQ,CAAC,MAAM,GAAG,EAAE;QAExD,IACE,UACA,CAAC,OAAO,IAAI,KAAK,qBAAqB,OAAO,IAAI,KAAK,YAAY,KAClE,CAAA,GAAA,iJAAA,CAAA,WAAQ,AAAD,EAAE,YAAY,KACrB;YACA,MAAM,OAAO,MAAM,QAAQ,CAAC,MAAM,QAAQ,CAAC,MAAM,GAAG,EAAE;YAEtD,IACE,QACA,KAAK,IAAI,KAAK,cACd,mBAAmB,IAAI,CAAC,CAAA,GAAA,iJAAA,CAAA,WAAQ,AAAD,EAAE,MAAM,WAAW,KAClD;gBACA,kCAAkC;gBAClC,KAAK,QAAQ,CAAC,IAAI,CAAC;gBACnB,MAAM,QAAQ,CAAC,GAAG;gBAElB,mBAAmB;gBACnB,IAAI,OAAO,QAAQ,IAAI,KAAK,QAAQ,EAAE;oBACpC,KAAK,QAAQ,CAAC,GAAG,GAAG,OAAO,QAAQ,CAAC,GAAG;gBACzC;gBAEA,mBAAmB;gBACnB,MAAM,OAAO,OAAO,QAAQ,CAAC,QAAQ,EAAE;gBAEvC,IAAI,QAAQ,KAAK,IAAI,KAAK,gBAAgB;oBACxC,MAAM,QAAQ,CAAC,IAAI,IAAI,KAAK,QAAQ;oBACpC,OAAO,QAAQ,CAAC,MAAM,CAAC,QAAQ,GAAG;oBAElC,mBAAmB;oBACnB,IAAI,KAAK,QAAQ,IAAI,MAAM,QAAQ,EAAE;wBACnC,MAAM,QAAQ,CAAC,GAAG,GAAG,KAAK,QAAQ,CAAC,GAAG;oBACxC;oBAEA,6CAA6C;oBAC7C,OAAO,QAAQ;gBACjB;YACF;QACF;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 4923, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4929, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/parse-latin/lib/plugin/merge-affix-exceptions.js"],"sourcesContent":["/**\n * @typedef {import('nlcst').Paragraph} Paragraph\n */\n\nimport {toString} from 'nlcst-to-string'\nimport {modifyChildren} from 'unist-util-modify-children'\n\n// Merge a sentence into its previous sentence, when the sentence starts with a\n// comma.\nexport const mergeAffixExceptions = modifyChildren(\n  /**\n   * @type {import('unist-util-modify-children').Modifier<Paragraph>}\n   */\n  function (child, index, parent) {\n    const previous = parent.children[index - 1]\n\n    if (\n      previous &&\n      'children' in previous &&\n      'children' in child &&\n      child.children.length > 0\n    ) {\n      let position = -1\n\n      while (child.children[++position]) {\n        const node = child.children[position]\n\n        if (node.type === 'WordNode') {\n          return\n        }\n\n        if (node.type === 'SymbolNode' || node.type === 'PunctuationNode') {\n          const value = toString(node)\n\n          if (value !== ',' && value !== ';') {\n            return\n          }\n\n          previous.children.push(...child.children)\n\n          // Update position.\n          if (previous.position && child.position) {\n            previous.position.end = child.position.end\n          }\n\n          parent.children.splice(index, 1)\n\n          // Next, iterate over the node *now* at the current position.\n          return index\n        }\n      }\n    }\n  }\n)\n"],"names":[],"mappings":"AAAA;;CAEC;;;AAGD;AADA;;;AAKO,MAAM,uBAAuB,CAAA,GAAA,+JAAA,CAAA,iBAAc,AAAD,EAC/C;;GAEC,GACD,SAAU,KAAK,EAAE,KAAK,EAAE,MAAM;IAC5B,MAAM,WAAW,OAAO,QAAQ,CAAC,QAAQ,EAAE;IAE3C,IACE,YACA,cAAc,YACd,cAAc,SACd,MAAM,QAAQ,CAAC,MAAM,GAAG,GACxB;QACA,IAAI,WAAW,CAAC;QAEhB,MAAO,MAAM,QAAQ,CAAC,EAAE,SAAS,CAAE;YACjC,MAAM,OAAO,MAAM,QAAQ,CAAC,SAAS;YAErC,IAAI,KAAK,IAAI,KAAK,YAAY;gBAC5B;YACF;YAEA,IAAI,KAAK,IAAI,KAAK,gBAAgB,KAAK,IAAI,KAAK,mBAAmB;gBACjE,MAAM,QAAQ,CAAA,GAAA,iJAAA,CAAA,WAAQ,AAAD,EAAE;gBAEvB,IAAI,UAAU,OAAO,UAAU,KAAK;oBAClC;gBACF;gBAEA,SAAS,QAAQ,CAAC,IAAI,IAAI,MAAM,QAAQ;gBAExC,mBAAmB;gBACnB,IAAI,SAAS,QAAQ,IAAI,MAAM,QAAQ,EAAE;oBACvC,SAAS,QAAQ,CAAC,GAAG,GAAG,MAAM,QAAQ,CAAC,GAAG;gBAC5C;gBAEA,OAAO,QAAQ,CAAC,MAAM,CAAC,OAAO;gBAE9B,6DAA6D;gBAC7D,OAAO;YACT;QACF;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 4966, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4972, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/parse-latin/lib/plugin/merge-remaining-full-stops.js"],"sourcesContent":["/**\n * @typedef {import('nlcst').Paragraph} Paragraph\n */\n\nimport {toString} from 'nlcst-to-string'\nimport {visitChildren} from 'unist-util-visit-children'\n// Full stop characters that should not be treated as terminal sentence markers:\n// A case-insensitive abbreviation.\nimport {terminalMarker} from '../expressions.js'\n\n// Merge non-terminal-marker full stops into the previous word (if available),\n// or the next word (if available).\nexport const mergeRemainingFullStops = visitChildren(\n  /**\n   * @type {import('unist-util-visit-children').Visitor<Paragraph>}\n   */\n  // eslint-disable-next-line complexity\n  function (child, _, _parent) {\n    if ('children' in child) {\n      let position = child.children.length\n      let hasFoundDelimiter = false\n\n      while (child.children[--position]) {\n        const grandchild = child.children[position]\n\n        if (\n          grandchild.type !== 'SymbolNode' &&\n          grandchild.type !== 'PunctuationNode'\n        ) {\n          // This is a sentence without terminal marker, so we 'fool' the code to\n          // make it think we have found one.\n          if (grandchild.type === 'WordNode') {\n            hasFoundDelimiter = true\n          }\n\n          continue\n        }\n\n        // Exit when this token is not a terminal marker.\n        if (!terminalMarker.test(toString(grandchild))) {\n          continue\n        }\n\n        // Ignore the first terminal marker found (starting at the end), as it\n        // should not be merged.\n        if (!hasFoundDelimiter) {\n          hasFoundDelimiter = true\n          continue\n        }\n\n        // Only merge a single full stop.\n        if (toString(grandchild) !== '.') {\n          continue\n        }\n\n        const previous = child.children[position - 1]\n        const next = child.children[position + 1]\n\n        if (previous && previous.type === 'WordNode') {\n          const nextNext = child.children[position + 2]\n\n          // Continue when the full stop is followed by a space and another full\n          // stop, such as: `{.} .`\n          if (\n            next &&\n            nextNext &&\n            next.type === 'WhiteSpaceNode' &&\n            toString(nextNext) === '.'\n          ) {\n            continue\n          }\n\n          // Remove `child` from parent.\n          child.children.splice(position, 1)\n\n          // Add the punctuation mark at the end of the previous node.\n          previous.children.push(grandchild)\n\n          // Update position.\n          if (grandchild.position && previous.position) {\n            previous.position.end = grandchild.position.end\n          }\n\n          position--\n        } else if (next && next.type === 'WordNode') {\n          // Remove `child` from parent.\n          child.children.splice(position, 1)\n\n          // Add the punctuation mark at the start of the next node.\n          next.children.unshift(grandchild)\n\n          if (grandchild.position && next.position) {\n            next.position.start = grandchild.position.start\n          }\n        }\n      }\n    }\n  }\n)\n"],"names":[],"mappings":"AAAA;;CAEC;;;AAGD;AACA,gFAAgF;AAChF,mCAAmC;AACnC;AAJA;;;;AAQO,MAAM,0BAA0B,CAAA,GAAA,8JAAA,CAAA,gBAAa,AAAD,EACjD;;GAEC,GACD,sCAAsC;AACtC,SAAU,KAAK,EAAE,CAAC,EAAE,OAAO;IACzB,IAAI,cAAc,OAAO;QACvB,IAAI,WAAW,MAAM,QAAQ,CAAC,MAAM;QACpC,IAAI,oBAAoB;QAExB,MAAO,MAAM,QAAQ,CAAC,EAAE,SAAS,CAAE;YACjC,MAAM,aAAa,MAAM,QAAQ,CAAC,SAAS;YAE3C,IACE,WAAW,IAAI,KAAK,gBACpB,WAAW,IAAI,KAAK,mBACpB;gBACA,uEAAuE;gBACvE,mCAAmC;gBACnC,IAAI,WAAW,IAAI,KAAK,YAAY;oBAClC,oBAAoB;gBACtB;gBAEA;YACF;YAEA,iDAAiD;YACjD,IAAI,CAAC,gJAAA,CAAA,iBAAc,CAAC,IAAI,CAAC,CAAA,GAAA,iJAAA,CAAA,WAAQ,AAAD,EAAE,cAAc;gBAC9C;YACF;YAEA,sEAAsE;YACtE,wBAAwB;YACxB,IAAI,CAAC,mBAAmB;gBACtB,oBAAoB;gBACpB;YACF;YAEA,iCAAiC;YACjC,IAAI,CAAA,GAAA,iJAAA,CAAA,WAAQ,AAAD,EAAE,gBAAgB,KAAK;gBAChC;YACF;YAEA,MAAM,WAAW,MAAM,QAAQ,CAAC,WAAW,EAAE;YAC7C,MAAM,OAAO,MAAM,QAAQ,CAAC,WAAW,EAAE;YAEzC,IAAI,YAAY,SAAS,IAAI,KAAK,YAAY;gBAC5C,MAAM,WAAW,MAAM,QAAQ,CAAC,WAAW,EAAE;gBAE7C,sEAAsE;gBACtE,yBAAyB;gBACzB,IACE,QACA,YACA,KAAK,IAAI,KAAK,oBACd,CAAA,GAAA,iJAAA,CAAA,WAAQ,AAAD,EAAE,cAAc,KACvB;oBACA;gBACF;gBAEA,8BAA8B;gBAC9B,MAAM,QAAQ,CAAC,MAAM,CAAC,UAAU;gBAEhC,4DAA4D;gBAC5D,SAAS,QAAQ,CAAC,IAAI,CAAC;gBAEvB,mBAAmB;gBACnB,IAAI,WAAW,QAAQ,IAAI,SAAS,QAAQ,EAAE;oBAC5C,SAAS,QAAQ,CAAC,GAAG,GAAG,WAAW,QAAQ,CAAC,GAAG;gBACjD;gBAEA;YACF,OAAO,IAAI,QAAQ,KAAK,IAAI,KAAK,YAAY;gBAC3C,8BAA8B;gBAC9B,MAAM,QAAQ,CAAC,MAAM,CAAC,UAAU;gBAEhC,0DAA0D;gBAC1D,KAAK,QAAQ,CAAC,OAAO,CAAC;gBAEtB,IAAI,WAAW,QAAQ,IAAI,KAAK,QAAQ,EAAE;oBACxC,KAAK,QAAQ,CAAC,KAAK,GAAG,WAAW,QAAQ,CAAC,KAAK;gBACjD;YACF;QACF;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 5046, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5052, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/parse-latin/lib/plugin/make-initial-white-space-siblings.js"],"sourcesContent":["/**\n * @typedef {import('nlcst').Paragraph} Paragraph\n * @typedef {import('nlcst').Root} Root\n */\n\nimport {visitChildren} from 'unist-util-visit-children'\n\n// Move white space starting a sentence up, so they are the siblings of\n// sentences.\nexport const makeInitialWhiteSpaceSiblings = visitChildren(\n  /**\n   * @type {import('unist-util-visit-children').Visitor<Paragraph | Root>}\n   */\n  function (child, index, parent) {\n    if ('children' in child && child.children) {\n      const head = child.children[0]\n      if (head && head.type === 'WhiteSpaceNode') {\n        child.children.shift()\n        parent.children.splice(index, 0, head)\n        const next = child.children[0]\n\n        if (next && next.position && child.position) {\n          child.position.start = next.position.start\n        }\n      }\n    }\n  }\n)\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AAED;;AAIO,MAAM,gCAAgC,CAAA,GAAA,8JAAA,CAAA,gBAAa,AAAD,EACvD;;GAEC,GACD,SAAU,KAAK,EAAE,KAAK,EAAE,MAAM;IAC5B,IAAI,cAAc,SAAS,MAAM,QAAQ,EAAE;QACzC,MAAM,OAAO,MAAM,QAAQ,CAAC,EAAE;QAC9B,IAAI,QAAQ,KAAK,IAAI,KAAK,kBAAkB;YAC1C,MAAM,QAAQ,CAAC,KAAK;YACpB,OAAO,QAAQ,CAAC,MAAM,CAAC,OAAO,GAAG;YACjC,MAAM,OAAO,MAAM,QAAQ,CAAC,EAAE;YAE9B,IAAI,QAAQ,KAAK,QAAQ,IAAI,MAAM,QAAQ,EAAE;gBAC3C,MAAM,QAAQ,CAAC,KAAK,GAAG,KAAK,QAAQ,CAAC,KAAK;YAC5C;QACF;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 5075, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5081, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/parse-latin/lib/plugin/make-final-white-space-siblings.js"],"sourcesContent":["/**\n * @typedef {import('nlcst').Paragraph} Paragraph\n * @typedef {import('nlcst').Root} Root\n */\n\nimport {modifyChildren} from 'unist-util-modify-children'\n\n// Move white space ending a paragraph up, so they are the siblings of\n// paragraphs.\nexport const makeFinalWhiteSpaceSiblings = modifyChildren(\n  /**\n   * @type {import('unist-util-modify-children').Modifier<Paragraph | Root>}\n   */\n\n  function (child, index, parent) {\n    if ('children' in child) {\n      const tail = child.children[child.children.length - 1]\n\n      if (tail && tail.type === 'WhiteSpaceNode') {\n        child.children.pop() // Remove `tail`.\n        parent.children.splice(index + 1, 0, tail)\n        const previous = child.children[child.children.length - 1]\n\n        if (previous && previous.position && child.position) {\n          child.position.end = previous.position.end\n        }\n\n        // Next, iterate over the current node again.\n        return index\n      }\n    }\n  }\n)\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AAED;;AAIO,MAAM,8BAA8B,CAAA,GAAA,+JAAA,CAAA,iBAAc,AAAD,EACtD;;GAEC,GAED,SAAU,KAAK,EAAE,KAAK,EAAE,MAAM;IAC5B,IAAI,cAAc,OAAO;QACvB,MAAM,OAAO,MAAM,QAAQ,CAAC,MAAM,QAAQ,CAAC,MAAM,GAAG,EAAE;QAEtD,IAAI,QAAQ,KAAK,IAAI,KAAK,kBAAkB;YAC1C,MAAM,QAAQ,CAAC,GAAG,GAAG,iBAAiB;;YACtC,OAAO,QAAQ,CAAC,MAAM,CAAC,QAAQ,GAAG,GAAG;YACrC,MAAM,WAAW,MAAM,QAAQ,CAAC,MAAM,QAAQ,CAAC,MAAM,GAAG,EAAE;YAE1D,IAAI,YAAY,SAAS,QAAQ,IAAI,MAAM,QAAQ,EAAE;gBACnD,MAAM,QAAQ,CAAC,GAAG,GAAG,SAAS,QAAQ,CAAC,GAAG;YAC5C;YAEA,6CAA6C;YAC7C,OAAO;QACT;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 5107, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5113, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/parse-latin/lib/plugin/break-implicit-sentences.js"],"sourcesContent":["/**\n * @typedef {import('nlcst').Paragraph} Paragraph\n * @typedef {import('nlcst').Sentence} Sentence\n */\n\nimport {toString} from 'nlcst-to-string'\nimport {modifyChildren} from 'unist-util-modify-children'\n\n// Break a sentence if a white space with more than one new-line is found.\nexport const breakImplicitSentences = modifyChildren(\n  /**\n   * @type {import('unist-util-modify-children').Modifier<Paragraph>}\n   */\n\n  function (child, index, parent) {\n    if (child.type !== 'SentenceNode') {\n      return\n    }\n\n    const children = child.children\n\n    // Ignore first and last child.\n    let position = 0\n\n    while (++position < children.length - 1) {\n      const node = children[position]\n\n      if (\n        node.type !== 'WhiteSpaceNode' ||\n        toString(node).split(/\\r\\n|\\r|\\n/).length < 3\n      ) {\n        continue\n      }\n\n      child.children = children.slice(0, position)\n\n      /** @type {Sentence} */\n      const insertion = {\n        type: 'SentenceNode',\n        children: children.slice(position + 1)\n      }\n\n      const tail = children[position - 1]\n      const head = children[position + 1]\n\n      parent.children.splice(index + 1, 0, node, insertion)\n\n      if (child.position && tail.position && head.position) {\n        const end = child.position.end\n\n        child.position.end = tail.position.end\n\n        insertion.position = {start: head.position.start, end}\n      }\n\n      return index + 1\n    }\n  }\n)\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AAGD;AADA;;;AAIO,MAAM,yBAAyB,CAAA,GAAA,+JAAA,CAAA,iBAAc,AAAD,EACjD;;GAEC,GAED,SAAU,KAAK,EAAE,KAAK,EAAE,MAAM;IAC5B,IAAI,MAAM,IAAI,KAAK,gBAAgB;QACjC;IACF;IAEA,MAAM,WAAW,MAAM,QAAQ;IAE/B,+BAA+B;IAC/B,IAAI,WAAW;IAEf,MAAO,EAAE,WAAW,SAAS,MAAM,GAAG,EAAG;QACvC,MAAM,OAAO,QAAQ,CAAC,SAAS;QAE/B,IACE,KAAK,IAAI,KAAK,oBACd,CAAA,GAAA,iJAAA,CAAA,WAAQ,AAAD,EAAE,MAAM,KAAK,CAAC,cAAc,MAAM,GAAG,GAC5C;YACA;QACF;QAEA,MAAM,QAAQ,GAAG,SAAS,KAAK,CAAC,GAAG;QAEnC,qBAAqB,GACrB,MAAM,YAAY;YAChB,MAAM;YACN,UAAU,SAAS,KAAK,CAAC,WAAW;QACtC;QAEA,MAAM,OAAO,QAAQ,CAAC,WAAW,EAAE;QACnC,MAAM,OAAO,QAAQ,CAAC,WAAW,EAAE;QAEnC,OAAO,QAAQ,CAAC,MAAM,CAAC,QAAQ,GAAG,GAAG,MAAM;QAE3C,IAAI,MAAM,QAAQ,IAAI,KAAK,QAAQ,IAAI,KAAK,QAAQ,EAAE;YACpD,MAAM,MAAM,MAAM,QAAQ,CAAC,GAAG;YAE9B,MAAM,QAAQ,CAAC,GAAG,GAAG,KAAK,QAAQ,CAAC,GAAG;YAEtC,UAAU,QAAQ,GAAG;gBAAC,OAAO,KAAK,QAAQ,CAAC,KAAK;gBAAE;YAAG;QACvD;QAEA,OAAO,QAAQ;IACjB;AACF","ignoreList":[0]}},
    {"offset": {"line": 5156, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5162, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/parse-latin/lib/plugin/remove-empty-nodes.js"],"sourcesContent":["/**\n * @typedef {import('nlcst').Paragraph} Paragraph\n * @typedef {import('nlcst').Root} Root\n */\n\nimport {modifyChildren} from 'unist-util-modify-children'\n\n// Remove empty children.\nexport const removeEmptyNodes = modifyChildren(\n  /**\n   * @type {import('unist-util-modify-children').Modifier<Paragraph | Root>}\n   */\n\n  function (child, index, parent) {\n    if ('children' in child && child.children.length === 0) {\n      parent.children.splice(index, 1)\n\n      // Next, iterate over the node *now* at the current position (which was the\n      // next node).\n      return index\n    }\n  }\n)\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AAED;;AAGO,MAAM,mBAAmB,CAAA,GAAA,+JAAA,CAAA,iBAAc,AAAD,EAC3C;;GAEC,GAED,SAAU,KAAK,EAAE,KAAK,EAAE,MAAM;IAC5B,IAAI,cAAc,SAAS,MAAM,QAAQ,CAAC,MAAM,KAAK,GAAG;QACtD,OAAO,QAAQ,CAAC,MAAM,CAAC,OAAO;QAE9B,2EAA2E;QAC3E,cAAc;QACd,OAAO;IACT;AACF","ignoreList":[0]}},
    {"offset": {"line": 5180, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5186, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/parse-latin/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('nlcst').Nodes} Nodes\n * @typedef {import('nlcst').Parents} Parents\n * @typedef {import('nlcst').Paragraph} Paragraph\n * @typedef {import('nlcst').Root} Root\n * @typedef {import('nlcst').RootContent} RootContent\n * @typedef {import('nlcst').Sentence} Sentence\n * @typedef {import('nlcst').SentenceContent} SentenceContent\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @template {Nodes} Node\n *   Node type.\n * @callback Plugin\n *   Transform a node.\n * @param {Node} node\n *   The node.\n * @returns {undefined | void}\n *   Nothing.\n */\n\nimport {toString} from 'nlcst-to-string'\nimport {mergeAffixExceptions} from './plugin/merge-affix-exceptions.js'\nimport {mergeAffixSymbol} from './plugin/merge-affix-symbol.js'\nimport {breakImplicitSentences} from './plugin/break-implicit-sentences.js'\nimport {makeFinalWhiteSpaceSiblings} from './plugin/make-final-white-space-siblings.js'\nimport {makeInitialWhiteSpaceSiblings} from './plugin/make-initial-white-space-siblings.js'\nimport {mergeFinalWordSymbol} from './plugin/merge-final-word-symbol.js'\nimport {mergeInitialDigitSentences} from './plugin/merge-initial-digit-sentences.js'\nimport {mergeInitialLowerCaseLetterSentences} from './plugin/merge-initial-lower-case-letter-sentences.js'\nimport {mergeInitialWordSymbol} from './plugin/merge-initial-word-symbol.js'\nimport {mergeInitialisms} from './plugin/merge-initialisms.js'\nimport {mergeInnerWordSymbol} from './plugin/merge-inner-word-symbol.js'\nimport {mergeInnerWordSlash} from './plugin/merge-inner-word-slash.js'\nimport {mergeNonWordSentences} from './plugin/merge-non-word-sentences.js'\nimport {mergePrefixExceptions} from './plugin/merge-prefix-exceptions.js'\nimport {mergeRemainingFullStops} from './plugin/merge-remaining-full-stops.js'\nimport {removeEmptyNodes} from './plugin/remove-empty-nodes.js'\nimport {patchPosition} from './plugin/patch-position.js'\nimport {\n  newLine,\n  punctuation,\n  surrogates,\n  terminalMarker,\n  whiteSpace,\n  word\n} from './expressions.js'\n\n// PARSE LATIN\n\n/**\n * Create a new parser.\n */\nexport class ParseLatin {\n  /**\n   * Create a new parser.\n   *\n   * This additionally supports `retext`-like call: where an instance is\n   * created for each file, and the file is given on construction.\n   *\n   * @param {string | null | undefined} [doc]\n   *   Value to parse (optional).\n   * @param {VFile | null | undefined} [file]\n   *   Corresponding file (optional).\n   */\n  constructor(doc, file) {\n    const value = file || doc\n\n    /** @type {string | undefined} */\n    this.doc = value ? String(value) : undefined\n\n    /** @type {Array<Plugin<Root>>} */\n    this.tokenizeRootPlugins = [...this.tokenizeRootPlugins]\n    /** @type {Array<Plugin<Paragraph>>} */\n    this.tokenizeParagraphPlugins = [...this.tokenizeParagraphPlugins]\n    /** @type {Array<Plugin<Sentence>>} */\n    this.tokenizeSentencePlugins = [...this.tokenizeSentencePlugins]\n  }\n\n  /**\n   * Turn natural language into a syntax tree.\n   *\n   * @param {string | null | undefined} [value]\n   *   Value to parse (optional).\n   * @returns {Root}\n   *   Tree.\n   */\n  parse(value) {\n    return this.tokenizeRoot(value || this.doc)\n  }\n\n  /**\n   * Parse as a root.\n   *\n   * @param {string | null | undefined} [value]\n   *   Value to parse (optional).\n   * @returns {Root}\n   *   Built tree.\n   */\n  tokenizeRoot(value) {\n    const paragraph = this.tokenizeParagraph(value)\n    /** @type {Root} */\n    const result = {\n      type: 'RootNode',\n      children: splitNode(paragraph, 'WhiteSpaceNode', newLine)\n    }\n\n    let index = -1\n    while (this.tokenizeRootPlugins[++index]) {\n      this.tokenizeRootPlugins[index](result)\n    }\n\n    return result\n  }\n\n  /**\n   * Parse as a paragraph.\n   *\n   * @param {string | null | undefined} [value]\n   *   Value to parse (optional).\n   * @returns {Paragraph}\n   *   Built tree.\n   */\n  tokenizeParagraph(value) {\n    const sentence = this.tokenizeSentence(value)\n    /** @type {Paragraph} */\n    const result = {\n      type: 'ParagraphNode',\n      children: splitNode(sentence, 'PunctuationNode', terminalMarker)\n    }\n\n    let index = -1\n    while (this.tokenizeParagraphPlugins[++index]) {\n      this.tokenizeParagraphPlugins[index](result)\n    }\n\n    return result\n  }\n\n  /**\n   * Parse as a sentence.\n   *\n   * @param {string | null | undefined} [value]\n   *   Value to parse (optional).\n   * @returns {Sentence}\n   *   Built tree.\n   */\n  tokenizeSentence(value) {\n    const children = this.tokenize(value)\n    /** @type {Sentence} */\n    const result = {type: 'SentenceNode', children}\n\n    let index = -1\n    while (this.tokenizeSentencePlugins[++index]) {\n      this.tokenizeSentencePlugins[index](result)\n    }\n\n    return result\n  }\n\n  /**\n   *  Transform a `value` into a list of nlcsts.\n   *\n   * @param {string | null | undefined} [value]\n   *   Value to parse (optional).\n   * @returns {Array<SentenceContent>}\n   *   Built sentence content.\n   */\n  tokenize(value) {\n    /** @type {Array<SentenceContent>} */\n    const children = []\n\n    if (!value) {\n      return children\n    }\n\n    const currentPoint = {line: 1, column: 1, offset: 0}\n    let from = 0\n    let index = 0\n    let start = {...currentPoint}\n    /** @type {SentenceContent['type'] | undefined} */\n    let previousType\n    /** @type {string | undefined} */\n    let previous\n\n    while (index < value.length) {\n      const current = value.charAt(index)\n      const currentType = whiteSpace.test(current)\n        ? 'WhiteSpaceNode'\n        : punctuation.test(current)\n        ? 'PunctuationNode'\n        : word.test(current)\n        ? 'WordNode'\n        : 'SymbolNode'\n\n      if (\n        from < index &&\n        previousType &&\n        currentType &&\n        !(\n          previousType === currentType &&\n          // Words or white space continue.\n          (previousType === 'WordNode' ||\n            previousType === 'WhiteSpaceNode' ||\n            // Same character of punctuation or symbol also continues.\n            current === previous ||\n            // Surrogates of  punctuation or symbol also continue.\n            surrogates.test(current))\n        )\n      ) {\n        // Flush the previous queue.\n        children.push(createNode(previousType, value.slice(from, index)))\n        from = index\n        start = {...currentPoint}\n      }\n\n      if (current === '\\r' || (current === '\\n' && previous !== '\\r')) {\n        currentPoint.line++\n        currentPoint.column = 1\n      } else if (current !== '\\n') {\n        currentPoint.column++\n      }\n\n      currentPoint.offset++\n      previousType = currentType\n      previous = current\n      index++\n    }\n\n    if (previousType && from < index) {\n      children.push(createNode(previousType, value.slice(from, index)))\n    }\n\n    return children\n\n    /**\n     * @param {SentenceContent['type']} type\n     *   Node type to build.\n     * @param {string} value\n     *   Value.\n     * @returns {SentenceContent}\n     *   Node.\n     */\n    function createNode(type, value) {\n      return type === 'WordNode'\n        ? {\n            type: 'WordNode',\n            children: [\n              {\n                type: 'TextNode',\n                value,\n                position: {start, end: {...currentPoint}}\n              }\n            ],\n            position: {start, end: {...currentPoint}}\n          }\n        : {type, value, position: {start, end: {...currentPoint}}}\n    }\n  }\n}\n\n/**\n * List of transforms handling a sentence.\n */\nParseLatin.prototype.tokenizeSentencePlugins = [\n  mergeInitialWordSymbol,\n  mergeFinalWordSymbol,\n  mergeInnerWordSymbol,\n  mergeInnerWordSlash,\n  mergeInitialisms,\n  patchPosition\n]\n\n/**\n * List of transforms handling a paragraph.\n */\nParseLatin.prototype.tokenizeParagraphPlugins = [\n  mergeNonWordSentences,\n  mergeAffixSymbol,\n  mergeInitialLowerCaseLetterSentences,\n  mergeInitialDigitSentences,\n  mergePrefixExceptions,\n  mergeAffixExceptions,\n  mergeRemainingFullStops,\n  makeInitialWhiteSpaceSiblings,\n  makeFinalWhiteSpaceSiblings,\n  breakImplicitSentences,\n  removeEmptyNodes,\n  patchPosition\n]\n\n/**\n * List of transforms handling a root.\n */\nParseLatin.prototype.tokenizeRootPlugins = [\n  makeInitialWhiteSpaceSiblings,\n  makeFinalWhiteSpaceSiblings,\n  removeEmptyNodes,\n  patchPosition\n]\n\n/**\n * A function that splits one node into several nodes.\n *\n * @template {Parents} Node\n *   Node type.\n * @param {Node} node\n *   Node to split.\n * @param {RegExp} expression\n *   Split on this regex.\n * @param {Node['children'][number]['type']} childType\n *   Split this node type.\n * @returns {Array<Node>}\n *   The given node, split into several nodes.\n */\nfunction splitNode(node, childType, expression) {\n  /** @type {Array<Node>} */\n  const result = []\n  let index = -1\n  let start = 0\n\n  while (++index < node.children.length) {\n    const token = node.children[index]\n\n    if (\n      index === node.children.length - 1 ||\n      (token.type === childType && expression.test(toString(token)))\n    ) {\n      /** @type {Node} */\n      // @ts-expect-error: fine\n      const parent = {\n        type: node.type,\n        children: node.children.slice(start, index + 1)\n      }\n\n      const first = node.children[start]\n      const last = token\n      if (first.position && last.position) {\n        parent.position = {\n          start: first.position.start,\n          end: last.position.end\n        }\n      }\n\n      result.push(parent)\n      start = index + 1\n    }\n  }\n\n  return result\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5504, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5510, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/array-iterate/lib/index.js"],"sourcesContent":["const own = {}.hasOwnProperty\n\n/**\n * Perform the specified action for each element in an array.\n * When `callbackFn` returns a `number`, moves to the element at that index\n * next.\n *\n * @param {unknown[]} values\n *   Values to iterate over.\n * @param {(this: unknown, value: unknown, index: number, array: unknown[]) => number | void} callbackFn\n *   Function called for each element.\n *   Can return the `index` to move to next.\n * @param {unknown} [thisArg]\n *   Optional object assigned as `this` in `callbackFn`.\n * @returns {void}\n */\nexport function arrayIterate(values, callbackFn, thisArg) {\n  let index = -1\n\n  if (!values) {\n    throw new Error('Iterate requires that |this| not be ' + values)\n  }\n\n  if (!own.call(values, 'length')) {\n    throw new Error('Iterate requires that |this| has a `length`')\n  }\n\n  if (typeof callbackFn !== 'function') {\n    throw new TypeError('`callback` must be a function')\n  }\n\n  // The length might change, so we do not cache it.\n  while (++index < values.length) {\n    // Skip missing values.\n    if (!(index in values)) {\n      continue\n    }\n\n    const result = callbackFn.call(thisArg, values[index], index, values)\n\n    // If `callback` returns a `number`, move `index` over to `number`.\n    if (typeof result === 'number') {\n      // Make sure that negative numbers do not break the loop.\n      if (result < 0) {\n        index = 0\n      }\n\n      index = result - 1\n    }\n  }\n}\n"],"names":[],"mappings":";;;AAAA,MAAM,MAAM,CAAC,EAAE,cAAc;AAgBtB,SAAS,aAAa,MAAM,EAAE,UAAU,EAAE,OAAO;IACtD,IAAI,QAAQ,CAAC;IAEb,IAAI,CAAC,QAAQ;QACX,MAAM,IAAI,MAAM,yCAAyC;IAC3D;IAEA,IAAI,CAAC,IAAI,IAAI,CAAC,QAAQ,WAAW;QAC/B,MAAM,IAAI,MAAM;IAClB;IAEA,IAAI,OAAO,eAAe,YAAY;QACpC,MAAM,IAAI,UAAU;IACtB;IAEA,kDAAkD;IAClD,MAAO,EAAE,QAAQ,OAAO,MAAM,CAAE;QAC9B,uBAAuB;QACvB,IAAI,CAAC,CAAC,SAAS,MAAM,GAAG;YACtB;QACF;QAEA,MAAM,SAAS,WAAW,IAAI,CAAC,SAAS,MAAM,CAAC,MAAM,EAAE,OAAO;QAE9D,mEAAmE;QACnE,IAAI,OAAO,WAAW,UAAU;YAC9B,yDAAyD;YACzD,IAAI,SAAS,GAAG;gBACd,QAAQ;YACV;YAEA,QAAQ,SAAS;QACnB;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 5542, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5548, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/unist-util-modify-children/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template {Parent} Kind\n *   Node type.\n * @callback Modifier\n *   Callback called for each `child` in `parent` later given to `modify`.\n * @param {Kind['children'][number]} child\n *   Child of `parent`.\n * @param {number} index\n *   Position of `child` in `parent`.\n * @param {Kind} parent\n *   Parent node.\n * @returns {number | undefined | void}\n *   Position to move to next (optional).\n */\n\n/**\n * @template {Parent} Kind\n *   Node type.\n * @callback Modify\n *   Modify children of `parent`.\n * @param {Kind} parent\n *   Parent node.\n * @returns {undefined}\n *   Nothing.\n */\n\nimport {arrayIterate} from 'array-iterate'\n\n/**\n * Wrap `modifier` to be called for each child in the nodes later given to\n * `modify`.\n *\n * @template {Parent} Kind\n *   Node type.\n * @param {Modifier<Kind>} modifier\n *   Callback called for each `child` in `parent` later given to `modify`.\n * @returns {Modify<Kind>}\n *   Modify children of `parent`.\n */\nexport function modifyChildren(modifier) {\n  return modify\n\n  /** @type {Modify<Kind>} */\n  function modify(parent) {\n    if (!parent || !parent.children) {\n      throw new Error('Missing children in `parent` for `modifier`')\n    }\n\n    arrayIterate(parent.children, iteratee, parent)\n  }\n\n  /**\n   * Pass the context as the third argument to `modifier`.\n   *\n   * @this {Kind}\n   * @param {Node} node\n   * @param {number} index\n   * @returns {number | undefined | void}\n   */\n  function iteratee(node, index) {\n    return modifier(node, index, this)\n  }\n}\n"],"names":[],"mappings":"AAAA;;;CAGC,GAED;;;;;;;;;;;;;CAaC,GAED;;;;;;;;;CASC;;;AAED;;AAaO,SAAS,eAAe,QAAQ;IACrC,OAAO;;IAEP,yBAAyB,GACzB,SAAS,OAAO,MAAM;QACpB,IAAI,CAAC,UAAU,CAAC,OAAO,QAAQ,EAAE;YAC/B,MAAM,IAAI,MAAM;QAClB;QAEA,CAAA,GAAA,4IAAA,CAAA,eAAY,AAAD,EAAE,OAAO,QAAQ,EAAE,UAAU;IAC1C;IAEA;;;;;;;GAOC,GACD,SAAS,SAAS,IAAI,EAAE,KAAK;QAC3B,OAAO,SAAS,MAAM,OAAO,IAAI;IACnC;AACF","ignoreList":[0]}},
    {"offset": {"line": 5598, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5604, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/nlcst-to-string/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('nlcst').Nodes} Nodes\n */\n\n/** @type {Readonly<Array<Nodes>>} */\nconst emptyNodes = []\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children, and\n * if the given value is an array, serialize the nodes in it.\n *\n * @param {Array<Nodes> | Nodes} value\n *   Node or list of nodes to serialize.\n * @returns {string}\n *   Result.\n */\nexport function toString(value) {\n  let index = -1\n\n  if (!value || (!Array.isArray(value) && !value.type)) {\n    throw new Error('Expected node, not `' + value + '`')\n  }\n\n  if ('value' in value) return value.value\n\n  const children = (Array.isArray(value) ? value : value.children) || emptyNodes\n\n  /** @type {Array<string>} */\n  const values = []\n\n  while (++index < children.length) {\n    values[index] = toString(children[index])\n  }\n\n  return values.join('')\n}\n"],"names":[],"mappings":"AAAA;;CAEC,GAED,mCAAmC;;;AACnC,MAAM,aAAa,EAAE;AAad,SAAS,SAAS,KAAK;IAC5B,IAAI,QAAQ,CAAC;IAEb,IAAI,CAAC,SAAU,CAAC,MAAM,OAAO,CAAC,UAAU,CAAC,MAAM,IAAI,EAAG;QACpD,MAAM,IAAI,MAAM,yBAAyB,QAAQ;IACnD;IAEA,IAAI,WAAW,OAAO,OAAO,MAAM,KAAK;IAExC,MAAM,WAAW,CAAC,MAAM,OAAO,CAAC,SAAS,QAAQ,MAAM,QAAQ,KAAK;IAEpE,0BAA0B,GAC1B,MAAM,SAAS,EAAE;IAEjB,MAAO,EAAE,QAAQ,SAAS,MAAM,CAAE;QAChC,MAAM,CAAC,MAAM,GAAG,SAAS,QAAQ,CAAC,MAAM;IAC1C;IAEA,OAAO,OAAO,IAAI,CAAC;AACrB","ignoreList":[0]}},
    {"offset": {"line": 5623, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5629, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/unist-util-visit-children/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template {Parent} Kind\n *   Node type.\n * @callback Visitor\n *   Callback called for each `child` in `parent` later given to `visit`.\n * @param {Kind['children'][number]} child\n *   Child of parent.\n * @param {number} index\n *   Position of `child` in parent.\n * @param {Kind} parent\n *   Parent node.\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Parent} Kind\n *   Node type.\n * @callback Visit\n *   Function to call the bound `visitor` for each child in `parent`.\n * @param {Kind} node\n *   Parent node.\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * Wrap `visitor` to be called for each child in the nodes later given to\n * `visit`.\n *\n * @template {Parent} Kind\n *   Node type.\n * @param {Visitor<Kind>} visitor\n *   Callback called for each `child` in `parent` later given to `visit`.\n * @returns {Visit<Kind>}\n *   Function to call the bound `visitor` for each child in `parent`.\n */\nexport function visitChildren(visitor) {\n  return visit\n\n  /** @type {Visit<Kind>} */\n  function visit(parent) {\n    const children = parent && parent.children\n    let index = -1\n\n    if (!children) {\n      throw new Error('Missing children in `parent` for `visit`')\n    }\n\n    while (++index in children) {\n      visitor(children[index], index, parent)\n    }\n  }\n}\n"],"names":[],"mappings":"AAAA;;CAEC,GAED;;;;;;;;;;;;;CAaC,GAED;;;;;;;;;CASC,GAED;;;;;;;;;;CAUC;;;AACM,SAAS,cAAc,OAAO;IACnC,OAAO;;IAEP,wBAAwB,GACxB,SAAS,MAAM,MAAM;QACnB,MAAM,WAAW,UAAU,OAAO,QAAQ;QAC1C,IAAI,QAAQ,CAAC;QAEb,IAAI,CAAC,UAAU;YACb,MAAM,IAAI,MAAM;QAClB;QAEA,MAAO,EAAE,SAAS,SAAU;YAC1B,QAAQ,QAAQ,CAAC,MAAM,EAAE,OAAO;QAClC;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 5680, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5686, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/retext-latin/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('nlcst').Root} Root\n */\n\nimport {ParseLatin} from 'parse-latin'\n\n/**\n * Add support for parsing Latin-script natural language.\n *\n * @returns {undefined}\n *   Nothing.\n */\nexport default function retextLatin() {\n  // @ts-expect-error -- TS in JSDoc doesn’t understand `this`.\n  // eslint-disable-next-line unicorn/no-this-assignment\n  const self = /** @type {import('unified').Processor<Root>} */ (this)\n\n  self.parser = parser\n\n  /** @type {import('unified').Parser<Root>} */\n  function parser(value) {\n    const parser = new ParseLatin()\n    add(parser.tokenizeParagraphPlugins, self.data('nlcstParagraphExtensions'))\n    add(parser.tokenizeRootPlugins, self.data('nlcstRootExtensions'))\n    add(parser.tokenizeSentencePlugins, self.data('nlcstSentenceExtensions'))\n    return parser.parse(value)\n  }\n}\n\n/**\n * @template T\n * @param {Array<T>} list\n * @param {Array<T> | undefined} values\n */\nfunction add(list, values) {\n  if (values) list.unshift(...values)\n}\n"],"names":[],"mappings":"AAAA;;CAEC;;;AAED;;AAQe,SAAS;IACtB,6DAA6D;IAC7D,sDAAsD;IACtD,MAAM,OAAyD,IAAI;IAEnE,KAAK,MAAM,GAAG;IAEd,2CAA2C,GAC3C,SAAS,OAAO,KAAK;QACnB,MAAM,SAAS,IAAI,0IAAA,CAAA,aAAU;QAC7B,IAAI,OAAO,wBAAwB,EAAE,KAAK,IAAI,CAAC;QAC/C,IAAI,OAAO,mBAAmB,EAAE,KAAK,IAAI,CAAC;QAC1C,IAAI,OAAO,uBAAuB,EAAE,KAAK,IAAI,CAAC;QAC9C,OAAO,OAAO,KAAK,CAAC;IACtB;AACF;AAEA;;;;CAIC,GACD,SAAS,IAAI,IAAI,EAAE,MAAM;IACvB,IAAI,QAAQ,KAAK,OAAO,IAAI;AAC9B","ignoreList":[0]}},
    {"offset": {"line": 5713, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5719, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/retext-stringify/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('nlcst').Root} Root\n */\n\nimport {toString} from 'nlcst-to-string'\n\n/**\n * Add support for serializing natural language.\n *\n * @returns {undefined}\n *   Nothing.\n */\nexport default function retextStringify() {\n  // eslint-disable-next-line unicorn/no-this-assignment\n  const self =\n    /** @type {import('unified').Processor<undefined, undefined, undefined, Root, string>} */ (\n      // @ts-expect-error -- TS in JSDoc doesn’t understand `this`.\n      this\n    )\n\n  self.compiler = compiler\n}\n\n/** @type {import('unified').Compiler<Root, string>} */\nfunction compiler(tree) {\n  return toString(tree)\n}\n"],"names":[],"mappings":"AAAA;;CAEC;;;AAED;;AAQe,SAAS;IACtB,sDAAsD;IACtD,MAAM,OAEF,6DAA6D;IAC7D,IAAI;IAGR,KAAK,QAAQ,GAAG;AAClB;AAEA,qDAAqD,GACrD,SAAS,SAAS,IAAI;IACpB,OAAO,CAAA,GAAA,iJAAA,CAAA,WAAQ,AAAD,EAAE;AAClB","ignoreList":[0]}},
    {"offset": {"line": 5735, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5741, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/retext/index.js"],"sourcesContent":["// Note: types exposed from `index.d.ts`.\nimport {unified} from 'unified'\nimport retextLatin from 'retext-latin'\nimport retextStringify from 'retext-stringify'\n\nexport const retext = unified().use(retextLatin).use(retextStringify).freeze()\n"],"names":[],"mappings":"AAAA,yCAAyC;;;;AACzC;AACA;AACA;;;;AAEO,MAAM,SAAS,CAAA,GAAA,mIAAA,CAAA,UAAO,AAAD,IAAI,GAAG,CAAC,2IAAA,CAAA,UAAW,EAAE,GAAG,CAAC,+IAAA,CAAA,UAAe,EAAE,MAAM","ignoreList":[0]}},
    {"offset": {"line": 5752, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5758, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/retext-smartypants/lib/index.js"],"sourcesContent":["/**\n * @import {Parents, Punctuation, Root, SentenceContent, Symbol} from 'nlcst'\n */\n\n/**\n * @callback Method\n *   Transform.\n * @param {State} state\n *   Info passed around.\n * @param {Punctuation | Symbol} node\n *   Node.\n * @param {number} index\n *   Position of `node` in `parent`.\n * @param {Parents} parent\n *   Parent of `node`.\n * @returns {boolean | undefined | void}\n *   Whether to remove the node (`true`); or not (otherwise).\n *\n * @typedef Options\n *   Configuration.\n * @property {'all' | boolean | null | undefined} [backticks=true]\n *   Transform backticks (default: `true`); when `true`, turns double\n *   backticks into an opening double quote and double straight single quotes\n *   into a closing double quote; when `'all'`, does that and turns single\n *   backticks into an opening single quote and a straight single quotes into\n *   a closing single smart quote; `quotes: false` must be used with\n *   `backticks: 'all'`.\n * @property {QuoteCharacterMap | null | undefined} [closingQuotes]\n *   Closing quotes to use (default: `{double: '”', single: '’'}`).\n * @property {'inverted' | 'oldschool' | boolean | null | undefined} [dashes=true]\n *   Transform dashes (default: `true`);\n *   when `true`, turns two dashes into an em dash character;\n *   when `'oldschool'`, turns three dashes into an em dash and two into an en\n *   dash;\n *   when `'inverted'`, turns three dashes into an en dash and two into an em\n *   dash.\n * @property {'spaced' | 'unspaced' | boolean | null | undefined} [ellipses=true]\n *   Transform triple dots (default: `true`).\n *   when `'spaced'`, turns triple dots with spaces into ellipses;\n *   when `'unspaced'`, turns triple dots without spaces into ellipses;\n *   when `true`, turns triple dots with or without spaces into ellipses.\n * @property {QuoteCharacterMap | null | undefined} [openingQuotes]\n *   Opening quotes to use (default: `{double: '“', single: '‘'}`).\n * @property {boolean | null | undefined} [quotes=true]\n *   Transform straight quotes into smart quotes (default: `true`).\n *\n * @typedef State\n *   Info passed around.\n * @property {Quotes} close\n *   Closing quotes.\n * @property {Quotes} open\n *   Opening quotes.\n *\n * @typedef QuoteCharacterMap\n *   Quote characters.\n * @property {string} double\n *   Character to use for double quotes.\n * @property {string} single\n *   Character to use for single quotes.\n *\n * @typedef {[string, string]} Quotes\n *   Quotes.\n */\n\nimport {visit} from 'unist-util-visit'\nimport {toString} from 'nlcst-to-string'\n\n/** @type {Quotes} */\nconst defaultClosingQuotes = ['”', '’']\n/** @type {Quotes} */\nconst defaultOpeningQuotes = ['“', '‘']\n\n/** @type {Readonly<Options>} */\nconst emptyOptions = {}\n\n/**\n * Replace straight punctuation marks with curly ones.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport default function retextSmartypants(options) {\n  const settings = options || emptyOptions\n  /** @type {Array<Method>} */\n  const methods = []\n\n  if (settings.quotes !== false) {\n    methods.push(quotesDefault)\n  }\n\n  if (settings.ellipses === 'spaced') {\n    methods.push(ellipsesSpaced)\n  } else if (settings.ellipses === 'unspaced') {\n    methods.push(ellipsesUnspaced)\n  } else if (settings.ellipses !== false) {\n    methods.push(ellipsesDefault)\n  }\n\n  if (settings.backticks === 'all') {\n    if (settings.quotes !== false) {\n      throw new Error(\"Cannot accept `backticks: 'all'` with `quotes: true`\")\n    }\n\n    methods.push(backticksAll)\n  } else if (settings.backticks !== false) {\n    methods.push(backticksDefault)\n  }\n\n  if (settings.dashes === 'inverted') {\n    methods.push(dashesInverted)\n  } else if (settings.dashes === 'oldschool') {\n    methods.push(dashesOldschool)\n  } else if (settings.dashes !== false) {\n    methods.push(dashesDefault)\n  }\n\n  /** @type {State} */\n  const state = {\n    close: settings.closingQuotes\n      ? [settings.closingQuotes.double, settings.closingQuotes.single]\n      : defaultClosingQuotes,\n    open: settings.openingQuotes\n      ? [settings.openingQuotes.double, settings.openingQuotes.single]\n      : defaultOpeningQuotes\n  }\n\n  /**\n   * Transform.\n   *\n   * @param {Root} tree\n   *   Tree.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  return function (tree) {\n    visit(tree, function (node, position, parent) {\n      let index = -1\n\n      if (\n        parent &&\n        position !== undefined &&\n        (node.type === 'PunctuationNode' || node.type === 'SymbolNode')\n      ) {\n        while (++index < methods.length) {\n          const result = methods[index](state, node, position, parent)\n          if (result === true) {\n            console.log('drop', node)\n            parent.children.splice(position, 1)\n            return position\n          }\n        }\n      }\n    })\n  }\n}\n\n/**\n * Transform single and double backticks and single quotes into smart quotes.\n *\n * @type {Method}\n */\nfunction backticksAll(state, node, index, parent) {\n  backticksDefault(state, node, index, parent)\n\n  if (node.value === '`') {\n    node.value = '‘'\n  } else if (node.value === \"'\") {\n    node.value = '’'\n  }\n}\n\n/**\n * Transform double backticks and single quotes into smart quotes.\n *\n * @type {Method}\n */\nfunction backticksDefault(_, node) {\n  if (node.value === '``') {\n    node.value = '“'\n  } else if (node.value === \"''\") {\n    node.value = '”'\n  }\n}\n\n/**\n * Transform two dashes into an em dash.\n *\n * @type {Method}\n */\nfunction dashesDefault(_, node) {\n  if (node.value === '--') {\n    node.value = '—'\n  }\n}\n\n/**\n * Transform three dashes into an en dash, and two into an em dash.\n *\n * @type {Method}\n */\nfunction dashesInverted(_, node, index, parent) {\n  const next = parent.children[index + 1]\n\n  if (\n    node.value === '—' &&\n    next &&\n    next.type === 'PunctuationNode' &&\n    next.value === '-'\n  ) {\n    next.value = '–'\n    return true\n  }\n\n  if (node.value === '---') {\n    node.value = '–'\n  } else if (node.value === '--') {\n    node.value = '—'\n  }\n}\n\n/**\n * Transform three dashes into an em dash, and two into an en dash.\n *\n * @type {Method}\n */\nfunction dashesOldschool(_, node, index, parent) {\n  const next = parent.children[index + 1]\n\n  if (\n    node.value === '–' &&\n    next &&\n    next.type === 'PunctuationNode' &&\n    next.value === '-'\n  ) {\n    next.value = '—'\n    return true\n  }\n\n  if (node.value === '---') {\n    node.value = '—'\n  } else if (node.value === '--') {\n    node.value = '–'\n  }\n}\n\n/**\n * Transform multiple dots into unicode ellipses.\n *\n * @type {Method}\n */\nfunction ellipsesDefault(_, node, index, parent) {\n  ellipsesSpaced(_, node, index, parent)\n  ellipsesUnspaced(_, node, index, parent)\n}\n\n/**\n * Transform multiple dots with spaces into unicode ellipses.\n *\n * @type {Method}\n */\nfunction ellipsesSpaced(_, node, index, parent) {\n  const value = node.value\n  const siblings = parent.children\n\n  if (!/^\\.+$/.test(value)) {\n    return\n  }\n\n  // Search for dot-nodes with whitespace between.\n  /** @type {Array<SentenceContent>} */\n  const nodes = []\n  let position = index\n  let count = 1\n\n  // It’s possible that the node is merged with an adjacent word-node.  In that\n  // code, we cannot transform it because there’s no reference to the\n  // grandparent.\n  while (--position > 0) {\n    let sibling = siblings[position]\n\n    if (sibling.type !== 'WhiteSpaceNode') {\n      break\n    }\n\n    const queue = sibling\n    sibling = siblings[--position]\n\n    if (\n      sibling &&\n      (sibling.type === 'PunctuationNode' || sibling.type === 'SymbolNode') &&\n      /^\\.+$/.test(sibling.value)\n    ) {\n      nodes.push(queue, sibling)\n\n      count++\n\n      continue\n    }\n\n    break\n  }\n\n  if (count < 3) {\n    return\n  }\n\n  siblings.splice(index - nodes.length, nodes.length)\n\n  node.value = '…'\n}\n\n/**\n * Transform multiple dots without spaces into unicode ellipses.\n *\n * @type {Method}\n */\nfunction ellipsesUnspaced(_, node) {\n  // Simple node with three dots and without whitespace.\n  if (/^\\.{3,}$/.test(node.value)) {\n    node.value = '…'\n  }\n}\n\n/**\n * Transform straight single- and double quotes into smart quotes.\n *\n * @type {Method}\n */\n// eslint-disable-next-line complexity\nfunction quotesDefault(state, node, index, parent) {\n  const siblings = parent.children\n  const value = node.value\n\n  if (value !== '\"' && value !== \"'\") {\n    return\n  }\n\n  const quoteIndex = value === '\"' ? 0 : 1\n  const previous = siblings[index - 1]\n  const next = siblings[index + 1]\n  const nextNext = siblings[index + 2]\n  const nextValue = next ? toString(next) : ''\n\n  if (\n    next &&\n    (next.type === 'PunctuationNode' || next.type === 'SymbolNode') &&\n    (!nextNext || nextNext.type !== 'WordNode')\n  ) {\n    // Special case if the very first character is a quote followed by\n    // punctuation at a non-word-break. Close the quotes by brute force.\n    node.value = state.close[quoteIndex]\n  } else if (\n    next &&\n    (next.type === 'PunctuationNode' || next.type === 'SymbolNode') &&\n    (nextValue === '\"' || nextValue === \"'\") &&\n    nextNext &&\n    nextNext.type === 'WordNode'\n  ) {\n    // Special case for double sets of quotes:\n    // `He said, \"'Quoted' words in a larger quote.\"`\n    node.value = state.open[quoteIndex]\n    next.value = state.open[nextValue === '\"' ? 0 : 1]\n  } else if (next && /^\\d\\ds$/.test(nextValue)) {\n    // Special case for decade abbreviations: `the '80s`\n    node.value = state.close[quoteIndex]\n  } else if (\n    previous &&\n    (previous.type === 'WhiteSpaceNode' ||\n      previous.type === 'PunctuationNode' ||\n      previous.type === 'SymbolNode') &&\n    next &&\n    next.type === 'WordNode'\n  ) {\n    // Get most opening single quotes.\n    node.value = state.open[quoteIndex]\n  } else if (\n    previous &&\n    previous.type !== 'WhiteSpaceNode' &&\n    previous.type !== 'SymbolNode' &&\n    previous.type !== 'PunctuationNode'\n  ) {\n    // Closing quotes.\n    node.value = state.close[quoteIndex]\n  } else if (\n    !next ||\n    next.type === 'WhiteSpaceNode' ||\n    (value === \"'\" && nextValue === 's')\n  ) {\n    node.value = state.close[quoteIndex]\n  } else {\n    node.value = state.open[quoteIndex]\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6054, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6060, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/remark-smartypants/dist/plugin.js"],"sourcesContent":["import { retext } from \"retext\";\nimport { visit } from \"unist-util-visit\";\nimport smartypants from \"retext-smartypants\";\nconst VISITED_NODES = new Set([\"text\", \"inlineCode\", \"paragraph\"]);\nconst IGNORED_HTML_ELEMENTS = new Set([\"style\", \"script\"]);\nconst check = (node, index, parent) => {\n    return (parent &&\n        (parent.type !== \"mdxJsxTextElement\" ||\n            (\"name\" in parent &&\n                typeof parent.name === \"string\" &&\n                !IGNORED_HTML_ELEMENTS.has(parent.name))) &&\n        VISITED_NODES.has(node.type) &&\n        (isLiteral(node) || isParagraph(node)));\n};\n/**\n * remark plugin to implement SmartyPants.\n */\nconst remarkSmartypants = (options) => {\n    const processor = retext().use(smartypants, {\n        ...options,\n        // Do not replace ellipses, dashes, backticks because they change string\n        // length, and we couldn't guarantee right splice of text in second visit of\n        // tree\n        ellipses: false,\n        dashes: false,\n        backticks: false,\n    });\n    const processor2 = retext().use(smartypants, {\n        ...options,\n        // Do not replace quotes because they are already replaced in the first\n        // processor\n        quotes: false,\n    });\n    return (tree) => {\n        let allText = \"\";\n        let startIndex = 0;\n        const nodes = [];\n        visit(tree, check, (node) => {\n            if (isLiteral(node)) {\n                allText +=\n                    node.type === \"text\" ? node.value : \"A\".repeat(node.value.length);\n            }\n            else if (isParagraph(node)) {\n                // Inject a \"fake\" space because otherwise, when concatenated below,\n                // smartypants will fail to recognize opening quotes at the start of\n                // paragraphs\n                allText += \" \";\n            }\n            nodes.push(node);\n        });\n        // Concat all text into one string, to properly replace quotes around links\n        // and bold text\n        allText = processor.processSync(allText).toString();\n        for (const node of nodes) {\n            if (isLiteral(node)) {\n                const endIndex = startIndex + node.value.length;\n                if (node.type === \"text\") {\n                    const processedText = allText.slice(startIndex, endIndex);\n                    node.value = processor2.processSync(processedText).toString();\n                }\n                startIndex = endIndex;\n            }\n            else if (isParagraph(node)) {\n                // Skip over the space we added above\n                startIndex += 1;\n            }\n        }\n    };\n};\nfunction isLiteral(node) {\n    return \"value\" in node && typeof node.value === \"string\";\n}\nfunction isParagraph(node) {\n    return node.type === \"paragraph\";\n}\nexport default remarkSmartypants;\n"],"names":[],"mappings":";;;AAAA;AAEA;AADA;;;;AAEA,MAAM,gBAAgB,IAAI,IAAI;IAAC;IAAQ;IAAc;CAAY;AACjE,MAAM,wBAAwB,IAAI,IAAI;IAAC;IAAS;CAAS;AACzD,MAAM,QAAQ,CAAC,MAAM,OAAO;IACxB,OAAQ,UACJ,CAAC,OAAO,IAAI,KAAK,uBACZ,UAAU,UACP,OAAO,OAAO,IAAI,KAAK,YACvB,CAAC,sBAAsB,GAAG,CAAC,OAAO,IAAI,CAAE,KAChD,cAAc,GAAG,CAAC,KAAK,IAAI,KAC3B,CAAC,UAAU,SAAS,YAAY,KAAK;AAC7C;AACA;;CAEC,GACD,MAAM,oBAAoB,CAAC;IACvB,MAAM,YAAY,CAAA,GAAA,2HAAA,CAAA,SAAM,AAAD,IAAI,GAAG,CAAC,iJAAA,CAAA,UAAW,EAAE;QACxC,GAAG,OAAO;QACV,wEAAwE;QACxE,4EAA4E;QAC5E,OAAO;QACP,UAAU;QACV,QAAQ;QACR,WAAW;IACf;IACA,MAAM,aAAa,CAAA,GAAA,2HAAA,CAAA,SAAM,AAAD,IAAI,GAAG,CAAC,iJAAA,CAAA,UAAW,EAAE;QACzC,GAAG,OAAO;QACV,uEAAuE;QACvE,YAAY;QACZ,QAAQ;IACZ;IACA,OAAO,CAAC;QACJ,IAAI,UAAU;QACd,IAAI,aAAa;QACjB,MAAM,QAAQ,EAAE;QAChB,CAAA,GAAA,kKAAA,CAAA,QAAK,AAAD,EAAE,MAAM,OAAO,CAAC;YAChB,IAAI,UAAU,OAAO;gBACjB,WACI,KAAK,IAAI,KAAK,SAAS,KAAK,KAAK,GAAG,IAAI,MAAM,CAAC,KAAK,KAAK,CAAC,MAAM;YACxE,OACK,IAAI,YAAY,OAAO;gBACxB,oEAAoE;gBACpE,oEAAoE;gBACpE,aAAa;gBACb,WAAW;YACf;YACA,MAAM,IAAI,CAAC;QACf;QACA,2EAA2E;QAC3E,gBAAgB;QAChB,UAAU,UAAU,WAAW,CAAC,SAAS,QAAQ;QACjD,KAAK,MAAM,QAAQ,MAAO;YACtB,IAAI,UAAU,OAAO;gBACjB,MAAM,WAAW,aAAa,KAAK,KAAK,CAAC,MAAM;gBAC/C,IAAI,KAAK,IAAI,KAAK,QAAQ;oBACtB,MAAM,gBAAgB,QAAQ,KAAK,CAAC,YAAY;oBAChD,KAAK,KAAK,GAAG,WAAW,WAAW,CAAC,eAAe,QAAQ;gBAC/D;gBACA,aAAa;YACjB,OACK,IAAI,YAAY,OAAO;gBACxB,qCAAqC;gBACrC,cAAc;YAClB;QACJ;IACJ;AACJ;AACA,SAAS,UAAU,IAAI;IACnB,OAAO,WAAW,QAAQ,OAAO,KAAK,KAAK,KAAK;AACpD;AACA,SAAS,YAAY,IAAI;IACrB,OAAO,KAAK,IAAI,KAAK;AACzB;uCACe","ignoreList":[0]}},
    {"offset": {"line": 6139, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6145, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-util-symbol/lib/constants.js"],"sourcesContent":["/**\n * This module is compiled away!\n *\n * Parsing markdown comes with a couple of constants, such as minimum or maximum\n * sizes of certain sequences.\n * Additionally, there are a couple symbols used inside micromark.\n * These are all defined here, but compiled away by scripts.\n */\nexport const constants = /** @type {const} */ ({\n  attentionSideAfter: 2, // Symbol to mark an attention sequence as after content: `a*`\n  attentionSideBefore: 1, // Symbol to mark an attention sequence as before content: `*a`\n  atxHeadingOpeningFenceSizeMax: 6, // 6 number signs is fine, 7 isn’t.\n  autolinkDomainSizeMax: 63, // 63 characters is fine, 64 is too many.\n  autolinkSchemeSizeMax: 32, // 32 characters is fine, 33 is too many.\n  cdataOpeningString: 'CDATA[', // And preceded by `<![`.\n  characterGroupPunctuation: 2, // Symbol used to indicate a character is punctuation\n  characterGroupWhitespace: 1, // Symbol used to indicate a character is whitespace\n  characterReferenceDecimalSizeMax: 7, // `&#9999999;`.\n  characterReferenceHexadecimalSizeMax: 6, // `&#xff9999;`.\n  characterReferenceNamedSizeMax: 31, // `&CounterClockwiseContourIntegral;`.\n  codeFencedSequenceSizeMin: 3, // At least 3 ticks or tildes are needed.\n  contentTypeContent: 'content',\n  contentTypeDocument: 'document',\n  contentTypeFlow: 'flow',\n  contentTypeString: 'string',\n  contentTypeText: 'text',\n  hardBreakPrefixSizeMin: 2, // At least 2 trailing spaces are needed.\n  htmlBasic: 6, // Symbol for `<div`\n  htmlCdata: 5, // Symbol for `<![CDATA[]]>`\n  htmlComment: 2, // Symbol for `<!---->`\n  htmlComplete: 7, // Symbol for `<x>`\n  htmlDeclaration: 4, // Symbol for `<!doctype>`\n  htmlInstruction: 3, // Symbol for `<?php?>`\n  htmlRawSizeMax: 8, // Length of `textarea`.\n  htmlRaw: 1, // Symbol for `<script>`\n  linkResourceDestinationBalanceMax: 32, // See: <https://spec.commonmark.org/0.30/#link-destination>, <https://github.com/remarkjs/react-markdown/issues/658#issuecomment-984345577>\n  linkReferenceSizeMax: 999, // See: <https://spec.commonmark.org/0.30/#link-label>\n  listItemValueSizeMax: 10, // See: <https://spec.commonmark.org/0.30/#ordered-list-marker>\n  numericBaseDecimal: 10,\n  numericBaseHexadecimal: 0x10,\n  tabSize: 4, // Tabs have a hard-coded size of 4, per CommonMark.\n  thematicBreakMarkerCountMin: 3, // At least 3 asterisks, dashes, or underscores are needed.\n  v8MaxSafeChunkSize: 10_000 // V8 (and potentially others) have problems injecting giant arrays into other arrays, hence we operate in chunks.\n})\n"],"names":[],"mappings":"AAAA;;;;;;;CAOC;;;AACM,MAAM,YAAkC;IAC7C,oBAAoB;IACpB,qBAAqB;IACrB,+BAA+B;IAC/B,uBAAuB;IACvB,uBAAuB;IACvB,oBAAoB;IACpB,2BAA2B;IAC3B,0BAA0B;IAC1B,kCAAkC;IAClC,sCAAsC;IACtC,gCAAgC;IAChC,2BAA2B;IAC3B,oBAAoB;IACpB,qBAAqB;IACrB,iBAAiB;IACjB,mBAAmB;IACnB,iBAAiB;IACjB,wBAAwB;IACxB,WAAW;IACX,WAAW;IACX,aAAa;IACb,cAAc;IACd,iBAAiB;IACjB,iBAAiB;IACjB,gBAAgB;IAChB,SAAS;IACT,mCAAmC;IACnC,sBAAsB;IACtB,sBAAsB;IACtB,oBAAoB;IACpB,wBAAwB;IACxB,SAAS;IACT,6BAA6B;IAC7B,oBAAoB,OAAO,kHAAkH;AAC/I","ignoreList":[0]}},
    {"offset": {"line": 6191, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6197, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-util-symbol/lib/types.js"],"sourcesContent":["/**\n * This module is compiled away!\n *\n * Here is the list of all types of tokens exposed by micromark, with a short\n * explanation of what they include and where they are found.\n * In picking names, generally, the rule is to be as explicit as possible\n * instead of reusing names.\n * For example, there is a `definitionDestination` and a `resourceDestination`,\n * instead of one shared name.\n */\n\n// Note: when changing the next record, you must also change `TokenTypeMap`\n// in `micromark-util-types/index.d.ts`.\nexport const types = /** @type {const} */ ({\n  // Generic type for data, such as in a title, a destination, etc.\n  data: 'data',\n\n  // Generic type for syntactic whitespace (tabs, virtual spaces, spaces).\n  // Such as, between a fenced code fence and an info string.\n  whitespace: 'whitespace',\n\n  // Generic type for line endings (line feed, carriage return, carriage return +\n  // line feed).\n  lineEnding: 'lineEnding',\n\n  // A line ending, but ending a blank line.\n  lineEndingBlank: 'lineEndingBlank',\n\n  // Generic type for whitespace (tabs, virtual spaces, spaces) at the start of a\n  // line.\n  linePrefix: 'linePrefix',\n\n  // Generic type for whitespace (tabs, virtual spaces, spaces) at the end of a\n  // line.\n  lineSuffix: 'lineSuffix',\n\n  // Whole ATX heading:\n  //\n  // ```markdown\n  // #\n  // ## Alpha\n  // ### Bravo ###\n  // ```\n  //\n  // Includes `atxHeadingSequence`, `whitespace`, `atxHeadingText`.\n  atxHeading: 'atxHeading',\n\n  // Sequence of number signs in an ATX heading (`###`).\n  atxHeadingSequence: 'atxHeadingSequence',\n\n  // Content in an ATX heading (`alpha`).\n  // Includes text.\n  atxHeadingText: 'atxHeadingText',\n\n  // Whole autolink (`<https://example.com>` or `<admin@example.com>`)\n  // Includes `autolinkMarker` and `autolinkProtocol` or `autolinkEmail`.\n  autolink: 'autolink',\n\n  // Email autolink w/o markers (`admin@example.com`)\n  autolinkEmail: 'autolinkEmail',\n\n  // Marker around an `autolinkProtocol` or `autolinkEmail` (`<` or `>`).\n  autolinkMarker: 'autolinkMarker',\n\n  // Protocol autolink w/o markers (`https://example.com`)\n  autolinkProtocol: 'autolinkProtocol',\n\n  // A whole character escape (`\\-`).\n  // Includes `escapeMarker` and `characterEscapeValue`.\n  characterEscape: 'characterEscape',\n\n  // The escaped character (`-`).\n  characterEscapeValue: 'characterEscapeValue',\n\n  // A whole character reference (`&amp;`, `&#8800;`, or `&#x1D306;`).\n  // Includes `characterReferenceMarker`, an optional\n  // `characterReferenceMarkerNumeric`, in which case an optional\n  // `characterReferenceMarkerHexadecimal`, and a `characterReferenceValue`.\n  characterReference: 'characterReference',\n\n  // The start or end marker (`&` or `;`).\n  characterReferenceMarker: 'characterReferenceMarker',\n\n  // Mark reference as numeric (`#`).\n  characterReferenceMarkerNumeric: 'characterReferenceMarkerNumeric',\n\n  // Mark reference as numeric (`x` or `X`).\n  characterReferenceMarkerHexadecimal: 'characterReferenceMarkerHexadecimal',\n\n  // Value of character reference w/o markers (`amp`, `8800`, or `1D306`).\n  characterReferenceValue: 'characterReferenceValue',\n\n  // Whole fenced code:\n  //\n  // ````markdown\n  // ```js\n  // alert(1)\n  // ```\n  // ````\n  codeFenced: 'codeFenced',\n\n  // A fenced code fence, including whitespace, sequence, info, and meta\n  // (` ```js `).\n  codeFencedFence: 'codeFencedFence',\n\n  // Sequence of grave accent or tilde characters (` ``` `) in a fence.\n  codeFencedFenceSequence: 'codeFencedFenceSequence',\n\n  // Info word (`js`) in a fence.\n  // Includes string.\n  codeFencedFenceInfo: 'codeFencedFenceInfo',\n\n  // Meta words (`highlight=\"1\"`) in a fence.\n  // Includes string.\n  codeFencedFenceMeta: 'codeFencedFenceMeta',\n\n  // A line of code.\n  codeFlowValue: 'codeFlowValue',\n\n  // Whole indented code:\n  //\n  // ```markdown\n  //     alert(1)\n  // ```\n  //\n  // Includes `lineEnding`, `linePrefix`, and `codeFlowValue`.\n  codeIndented: 'codeIndented',\n\n  // A text code (``` `alpha` ```).\n  // Includes `codeTextSequence`, `codeTextData`, `lineEnding`, and can include\n  // `codeTextPadding`.\n  codeText: 'codeText',\n\n  codeTextData: 'codeTextData',\n\n  // A space or line ending right after or before a tick.\n  codeTextPadding: 'codeTextPadding',\n\n  // A text code fence (` `` `).\n  codeTextSequence: 'codeTextSequence',\n\n  // Whole content:\n  //\n  // ```markdown\n  // [a]: b\n  // c\n  // =\n  // d\n  // ```\n  //\n  // Includes `paragraph` and `definition`.\n  content: 'content',\n  // Whole definition:\n  //\n  // ```markdown\n  // [micromark]: https://github.com/micromark/micromark\n  // ```\n  //\n  // Includes `definitionLabel`, `definitionMarker`, `whitespace`,\n  // `definitionDestination`, and optionally `lineEnding` and `definitionTitle`.\n  definition: 'definition',\n\n  // Destination of a definition (`https://github.com/micromark/micromark` or\n  // `<https://github.com/micromark/micromark>`).\n  // Includes `definitionDestinationLiteral` or `definitionDestinationRaw`.\n  definitionDestination: 'definitionDestination',\n\n  // Enclosed destination of a definition\n  // (`<https://github.com/micromark/micromark>`).\n  // Includes `definitionDestinationLiteralMarker` and optionally\n  // `definitionDestinationString`.\n  definitionDestinationLiteral: 'definitionDestinationLiteral',\n\n  // Markers of an enclosed definition destination (`<` or `>`).\n  definitionDestinationLiteralMarker: 'definitionDestinationLiteralMarker',\n\n  // Unenclosed destination of a definition\n  // (`https://github.com/micromark/micromark`).\n  // Includes `definitionDestinationString`.\n  definitionDestinationRaw: 'definitionDestinationRaw',\n\n  // Text in an destination (`https://github.com/micromark/micromark`).\n  // Includes string.\n  definitionDestinationString: 'definitionDestinationString',\n\n  // Label of a definition (`[micromark]`).\n  // Includes `definitionLabelMarker` and `definitionLabelString`.\n  definitionLabel: 'definitionLabel',\n\n  // Markers of a definition label (`[` or `]`).\n  definitionLabelMarker: 'definitionLabelMarker',\n\n  // Value of a definition label (`micromark`).\n  // Includes string.\n  definitionLabelString: 'definitionLabelString',\n\n  // Marker between a label and a destination (`:`).\n  definitionMarker: 'definitionMarker',\n\n  // Title of a definition (`\"x\"`, `'y'`, or `(z)`).\n  // Includes `definitionTitleMarker` and optionally `definitionTitleString`.\n  definitionTitle: 'definitionTitle',\n\n  // Marker around a title of a definition (`\"`, `'`, `(`, or `)`).\n  definitionTitleMarker: 'definitionTitleMarker',\n\n  // Data without markers in a title (`z`).\n  // Includes string.\n  definitionTitleString: 'definitionTitleString',\n\n  // Emphasis (`*alpha*`).\n  // Includes `emphasisSequence` and `emphasisText`.\n  emphasis: 'emphasis',\n\n  // Sequence of emphasis markers (`*` or `_`).\n  emphasisSequence: 'emphasisSequence',\n\n  // Emphasis text (`alpha`).\n  // Includes text.\n  emphasisText: 'emphasisText',\n\n  // The character escape marker (`\\`).\n  escapeMarker: 'escapeMarker',\n\n  // A hard break created with a backslash (`\\\\n`).\n  // Note: does not include the line ending.\n  hardBreakEscape: 'hardBreakEscape',\n\n  // A hard break created with trailing spaces (`  \\n`).\n  // Does not include the line ending.\n  hardBreakTrailing: 'hardBreakTrailing',\n\n  // Flow HTML:\n  //\n  // ```markdown\n  // <div\n  // ```\n  //\n  // Inlcudes `lineEnding`, `htmlFlowData`.\n  htmlFlow: 'htmlFlow',\n\n  htmlFlowData: 'htmlFlowData',\n\n  // HTML in text (the tag in `a <i> b`).\n  // Includes `lineEnding`, `htmlTextData`.\n  htmlText: 'htmlText',\n\n  htmlTextData: 'htmlTextData',\n\n  // Whole image (`![alpha](bravo)`, `![alpha][bravo]`, `![alpha][]`, or\n  // `![alpha]`).\n  // Includes `label` and an optional `resource` or `reference`.\n  image: 'image',\n\n  // Whole link label (`[*alpha*]`).\n  // Includes `labelLink` or `labelImage`, `labelText`, and `labelEnd`.\n  label: 'label',\n\n  // Text in an label (`*alpha*`).\n  // Includes text.\n  labelText: 'labelText',\n\n  // Start a link label (`[`).\n  // Includes a `labelMarker`.\n  labelLink: 'labelLink',\n\n  // Start an image label (`![`).\n  // Includes `labelImageMarker` and `labelMarker`.\n  labelImage: 'labelImage',\n\n  // Marker of a label (`[` or `]`).\n  labelMarker: 'labelMarker',\n\n  // Marker to start an image (`!`).\n  labelImageMarker: 'labelImageMarker',\n\n  // End a label (`]`).\n  // Includes `labelMarker`.\n  labelEnd: 'labelEnd',\n\n  // Whole link (`[alpha](bravo)`, `[alpha][bravo]`, `[alpha][]`, or `[alpha]`).\n  // Includes `label` and an optional `resource` or `reference`.\n  link: 'link',\n\n  // Whole paragraph:\n  //\n  // ```markdown\n  // alpha\n  // bravo.\n  // ```\n  //\n  // Includes text.\n  paragraph: 'paragraph',\n\n  // A reference (`[alpha]` or `[]`).\n  // Includes `referenceMarker` and an optional `referenceString`.\n  reference: 'reference',\n\n  // A reference marker (`[` or `]`).\n  referenceMarker: 'referenceMarker',\n\n  // Reference text (`alpha`).\n  // Includes string.\n  referenceString: 'referenceString',\n\n  // A resource (`(https://example.com \"alpha\")`).\n  // Includes `resourceMarker`, an optional `resourceDestination` with an optional\n  // `whitespace` and `resourceTitle`.\n  resource: 'resource',\n\n  // A resource destination (`https://example.com`).\n  // Includes `resourceDestinationLiteral` or `resourceDestinationRaw`.\n  resourceDestination: 'resourceDestination',\n\n  // A literal resource destination (`<https://example.com>`).\n  // Includes `resourceDestinationLiteralMarker` and optionally\n  // `resourceDestinationString`.\n  resourceDestinationLiteral: 'resourceDestinationLiteral',\n\n  // A resource destination marker (`<` or `>`).\n  resourceDestinationLiteralMarker: 'resourceDestinationLiteralMarker',\n\n  // A raw resource destination (`https://example.com`).\n  // Includes `resourceDestinationString`.\n  resourceDestinationRaw: 'resourceDestinationRaw',\n\n  // Resource destination text (`https://example.com`).\n  // Includes string.\n  resourceDestinationString: 'resourceDestinationString',\n\n  // A resource marker (`(` or `)`).\n  resourceMarker: 'resourceMarker',\n\n  // A resource title (`\"alpha\"`, `'alpha'`, or `(alpha)`).\n  // Includes `resourceTitleMarker` and optionally `resourceTitleString`.\n  resourceTitle: 'resourceTitle',\n\n  // A resource title marker (`\"`, `'`, `(`, or `)`).\n  resourceTitleMarker: 'resourceTitleMarker',\n\n  // Resource destination title (`alpha`).\n  // Includes string.\n  resourceTitleString: 'resourceTitleString',\n\n  // Whole setext heading:\n  //\n  // ```markdown\n  // alpha\n  // bravo\n  // =====\n  // ```\n  //\n  // Includes `setextHeadingText`, `lineEnding`, `linePrefix`, and\n  // `setextHeadingLine`.\n  setextHeading: 'setextHeading',\n\n  // Content in a setext heading (`alpha\\nbravo`).\n  // Includes text.\n  setextHeadingText: 'setextHeadingText',\n\n  // Underline in a setext heading, including whitespace suffix (`==`).\n  // Includes `setextHeadingLineSequence`.\n  setextHeadingLine: 'setextHeadingLine',\n\n  // Sequence of equals or dash characters in underline in a setext heading (`-`).\n  setextHeadingLineSequence: 'setextHeadingLineSequence',\n\n  // Strong (`**alpha**`).\n  // Includes `strongSequence` and `strongText`.\n  strong: 'strong',\n\n  // Sequence of strong markers (`**` or `__`).\n  strongSequence: 'strongSequence',\n\n  // Strong text (`alpha`).\n  // Includes text.\n  strongText: 'strongText',\n\n  // Whole thematic break:\n  //\n  // ```markdown\n  // * * *\n  // ```\n  //\n  // Includes `thematicBreakSequence` and `whitespace`.\n  thematicBreak: 'thematicBreak',\n\n  // A sequence of one or more thematic break markers (`***`).\n  thematicBreakSequence: 'thematicBreakSequence',\n\n  // Whole block quote:\n  //\n  // ```markdown\n  // > a\n  // >\n  // > b\n  // ```\n  //\n  // Includes `blockQuotePrefix` and flow.\n  blockQuote: 'blockQuote',\n  // The `>` or `> ` of a block quote.\n  blockQuotePrefix: 'blockQuotePrefix',\n  // The `>` of a block quote prefix.\n  blockQuoteMarker: 'blockQuoteMarker',\n  // The optional ` ` of a block quote prefix.\n  blockQuotePrefixWhitespace: 'blockQuotePrefixWhitespace',\n\n  // Whole ordered list:\n  //\n  // ```markdown\n  // 1. a\n  //    b\n  // ```\n  //\n  // Includes `listItemPrefix`, flow, and optionally  `listItemIndent` on further\n  // lines.\n  listOrdered: 'listOrdered',\n\n  // Whole unordered list:\n  //\n  // ```markdown\n  // - a\n  //   b\n  // ```\n  //\n  // Includes `listItemPrefix`, flow, and optionally  `listItemIndent` on further\n  // lines.\n  listUnordered: 'listUnordered',\n\n  // The indent of further list item lines.\n  listItemIndent: 'listItemIndent',\n\n  // A marker, as in, `*`, `+`, `-`, `.`, or `)`.\n  listItemMarker: 'listItemMarker',\n\n  // The thing that starts a list item, such as `1. `.\n  // Includes `listItemValue` if ordered, `listItemMarker`, and\n  // `listItemPrefixWhitespace` (unless followed by a line ending).\n  listItemPrefix: 'listItemPrefix',\n\n  // The whitespace after a marker.\n  listItemPrefixWhitespace: 'listItemPrefixWhitespace',\n\n  // The numerical value of an ordered item.\n  listItemValue: 'listItemValue',\n\n  // Internal types used for subtokenizers, compiled away\n  chunkDocument: 'chunkDocument',\n  chunkContent: 'chunkContent',\n  chunkFlow: 'chunkFlow',\n  chunkText: 'chunkText',\n  chunkString: 'chunkString'\n})\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6557, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6563, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-util-symbol/lib/codes.js"],"sourcesContent":["/**\n * Character codes.\n *\n * This module is compiled away!\n *\n * micromark works based on character codes.\n * This module contains constants for the ASCII block and the replacement\n * character.\n * A couple of them are handled in a special way, such as the line endings\n * (CR, LF, and CR+LF, commonly known as end-of-line: EOLs), the tab (horizontal\n * tab) and its expansion based on what column it’s at (virtual space),\n * and the end-of-file (eof) character.\n * As values are preprocessed before handling them, the actual characters LF,\n * CR, HT, and NUL (which is present as the replacement character), are\n * guaranteed to not exist.\n *\n * Unicode basic latin block.\n */\nexport const codes = /** @type {const} */ ({\n  carriageReturn: -5,\n  lineFeed: -4,\n  carriageReturnLineFeed: -3,\n  horizontalTab: -2,\n  virtualSpace: -1,\n  eof: null,\n  nul: 0,\n  soh: 1,\n  stx: 2,\n  etx: 3,\n  eot: 4,\n  enq: 5,\n  ack: 6,\n  bel: 7,\n  bs: 8,\n  ht: 9, // `\\t`\n  lf: 10, // `\\n`\n  vt: 11, // `\\v`\n  ff: 12, // `\\f`\n  cr: 13, // `\\r`\n  so: 14,\n  si: 15,\n  dle: 16,\n  dc1: 17,\n  dc2: 18,\n  dc3: 19,\n  dc4: 20,\n  nak: 21,\n  syn: 22,\n  etb: 23,\n  can: 24,\n  em: 25,\n  sub: 26,\n  esc: 27,\n  fs: 28,\n  gs: 29,\n  rs: 30,\n  us: 31,\n  space: 32,\n  exclamationMark: 33, // `!`\n  quotationMark: 34, // `\"`\n  numberSign: 35, // `#`\n  dollarSign: 36, // `$`\n  percentSign: 37, // `%`\n  ampersand: 38, // `&`\n  apostrophe: 39, // `'`\n  leftParenthesis: 40, // `(`\n  rightParenthesis: 41, // `)`\n  asterisk: 42, // `*`\n  plusSign: 43, // `+`\n  comma: 44, // `,`\n  dash: 45, // `-`\n  dot: 46, // `.`\n  slash: 47, // `/`\n  digit0: 48, // `0`\n  digit1: 49, // `1`\n  digit2: 50, // `2`\n  digit3: 51, // `3`\n  digit4: 52, // `4`\n  digit5: 53, // `5`\n  digit6: 54, // `6`\n  digit7: 55, // `7`\n  digit8: 56, // `8`\n  digit9: 57, // `9`\n  colon: 58, // `:`\n  semicolon: 59, // `;`\n  lessThan: 60, // `<`\n  equalsTo: 61, // `=`\n  greaterThan: 62, // `>`\n  questionMark: 63, // `?`\n  atSign: 64, // `@`\n  uppercaseA: 65, // `A`\n  uppercaseB: 66, // `B`\n  uppercaseC: 67, // `C`\n  uppercaseD: 68, // `D`\n  uppercaseE: 69, // `E`\n  uppercaseF: 70, // `F`\n  uppercaseG: 71, // `G`\n  uppercaseH: 72, // `H`\n  uppercaseI: 73, // `I`\n  uppercaseJ: 74, // `J`\n  uppercaseK: 75, // `K`\n  uppercaseL: 76, // `L`\n  uppercaseM: 77, // `M`\n  uppercaseN: 78, // `N`\n  uppercaseO: 79, // `O`\n  uppercaseP: 80, // `P`\n  uppercaseQ: 81, // `Q`\n  uppercaseR: 82, // `R`\n  uppercaseS: 83, // `S`\n  uppercaseT: 84, // `T`\n  uppercaseU: 85, // `U`\n  uppercaseV: 86, // `V`\n  uppercaseW: 87, // `W`\n  uppercaseX: 88, // `X`\n  uppercaseY: 89, // `Y`\n  uppercaseZ: 90, // `Z`\n  leftSquareBracket: 91, // `[`\n  backslash: 92, // `\\`\n  rightSquareBracket: 93, // `]`\n  caret: 94, // `^`\n  underscore: 95, // `_`\n  graveAccent: 96, // `` ` ``\n  lowercaseA: 97, // `a`\n  lowercaseB: 98, // `b`\n  lowercaseC: 99, // `c`\n  lowercaseD: 100, // `d`\n  lowercaseE: 101, // `e`\n  lowercaseF: 102, // `f`\n  lowercaseG: 103, // `g`\n  lowercaseH: 104, // `h`\n  lowercaseI: 105, // `i`\n  lowercaseJ: 106, // `j`\n  lowercaseK: 107, // `k`\n  lowercaseL: 108, // `l`\n  lowercaseM: 109, // `m`\n  lowercaseN: 110, // `n`\n  lowercaseO: 111, // `o`\n  lowercaseP: 112, // `p`\n  lowercaseQ: 113, // `q`\n  lowercaseR: 114, // `r`\n  lowercaseS: 115, // `s`\n  lowercaseT: 116, // `t`\n  lowercaseU: 117, // `u`\n  lowercaseV: 118, // `v`\n  lowercaseW: 119, // `w`\n  lowercaseX: 120, // `x`\n  lowercaseY: 121, // `y`\n  lowercaseZ: 122, // `z`\n  leftCurlyBrace: 123, // `{`\n  verticalBar: 124, // `|`\n  rightCurlyBrace: 125, // `}`\n  tilde: 126, // `~`\n  del: 127,\n  // Unicode Specials block.\n  byteOrderMarker: 65_279,\n  // Unicode Specials block.\n  replacementCharacter: 65_533 // `�`\n})\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;CAiBC;;;AACM,MAAM,QAA8B;IACzC,gBAAgB,CAAC;IACjB,UAAU,CAAC;IACX,wBAAwB,CAAC;IACzB,eAAe,CAAC;IAChB,cAAc,CAAC;IACf,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,IAAI;IACJ,KAAK;IACL,KAAK;IACL,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,OAAO;IACP,iBAAiB;IACjB,eAAe;IACf,YAAY;IACZ,YAAY;IACZ,aAAa;IACb,WAAW;IACX,YAAY;IACZ,iBAAiB;IACjB,kBAAkB;IAClB,UAAU;IACV,UAAU;IACV,OAAO;IACP,MAAM;IACN,KAAK;IACL,OAAO;IACP,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,OAAO;IACP,WAAW;IACX,UAAU;IACV,UAAU;IACV,aAAa;IACb,cAAc;IACd,QAAQ;IACR,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,mBAAmB;IACnB,WAAW;IACX,oBAAoB;IACpB,OAAO;IACP,YAAY;IACZ,aAAa;IACb,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,gBAAgB;IAChB,aAAa;IACb,iBAAiB;IACjB,OAAO;IACP,KAAK;IACL,0BAA0B;IAC1B,iBAAiB;IACjB,0BAA0B;IAC1B,sBAAsB,OAAO,MAAM;AACrC","ignoreList":[0]}},
    {"offset": {"line": 6723, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6729, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-util-symbol/lib/values.js"],"sourcesContent":["/**\n * This module is compiled away!\n *\n * While micromark works based on character codes, this module includes the\n * string versions of ’em.\n * The C0 block, except for LF, CR, HT, and w/ the replacement character added,\n * are available here.\n */\nexport const values = /** @type {const} */ ({\n  ht: '\\t',\n  lf: '\\n',\n  cr: '\\r',\n  space: ' ',\n  exclamationMark: '!',\n  quotationMark: '\"',\n  numberSign: '#',\n  dollarSign: '$',\n  percentSign: '%',\n  ampersand: '&',\n  apostrophe: \"'\",\n  leftParenthesis: '(',\n  rightParenthesis: ')',\n  asterisk: '*',\n  plusSign: '+',\n  comma: ',',\n  dash: '-',\n  dot: '.',\n  slash: '/',\n  digit0: '0',\n  digit1: '1',\n  digit2: '2',\n  digit3: '3',\n  digit4: '4',\n  digit5: '5',\n  digit6: '6',\n  digit7: '7',\n  digit8: '8',\n  digit9: '9',\n  colon: ':',\n  semicolon: ';',\n  lessThan: '<',\n  equalsTo: '=',\n  greaterThan: '>',\n  questionMark: '?',\n  atSign: '@',\n  uppercaseA: 'A',\n  uppercaseB: 'B',\n  uppercaseC: 'C',\n  uppercaseD: 'D',\n  uppercaseE: 'E',\n  uppercaseF: 'F',\n  uppercaseG: 'G',\n  uppercaseH: 'H',\n  uppercaseI: 'I',\n  uppercaseJ: 'J',\n  uppercaseK: 'K',\n  uppercaseL: 'L',\n  uppercaseM: 'M',\n  uppercaseN: 'N',\n  uppercaseO: 'O',\n  uppercaseP: 'P',\n  uppercaseQ: 'Q',\n  uppercaseR: 'R',\n  uppercaseS: 'S',\n  uppercaseT: 'T',\n  uppercaseU: 'U',\n  uppercaseV: 'V',\n  uppercaseW: 'W',\n  uppercaseX: 'X',\n  uppercaseY: 'Y',\n  uppercaseZ: 'Z',\n  leftSquareBracket: '[',\n  backslash: '\\\\',\n  rightSquareBracket: ']',\n  caret: '^',\n  underscore: '_',\n  graveAccent: '`',\n  lowercaseA: 'a',\n  lowercaseB: 'b',\n  lowercaseC: 'c',\n  lowercaseD: 'd',\n  lowercaseE: 'e',\n  lowercaseF: 'f',\n  lowercaseG: 'g',\n  lowercaseH: 'h',\n  lowercaseI: 'i',\n  lowercaseJ: 'j',\n  lowercaseK: 'k',\n  lowercaseL: 'l',\n  lowercaseM: 'm',\n  lowercaseN: 'n',\n  lowercaseO: 'o',\n  lowercaseP: 'p',\n  lowercaseQ: 'q',\n  lowercaseR: 'r',\n  lowercaseS: 's',\n  lowercaseT: 't',\n  lowercaseU: 'u',\n  lowercaseV: 'v',\n  lowercaseW: 'w',\n  lowercaseX: 'x',\n  lowercaseY: 'y',\n  lowercaseZ: 'z',\n  leftCurlyBrace: '{',\n  verticalBar: '|',\n  rightCurlyBrace: '}',\n  tilde: '~',\n  replacementCharacter: '�'\n})\n"],"names":[],"mappings":"AAAA;;;;;;;CAOC;;;AACM,MAAM,SAA+B;IAC1C,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,OAAO;IACP,iBAAiB;IACjB,eAAe;IACf,YAAY;IACZ,YAAY;IACZ,aAAa;IACb,WAAW;IACX,YAAY;IACZ,iBAAiB;IACjB,kBAAkB;IAClB,UAAU;IACV,UAAU;IACV,OAAO;IACP,MAAM;IACN,KAAK;IACL,OAAO;IACP,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,OAAO;IACP,WAAW;IACX,UAAU;IACV,UAAU;IACV,aAAa;IACb,cAAc;IACd,QAAQ;IACR,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,mBAAmB;IACnB,WAAW;IACX,oBAAoB;IACpB,OAAO;IACP,YAAY;IACZ,aAAa;IACb,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,gBAAgB;IAChB,aAAa;IACb,iBAAiB;IACjB,OAAO;IACP,sBAAsB;AACxB","ignoreList":[0]}},
    {"offset": {"line": 6840, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6846, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-util-subtokenize/dev/lib/splice-buffer.js"],"sourcesContent":["import {constants} from 'micromark-util-symbol'\n\n/**\n * Some of the internal operations of micromark do lots of editing\n * operations on very large arrays. This runs into problems with two\n * properties of most circa-2020 JavaScript interpreters:\n *\n *  - Array-length modifications at the high end of an array (push/pop) are\n *    expected to be common and are implemented in (amortized) time\n *    proportional to the number of elements added or removed, whereas\n *    other operations (shift/unshift and splice) are much less efficient.\n *  - Function arguments are passed on the stack, so adding tens of thousands\n *    of elements to an array with `arr.push(...newElements)` will frequently\n *    cause stack overflows. (see <https://stackoverflow.com/questions/22123769/rangeerror-maximum-call-stack-size-exceeded-why>)\n *\n * SpliceBuffers are an implementation of gap buffers, which are a\n * generalization of the \"queue made of two stacks\" idea. The splice buffer\n * maintains a cursor, and moving the cursor has cost proportional to the\n * distance the cursor moves, but inserting, deleting, or splicing in\n * new information at the cursor is as efficient as the push/pop operation.\n * This allows for an efficient sequence of splices (or pushes, pops, shifts,\n * or unshifts) as long such edits happen at the same part of the array or\n * generally sweep through the array from the beginning to the end.\n *\n * The interface for splice buffers also supports large numbers of inputs by\n * passing a single array argument rather passing multiple arguments on the\n * function call stack.\n *\n * @template T\n *   Item type.\n */\nexport class SpliceBuffer {\n  /**\n   * @param {ReadonlyArray<T> | null | undefined} [initial]\n   *   Initial items (optional).\n   * @returns\n   *   Splice buffer.\n   */\n  constructor(initial) {\n    /** @type {Array<T>} */\n    this.left = initial ? [...initial] : []\n    /** @type {Array<T>} */\n    this.right = []\n  }\n\n  /**\n   * Array access;\n   * does not move the cursor.\n   *\n   * @param {number} index\n   *   Index.\n   * @return {T}\n   *   Item.\n   */\n  get(index) {\n    if (index < 0 || index >= this.left.length + this.right.length) {\n      throw new RangeError(\n        'Cannot access index `' +\n          index +\n          '` in a splice buffer of size `' +\n          (this.left.length + this.right.length) +\n          '`'\n      )\n    }\n\n    if (index < this.left.length) return this.left[index]\n    return this.right[this.right.length - index + this.left.length - 1]\n  }\n\n  /**\n   * The length of the splice buffer, one greater than the largest index in the\n   * array.\n   */\n  get length() {\n    return this.left.length + this.right.length\n  }\n\n  /**\n   * Remove and return `list[0]`;\n   * moves the cursor to `0`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  shift() {\n    this.setCursor(0)\n    return this.right.pop()\n  }\n\n  /**\n   * Slice the buffer to get an array;\n   * does not move the cursor.\n   *\n   * @param {number} start\n   *   Start.\n   * @param {number | null | undefined} [end]\n   *   End (optional).\n   * @returns {Array<T>}\n   *   Array of items.\n   */\n  slice(start, end) {\n    /** @type {number} */\n    const stop =\n      end === null || end === undefined ? Number.POSITIVE_INFINITY : end\n\n    if (stop < this.left.length) {\n      return this.left.slice(start, stop)\n    }\n\n    if (start > this.left.length) {\n      return this.right\n        .slice(\n          this.right.length - stop + this.left.length,\n          this.right.length - start + this.left.length\n        )\n        .reverse()\n    }\n\n    return this.left\n      .slice(start)\n      .concat(\n        this.right.slice(this.right.length - stop + this.left.length).reverse()\n      )\n  }\n\n  /**\n   * Mimics the behavior of Array.prototype.splice() except for the change of\n   * interface necessary to avoid segfaults when patching in very large arrays.\n   *\n   * This operation moves cursor is moved to `start` and results in the cursor\n   * placed after any inserted items.\n   *\n   * @param {number} start\n   *   Start;\n   *   zero-based index at which to start changing the array;\n   *   negative numbers count backwards from the end of the array and values\n   *   that are out-of bounds are clamped to the appropriate end of the array.\n   * @param {number | null | undefined} [deleteCount=0]\n   *   Delete count (default: `0`);\n   *   maximum number of elements to delete, starting from start.\n   * @param {Array<T> | null | undefined} [items=[]]\n   *   Items to include in place of the deleted items (default: `[]`).\n   * @return {Array<T>}\n   *   Any removed items.\n   */\n  splice(start, deleteCount, items) {\n    /** @type {number} */\n    const count = deleteCount || 0\n\n    this.setCursor(Math.trunc(start))\n    const removed = this.right.splice(\n      this.right.length - count,\n      Number.POSITIVE_INFINITY\n    )\n    if (items) chunkedPush(this.left, items)\n    return removed.reverse()\n  }\n\n  /**\n   * Remove and return the highest-numbered item in the array, so\n   * `list[list.length - 1]`;\n   * Moves the cursor to `length`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  pop() {\n    this.setCursor(Number.POSITIVE_INFINITY)\n    return this.left.pop()\n  }\n\n  /**\n   * Inserts a single item to the high-numbered side of the array;\n   * moves the cursor to `length`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  push(item) {\n    this.setCursor(Number.POSITIVE_INFINITY)\n    this.left.push(item)\n  }\n\n  /**\n   * Inserts many items to the high-numbered side of the array.\n   * Moves the cursor to `length`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  pushMany(items) {\n    this.setCursor(Number.POSITIVE_INFINITY)\n    chunkedPush(this.left, items)\n  }\n\n  /**\n   * Inserts a single item to the low-numbered side of the array;\n   * Moves the cursor to `0`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshift(item) {\n    this.setCursor(0)\n    this.right.push(item)\n  }\n\n  /**\n   * Inserts many items to the low-numbered side of the array;\n   * moves the cursor to `0`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshiftMany(items) {\n    this.setCursor(0)\n    chunkedPush(this.right, items.reverse())\n  }\n\n  /**\n   * Move the cursor to a specific position in the array. Requires\n   * time proportional to the distance moved.\n   *\n   * If `n < 0`, the cursor will end up at the beginning.\n   * If `n > length`, the cursor will end up at the end.\n   *\n   * @param {number} n\n   *   Position.\n   * @return {undefined}\n   *   Nothing.\n   */\n  setCursor(n) {\n    if (\n      n === this.left.length ||\n      (n > this.left.length && this.right.length === 0) ||\n      (n < 0 && this.left.length === 0)\n    )\n      return\n    if (n < this.left.length) {\n      // Move cursor to the this.left\n      const removed = this.left.splice(n, Number.POSITIVE_INFINITY)\n      chunkedPush(this.right, removed.reverse())\n    } else {\n      // Move cursor to the this.right\n      const removed = this.right.splice(\n        this.left.length + this.right.length - n,\n        Number.POSITIVE_INFINITY\n      )\n      chunkedPush(this.left, removed.reverse())\n    }\n  }\n}\n\n/**\n * Avoid stack overflow by pushing items onto the stack in segments\n *\n * @template T\n *   Item type.\n * @param {Array<T>} list\n *   List to inject into.\n * @param {ReadonlyArray<T>} right\n *   Items to inject.\n * @return {undefined}\n *   Nothing.\n */\nfunction chunkedPush(list, right) {\n  /** @type {number} */\n  let chunkStart = 0\n\n  if (right.length < constants.v8MaxSafeChunkSize) {\n    list.push(...right)\n  } else {\n    while (chunkStart < right.length) {\n      list.push(\n        ...right.slice(chunkStart, chunkStart + constants.v8MaxSafeChunkSize)\n      )\n      chunkStart += constants.v8MaxSafeChunkSize\n    }\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 7045, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7051, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-util-subtokenize/dev/index.js"],"sourcesContent":["/**\n * @import {Chunk, Event, Token} from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {splice} from 'micromark-util-chunked'\nimport {codes, types} from 'micromark-util-symbol'\nimport {SpliceBuffer} from './lib/splice-buffer.js'\n\n// Hidden API exposed for testing.\nexport {SpliceBuffer} from './lib/splice-buffer.js'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} eventsArray\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */\n// eslint-disable-next-line complexity\nexport function subtokenize(eventsArray) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n  let event\n  /** @type {number | undefined} */\n  let lineIndex\n  /** @type {number} */\n  let otherIndex\n  /** @type {Event} */\n  let otherEvent\n  /** @type {Array<Event>} */\n  let parameters\n  /** @type {Array<Event>} */\n  let subevents\n  /** @type {boolean | undefined} */\n  let more\n  const events = new SpliceBuffer(eventsArray)\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events.get(index)\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (\n      index &&\n      event[1].type === types.chunkFlow &&\n      events.get(index - 1)[1].type === types.listItemPrefix\n    ) {\n      assert(event[1]._tokenizer, 'expected `_tokenizer` on subtokens')\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === types.lineEndingBlank\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === types.content\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === types.content) {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === types.chunkText) {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events.get(otherIndex)\n\n        if (\n          otherEvent[1].type === types.lineEnding ||\n          otherEvent[1].type === types.lineEndingBlank\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events.get(lineIndex)[1].type = types.lineEndingBlank\n            }\n\n            otherEvent[1].type = types.lineEnding\n            lineIndex = otherIndex\n          }\n        } else if (otherEvent[1].type === types.linePrefix) {\n          // Move past.\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = {...events.get(lineIndex)[1].start}\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        events.splice(lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  // The changes to the `events` buffer must be copied back into the eventsArray\n  splice(eventsArray, 0, Number.POSITIVE_INFINITY, events.slice(0))\n  return !more\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {SpliceBuffer<Event>} events\n *   Events.\n * @param {number} eventIndex\n *   Index.\n * @returns {Record<string, number>}\n *   Gaps.\n */\nfunction subcontent(events, eventIndex) {\n  const token = events.get(eventIndex)[1]\n  const context = events.get(eventIndex)[2]\n  let startPosition = eventIndex - 1\n  /** @type {Array<number>} */\n  const startPositions = []\n  assert(token.contentType, 'expected `contentType` on subtokens')\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {Array<[number, number]>} */\n  const jumps = []\n  /** @type {Record<string, number>} */\n  const gaps = {}\n  /** @type {Array<Chunk>} */\n  let stream\n  /** @type {Token | undefined} */\n  let previous\n  let index = -1\n  /** @type {Token | undefined} */\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start]\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events.get(++startPosition)[1] !== current) {\n      // Empty.\n    }\n\n    assert(\n      !previous || current.previous === previous,\n      'expected previous to match'\n    )\n    assert(!previous || previous.next === current, 'expected next to match')\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(codes.eof)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    }\n\n    // Unravel the next token.\n    previous = current\n    current = current.next\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      assert(current, 'expected a current token')\n      start = index + 1\n      breaks.push(start)\n      // Help GC.\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = []\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n    assert(!current.next, 'expected no next token')\n  } else {\n    breaks.pop()\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    assert(start !== undefined, 'expected a start position when splicing')\n    jumps.push([start, start + slice.length - 1])\n    events.splice(start, 2, slice)\n  }\n\n  jumps.reverse()\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 7252, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7258, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-util-chunked/dev/index.js"],"sourcesContent":["import {constants} from 'micromark-util-symbol'\n\n/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {Array<unknown>} */\n  let parameters\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < constants.v8MaxSafeChunkSize) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove)\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(\n        chunkStart,\n        chunkStart + constants.v8MaxSafeChunkSize\n      )\n      parameters.unshift(start, 0)\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters)\n\n      chunkStart += constants.v8MaxSafeChunkSize\n      start += constants.v8MaxSafeChunkSize\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n"],"names":[],"mappings":";;;;AAAA;;AAwBO,SAAS,OAAO,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK;IAC/C,MAAM,MAAM,KAAK,MAAM;IACvB,IAAI,aAAa;IACjB,2BAA2B,GAC3B,IAAI;IAEJ,gDAAgD;IAChD,IAAI,QAAQ,GAAG;QACb,QAAQ,CAAC,QAAQ,MAAM,IAAI,MAAM;IACnC,OAAO;QACL,QAAQ,QAAQ,MAAM,MAAM;IAC9B;IAEA,SAAS,SAAS,IAAI,SAAS;IAE/B,mEAAmE;IACnE,IAAI,MAAM,MAAM,GAAG,2JAAA,CAAA,YAAS,CAAC,kBAAkB,EAAE;QAC/C,aAAa,MAAM,IAAI,CAAC;QACxB,WAAW,OAAO,CAAC,OAAO;QAC1B,oCAAoC;QACpC,KAAK,MAAM,IAAI;IACjB,OAAO;QACL,8CAA8C;QAC9C,IAAI,QAAQ,KAAK,MAAM,CAAC,OAAO;QAE/B,2DAA2D;QAC3D,MAAO,aAAa,MAAM,MAAM,CAAE;YAChC,aAAa,MAAM,KAAK,CACtB,YACA,aAAa,2JAAA,CAAA,YAAS,CAAC,kBAAkB;YAE3C,WAAW,OAAO,CAAC,OAAO;YAC1B,oCAAoC;YACpC,KAAK,MAAM,IAAI;YAEf,cAAc,2JAAA,CAAA,YAAS,CAAC,kBAAkB;YAC1C,SAAS,2JAAA,CAAA,YAAS,CAAC,kBAAkB;QACvC;IACF;AACF;AAkBO,SAAS,KAAK,IAAI,EAAE,KAAK;IAC9B,IAAI,KAAK,MAAM,GAAG,GAAG;QACnB,OAAO,MAAM,KAAK,MAAM,EAAE,GAAG;QAC7B,OAAO;IACT;IAEA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 7302, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7308, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark/dev/lib/postprocess.js"],"sourcesContent":["/**\n * @import {Event} from 'micromark-util-types'\n */\n\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * @param {Array<Event>} events\n *   Events.\n * @returns {Array<Event>}\n *   Events.\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n"],"names":[],"mappings":"AAAA;;CAEC;;;AAED;;AAQO,SAAS,YAAY,MAAM;IAChC,MAAO,CAAC,CAAA,GAAA,4KAAA,CAAA,cAAW,AAAD,EAAE,QAAS;IAC3B,QAAQ;IACV;IAEA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 7321, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7327, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark/dev/lib/initialize/text.js"],"sourcesContent":["/**\n * @import {\n *   Code,\n *   InitialConstruct,\n *   Initializer,\n *   Resolver,\n *   State,\n *   TokenizeContext\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\nexport const resolver = {resolveAll: createResolver()}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n\n/**\n * @param {'string' | 'text'} field\n *   Field.\n * @returns {InitialConstruct}\n *   Construct.\n */\nfunction initializeFactory(field) {\n  return {\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    ),\n    tokenize: initializeText\n  }\n\n  /**\n   * @this {TokenizeContext}\n   *   Context.\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === codes.eof) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter(types.data)\n      effects.consume(code)\n      return data\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit(types.data)\n        return text(code)\n      }\n\n      // Data.\n      effects.consume(code)\n      return data\n    }\n\n    /**\n     * @param {Code} code\n     *   Code.\n     * @returns {boolean}\n     *   Whether the code is a break.\n     */\n    function atBreak(code) {\n      if (code === codes.eof) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        // Always populated by defaults.\n        assert(Array.isArray(list), 'expected `disable.null` to be populated')\n\n        while (++index < list.length) {\n          const item = list[index]\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n *   Resolver.\n * @returns {Resolver}\n *   Resolver.\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number | undefined} */\n    let enter\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === types.data) {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== types.data) {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === types.lineEnding) &&\n      events[eventIndex - 1][1].type === types.data\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean | undefined} */\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === codes.space) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        }\n        // Number\n        else if (chunk === codes.horizontalTab) {\n          tabs = true\n          size++\n        } else if (chunk === codes.virtualSpace) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length ||\n            tabs ||\n            size < constants.hardBreakPrefixSizeMin\n              ? types.lineSuffix\n              : types.hardBreakTrailing,\n          start: {\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex,\n            _index: data.start._index + index,\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size\n          },\n          end: {...data.end}\n        }\n\n        data.end = {...token.start}\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 7530, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7536, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark/dev/lib/constructs.js"],"sourcesContent":["/**\n * @import {Extension} from 'micromark-util-types'\n */\n\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {codes} from 'micromark-util-symbol'\nimport {resolver as resolveText} from './initialize/text.js'\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [codes.asterisk]: list,\n  [codes.plusSign]: list,\n  [codes.dash]: list,\n  [codes.digit0]: list,\n  [codes.digit1]: list,\n  [codes.digit2]: list,\n  [codes.digit3]: list,\n  [codes.digit4]: list,\n  [codes.digit5]: list,\n  [codes.digit6]: list,\n  [codes.digit7]: list,\n  [codes.digit8]: list,\n  [codes.digit9]: list,\n  [codes.greaterThan]: blockQuote\n}\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [codes.leftSquareBracket]: definition\n}\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [codes.horizontalTab]: codeIndented,\n  [codes.virtualSpace]: codeIndented,\n  [codes.space]: codeIndented\n}\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [codes.numberSign]: headingAtx,\n  [codes.asterisk]: thematicBreak,\n  [codes.dash]: [setextUnderline, thematicBreak],\n  [codes.lessThan]: htmlFlow,\n  [codes.equalsTo]: setextUnderline,\n  [codes.underscore]: thematicBreak,\n  [codes.graveAccent]: codeFenced,\n  [codes.tilde]: codeFenced\n}\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [codes.ampersand]: characterReference,\n  [codes.backslash]: characterEscape\n}\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [codes.carriageReturn]: lineEnding,\n  [codes.lineFeed]: lineEnding,\n  [codes.carriageReturnLineFeed]: lineEnding,\n  [codes.exclamationMark]: labelStartImage,\n  [codes.ampersand]: characterReference,\n  [codes.asterisk]: attention,\n  [codes.lessThan]: [autolink, htmlText],\n  [codes.leftSquareBracket]: labelStartLink,\n  [codes.backslash]: [hardBreakEscape, characterEscape],\n  [codes.rightSquareBracket]: labelEnd,\n  [codes.underscore]: attention,\n  [codes.graveAccent]: codeText\n}\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {null: [attention, resolveText]}\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {null: [codes.asterisk, codes.underscore]}\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {null: []}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 7650, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7656, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark/dev/lib/initialize/content.js"],"sourcesContent":["/**\n * @import {\n *   InitialConstruct,\n *   Initializer,\n *   State,\n *   TokenizeContext,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\n/** @type {InitialConstruct} */\nexport const content = {tokenize: initializeContent}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Initializer}\n *   Content.\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n  let previous\n\n  return contentStart\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    assert(\n      code === codes.eof || markdownLineEnding(code),\n      'expected eol or eof'\n    )\n\n    if (code === codes.eof) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter(types.lineEnding)\n    effects.consume(code)\n    effects.exit(types.lineEnding)\n    return factorySpace(effects, contentStart, types.linePrefix)\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    assert(\n      code !== codes.eof && !markdownLineEnding(code),\n      'expected anything other than a line ending or EOF'\n    )\n    effects.enter(types.paragraph)\n    return lineStart(code)\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter(types.chunkText, {\n      contentType: constants.contentTypeText,\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n\n    return data(code)\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === codes.eof) {\n      effects.exit(types.chunkText)\n      effects.exit(types.paragraph)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit(types.chunkText)\n      return lineStart\n    }\n\n    // Data.\n    effects.consume(code)\n    return data\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;CAQC;;;AAED;AAGA;AADA;AACA;AAFA;AAEA;;;;;AAGO,MAAM,UAAU;IAAC,UAAU;AAAiB;AAEnD;;;;;CAKC,GACD,SAAS,kBAAkB,OAAO;IAChC,MAAM,eAAe,QAAQ,OAAO,CAClC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,cAAc,EACrC,4BACA;IAEF,kBAAkB,GAClB,IAAI;IAEJ,OAAO;;IAEP,kBAAkB,GAClB,SAAS,2BAA2B,IAAI;QACtC,CAAA,GAAA,wIAAA,CAAA,KAAM,AAAD,EACH,SAAS,uJAAA,CAAA,QAAK,CAAC,GAAG,IAAI,CAAA,GAAA,0JAAA,CAAA,qBAAkB,AAAD,EAAE,OACzC;QAGF,IAAI,SAAS,uJAAA,CAAA,QAAK,CAAC,GAAG,EAAE;YACtB,QAAQ,OAAO,CAAC;YAChB;QACF;QAEA,QAAQ,KAAK,CAAC,uJAAA,CAAA,QAAK,CAAC,UAAU;QAC9B,QAAQ,OAAO,CAAC;QAChB,QAAQ,IAAI,CAAC,uJAAA,CAAA,QAAK,CAAC,UAAU;QAC7B,OAAO,CAAA,GAAA,yJAAA,CAAA,eAAY,AAAD,EAAE,SAAS,cAAc,uJAAA,CAAA,QAAK,CAAC,UAAU;IAC7D;IAEA,kBAAkB,GAClB,SAAS,iBAAiB,IAAI;QAC5B,CAAA,GAAA,wIAAA,CAAA,KAAM,AAAD,EACH,SAAS,uJAAA,CAAA,QAAK,CAAC,GAAG,IAAI,CAAC,CAAA,GAAA,0JAAA,CAAA,qBAAkB,AAAD,EAAE,OAC1C;QAEF,QAAQ,KAAK,CAAC,uJAAA,CAAA,QAAK,CAAC,SAAS;QAC7B,OAAO,UAAU;IACnB;IAEA,kBAAkB,GAClB,SAAS,UAAU,IAAI;QACrB,MAAM,QAAQ,QAAQ,KAAK,CAAC,uJAAA,CAAA,QAAK,CAAC,SAAS,EAAE;YAC3C,aAAa,2JAAA,CAAA,YAAS,CAAC,eAAe;YACtC;QACF;QAEA,IAAI,UAAU;YACZ,SAAS,IAAI,GAAG;QAClB;QAEA,WAAW;QAEX,OAAO,KAAK;IACd;IAEA,kBAAkB,GAClB,SAAS,KAAK,IAAI;QAChB,IAAI,SAAS,uJAAA,CAAA,QAAK,CAAC,GAAG,EAAE;YACtB,QAAQ,IAAI,CAAC,uJAAA,CAAA,QAAK,CAAC,SAAS;YAC5B,QAAQ,IAAI,CAAC,uJAAA,CAAA,QAAK,CAAC,SAAS;YAC5B,QAAQ,OAAO,CAAC;YAChB;QACF;QAEA,IAAI,CAAA,GAAA,0JAAA,CAAA,qBAAkB,AAAD,EAAE,OAAO;YAC5B,QAAQ,OAAO,CAAC;YAChB,QAAQ,IAAI,CAAC,uJAAA,CAAA,QAAK,CAAC,SAAS;YAC5B,OAAO;QACT;QAEA,QAAQ;QACR,QAAQ,OAAO,CAAC;QAChB,OAAO;IACT;AACF","ignoreList":[0]}},
    {"offset": {"line": 7734, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7740, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark/dev/lib/initialize/document.js"],"sourcesContent":["/**\n * @import {\n *   Construct,\n *   ContainerState,\n *   InitialConstruct,\n *   Initializer,\n *   Point,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n *   Construct and its state.\n */\n\nimport {ok as assert} from 'devlop'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\n/** @type {InitialConstruct} */\nexport const document = {tokenize: initializeDocument}\n\n/** @type {Construct} */\nconst containerConstruct = {tokenize: tokenizeContainer}\n\n/**\n * @this {TokenizeContext}\n *   Self.\n * @type {Initializer}\n *   Initializer.\n */\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext | undefined} */\n  let childFlow\n  /** @type {Token | undefined} */\n  let childToken\n  /** @type {number} */\n  let lineStartOffset\n\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      assert(\n        item[0].continuation,\n        'expected `continuation` to be defined on container construct'\n      )\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    }\n\n    // Done.\n    return checkNewContainers(code)\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    assert(\n      self.containerState,\n      'expected `containerState` to be defined after continuation'\n    )\n\n    continued++\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === types.chunkFlow\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      assert(point, 'could not find previous flow chunk')\n\n      exitContainers(continued)\n\n      // Fix positions.\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = {...point}\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    }\n\n    // Check if there is a new container.\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    assert(\n      self.currentConstruct,\n      'expected `currentConstruct` to be defined on tokenizer'\n    )\n    assert(\n      self.containerState,\n      'expected `containerState` to be defined on tokenizer'\n    )\n    continued++\n    stack.push([self.currentConstruct, self.containerState])\n    // Try another.\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === codes.eof) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter(types.chunkFlow, {\n      _tokenizer: childFlow,\n      contentType: constants.contentTypeFlow,\n      previous: childToken\n    })\n\n    return flowContinue(code)\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === codes.eof) {\n      writeToChild(effects.exit(types.chunkFlow), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit(types.chunkFlow))\n      // Get ready for the next line.\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n\n  /**\n   * @param {Token} token\n   *   Token.\n   * @param {boolean | undefined} [endOfFile]\n   *   Whether the token is at the end of the file (default: `false`).\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function writeToChild(token, endOfFile) {\n    assert(childFlow, 'expected `childFlow` to be defined when continuing')\n    const stream = self.sliceStream(token)\n    if (endOfFile) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream)\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset &&\n          // …and either is not ended yet…\n          (!childFlow.events[index][1].end ||\n            // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean | undefined} */\n      let seen\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === types.chunkFlow\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      assert(point, 'could not find previous flow chunk')\n\n      exitContainers(continued)\n\n      // Fix positions.\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = {...point}\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n    }\n  }\n\n  /**\n   * @param {number} size\n   *   Size.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function exitContainers(size) {\n    let index = stack.length\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      assert(\n        entry[0].exit,\n        'expected `exit` to be defined on container construct'\n      )\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    assert(\n      self.containerState,\n      'expected `containerState` to be defined when closing flow'\n    )\n    assert(childFlow, 'expected `childFlow` to be defined when closing it')\n    childFlow.write([codes.eof])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n *   Tokenizer.\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n  assert(\n    this.parser.constructs.disable.null,\n    'expected `disable.null` to be populated'\n  )\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    types.linePrefix,\n    this.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : constants.tabSize\n  )\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;CAYC,GAED;;;CAGC;;;AAED;AAIA;AADA;AACA;AAAA;AAFA;AADA;;;;;;AAMO,MAAM,WAAW;IAAC,UAAU;AAAkB;AAErD,sBAAsB,GACtB,MAAM,qBAAqB;IAAC,UAAU;AAAiB;AAEvD;;;;;CAKC,GACD,SAAS,mBAAmB,OAAO;IACjC,MAAM,OAAO,IAAI;IACjB,6BAA6B,GAC7B,MAAM,QAAQ,EAAE;IAChB,IAAI,YAAY;IAChB,wCAAwC,GACxC,IAAI;IACJ,8BAA8B,GAC9B,IAAI;IACJ,mBAAmB,GACnB,IAAI;IAEJ,OAAO;;IAEP,kBAAkB,GAClB,SAAS,MAAM,IAAI;QACjB,mEAAmE;QACnE,uEAAuE;QACvE,SAAS;QACT,4EAA4E;QAC5E,kBAAkB;QAClB,uDAAuD;QACvD,yCAAyC;QACzC,kEAAkE;QAClE,uEAAuE;QACvE,qBAAqB;QACrB,IAAI,YAAY,MAAM,MAAM,EAAE;YAC5B,MAAM,OAAO,KAAK,CAAC,UAAU;YAC7B,KAAK,cAAc,GAAG,IAAI,CAAC,EAAE;YAC7B,CAAA,GAAA,wIAAA,CAAA,KAAM,AAAD,EACH,IAAI,CAAC,EAAE,CAAC,YAAY,EACpB;YAEF,OAAO,QAAQ,OAAO,CACpB,IAAI,CAAC,EAAE,CAAC,YAAY,EACpB,kBACA,oBACA;QACJ;QAEA,QAAQ;QACR,OAAO,mBAAmB;IAC5B;IAEA,kBAAkB,GAClB,SAAS,iBAAiB,IAAI;QAC5B,CAAA,GAAA,wIAAA,CAAA,KAAM,AAAD,EACH,KAAK,cAAc,EACnB;QAGF;QAEA,yEAAyE;QACzE,wEAAwE;QACxE,cAAc;QACd,IAAI,KAAK,cAAc,CAAC,UAAU,EAAE;YAClC,KAAK,cAAc,CAAC,UAAU,GAAG;YAEjC,IAAI,WAAW;gBACb;YACF;YAEA,kEAAkE;YAClE,4DAA4D;YAC5D,MAAM,mBAAmB,KAAK,MAAM,CAAC,MAAM;YAC3C,IAAI,kBAAkB;YACtB,8BAA8B,GAC9B,IAAI;YAEJ,uBAAuB;YACvB,MAAO,kBAAmB;gBACxB,IACE,KAAK,MAAM,CAAC,gBAAgB,CAAC,EAAE,KAAK,UACpC,KAAK,MAAM,CAAC,gBAAgB,CAAC,EAAE,CAAC,IAAI,KAAK,uJAAA,CAAA,QAAK,CAAC,SAAS,EACxD;oBACA,QAAQ,KAAK,MAAM,CAAC,gBAAgB,CAAC,EAAE,CAAC,GAAG;oBAC3C;gBACF;YACF;YAEA,CAAA,GAAA,wIAAA,CAAA,KAAM,AAAD,EAAE,OAAO;YAEd,eAAe;YAEf,iBAAiB;YACjB,IAAI,QAAQ;YAEZ,MAAO,QAAQ,KAAK,MAAM,CAAC,MAAM,CAAE;gBACjC,KAAK,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,GAAG;oBAAC,GAAG,KAAK;gBAAA;gBACrC;YACF;YAEA,4DAA4D;YAC5D,CAAA,GAAA,wJAAA,CAAA,SAAM,AAAD,EACH,KAAK,MAAM,EACX,kBAAkB,GAClB,GACA,KAAK,MAAM,CAAC,KAAK,CAAC;YAGpB,+BAA+B;YAC/B,KAAK,MAAM,CAAC,MAAM,GAAG;YAErB,OAAO,mBAAmB;QAC5B;QAEA,OAAO,MAAM;IACf;IAEA,kBAAkB,GAClB,SAAS,mBAAmB,IAAI;QAC9B,yEAAyE;QACzE,0DAA0D;QAC1D,sEAAsE;QACtE,sEAAsE;QACtE,SAAS;QACT,IAAI,cAAc,MAAM,MAAM,EAAE;YAC9B,sEAAsE;YACtE,iBAAiB;YACjB,qDAAqD;YACrD,IAAI,CAAC,WAAW;gBACd,OAAO,kBAAkB;YAC3B;YAEA,kEAAkE;YAClE,qEAAqE;YACrE,SAAS;YACT,IAAI,UAAU,gBAAgB,IAAI,UAAU,gBAAgB,CAAC,QAAQ,EAAE;gBACrE,OAAO,UAAU;YACnB;YAEA,sDAAsD;YACtD,sEAAsE;YACtE,aAAa;YACb,uEAAuE;YACvE,kDAAkD;YAClD,KAAK,SAAS,GAAG,QACf,UAAU,gBAAgB,IAAI,CAAC,UAAU,6BAA6B;QAE1E;QAEA,qCAAqC;QACrC,KAAK,cAAc,GAAG,CAAC;QACvB,OAAO,QAAQ,KAAK,CAClB,oBACA,sBACA,uBACA;IACJ;IAEA,kBAAkB,GAClB,SAAS,qBAAqB,IAAI;QAChC,IAAI,WAAW;QACf,eAAe;QACf,OAAO,kBAAkB;IAC3B;IAEA,kBAAkB,GAClB,SAAS,sBAAsB,IAAI;QACjC,KAAK,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,IAAI,CAAC,GAAG,cAAc,MAAM,MAAM;QAC9D,kBAAkB,KAAK,GAAG,GAAG,MAAM;QACnC,OAAO,UAAU;IACnB;IAEA,kBAAkB,GAClB,SAAS,kBAAkB,IAAI;QAC7B,sBAAsB;QACtB,KAAK,cAAc,GAAG,CAAC;QACvB,OAAO,QAAQ,OAAO,CACpB,oBACA,mBACA,WACA;IACJ;IAEA,kBAAkB,GAClB,SAAS,kBAAkB,IAAI;QAC7B,CAAA,GAAA,wIAAA,CAAA,KAAM,AAAD,EACH,KAAK,gBAAgB,EACrB;QAEF,CAAA,GAAA,wIAAA,CAAA,KAAM,AAAD,EACH,KAAK,cAAc,EACnB;QAEF;QACA,MAAM,IAAI,CAAC;YAAC,KAAK,gBAAgB;YAAE,KAAK,cAAc;SAAC;QACvD,eAAe;QACf,OAAO,kBAAkB;IAC3B;IAEA,kBAAkB,GAClB,SAAS,UAAU,IAAI;QACrB,IAAI,SAAS,uJAAA,CAAA,QAAK,CAAC,GAAG,EAAE;YACtB,IAAI,WAAW;YACf,eAAe;YACf,QAAQ,OAAO,CAAC;YAChB;QACF;QAEA,YAAY,aAAa,KAAK,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG;QAClD,QAAQ,KAAK,CAAC,uJAAA,CAAA,QAAK,CAAC,SAAS,EAAE;YAC7B,YAAY;YACZ,aAAa,2JAAA,CAAA,YAAS,CAAC,eAAe;YACtC,UAAU;QACZ;QAEA,OAAO,aAAa;IACtB;IAEA,kBAAkB,GAClB,SAAS,aAAa,IAAI;QACxB,IAAI,SAAS,uJAAA,CAAA,QAAK,CAAC,GAAG,EAAE;YACtB,aAAa,QAAQ,IAAI,CAAC,uJAAA,CAAA,QAAK,CAAC,SAAS,GAAG;YAC5C,eAAe;YACf,QAAQ,OAAO,CAAC;YAChB;QACF;QAEA,IAAI,CAAA,GAAA,0JAAA,CAAA,qBAAkB,AAAD,EAAE,OAAO;YAC5B,QAAQ,OAAO,CAAC;YAChB,aAAa,QAAQ,IAAI,CAAC,uJAAA,CAAA,QAAK,CAAC,SAAS;YACzC,+BAA+B;YAC/B,YAAY;YACZ,KAAK,SAAS,GAAG;YACjB,OAAO;QACT;QAEA,QAAQ,OAAO,CAAC;QAChB,OAAO;IACT;IAEA;;;;;;;GAOC,GACD,SAAS,aAAa,KAAK,EAAE,SAAS;QACpC,CAAA,GAAA,wIAAA,CAAA,KAAM,AAAD,EAAE,WAAW;QAClB,MAAM,SAAS,KAAK,WAAW,CAAC;QAChC,IAAI,WAAW,OAAO,IAAI,CAAC;QAC3B,MAAM,QAAQ,GAAG;QACjB,IAAI,YAAY,WAAW,IAAI,GAAG;QAClC,aAAa;QACb,UAAU,UAAU,CAAC,MAAM,KAAK;QAChC,UAAU,KAAK,CAAC;QAEhB,yCAAyC;QACzC,EAAE;QACF,cAAc;QACd,MAAM;QACN,KAAK;QACL,EAAE;QACF,MAAM;QACN,EAAE;QACF,SAAS;QACT,IAAI;QACJ,EAAE;QACF,MAAM;QACN,EAAE;QACF,UAAU;QACV,IAAI;QACJ,MAAM;QACN,EAAE;QACF,yEAAyE;QACzE,uEAAuE;QACvE,yCAAyC;QACzC,yEAAyE;QACzE,wDAAwD;QACxD,EAAE;QACF,qEAAqE;QACrE,qBAAqB;QACrB,oEAAoE;QACpE,uBAAuB;QACvB,yEAAyE;QACzE,8CAA8C;QAC9C,EAAE;QACF,sEAAsE;QACtE,kDAAkD;QAClD,yEAAyE;QACzE,IAAI,KAAK,MAAM,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,EAAE;YACtC,IAAI,QAAQ,UAAU,MAAM,CAAC,MAAM;YAEnC,MAAO,QAAS;gBACd,IACE,2CAA2C;gBAC3C,UAAU,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,GAAG,mBAC1C,gCAAgC;gBAChC,CAAC,CAAC,UAAU,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,IAC9B,qBAAqB;gBACrB,UAAU,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,GAAG,eAAe,GACzD;oBACA,mEAAmE;oBACnE,qBAAqB;oBACrB;gBACF;YACF;YAEA,kEAAkE;YAClE,qDAAqD;YACrD,MAAM,mBAAmB,KAAK,MAAM,CAAC,MAAM;YAC3C,IAAI,kBAAkB;YACtB,gCAAgC,GAChC,IAAI;YACJ,8BAA8B,GAC9B,IAAI;YAEJ,0DAA0D;YAC1D,MAAO,kBAAmB;gBACxB,IACE,KAAK,MAAM,CAAC,gBAAgB,CAAC,EAAE,KAAK,UACpC,KAAK,MAAM,CAAC,gBAAgB,CAAC,EAAE,CAAC,IAAI,KAAK,uJAAA,CAAA,QAAK,CAAC,SAAS,EACxD;oBACA,IAAI,MAAM;wBACR,QAAQ,KAAK,MAAM,CAAC,gBAAgB,CAAC,EAAE,CAAC,GAAG;wBAC3C;oBACF;oBAEA,OAAO;gBACT;YACF;YAEA,CAAA,GAAA,wIAAA,CAAA,KAAM,AAAD,EAAE,OAAO;YAEd,eAAe;YAEf,iBAAiB;YACjB,QAAQ;YAER,MAAO,QAAQ,KAAK,MAAM,CAAC,MAAM,CAAE;gBACjC,KAAK,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,GAAG;oBAAC,GAAG,KAAK;gBAAA;gBACrC;YACF;YAEA,4DAA4D;YAC5D,CAAA,GAAA,wJAAA,CAAA,SAAM,AAAD,EACH,KAAK,MAAM,EACX,kBAAkB,GAClB,GACA,KAAK,MAAM,CAAC,KAAK,CAAC;YAGpB,+BAA+B;YAC/B,KAAK,MAAM,CAAC,MAAM,GAAG;QACvB;IACF;IAEA;;;;;GAKC,GACD,SAAS,eAAe,IAAI;QAC1B,IAAI,QAAQ,MAAM,MAAM;QAExB,wBAAwB;QACxB,MAAO,UAAU,KAAM;YACrB,MAAM,QAAQ,KAAK,CAAC,MAAM;YAC1B,KAAK,cAAc,GAAG,KAAK,CAAC,EAAE;YAC9B,CAAA,GAAA,wIAAA,CAAA,KAAM,AAAD,EACH,KAAK,CAAC,EAAE,CAAC,IAAI,EACb;YAEF,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM;QAC3B;QAEA,MAAM,MAAM,GAAG;IACjB;IAEA,SAAS;QACP,CAAA,GAAA,wIAAA,CAAA,KAAM,AAAD,EACH,KAAK,cAAc,EACnB;QAEF,CAAA,GAAA,wIAAA,CAAA,KAAM,AAAD,EAAE,WAAW;QAClB,UAAU,KAAK,CAAC;YAAC,uJAAA,CAAA,QAAK,CAAC,GAAG;SAAC;QAC3B,aAAa;QACb,YAAY;QACZ,KAAK,cAAc,CAAC,UAAU,GAAG;IACnC;AACF;AAEA;;;;;CAKC,GACD,SAAS,kBAAkB,OAAO,EAAE,EAAE,EAAE,GAAG;IACzC,gCAAgC;IAChC,CAAA,GAAA,wIAAA,CAAA,KAAM,AAAD,EACH,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,EACnC;IAEF,OAAO,CAAA,GAAA,yJAAA,CAAA,eAAY,AAAD,EAChB,SACA,QAAQ,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,MACrD,uJAAA,CAAA,QAAK,CAAC,UAAU,EAChB,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,kBACzC,YACA,2JAAA,CAAA,YAAS,CAAC,OAAO;AAEzB","ignoreList":[0]}},
    {"offset": {"line": 8070, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8076, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark/dev/lib/initialize/flow.js"],"sourcesContent":["/**\n * @import {\n *   InitialConstruct,\n *   Initializer,\n *   State,\n *   TokenizeContext\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {codes, types} from 'micromark-util-symbol'\n\n/** @type {InitialConstruct} */\nexport const flow = {tokenize: initializeFlow}\n\n/**\n * @this {TokenizeContext}\n *   Self.\n * @type {Initializer}\n *   Initializer.\n */\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding,\n    // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        types.linePrefix\n      )\n    )\n  )\n\n  return initial\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    assert(\n      code === codes.eof || markdownLineEnding(code),\n      'expected eol or eof'\n    )\n\n    if (code === codes.eof) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter(types.lineEndingBlank)\n    effects.consume(code)\n    effects.exit(types.lineEndingBlank)\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    assert(\n      code === codes.eof || markdownLineEnding(code),\n      'expected eol or eof'\n    )\n\n    if (code === codes.eof) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter(types.lineEnding)\n    effects.consume(code)\n    effects.exit(types.lineEnding)\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;;CAOC;;;AAGD;AACA;AADA;AAGA;AAJA;AAIA;AADA;;;;;;AAIO,MAAM,OAAO;IAAC,UAAU;AAAc;AAE7C;;;;;CAKC,GACD,SAAS,eAAe,OAAO;IAC7B,MAAM,OAAO,IAAI;IACjB,MAAM,UAAU,QAAQ,OAAO,CAC7B,6BAA6B;IAC7B,0KAAA,CAAA,YAAS,EACT,eACA,sDAAsD;IACtD,QAAQ,OAAO,CACb,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,WAAW,EAClC,gBACA,CAAA,GAAA,yJAAA,CAAA,eAAY,AAAD,EACT,SACA,QAAQ,OAAO,CACb,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,EAC3B,gBACA,QAAQ,OAAO,CAAC,oKAAA,CAAA,UAAO,EAAE,kBAE3B,uJAAA,CAAA,QAAK,CAAC,UAAU;IAKtB,OAAO;;IAEP,kBAAkB,GAClB,SAAS,cAAc,IAAI;QACzB,CAAA,GAAA,wIAAA,CAAA,KAAM,AAAD,EACH,SAAS,uJAAA,CAAA,QAAK,CAAC,GAAG,IAAI,CAAA,GAAA,0JAAA,CAAA,qBAAkB,AAAD,EAAE,OACzC;QAGF,IAAI,SAAS,uJAAA,CAAA,QAAK,CAAC,GAAG,EAAE;YACtB,QAAQ,OAAO,CAAC;YAChB;QACF;QAEA,QAAQ,KAAK,CAAC,uJAAA,CAAA,QAAK,CAAC,eAAe;QACnC,QAAQ,OAAO,CAAC;QAChB,QAAQ,IAAI,CAAC,uJAAA,CAAA,QAAK,CAAC,eAAe;QAClC,KAAK,gBAAgB,GAAG;QACxB,OAAO;IACT;IAEA,kBAAkB,GAClB,SAAS,eAAe,IAAI;QAC1B,CAAA,GAAA,wIAAA,CAAA,KAAM,AAAD,EACH,SAAS,uJAAA,CAAA,QAAK,CAAC,GAAG,IAAI,CAAA,GAAA,0JAAA,CAAA,qBAAkB,AAAD,EAAE,OACzC;QAGF,IAAI,SAAS,uJAAA,CAAA,QAAK,CAAC,GAAG,EAAE;YACtB,QAAQ,OAAO,CAAC;YAChB;QACF;QAEA,QAAQ,KAAK,CAAC,uJAAA,CAAA,QAAK,CAAC,UAAU;QAC9B,QAAQ,OAAO,CAAC;QAChB,QAAQ,IAAI,CAAC,uJAAA,CAAA,QAAK,CAAC,UAAU;QAC7B,KAAK,gBAAgB,GAAG;QACxB,OAAO;IACT;AACF","ignoreList":[0]}},
    {"offset": {"line": 8138, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8144, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark/dev/lib/create-tokenizer.js"],"sourcesContent":["/**\n * @import {\n *   Chunk,\n *   Code,\n *   ConstructRecord,\n *   Construct,\n *   Effects,\n *   InitialConstruct,\n *   ParseContext,\n *   Point,\n *   State,\n *   TokenizeContext,\n *   Token\n * } from 'micromark-util-types'\n */\n\n/**\n * @callback Restore\n *   Restore the state.\n * @returns {undefined}\n *   Nothing.\n *\n * @typedef Info\n *   Info.\n * @property {Restore} restore\n *   Restore.\n * @property {number} from\n *   From.\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n *   Construct.\n * @param {Info} info\n *   Info.\n * @returns {undefined}\n *   Nothing.\n */\n\nimport createDebug from 'debug'\nimport {ok as assert} from 'devlop'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\nimport {codes, values} from 'micromark-util-symbol'\n\nconst debug = createDebug('micromark')\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n *   Parser.\n * @param {InitialConstruct} initialize\n *   Construct.\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n *   Point (optional).\n * @returns {TokenizeContext}\n *   Context.\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = {\n    _bufferIndex: -1,\n    _index: 0,\n    line: (from && from.line) || 1,\n    column: (from && from.column) || 1,\n    offset: (from && from.offset) || 0\n  }\n  /** @type {Record<string, number>} */\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n  let chunks = []\n  /** @type {Array<Token>} */\n  let stack = []\n  /** @type {boolean | undefined} */\n  let consumed = true\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    consume,\n    enter,\n    exit,\n    interrupt: constructFactory(onsuccessfulcheck, {interrupt: true})\n  }\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    code: codes.eof,\n    containerState: {},\n    defineSkip,\n    events: [],\n    now,\n    parser,\n    previous: codes.eof,\n    sliceSerialize,\n    sliceStream,\n    write\n  }\n\n  /**\n   * The state function.\n   *\n   * @type {State | undefined}\n   */\n  let state = initialize.tokenize.call(context, effects)\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice)\n\n    main()\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== codes.eof) {\n      return []\n    }\n\n    addResult(initialize, 0)\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n\n    return context.events\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {_bufferIndex, _index, line, column, offset} = point\n    return {_bufferIndex, _index, line, column, offset}\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n    debug('position: define skip: `%j`', point)\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index]\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   *   Code.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function go(code) {\n    assert(consumed === true, 'expected character to be consumed')\n    consumed = undefined\n    debug('main: passing `%s` to %s', code, state && state.name)\n    expectedCode = code\n    assert(typeof state === 'function', 'expected state')\n    state = state(code)\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    assert(code === expectedCode, 'expected given code to equal expected code')\n\n    debug('consume: `%s`', code)\n\n    assert(\n      consumed === undefined,\n      'expected code to not have been consumed: this might be because `return x(code)` instead of `return x` was used'\n    )\n    assert(\n      code === null\n        ? context.events.length === 0 ||\n            context.events[context.events.length - 1][0] === 'exit'\n        : context.events[context.events.length - 1][0] === 'enter',\n      'expected last token to be open'\n    )\n\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === codes.carriageReturnLineFeed ? 2 : 1\n      accountForPotentialSkip()\n      debug('position: after eol: `%j`', point)\n    } else if (code !== codes.virtualSpace) {\n      point.column++\n      point.offset++\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++\n\n      // At end of string chunk.\n      if (\n        point._bufferIndex ===\n        // Points w/ non-negative `_bufferIndex` reference\n        // strings.\n        /** @type {string} */ (chunks[point._index]).length\n      ) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code\n\n    // Mark as consumed.\n    consumed = true\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n\n    assert(typeof type === 'string', 'expected string type')\n    assert(type.length > 0, 'expected non-empty string')\n    debug('enter: `%s`', type)\n\n    context.events.push(['enter', token, context])\n\n    stack.push(token)\n\n    return token\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    assert(typeof type === 'string', 'expected string type')\n    assert(type.length > 0, 'expected non-empty string')\n\n    const token = stack.pop()\n    assert(token, 'cannot close w/o open tokens')\n    token.end = now()\n\n    assert(type === token.type, 'expected exit token to match current token')\n\n    assert(\n      !(\n        token.start._index === token.end._index &&\n        token.start._bufferIndex === token.end._bufferIndex\n      ),\n      'expected non-empty token (`' + type + '`)'\n    )\n\n    debug('exit: `%s`', token.type)\n    context.events.push(['exit', token, context])\n\n    return token\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   *   Callback.\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   *   Fields.\n   */\n  function constructFactory(onreturn, fields) {\n    return hook\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | ConstructRecord | Construct} constructs\n     *   Constructs.\n     * @param {State} returnState\n     *   State.\n     * @param {State | undefined} [bogusState]\n     *   State.\n     * @returns {State}\n     *   State.\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {ReadonlyArray<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n      let constructIndex\n      /** @type {Construct} */\n      let currentConstruct\n      /** @type {Info} */\n      let info\n\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs\n          ? // Looks like a construct.\n            handleListOfConstructs([/** @type {Construct} */ (constructs)])\n          : handleMapOfConstructs(constructs)\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       *   Constructs.\n       * @returns {State}\n       *   State.\n       */\n      function handleMapOfConstructs(map) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          const left = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n            /* c8 ignore next 2 */\n            ...(Array.isArray(left) ? left : left ? [left] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n\n          return handleListOfConstructs(list)(code)\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ReadonlyArray<Construct>} list\n       *   Constructs.\n       * @returns {State}\n       *   State.\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          assert(bogusState, 'expected `bogusState` to be given')\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       *   Construct.\n       * @returns {State}\n       *   State.\n       */\n      function handleConstruct(construct) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          // Always populated by defaults.\n          assert(\n            context.parser.constructs.disable.null,\n            'expected `disable.null` to be populated'\n          )\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        assert(code === expectedCode, 'expected code')\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        assert(code === expectedCode, 'expected code')\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   *   Construct.\n   * @param {number} from\n   *   From.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n\n    assert(\n      construct.partial ||\n        context.events.length === 0 ||\n        context.events[context.events.length - 1][0] === 'exit',\n      'expected last token to end'\n    )\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   *   Info.\n   */\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n\n    return {from: startEventsIndex, restore}\n\n    /**\n     * Restore state.\n     *\n     * @returns {undefined}\n     *   Nothing.\n     */\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n      debug('position: restore: `%j`', point)\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {ReadonlyArray<Chunk>} chunks\n *   Chunks.\n * @param {Pick<Token, 'end' | 'start'>} token\n *   Token.\n * @returns {Array<Chunk>}\n *   Chunks.\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n  let view\n\n  if (startIndex === endIndex) {\n    assert(endBufferIndex > -1, 'expected non-negative end buffer index')\n    assert(startBufferIndex > -1, 'expected non-negative start buffer index')\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      const head = view[0]\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex)\n      } else {\n        assert(startBufferIndex === 0, 'expected `startBufferIndex` to be `0`')\n        view.shift()\n      }\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {ReadonlyArray<Chunk>} chunks\n *   Chunks.\n * @param {boolean | undefined} [expandTabs=false]\n *   Whether to expand tabs (default: `false`).\n * @returns {string}\n *   Result.\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {boolean | undefined} */\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case codes.carriageReturn: {\n          value = values.cr\n\n          break\n        }\n\n        case codes.lineFeed: {\n          value = values.lf\n\n          break\n        }\n\n        case codes.carriageReturnLineFeed: {\n          value = values.cr + values.lf\n\n          break\n        }\n\n        case codes.horizontalTab: {\n          value = expandTabs ? values.space : values.ht\n\n          break\n        }\n\n        case codes.virtualSpace: {\n          if (!expandTabs && atTab) continue\n          value = values.space\n\n          break\n        }\n\n        default: {\n          assert(typeof chunk === 'number', 'expected number')\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === codes.horizontalTab\n    result.push(value)\n  }\n\n  return result.join('')\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 8696, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8702, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark/dev/lib/parse.js"],"sourcesContent":["/**\n * @import {\n *   Create,\n *   FullNormalizedExtension,\n *   InitialConstruct,\n *   ParseContext,\n *   ParseOptions\n * } from 'micromark-util-types'\n */\n\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {string, text} from './initialize/text.js'\nimport * as defaultConstructs from './constructs.js'\nimport {createTokenizer} from './create-tokenizer.js'\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ParseContext}\n *   Parser.\n */\nexport function parse(options) {\n  const settings = options || {}\n  const constructs = /** @type {FullNormalizedExtension} */ (\n    combineExtensions([defaultConstructs, ...(settings.extensions || [])])\n  )\n\n  /** @type {ParseContext} */\n  const parser = {\n    constructs,\n    content: create(content),\n    defined: [],\n    document: create(document),\n    flow: create(flow),\n    lazy: {},\n    string: create(string),\n    text: create(text)\n  }\n\n  return parser\n\n  /**\n   * @param {InitialConstruct} initial\n   *   Construct to start with.\n   * @returns {Create}\n   *   Create a tokenizer.\n   */\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;CAQC;;;AAED;AAKA;AAJA;AACA;AACA;AACA;AAEA;;;;;;;;AAQO,SAAS,MAAM,OAAO;IAC3B,MAAM,WAAW,WAAW,CAAC;IAC7B,MAAM,aACJ,CAAA,GAAA,+JAAA,CAAA,oBAAiB,AAAD,EAAE;QAAC;WAAuB,SAAS,UAAU,IAAI,EAAE;KAAE;IAGvE,yBAAyB,GACzB,MAAM,SAAS;QACb;QACA,SAAS,OAAO,4JAAA,CAAA,UAAO;QACvB,SAAS,EAAE;QACX,UAAU,OAAO,6JAAA,CAAA,WAAQ;QACzB,MAAM,OAAO,yJAAA,CAAA,OAAI;QACjB,MAAM,CAAC;QACP,QAAQ,OAAO,yJAAA,CAAA,SAAM;QACrB,MAAM,OAAO,yJAAA,CAAA,OAAI;IACnB;IAEA,OAAO;;IAEP;;;;;GAKC,GACD,SAAS,OAAO,OAAO;QACrB,OAAO;;QACP,mBAAmB,GACnB,SAAS,QAAQ,IAAI;YACnB,OAAO,CAAA,GAAA,0JAAA,CAAA,kBAAe,AAAD,EAAE,QAAQ,SAAS;QAC1C;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 8758, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8764, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark/dev/lib/preprocess.js"],"sourcesContent":["/**\n * @import {Chunk, Code, Encoding, Value} from 'micromark-util-types'\n */\n\n/**\n * @callback Preprocessor\n *   Preprocess a value.\n * @param {Value} value\n *   Value.\n * @param {Encoding | null | undefined} [encoding]\n *   Encoding when `value` is a typed array (optional).\n * @param {boolean | null | undefined} [end=false]\n *   Whether this is the last chunk (default: `false`).\n * @returns {Array<Chunk>}\n *   Chunks.\n */\n\nimport {codes, constants} from 'micromark-util-symbol'\n\nconst search = /[\\0\\t\\n\\r]/g\n\n/**\n * @returns {Preprocessor}\n *   Preprocess a value.\n */\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean | undefined} */\n  let start = true\n  /** @type {boolean | undefined} */\n  let atCarriageReturn\n\n  return preprocessor\n\n  /** @type {Preprocessor} */\n  // eslint-disable-next-line complexity\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray | null} */\n    let match\n    /** @type {number} */\n    let next\n    /** @type {number} */\n    let startPosition\n    /** @type {number} */\n    let endPosition\n    /** @type {Code} */\n    let code\n\n    value =\n      buffer +\n      (typeof value === 'string'\n        ? value.toString()\n        : new TextDecoder(encoding || undefined).decode(value))\n\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === codes.byteOrderMarker) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (\n        code === codes.lf &&\n        startPosition === endPosition &&\n        atCarriageReturn\n      ) {\n        chunks.push(codes.carriageReturnLineFeed)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(codes.carriageReturn)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case codes.nul: {\n            chunks.push(codes.replacementCharacter)\n            column++\n\n            break\n          }\n\n          case codes.ht: {\n            next = Math.ceil(column / constants.tabSize) * constants.tabSize\n            chunks.push(codes.horizontalTab)\n            while (column++ < next) chunks.push(codes.virtualSpace)\n\n            break\n          }\n\n          case codes.lf: {\n            chunks.push(codes.lineFeed)\n            column = 1\n\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(codes.carriageReturn)\n      if (buffer) chunks.push(buffer)\n      chunks.push(codes.eof)\n    }\n\n    return chunks\n  }\n}\n"],"names":[],"mappings":"AAAA;;CAEC,GAED;;;;;;;;;;;CAWC;;;AAED;AAAA;;AAEA,MAAM,SAAS;AAMR,SAAS;IACd,IAAI,SAAS;IACb,IAAI,SAAS;IACb,gCAAgC,GAChC,IAAI,QAAQ;IACZ,gCAAgC,GAChC,IAAI;IAEJ,OAAO;;IAEP,yBAAyB,GACzB,sCAAsC;IACtC,SAAS,aAAa,KAAK,EAAE,QAAQ,EAAE,GAAG;QACxC,yBAAyB,GACzB,MAAM,SAAS,EAAE;QACjB,oCAAoC,GACpC,IAAI;QACJ,mBAAmB,GACnB,IAAI;QACJ,mBAAmB,GACnB,IAAI;QACJ,mBAAmB,GACnB,IAAI;QACJ,iBAAiB,GACjB,IAAI;QAEJ,QACE,SACA,CAAC,OAAO,UAAU,WACd,MAAM,QAAQ,KACd,IAAI,YAAY,YAAY,WAAW,MAAM,CAAC,MAAM;QAE1D,gBAAgB;QAChB,SAAS;QAET,IAAI,OAAO;YACT,+DAA+D;YAC/D,IAAI,MAAM,UAAU,CAAC,OAAO,uJAAA,CAAA,QAAK,CAAC,eAAe,EAAE;gBACjD;YACF;YAEA,QAAQ;QACV;QAEA,MAAO,gBAAgB,MAAM,MAAM,CAAE;YACnC,OAAO,SAAS,GAAG;YACnB,QAAQ,OAAO,IAAI,CAAC;YACpB,cACE,SAAS,MAAM,KAAK,KAAK,YAAY,MAAM,KAAK,GAAG,MAAM,MAAM;YACjE,OAAO,MAAM,UAAU,CAAC;YAExB,IAAI,CAAC,OAAO;gBACV,SAAS,MAAM,KAAK,CAAC;gBACrB;YACF;YAEA,IACE,SAAS,uJAAA,CAAA,QAAK,CAAC,EAAE,IACjB,kBAAkB,eAClB,kBACA;gBACA,OAAO,IAAI,CAAC,uJAAA,CAAA,QAAK,CAAC,sBAAsB;gBACxC,mBAAmB;YACrB,OAAO;gBACL,IAAI,kBAAkB;oBACpB,OAAO,IAAI,CAAC,uJAAA,CAAA,QAAK,CAAC,cAAc;oBAChC,mBAAmB;gBACrB;gBAEA,IAAI,gBAAgB,aAAa;oBAC/B,OAAO,IAAI,CAAC,MAAM,KAAK,CAAC,eAAe;oBACvC,UAAU,cAAc;gBAC1B;gBAEA,OAAQ;oBACN,KAAK,uJAAA,CAAA,QAAK,CAAC,GAAG;wBAAE;4BACd,OAAO,IAAI,CAAC,uJAAA,CAAA,QAAK,CAAC,oBAAoB;4BACtC;4BAEA;wBACF;oBAEA,KAAK,uJAAA,CAAA,QAAK,CAAC,EAAE;wBAAE;4BACb,OAAO,KAAK,IAAI,CAAC,SAAS,2JAAA,CAAA,YAAS,CAAC,OAAO,IAAI,2JAAA,CAAA,YAAS,CAAC,OAAO;4BAChE,OAAO,IAAI,CAAC,uJAAA,CAAA,QAAK,CAAC,aAAa;4BAC/B,MAAO,WAAW,KAAM,OAAO,IAAI,CAAC,uJAAA,CAAA,QAAK,CAAC,YAAY;4BAEtD;wBACF;oBAEA,KAAK,uJAAA,CAAA,QAAK,CAAC,EAAE;wBAAE;4BACb,OAAO,IAAI,CAAC,uJAAA,CAAA,QAAK,CAAC,QAAQ;4BAC1B,SAAS;4BAET;wBACF;oBAEA;wBAAS;4BACP,mBAAmB;4BACnB,SAAS;wBACX;gBACF;YACF;YAEA,gBAAgB,cAAc;QAChC;QAEA,IAAI,KAAK;YACP,IAAI,kBAAkB,OAAO,IAAI,CAAC,uJAAA,CAAA,QAAK,CAAC,cAAc;YACtD,IAAI,QAAQ,OAAO,IAAI,CAAC;YACxB,OAAO,IAAI,CAAC,uJAAA,CAAA,QAAK,CAAC,GAAG;QACvB;QAEA,OAAO;IACT;AACF","ignoreList":[0]}},
    {"offset": {"line": 8867, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8873, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-util-combine-extensions/index.js"],"sourcesContent":["/**\n * @import {\n *   Extension,\n *   Handles,\n *   HtmlExtension,\n *   NormalizedExtension\n * } from 'micromark-util-types'\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {ReadonlyArray<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n *   List of constructs to merge into.\n * @param {Array<unknown>} list\n *   List of constructs to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {ReadonlyArray<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   Single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;;CAOC;;;;AAED;;AAEA,MAAM,iBAAiB,CAAC,EAAE,cAAc;AAUjC,SAAS,kBAAkB,UAAU;IAC1C,gCAAgC,GAChC,MAAM,MAAM,CAAC;IACb,IAAI,QAAQ,CAAC;IAEb,MAAO,EAAE,QAAQ,WAAW,MAAM,CAAE;QAClC,gBAAgB,KAAK,UAAU,CAAC,MAAM;IACxC;IAEA,OAAO;AACT;AAEA;;;;;;;;;CASC,GACD,SAAS,gBAAgB,GAAG,EAAE,SAAS;IACrC,4BAA4B,GAC5B,IAAI;IAEJ,IAAK,QAAQ,UAAW;QACtB,MAAM,QAAQ,eAAe,IAAI,CAAC,KAAK,QAAQ,GAAG,CAAC,KAAK,GAAG;QAC3D,oCAAoC,GACpC,MAAM,OAAO,SAAS,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC;QACrC,gDAAgD,GAChD,MAAM,QAAQ,SAAS,CAAC,KAAK;QAC7B,mBAAmB,GACnB,IAAI;QAEJ,IAAI,OAAO;YACT,IAAK,QAAQ,MAAO;gBAClB,IAAI,CAAC,eAAe,IAAI,CAAC,MAAM,OAAO,IAAI,CAAC,KAAK,GAAG,EAAE;gBACrD,MAAM,QAAQ,KAAK,CAAC,KAAK;gBACzB,WACE,sCAAsC;gBACtC,IAAI,CAAC,KAAK,EACV,MAAM,OAAO,CAAC,SAAS,QAAQ,QAAQ;oBAAC;iBAAM,GAAG,EAAE;YAEvD;QACF;IACF;AACF;AAEA;;;;;;;;;;CAUC,GACD,SAAS,WAAW,QAAQ,EAAE,IAAI;IAChC,IAAI,QAAQ,CAAC;IACb,2BAA2B,GAC3B,MAAM,SAAS,EAAE;IAEjB,MAAO,EAAE,QAAQ,KAAK,MAAM,CAAE;QAC5B,yCAAyC;;QACxC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,KAAK,UAAU,WAAW,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM;IACrE;IAEA,CAAA,GAAA,wJAAA,CAAA,SAAM,AAAD,EAAE,UAAU,GAAG,GAAG;AACzB;AAUO,SAAS,sBAAsB,cAAc;IAClD,0BAA0B,GAC1B,MAAM,WAAW,CAAC;IAClB,IAAI,QAAQ,CAAC;IAEb,MAAO,EAAE,QAAQ,eAAe,MAAM,CAAE;QACtC,cAAc,UAAU,cAAc,CAAC,MAAM;IAC/C;IAEA,OAAO;AACT;AAEA;;;;;;;;;CASC,GACD,SAAS,cAAc,GAAG,EAAE,SAAS;IACnC,gCAAgC,GAChC,IAAI;IAEJ,IAAK,QAAQ,UAAW;QACtB,MAAM,QAAQ,eAAe,IAAI,CAAC,KAAK,QAAQ,GAAG,CAAC,KAAK,GAAG;QAC3D,MAAM,OAAO,SAAS,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC;QACrC,MAAM,QAAQ,SAAS,CAAC,KAAK;QAC7B,0BAA0B,GAC1B,IAAI;QAEJ,IAAI,OAAO;YACT,IAAK,QAAQ,MAAO;gBAClB,6EAA6E;gBAC7E,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK;YAC1B;QACF;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 8975, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8981, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-util-character/dev/index.js"],"sourcesContent":["/**\n * @import {Code} from 'micromark-util-types'\n */\n\nimport {codes} from 'micromark-util-symbol'\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < codes.space || code === codes.del)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < codes.horizontalTab\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < codes.nul || code === codes.space)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return (\n    code === codes.horizontalTab ||\n    code === codes.virtualSpace ||\n    code === codes.space\n  )\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u)\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n *   Expression.\n * @returns {(code: Code) => boolean}\n *   Check.\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code))\n  }\n}\n"],"names":[],"mappings":"AAAA;;CAEC;;;;;;;;;;;;;;AAED;;AAmBO,MAAM,aAAa,WAAW;AAc9B,MAAM,oBAAoB,WAAW;AAuBrC,MAAM,aAAa,WAAW;AAa9B,SAAS,aAAa,IAAI;IAC/B,OACE,wEAAwE;IACxE,gBAAgB;IAChB,SAAS,QAAQ,CAAC,OAAO,uJAAA,CAAA,QAAK,CAAC,KAAK,IAAI,SAAS,uJAAA,CAAA,QAAK,CAAC,GAAG;AAE9D;AAaO,MAAM,aAAa,WAAW;AAoB9B,MAAM,gBAAgB,WAAW;AAejC,MAAM,mBAAmB,WAAW;AAiBpC,SAAS,mBAAmB,IAAI;IACrC,OAAO,SAAS,QAAQ,OAAO,uJAAA,CAAA,QAAK,CAAC,aAAa;AACpD;AAWO,SAAS,0BAA0B,IAAI;IAC5C,OAAO,SAAS,QAAQ,CAAC,OAAO,uJAAA,CAAA,QAAK,CAAC,GAAG,IAAI,SAAS,uJAAA,CAAA,QAAK,CAAC,KAAK;AACnE;AAiBO,SAAS,cAAc,IAAI;IAChC,OACE,SAAS,uJAAA,CAAA,QAAK,CAAC,aAAa,IAC5B,SAAS,uJAAA,CAAA,QAAK,CAAC,YAAY,IAC3B,SAAS,uJAAA,CAAA,QAAK,CAAC,KAAK;AAExB;AAuBO,MAAM,qBAAqB,WAAW;AAsBtC,MAAM,oBAAoB,WAAW;AAE5C;;;;;;;CAOC,GACD,SAAS,WAAW,KAAK;IACvB,OAAO;;IAEP;;;;;;;GAOC,GACD,SAAS,MAAM,IAAI;QACjB,OAAO,SAAS,QAAQ,OAAO,CAAC,KAAK,MAAM,IAAI,CAAC,OAAO,YAAY,CAAC;IACtE;AACF","ignoreList":[0]}},
    {"offset": {"line": 9042, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9048, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-factory-space/dev/index.js"],"sourcesContent":["/**\n * @import {Effects, State, TokenType} from 'micromark-util-types'\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n"],"names":[],"mappings":"AAAA;;CAEC;;;AAED;;AAoCO,SAAS,aAAa,OAAO,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG;IACjD,MAAM,QAAQ,MAAM,MAAM,IAAI,OAAO,iBAAiB;IACtD,IAAI,OAAO;IAEX,OAAO;;IAEP,kBAAkB,GAClB,SAAS,MAAM,IAAI;QACjB,IAAI,CAAA,GAAA,0JAAA,CAAA,gBAAa,AAAD,EAAE,OAAO;YACvB,QAAQ,KAAK,CAAC;YACd,OAAO,OAAO;QAChB;QAEA,OAAO,GAAG;IACZ;IAEA,kBAAkB,GAClB,SAAS,OAAO,IAAI;QAClB,IAAI,CAAA,GAAA,0JAAA,CAAA,gBAAa,AAAD,EAAE,SAAS,SAAS,OAAO;YACzC,QAAQ,OAAO,CAAC;YAChB,OAAO;QACT;QAEA,QAAQ,IAAI,CAAC;QACb,OAAO,GAAG;IACZ;AACF","ignoreList":[0]}},
    {"offset": {"line": 9076, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9082, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-factory-label/dev/index.js"],"sourcesContent":["/**\n * @import {\n *   Effects,\n *   State,\n *   TokenizeContext,\n *   TokenType\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n  let seen\n\n  return start\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.leftSquareBracket, 'expected `[`')\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (\n      size > constants.linkReferenceSizeMax ||\n      code === codes.eof ||\n      code === codes.leftSquareBracket ||\n      (code === codes.rightSquareBracket && !seen) ||\n      // To do: remove in the future once we’ve switched from\n      // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n      // which doesn’t need this.\n      // Hidden footnotes hook.\n      /* c8 ignore next 3 */\n      (code === codes.caret &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs)\n    ) {\n      return nok(code)\n    }\n\n    if (code === codes.rightSquareBracket) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter(types.lineEnding)\n      effects.consume(code)\n      effects.exit(types.lineEnding)\n      return atBreak\n    }\n\n    effects.enter(types.chunkString, {contentType: constants.contentTypeString})\n    return labelInside(code)\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      code === codes.eof ||\n      code === codes.leftSquareBracket ||\n      code === codes.rightSquareBracket ||\n      markdownLineEnding(code) ||\n      size++ > constants.linkReferenceSizeMax\n    ) {\n      effects.exit(types.chunkString)\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    if (!seen) seen = !markdownSpace(code)\n    return code === codes.backslash ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (\n      code === codes.leftSquareBracket ||\n      code === codes.backslash ||\n      code === codes.rightSquareBracket\n    ) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n\n    return labelInside(code)\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;;CAOC;;;AAED;AAEA;AAAA;AADA;AACA;;;;AAiCO,SAAS,aAAa,OAAO,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,UAAU;IACzE,MAAM,OAAO,IAAI;IACjB,IAAI,OAAO;IACX,oBAAoB,GACpB,IAAI;IAEJ,OAAO;;IAEP;;;;;;;;;GASC,GACD,SAAS,MAAM,IAAI;QACjB,CAAA,GAAA,wIAAA,CAAA,KAAM,AAAD,EAAE,SAAS,uJAAA,CAAA,QAAK,CAAC,iBAAiB,EAAE;QACzC,QAAQ,KAAK,CAAC;QACd,QAAQ,KAAK,CAAC;QACd,QAAQ,OAAO,CAAC;QAChB,QAAQ,IAAI,CAAC;QACb,QAAQ,KAAK,CAAC;QACd,OAAO;IACT;IAEA;;;;;;;;;GASC,GACD,SAAS,QAAQ,IAAI;QACnB,IACE,OAAO,2JAAA,CAAA,YAAS,CAAC,oBAAoB,IACrC,SAAS,uJAAA,CAAA,QAAK,CAAC,GAAG,IAClB,SAAS,uJAAA,CAAA,QAAK,CAAC,iBAAiB,IAC/B,SAAS,uJAAA,CAAA,QAAK,CAAC,kBAAkB,IAAI,CAAC,QAMtC,SAAS,uJAAA,CAAA,QAAK,CAAC,KAAK,IACnB,CAAC,QACD,4BAA4B,KAAK,MAAM,CAAC,UAAU,EACpD;YACA,OAAO,IAAI;QACb;QAEA,IAAI,SAAS,uJAAA,CAAA,QAAK,CAAC,kBAAkB,EAAE;YACrC,QAAQ,IAAI,CAAC;YACb,QAAQ,KAAK,CAAC;YACd,QAAQ,OAAO,CAAC;YAChB,QAAQ,IAAI,CAAC;YACb,QAAQ,IAAI,CAAC;YACb,OAAO;QACT;QAEA,gDAAgD;QAChD,IAAI,CAAA,GAAA,0JAAA,CAAA,qBAAkB,AAAD,EAAE,OAAO;YAC5B,QAAQ,KAAK,CAAC,uJAAA,CAAA,QAAK,CAAC,UAAU;YAC9B,QAAQ,OAAO,CAAC;YAChB,QAAQ,IAAI,CAAC,uJAAA,CAAA,QAAK,CAAC,UAAU;YAC7B,OAAO;QACT;QAEA,QAAQ,KAAK,CAAC,uJAAA,CAAA,QAAK,CAAC,WAAW,EAAE;YAAC,aAAa,2JAAA,CAAA,YAAS,CAAC,iBAAiB;QAAA;QAC1E,OAAO,YAAY;IACrB;IAEA;;;;;;;;;GASC,GACD,SAAS,YAAY,IAAI;QACvB,IACE,SAAS,uJAAA,CAAA,QAAK,CAAC,GAAG,IAClB,SAAS,uJAAA,CAAA,QAAK,CAAC,iBAAiB,IAChC,SAAS,uJAAA,CAAA,QAAK,CAAC,kBAAkB,IACjC,CAAA,GAAA,0JAAA,CAAA,qBAAkB,AAAD,EAAE,SACnB,SAAS,2JAAA,CAAA,YAAS,CAAC,oBAAoB,EACvC;YACA,QAAQ,IAAI,CAAC,uJAAA,CAAA,QAAK,CAAC,WAAW;YAC9B,OAAO,QAAQ;QACjB;QAEA,QAAQ,OAAO,CAAC;QAChB,IAAI,CAAC,MAAM,OAAO,CAAC,CAAA,GAAA,0JAAA,CAAA,gBAAa,AAAD,EAAE;QACjC,OAAO,SAAS,uJAAA,CAAA,QAAK,CAAC,SAAS,GAAG,cAAc;IAClD;IAEA;;;;;;;;;GASC,GACD,SAAS,YAAY,IAAI;QACvB,IACE,SAAS,uJAAA,CAAA,QAAK,CAAC,iBAAiB,IAChC,SAAS,uJAAA,CAAA,QAAK,CAAC,SAAS,IACxB,SAAS,uJAAA,CAAA,QAAK,CAAC,kBAAkB,EACjC;YACA,QAAQ,OAAO,CAAC;YAChB;YACA,OAAO;QACT;QAEA,OAAO,YAAY;IACrB;AACF","ignoreList":[0]}},
    {"offset": {"line": 9193, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9199, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-util-normalize-identifier/dev/index.js"],"sourcesContent":["import {values} from 'micromark-util-symbol'\n\n/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, values.space)\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n"],"names":[],"mappings":";;;AAAA;;AAqBO,SAAS,oBAAoB,KAAK;IACvC,OACE,KACE,gCAAgC;KAC/B,OAAO,CAAC,eAAe,wJAAA,CAAA,SAAM,CAAC,KAAK,CACpC,QAAQ;KACP,OAAO,CAAC,UAAU,GACnB,qEAAqE;IACrE,iEAAiE;IACjE,aAAa;IACb,iEAAiE;IACjE,uEAAuE;IACvE,mCAAmC;KAClC,WAAW,GACX,WAAW;AAElB","ignoreList":[0]}},
    {"offset": {"line": 9215, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9221, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-factory-whitespace/dev/index.js"],"sourcesContent":["/**\n * @import {Effects, State} from 'micromark-util-types'\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\nimport {types} from 'micromark-util-symbol'\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns {State}\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(types.lineEnding)\n      effects.consume(code)\n      effects.exit(types.lineEnding)\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? types.linePrefix : types.lineSuffix\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n"],"names":[],"mappings":"AAAA;;CAEC;;;AAGD;AADA;AAEA;;;;AAoBO,SAAS,kBAAkB,OAAO,EAAE,EAAE;IAC3C,oBAAoB,GACpB,IAAI;IAEJ,OAAO;;IAEP,kBAAkB,GAClB,SAAS,MAAM,IAAI;QACjB,IAAI,CAAA,GAAA,0JAAA,CAAA,qBAAkB,AAAD,EAAE,OAAO;YAC5B,QAAQ,KAAK,CAAC,uJAAA,CAAA,QAAK,CAAC,UAAU;YAC9B,QAAQ,OAAO,CAAC;YAChB,QAAQ,IAAI,CAAC,uJAAA,CAAA,QAAK,CAAC,UAAU;YAC7B,OAAO;YACP,OAAO;QACT;QAEA,IAAI,CAAA,GAAA,0JAAA,CAAA,gBAAa,AAAD,EAAE,OAAO;YACvB,OAAO,CAAA,GAAA,yJAAA,CAAA,eAAY,AAAD,EAChB,SACA,OACA,OAAO,uJAAA,CAAA,QAAK,CAAC,UAAU,GAAG,uJAAA,CAAA,QAAK,CAAC,UAAU,EAC1C;QACJ;QAEA,OAAO,GAAG;IACZ;AACF","ignoreList":[0]}},
    {"offset": {"line": 9250, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9256, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-factory-destination/dev/index.js"],"sourcesContent":["/**\n * @import {Effects, State, TokenType} from 'micromark-util-types'\n */\n\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n\n  return start\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === codes.lessThan) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return enclosedBefore\n    }\n\n    // ASCII control, space, closing paren.\n    if (\n      code === codes.eof ||\n      code === codes.space ||\n      code === codes.rightParenthesis ||\n      asciiControl(code)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter(types.chunkString, {contentType: constants.contentTypeString})\n    return raw(code)\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === codes.greaterThan) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter(types.chunkString, {contentType: constants.contentTypeString})\n    return enclosed(code)\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === codes.greaterThan) {\n      effects.exit(types.chunkString)\n      effects.exit(stringType)\n      return enclosedBefore(code)\n    }\n\n    if (\n      code === codes.eof ||\n      code === codes.lessThan ||\n      markdownLineEnding(code)\n    ) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === codes.backslash ? enclosedEscape : enclosed\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (\n      code === codes.lessThan ||\n      code === codes.greaterThan ||\n      code === codes.backslash\n    ) {\n      effects.consume(code)\n      return enclosed\n    }\n\n    return enclosed(code)\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (\n      !balance &&\n      (code === codes.eof ||\n        code === codes.rightParenthesis ||\n        markdownLineEndingOrSpace(code))\n    ) {\n      effects.exit(types.chunkString)\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (balance < limit && code === codes.leftParenthesis) {\n      effects.consume(code)\n      balance++\n      return raw\n    }\n\n    if (code === codes.rightParenthesis) {\n      effects.consume(code)\n      balance--\n      return raw\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (\n      code === codes.eof ||\n      code === codes.space ||\n      code === codes.leftParenthesis ||\n      asciiControl(code)\n    ) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === codes.backslash ? rawEscape : raw\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (\n      code === codes.leftParenthesis ||\n      code === codes.rightParenthesis ||\n      code === codes.backslash\n    ) {\n      effects.consume(code)\n      return raw\n    }\n\n    return raw(code)\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 9418, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9424, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-factory-title/dev/index.js"],"sourcesContent":["/**\n * @import {\n *   Code,\n *   Effects,\n *   State,\n *   TokenType\n * } from 'micromark-util-types'\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n\n  return start\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (\n      code === codes.quotationMark ||\n      code === codes.apostrophe ||\n      code === codes.leftParenthesis\n    ) {\n      effects.enter(type)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      marker = code === codes.leftParenthesis ? codes.rightParenthesis : code\n      return begin\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atBreak(code)\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return begin(marker)\n    }\n\n    if (code === codes.eof) {\n      return nok(code)\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter(types.lineEnding)\n      effects.consume(code)\n      effects.exit(types.lineEnding)\n      return factorySpace(effects, atBreak, types.linePrefix)\n    }\n\n    effects.enter(types.chunkString, {contentType: constants.contentTypeString})\n    return inside(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.chunkString)\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    return code === codes.backslash ? escape : inside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === codes.backslash) {\n      effects.consume(code)\n      return inside\n    }\n\n    return inside(code)\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;;CAOC;;;AAID;AADA;AACA;AAAA;AAFA;;;;AAmCO,SAAS,aAAa,OAAO,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,UAAU;IACzE,8BAA8B,GAC9B,IAAI;IAEJ,OAAO;;IAEP;;;;;;;;;GASC,GACD,SAAS,MAAM,IAAI;QACjB,IACE,SAAS,uJAAA,CAAA,QAAK,CAAC,aAAa,IAC5B,SAAS,uJAAA,CAAA,QAAK,CAAC,UAAU,IACzB,SAAS,uJAAA,CAAA,QAAK,CAAC,eAAe,EAC9B;YACA,QAAQ,KAAK,CAAC;YACd,QAAQ,KAAK,CAAC;YACd,QAAQ,OAAO,CAAC;YAChB,QAAQ,IAAI,CAAC;YACb,SAAS,SAAS,uJAAA,CAAA,QAAK,CAAC,eAAe,GAAG,uJAAA,CAAA,QAAK,CAAC,gBAAgB,GAAG;YACnE,OAAO;QACT;QAEA,OAAO,IAAI;IACb;IAEA;;;;;;;;;;;GAWC,GACD,SAAS,MAAM,IAAI;QACjB,IAAI,SAAS,QAAQ;YACnB,QAAQ,KAAK,CAAC;YACd,QAAQ,OAAO,CAAC;YAChB,QAAQ,IAAI,CAAC;YACb,QAAQ,IAAI,CAAC;YACb,OAAO;QACT;QAEA,QAAQ,KAAK,CAAC;QACd,OAAO,QAAQ;IACjB;IAEA;;;;;;;;;GASC,GACD,SAAS,QAAQ,IAAI;QACnB,IAAI,SAAS,QAAQ;YACnB,QAAQ,IAAI,CAAC;YACb,OAAO,MAAM;QACf;QAEA,IAAI,SAAS,uJAAA,CAAA,QAAK,CAAC,GAAG,EAAE;YACtB,OAAO,IAAI;QACb;QAEA,4CAA4C;QAC5C,IAAI,CAAA,GAAA,0JAAA,CAAA,qBAAkB,AAAD,EAAE,OAAO;YAC5B,uDAAuD;YACvD,QAAQ,KAAK,CAAC,uJAAA,CAAA,QAAK,CAAC,UAAU;YAC9B,QAAQ,OAAO,CAAC;YAChB,QAAQ,IAAI,CAAC,uJAAA,CAAA,QAAK,CAAC,UAAU;YAC7B,OAAO,CAAA,GAAA,yJAAA,CAAA,eAAY,AAAD,EAAE,SAAS,SAAS,uJAAA,CAAA,QAAK,CAAC,UAAU;QACxD;QAEA,QAAQ,KAAK,CAAC,uJAAA,CAAA,QAAK,CAAC,WAAW,EAAE;YAAC,aAAa,2JAAA,CAAA,YAAS,CAAC,iBAAiB;QAAA;QAC1E,OAAO,OAAO;IAChB;IAEA;;;;GAIC,GACD,SAAS,OAAO,IAAI;QAClB,IAAI,SAAS,UAAU,SAAS,uJAAA,CAAA,QAAK,CAAC,GAAG,IAAI,CAAA,GAAA,0JAAA,CAAA,qBAAkB,AAAD,EAAE,OAAO;YACrE,QAAQ,IAAI,CAAC,uJAAA,CAAA,QAAK,CAAC,WAAW;YAC9B,OAAO,QAAQ;QACjB;QAEA,QAAQ,OAAO,CAAC;QAChB,OAAO,SAAS,uJAAA,CAAA,QAAK,CAAC,SAAS,GAAG,SAAS;IAC7C;IAEA;;;;;;;;;GASC,GACD,SAAS,OAAO,IAAI;QAClB,IAAI,SAAS,UAAU,SAAS,uJAAA,CAAA,QAAK,CAAC,SAAS,EAAE;YAC/C,QAAQ,OAAO,CAAC;YAChB,OAAO;QACT;QAEA,OAAO,OAAO;IAChB;AACF","ignoreList":[0]}},
    {"offset": {"line": 9547, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9553, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-util-html-tag-name/index.js"],"sourcesContent":["/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;CAcC;;;;AACM,MAAM,iBAAiB;IAC5B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAcM,MAAM,eAAe;IAAC;IAAO;IAAU;IAAS;CAAW","ignoreList":[0]}},
    {"offset": {"line": 9641, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9647, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/decode-named-character-reference/index.dom.js"],"sourcesContent":["/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n"],"names":[],"mappings":"AAAA,2BAA2B;AAE3B,sBAAsB;;;AAEtB,MAAM,UAAU,SAAS,aAAa,CAAC;AAMhC,SAAS,8BAA8B,KAAK;IACjD,MAAM,qBAAqB,MAAM,QAAQ;IACzC,QAAQ,SAAS,GAAG;IACpB,MAAM,OAAO,QAAQ,WAAW;IAEhC,uEAAuE;IACvE,8EAA8E;IAC9E,iEAAiE;IACjE,0EAA0E;IAC1E,6EAA6E;IAC7E,6BAA6B;IAC7B,2EAA2E;IAC3E,gBAAgB;IAChB,IAAI,KAAK,UAAU,CAAC,KAAK,MAAM,GAAG,OAAO,GAAG,OAAO,OAAM,UAAU,QAAQ;QACzE,OAAO;IACT;IAEA,2EAA2E;IAC3E,aAAa;IACb,2EAA2E;IAC3E,gBAAgB;IAChB,OAAO,SAAS,qBAAqB,QAAQ;AAC/C","ignoreList":[0]}},
    {"offset": {"line": 9673, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9679, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-util-resolve-all/index.js"],"sourcesContent":["/**\n * @import {Event, Resolver, TokenizeContext} from 'micromark-util-types'\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {ReadonlyArray<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n"],"names":[],"mappings":"AAAA;;CAEC,GAED;;;;;;;;;;;CAWC;;;AACM,SAAS,WAAW,UAAU,EAAE,MAAM,EAAE,OAAO;IACpD,4BAA4B,GAC5B,MAAM,SAAS,EAAE;IACjB,IAAI,QAAQ,CAAC;IAEb,MAAO,EAAE,QAAQ,WAAW,MAAM,CAAE;QAClC,MAAM,UAAU,UAAU,CAAC,MAAM,CAAC,UAAU;QAE5C,IAAI,WAAW,CAAC,OAAO,QAAQ,CAAC,UAAU;YACxC,SAAS,QAAQ,QAAQ;YACzB,OAAO,IAAI,CAAC;QACd;IACF;IAEA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 9707, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9713, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-util-classify-character/dev/index.js"],"sourcesContent":["/**\n * @import {Code} from 'micromark-util-types'\n */\n\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nimport {codes, constants} from 'micromark-util-symbol'\n\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (\n    code === codes.eof ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return constants.characterGroupWhitespace\n  }\n\n  if (unicodePunctuation(code)) {\n    return constants.characterGroupPunctuation\n  }\n}\n"],"names":[],"mappings":"AAAA;;CAEC;;;AAOD;AALA;AAKA;;;AAgBO,SAAS,kBAAkB,IAAI;IACpC,IACE,SAAS,uJAAA,CAAA,QAAK,CAAC,GAAG,IAClB,CAAA,GAAA,0JAAA,CAAA,4BAAyB,AAAD,EAAE,SAC1B,CAAA,GAAA,0JAAA,CAAA,oBAAiB,AAAD,EAAE,OAClB;QACA,OAAO,2JAAA,CAAA,YAAS,CAAC,wBAAwB;IAC3C;IAEA,IAAI,CAAA,GAAA,0JAAA,CAAA,qBAAkB,AAAD,EAAE,OAAO;QAC5B,OAAO,2JAAA,CAAA,YAAS,CAAC,yBAAyB;IAC5C;AACF","ignoreList":[0]}},
    {"offset": {"line": 9731, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9736, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/ms/index.js"],"sourcesContent":["/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n"],"names":[],"mappings":"AAAA;;CAEC,GAED,IAAI,IAAI;AACR,IAAI,IAAI,IAAI;AACZ,IAAI,IAAI,IAAI;AACZ,IAAI,IAAI,IAAI;AACZ,IAAI,IAAI,IAAI;AACZ,IAAI,IAAI,IAAI;AAEZ;;;;;;;;;;;;CAYC,GAED,OAAO,OAAO,GAAG,SAAU,GAAG,EAAE,OAAO;IACrC,UAAU,WAAW,CAAC;IACtB,IAAI,OAAO,OAAO;IAClB,IAAI,SAAS,YAAY,IAAI,MAAM,GAAG,GAAG;QACvC,OAAO,MAAM;IACf,OAAO,IAAI,SAAS,YAAY,SAAS,MAAM;QAC7C,OAAO,QAAQ,IAAI,GAAG,QAAQ,OAAO,SAAS;IAChD;IACA,MAAM,IAAI,MACR,0DACE,KAAK,SAAS,CAAC;AAErB;AAEA;;;;;;CAMC,GAED,SAAS,MAAM,GAAG;IAChB,MAAM,OAAO;IACb,IAAI,IAAI,MAAM,GAAG,KAAK;QACpB;IACF;IACA,IAAI,QAAQ,mIAAmI,IAAI,CACjJ;IAEF,IAAI,CAAC,OAAO;QACV;IACF;IACA,IAAI,IAAI,WAAW,KAAK,CAAC,EAAE;IAC3B,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE,IAAI,IAAI,EAAE,WAAW;IACzC,OAAQ;QACN,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;YACH,OAAO,IAAI;QACb,KAAK;QACL,KAAK;QACL,KAAK;YACH,OAAO,IAAI;QACb,KAAK;QACL,KAAK;QACL,KAAK;YACH,OAAO,IAAI;QACb,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;YACH,OAAO,IAAI;QACb,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;YACH,OAAO,IAAI;QACb,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;YACH,OAAO,IAAI;QACb,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;YACH,OAAO;QACT;YACE,OAAO;IACX;AACF;AAEA;;;;;;CAMC,GAED,SAAS,SAAS,EAAE;IAClB,IAAI,QAAQ,KAAK,GAAG,CAAC;IACrB,IAAI,SAAS,GAAG;QACd,OAAO,KAAK,KAAK,CAAC,KAAK,KAAK;IAC9B;IACA,IAAI,SAAS,GAAG;QACd,OAAO,KAAK,KAAK,CAAC,KAAK,KAAK;IAC9B;IACA,IAAI,SAAS,GAAG;QACd,OAAO,KAAK,KAAK,CAAC,KAAK,KAAK;IAC9B;IACA,IAAI,SAAS,GAAG;QACd,OAAO,KAAK,KAAK,CAAC,KAAK,KAAK;IAC9B;IACA,OAAO,KAAK;AACd;AAEA;;;;;;CAMC,GAED,SAAS,QAAQ,EAAE;IACjB,IAAI,QAAQ,KAAK,GAAG,CAAC;IACrB,IAAI,SAAS,GAAG;QACd,OAAO,OAAO,IAAI,OAAO,GAAG;IAC9B;IACA,IAAI,SAAS,GAAG;QACd,OAAO,OAAO,IAAI,OAAO,GAAG;IAC9B;IACA,IAAI,SAAS,GAAG;QACd,OAAO,OAAO,IAAI,OAAO,GAAG;IAC9B;IACA,IAAI,SAAS,GAAG;QACd,OAAO,OAAO,IAAI,OAAO,GAAG;IAC9B;IACA,OAAO,KAAK;AACd;AAEA;;CAEC,GAED,SAAS,OAAO,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI;IAChC,IAAI,WAAW,SAAS,IAAI;IAC5B,OAAO,KAAK,KAAK,CAAC,KAAK,KAAK,MAAM,OAAO,CAAC,WAAW,MAAM,EAAE;AAC/D","ignoreList":[0]}},
    {"offset": {"line": 9876, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9881, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/debug/src/common.js"],"sourcesContent":["\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '')\n\t\t\t.trim()\n\t\t\t.replace(' ', ',')\n\t\t\t.split(',')\n\t\t\t.filter(Boolean);\n\n\t\tfor (const ns of split) {\n\t\t\tif (ns[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(ns.slice(1));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(ns);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the given string matches a namespace template, honoring\n\t * asterisks as wildcards.\n\t *\n\t * @param {String} search\n\t * @param {String} template\n\t * @return {Boolean}\n\t */\n\tfunction matchesTemplate(search, template) {\n\t\tlet searchIndex = 0;\n\t\tlet templateIndex = 0;\n\t\tlet starIndex = -1;\n\t\tlet matchIndex = 0;\n\n\t\twhile (searchIndex < search.length) {\n\t\t\tif (templateIndex < template.length && (template[templateIndex] === search[searchIndex] || template[templateIndex] === '*')) {\n\t\t\t\t// Match character or proceed with wildcard\n\t\t\t\tif (template[templateIndex] === '*') {\n\t\t\t\t\tstarIndex = templateIndex;\n\t\t\t\t\tmatchIndex = searchIndex;\n\t\t\t\t\ttemplateIndex++; // Skip the '*'\n\t\t\t\t} else {\n\t\t\t\t\tsearchIndex++;\n\t\t\t\t\ttemplateIndex++;\n\t\t\t\t}\n\t\t\t} else if (starIndex !== -1) { // eslint-disable-line no-negated-condition\n\t\t\t\t// Backtrack to the last '*' and try to match more characters\n\t\t\t\ttemplateIndex = starIndex + 1;\n\t\t\t\tmatchIndex++;\n\t\t\t\tsearchIndex = matchIndex;\n\t\t\t} else {\n\t\t\t\treturn false; // No match\n\t\t\t}\n\t\t}\n\n\t\t// Handle trailing '*' in template\n\t\twhile (templateIndex < template.length && template[templateIndex] === '*') {\n\t\t\ttemplateIndex++;\n\t\t}\n\n\t\treturn templateIndex === template.length;\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names,\n\t\t\t...createDebug.skips.map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tfor (const skip of createDebug.skips) {\n\t\t\tif (matchesTemplate(name, skip)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (const ns of createDebug.names) {\n\t\t\tif (matchesTemplate(name, ns)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 10116, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10121, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/debug/src/browser.js"],"sourcesContent":["/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\tlet m;\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\t// eslint-disable-next-line no-return-assign\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && (m = navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)) && parseInt(m[1], 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 10345, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10351, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-string/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;CASC,GAED,oBAAoB;;;AACpB,MAAM,eAAe,CAAC;AAef,SAAS,SAAS,KAAK,EAAE,OAAO;IACrC,MAAM,WAAW,WAAW;IAC5B,MAAM,kBACJ,OAAO,SAAS,eAAe,KAAK,YAChC,SAAS,eAAe,GACxB;IACN,MAAM,cACJ,OAAO,SAAS,WAAW,KAAK,YAAY,SAAS,WAAW,GAAG;IAErE,OAAO,IAAI,OAAO,iBAAiB;AACrC;AAEA;;;;;;;;;;;CAWC,GACD,SAAS,IAAI,KAAK,EAAE,eAAe,EAAE,WAAW;IAC9C,IAAI,KAAK,QAAQ;QACf,IAAI,WAAW,OAAO;YACpB,OAAO,MAAM,IAAI,KAAK,UAAU,CAAC,cAAc,KAAK,MAAM,KAAK;QACjE;QAEA,IAAI,mBAAmB,SAAS,SAAS,MAAM,GAAG,EAAE;YAClD,OAAO,MAAM,GAAG;QAClB;QAEA,IAAI,cAAc,OAAO;YACvB,OAAO,IAAI,MAAM,QAAQ,EAAE,iBAAiB;QAC9C;IACF;IAEA,IAAI,MAAM,OAAO,CAAC,QAAQ;QACxB,OAAO,IAAI,OAAO,iBAAiB;IACrC;IAEA,OAAO;AACT;AAEA;;;;;;;;;;;CAWC,GACD,SAAS,IAAI,MAAM,EAAE,eAAe,EAAE,WAAW;IAC/C,0BAA0B,GAC1B,MAAM,SAAS,EAAE;IACjB,IAAI,QAAQ,CAAC;IAEb,MAAO,EAAE,QAAQ,OAAO,MAAM,CAAE;QAC9B,MAAM,CAAC,MAAM,GAAG,IAAI,MAAM,CAAC,MAAM,EAAE,iBAAiB;IACtD;IAEA,OAAO,OAAO,IAAI,CAAC;AACrB;AAEA;;;;;;;CAOC,GACD,SAAS,KAAK,KAAK;IACjB,OAAO,QAAQ,SAAS,OAAO,UAAU;AAC3C","ignoreList":[0]}},
    {"offset": {"line": 10427, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10433, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-util-decode-numeric-character-reference/dev/index.js"],"sourcesContent":["import {codes, values} from 'micromark-util-symbol'\n\n/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCodePoint(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space.\n    code < codes.ht ||\n    code === codes.vt ||\n    (code > codes.cr && code < codes.space) ||\n    // Control character (DEL) of C0, and C1 controls.\n    (code > codes.tilde && code < 160) ||\n    // Lone high surrogates and low surrogates.\n    (code > 55_295 && code < 57_344) ||\n    // Noncharacters.\n    (code > 64_975 && code < 65_008) ||\n    /* eslint-disable no-bitwise */\n    (code & 65_535) === 65_535 ||\n    (code & 65_535) === 65_534 ||\n    /* eslint-enable no-bitwise */\n    // Out of range\n    code > 1_114_111\n  ) {\n    return values.replacementCharacter\n  }\n\n  return String.fromCodePoint(code)\n}\n"],"names":[],"mappings":";;;AAAA;AAAA;;AAgBO,SAAS,gCAAgC,KAAK,EAAE,IAAI;IACzD,MAAM,OAAO,OAAO,QAAQ,CAAC,OAAO;IAEpC,IACE,uCAAuC;IACvC,OAAO,uJAAA,CAAA,QAAK,CAAC,EAAE,IACf,SAAS,uJAAA,CAAA,QAAK,CAAC,EAAE,IAChB,OAAO,uJAAA,CAAA,QAAK,CAAC,EAAE,IAAI,OAAO,uJAAA,CAAA,QAAK,CAAC,KAAK,IAErC,OAAO,uJAAA,CAAA,QAAK,CAAC,KAAK,IAAI,OAAO,OAE7B,OAAO,UAAU,OAAO,UAExB,OAAO,UAAU,OAAO,UACzB,6BAA6B,GAC7B,CAAC,OAAO,MAAM,MAAM,UACpB,CAAC,OAAO,MAAM,MAAM,UACpB,4BAA4B,GAC5B,eAAe;IACf,OAAO,WACP;QACA,OAAO,wJAAA,CAAA,SAAM,CAAC,oBAAoB;IACpC;IAEA,OAAO,OAAO,aAAa,CAAC;AAC9B","ignoreList":[0]}},
    {"offset": {"line": 10448, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10454, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-util-decode-string/dev/index.js"],"sourcesContent":["import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {codes, constants} from 'micromark-util-symbol'\n\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n\n/**\n * @param {string} $0\n *   Match.\n * @param {string} $1\n *   Character escape.\n * @param {string} $2\n *   Character reference.\n * @returns {string}\n *   Decoded value\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0)\n\n  if (head === codes.numberSign) {\n    const head = $2.charCodeAt(1)\n    const hex = head === codes.lowercaseX || head === codes.uppercaseX\n    return decodeNumericCharacterReference(\n      $2.slice(hex ? 2 : 1),\n      hex ? constants.numericBaseHexadecimal : constants.numericBaseDecimal\n    )\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n"],"names":[],"mappings":";;;AAEA;AAFA;AACA;AACA;;;;AAEA,MAAM,6BACJ;AAcK,SAAS,aAAa,KAAK;IAChC,OAAO,MAAM,OAAO,CAAC,4BAA4B;AACnD;AAEA;;;;;;;;;CASC,GACD,SAAS,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE;IACxB,IAAI,IAAI;QACN,UAAU;QACV,OAAO;IACT;IAEA,aAAa;IACb,MAAM,OAAO,GAAG,UAAU,CAAC;IAE3B,IAAI,SAAS,uJAAA,CAAA,QAAK,CAAC,UAAU,EAAE;QAC7B,MAAM,OAAO,GAAG,UAAU,CAAC;QAC3B,MAAM,MAAM,SAAS,uJAAA,CAAA,QAAK,CAAC,UAAU,IAAI,SAAS,uJAAA,CAAA,QAAK,CAAC,UAAU;QAClE,OAAO,CAAA,GAAA,4LAAA,CAAA,kCAA+B,AAAD,EACnC,GAAG,KAAK,CAAC,MAAM,IAAI,IACnB,MAAM,2JAAA,CAAA,YAAS,CAAC,sBAAsB,GAAG,2JAAA,CAAA,YAAS,CAAC,kBAAkB;IAEzE;IAEA,OAAO,CAAA,GAAA,qKAAA,CAAA,gCAA6B,AAAD,EAAE,OAAO;AAC9C","ignoreList":[0]}},
    {"offset": {"line": 10491, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10497, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-from-markdown/dev/lib/index.js"],"sourcesContent":["/**\n * @import {\n *   Break,\n *   Blockquote,\n *   Code,\n *   Definition,\n *   Emphasis,\n *   Heading,\n *   Html,\n *   Image,\n *   InlineCode,\n *   Link,\n *   ListItem,\n *   List,\n *   Nodes,\n *   Paragraph,\n *   PhrasingContent,\n *   ReferenceType,\n *   Root,\n *   Strong,\n *   Text,\n *   ThematicBreak\n * } from 'mdast'\n * @import {\n *   Encoding,\n *   Event,\n *   Token,\n *   Value\n * } from 'micromark-util-types'\n * @import {Point} from 'unist'\n * @import {\n *   CompileContext,\n *   CompileData,\n *   Config,\n *   Extension,\n *   Handle,\n *   OnEnterError,\n *   Options\n * } from './types.js'\n */\n\nimport {ok as assert} from 'devlop'\nimport {toString} from 'mdast-util-to-string'\nimport {parse, postprocess, preprocess} from 'micromark'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {codes, constants, types} from 'micromark-util-symbol'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Turn markdown into a syntax tree.\n *\n * @overload\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @overload\n * @param {Value} value\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @param {Value} value\n *   Markdown to parse.\n * @param {Encoding | Options | null | undefined} [encoding]\n *   Character encoding for when `value` is `Buffer`.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Root}\n *   mdast tree.\n */\nexport function fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding\n    encoding = undefined\n  }\n\n  return compiler(options)(\n    postprocess(\n      parse(options)\n        .document()\n        .write(preprocess()(value, encoding, true))\n    )\n  )\n}\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      characterReference: onexitcharacterreference,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {type: 'root', children: []}\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      data\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === types.listOrdered ||\n        events[index][1].type === types.listUnordered\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          assert(typeof tail === 'number', 'expected list ot be open')\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {sliceSerialize: events[index][2].sliceSerialize},\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0 ? events[0][1].start : {line: 1, column: 1, offset: 0}\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {line: 1, column: 1, offset: 0}\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n\n    while (++index <= length) {\n      const event = events[index]\n\n      switch (event[1].type) {\n        case types.listUnordered:\n        case types.listOrdered:\n        case types.blockQuote: {\n          if (event[0] === 'enter') {\n            containerBalance++\n          } else {\n            containerBalance--\n          }\n\n          atMarker = undefined\n\n          break\n        }\n\n        case types.lineEndingBlank: {\n          if (event[0] === 'enter') {\n            if (\n              listItem &&\n              !atMarker &&\n              !containerBalance &&\n              !firstBlankLineIndex\n            ) {\n              firstBlankLineIndex = index\n            }\n\n            atMarker = undefined\n          }\n\n          break\n        }\n\n        case types.linePrefix:\n        case types.listItemValue:\n        case types.listItemMarker:\n        case types.listItemPrefix:\n        case types.listItemPrefixWhitespace: {\n          // Empty.\n\n          break\n        }\n\n        default: {\n          atMarker = undefined\n        }\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === types.listItemPrefix) ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === types.listUnordered ||\n            event[1].type === types.listOrdered))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === types.lineEnding ||\n              tailEvent[1].type === types.lineEndingBlank\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = types.lineEndingBlank\n                listSpread = true\n              }\n\n              tailEvent[1].type = types.lineEnding\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === types.linePrefix ||\n              tailEvent[1].type === types.blockQuotePrefix ||\n              tailEvent[1].type === types.blockQuotePrefixWhitespace ||\n              tailEvent[1].type === types.blockQuoteMarker ||\n              tailEvent[1].type === types.listItemIndent\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === types.listItemPrefix) {\n          /** @type {Token} */\n          const item = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          }\n          listItem = item\n          events.splice(index, 0, ['enter', item, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Nodes} create\n   *   Create a node.\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @type {CompileContext['buffer']}\n   */\n  function buffer() {\n    this.stack.push({type: 'fragment', children: []})\n  }\n\n  /**\n   * @type {CompileContext['enter']}\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    assert(parent, 'expected `parent`')\n    assert('children' in parent, 'expected `parent`')\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    siblings.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler || undefined])\n    node.position = {\n      start: point(token.start),\n      // @ts-expect-error: `end` will be patched later.\n      end: undefined\n    }\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @type {CompileContext['exit']}\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    assert(node, 'expected `node`')\n    const open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({start: token.start, end: token.end}) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n\n    assert(node.type !== 'fragment', 'unexpected fragment `exit`ed')\n    assert(node.position, 'expected `position` to be defined')\n    node.position.end = point(token.end)\n  }\n\n  /**\n   * @type {CompileContext['resume']}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    this.data.expectingFirstListItemValue = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (this.data.expectingFirstListItemValue) {\n      const ancestor = this.stack[this.stack.length - 2]\n      assert(ancestor, 'expected nodes on stack')\n      assert(ancestor.type === 'list', 'expected list on stack')\n      ancestor.start = Number.parseInt(\n        this.sliceSerialize(token),\n        constants.numericBaseDecimal\n      )\n      this.data.expectingFirstListItemValue = undefined\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'code', 'expected code on stack')\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'code', 'expected code on stack')\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (this.data.flowCodeInside) return\n    this.buffer()\n    this.data.flowCodeInside = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'code', 'expected code on stack')\n\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    this.data.flowCodeInside = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'code', 'expected code on stack')\n\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'definition', 'expected definition on stack')\n\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'definition', 'expected definition on stack')\n\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'definition', 'expected definition on stack')\n\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'heading', 'expected heading on stack')\n\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n\n      assert(\n        depth === 1 ||\n          depth === 2 ||\n          depth === 3 ||\n          depth === 4 ||\n          depth === 5 ||\n          depth === 6,\n        'expected `depth` between `1` and `6`'\n      )\n\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    this.data.setextHeadingSlurpLineEnding = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'heading', 'expected heading on stack')\n\n    node.depth =\n      this.sliceSerialize(token).codePointAt(0) === codes.equalsTo ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    this.data.setextHeadingSlurpLineEnding = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert('children' in node, 'expected parent on stack')\n    /** @type {Array<Nodes>} */\n    const siblings = node.children\n\n    let tail = siblings[siblings.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      tail.position = {\n        start: point(token.start),\n        // @ts-expect-error: we’ll add `end` later.\n        end: undefined\n      }\n      siblings.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    assert(tail, 'expected a `node` to be on the stack')\n    assert('value' in tail, 'expected a `literal` to be on the stack')\n    assert(tail.position, 'expected `node` to have an open position')\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    assert(context, 'expected `node`')\n\n    // If we’re at a hard break, include the line ending in there.\n    if (this.data.atHardBreak) {\n      assert('children' in context, 'expected `parent`')\n      const tail = context.children[context.children.length - 1]\n      assert(tail.position, 'expected tail to have a starting position')\n      tail.position.end = point(token.end)\n      this.data.atHardBreak = undefined\n      return\n    }\n\n    if (\n      !this.data.setextHeadingSlurpLineEnding &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    this.data.atHardBreak = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'html', 'expected html on stack')\n\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'html', 'expected html on stack')\n\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'inlineCode', 'expected inline code on stack')\n\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'link', 'expected link on stack')\n\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut'\n\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n\n    this.data.referenceType = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'image', 'expected image on stack')\n\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut'\n\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n\n    this.data.referenceType = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    assert(ancestor, 'expected ancestor on stack')\n    assert(\n      ancestor.type === 'image' || ancestor.type === 'link',\n      'expected image or link on stack'\n    )\n\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    assert(fragment, 'expected node on stack')\n    assert(fragment.type === 'fragment', 'expected fragment on stack')\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(\n      node.type === 'image' || node.type === 'link',\n      'expected image or link on stack'\n    )\n\n    // Assume a reference.\n    this.data.inReference = true\n\n    if (node.type === 'link') {\n      /** @type {Array<PhrasingContent>} */\n      const children = fragment.children\n\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(\n      node.type === 'image' || node.type === 'link',\n      'expected image or link on stack'\n    )\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(\n      node.type === 'image' || node.type === 'link',\n      'expected image or link on stack'\n    )\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    this.data.inReference = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    this.data.referenceType = 'collapsed'\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(\n      node.type === 'image' || node.type === 'link',\n      'expected image reference or link reference on stack'\n    )\n\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    this.data.referenceType = 'full'\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    assert(\n      token.type === 'characterReferenceMarkerNumeric' ||\n        token.type === 'characterReferenceMarkerHexadecimal'\n    )\n    this.data.characterReferenceType = token.type\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = this.data.characterReferenceType\n    /** @type {string} */\n    let value\n\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === types.characterReferenceMarkerNumeric\n          ? constants.numericBaseDecimal\n          : constants.numericBaseHexadecimal\n      )\n      this.data.characterReferenceType = undefined\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      assert(result !== false, 'expected reference to decode')\n      value = result\n    }\n\n    const tail = this.stack[this.stack.length - 1]\n    assert(tail, 'expected `node`')\n    assert('value' in tail, 'expected `node.value`')\n    tail.value += value\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreference(token) {\n    const tail = this.stack.pop()\n    assert(tail, 'expected `node`')\n    assert(tail.position, 'expected `node.position`')\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'link', 'expected link on stack')\n\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'link', 'expected link on stack')\n\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {type: 'blockquote', children: []}\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {type: 'code', lang: null, meta: null, value: ''}\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {type: 'inlineCode', value: ''}\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {type: 'emphasis', children: []}\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    return {\n      type: 'heading',\n      // @ts-expect-error `depth` will be set later.\n      depth: 0,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {type: 'break'}\n  }\n\n  /** @returns {Html} */\n  function html() {\n    return {type: 'html', value: ''}\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {type: 'image', title: null, url: '', alt: null}\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {type: 'link', title: null, url: '', children: []}\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {type: 'paragraph', children: []}\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {type: 'strong', children: []}\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {type: 'text', value: ''}\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {type: 'thematicBreak'}\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {line: d.line, column: d.column, offset: d.offset}\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Array<Extension> | Extension>} extensions\n * @returns {undefined}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n\n  while (++index < extensions.length) {\n    const value = extensions[index]\n\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {undefined}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'canContainEols': {\n          const right = extension[key]\n          if (right) {\n            combined[key].push(...right)\n          }\n\n          break\n        }\n\n        case 'transforms': {\n          const right = extension[key]\n          if (right) {\n            combined[key].push(...right)\n          }\n\n          break\n        }\n\n        case 'enter':\n        case 'exit': {\n          const right = extension[key]\n          if (right) {\n            Object.assign(combined[key], right)\n          }\n\n          break\n        }\n        // No default\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({start: left.start, end: left.end}) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({start: right.start, end: right.end}) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({start: right.start, end: right.end}) +\n        ') is still open'\n    )\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 11576, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11582, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/remark-parse/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} FromMarkdownOptions\n * @typedef {import('unified').Parser<Root>} Parser\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {Omit<FromMarkdownOptions, 'extensions' | 'mdastExtensions'>} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * Aadd support for parsing from markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkParse(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc) {\n    return fromMarkdown(doc, {\n      ...self.data('settings'),\n      ...options,\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('micromarkExtensions') || [],\n      mdastExtensions: self.data('fromMarkdownExtensions') || []\n    })\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;CAKC,GAED;;CAEC;;;AAED;;AAUe,SAAS,YAAY,OAAO;IACzC,sBAAsB,GACtB,oFAAoF;IACpF,MAAM,OAAO,IAAI;IAEjB,KAAK,MAAM,GAAG;IAEd;;GAEC,GACD,SAAS,OAAO,GAAG;QACjB,OAAO,CAAA,GAAA,oKAAA,CAAA,eAAY,AAAD,EAAE,KAAK;YACvB,GAAG,KAAK,IAAI,CAAC,WAAW;YACxB,GAAG,OAAO;YACV,6CAA6C;YAC7C,uEAAuE;YACvE,mBAAmB;YACnB,YAAY,KAAK,IAAI,CAAC,0BAA0B,EAAE;YAClD,iBAAiB,KAAK,IAAI,CAAC,6BAA6B,EAAE;QAC5D;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 11612, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11617, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/acorn-jsx/xhtml.js"],"sourcesContent":["module.exports = {\n  quot: '\\u0022',\n  amp: '&',\n  apos: '\\u0027',\n  lt: '<',\n  gt: '>',\n  nbsp: '\\u00A0',\n  iexcl: '\\u00A1',\n  cent: '\\u00A2',\n  pound: '\\u00A3',\n  curren: '\\u00A4',\n  yen: '\\u00A5',\n  brvbar: '\\u00A6',\n  sect: '\\u00A7',\n  uml: '\\u00A8',\n  copy: '\\u00A9',\n  ordf: '\\u00AA',\n  laquo: '\\u00AB',\n  not: '\\u00AC',\n  shy: '\\u00AD',\n  reg: '\\u00AE',\n  macr: '\\u00AF',\n  deg: '\\u00B0',\n  plusmn: '\\u00B1',\n  sup2: '\\u00B2',\n  sup3: '\\u00B3',\n  acute: '\\u00B4',\n  micro: '\\u00B5',\n  para: '\\u00B6',\n  middot: '\\u00B7',\n  cedil: '\\u00B8',\n  sup1: '\\u00B9',\n  ordm: '\\u00BA',\n  raquo: '\\u00BB',\n  frac14: '\\u00BC',\n  frac12: '\\u00BD',\n  frac34: '\\u00BE',\n  iquest: '\\u00BF',\n  Agrave: '\\u00C0',\n  Aacute: '\\u00C1',\n  Acirc: '\\u00C2',\n  Atilde: '\\u00C3',\n  Auml: '\\u00C4',\n  Aring: '\\u00C5',\n  AElig: '\\u00C6',\n  Ccedil: '\\u00C7',\n  Egrave: '\\u00C8',\n  Eacute: '\\u00C9',\n  Ecirc: '\\u00CA',\n  Euml: '\\u00CB',\n  Igrave: '\\u00CC',\n  Iacute: '\\u00CD',\n  Icirc: '\\u00CE',\n  Iuml: '\\u00CF',\n  ETH: '\\u00D0',\n  Ntilde: '\\u00D1',\n  Ograve: '\\u00D2',\n  Oacute: '\\u00D3',\n  Ocirc: '\\u00D4',\n  Otilde: '\\u00D5',\n  Ouml: '\\u00D6',\n  times: '\\u00D7',\n  Oslash: '\\u00D8',\n  Ugrave: '\\u00D9',\n  Uacute: '\\u00DA',\n  Ucirc: '\\u00DB',\n  Uuml: '\\u00DC',\n  Yacute: '\\u00DD',\n  THORN: '\\u00DE',\n  szlig: '\\u00DF',\n  agrave: '\\u00E0',\n  aacute: '\\u00E1',\n  acirc: '\\u00E2',\n  atilde: '\\u00E3',\n  auml: '\\u00E4',\n  aring: '\\u00E5',\n  aelig: '\\u00E6',\n  ccedil: '\\u00E7',\n  egrave: '\\u00E8',\n  eacute: '\\u00E9',\n  ecirc: '\\u00EA',\n  euml: '\\u00EB',\n  igrave: '\\u00EC',\n  iacute: '\\u00ED',\n  icirc: '\\u00EE',\n  iuml: '\\u00EF',\n  eth: '\\u00F0',\n  ntilde: '\\u00F1',\n  ograve: '\\u00F2',\n  oacute: '\\u00F3',\n  ocirc: '\\u00F4',\n  otilde: '\\u00F5',\n  ouml: '\\u00F6',\n  divide: '\\u00F7',\n  oslash: '\\u00F8',\n  ugrave: '\\u00F9',\n  uacute: '\\u00FA',\n  ucirc: '\\u00FB',\n  uuml: '\\u00FC',\n  yacute: '\\u00FD',\n  thorn: '\\u00FE',\n  yuml: '\\u00FF',\n  OElig: '\\u0152',\n  oelig: '\\u0153',\n  Scaron: '\\u0160',\n  scaron: '\\u0161',\n  Yuml: '\\u0178',\n  fnof: '\\u0192',\n  circ: '\\u02C6',\n  tilde: '\\u02DC',\n  Alpha: '\\u0391',\n  Beta: '\\u0392',\n  Gamma: '\\u0393',\n  Delta: '\\u0394',\n  Epsilon: '\\u0395',\n  Zeta: '\\u0396',\n  Eta: '\\u0397',\n  Theta: '\\u0398',\n  Iota: '\\u0399',\n  Kappa: '\\u039A',\n  Lambda: '\\u039B',\n  Mu: '\\u039C',\n  Nu: '\\u039D',\n  Xi: '\\u039E',\n  Omicron: '\\u039F',\n  Pi: '\\u03A0',\n  Rho: '\\u03A1',\n  Sigma: '\\u03A3',\n  Tau: '\\u03A4',\n  Upsilon: '\\u03A5',\n  Phi: '\\u03A6',\n  Chi: '\\u03A7',\n  Psi: '\\u03A8',\n  Omega: '\\u03A9',\n  alpha: '\\u03B1',\n  beta: '\\u03B2',\n  gamma: '\\u03B3',\n  delta: '\\u03B4',\n  epsilon: '\\u03B5',\n  zeta: '\\u03B6',\n  eta: '\\u03B7',\n  theta: '\\u03B8',\n  iota: '\\u03B9',\n  kappa: '\\u03BA',\n  lambda: '\\u03BB',\n  mu: '\\u03BC',\n  nu: '\\u03BD',\n  xi: '\\u03BE',\n  omicron: '\\u03BF',\n  pi: '\\u03C0',\n  rho: '\\u03C1',\n  sigmaf: '\\u03C2',\n  sigma: '\\u03C3',\n  tau: '\\u03C4',\n  upsilon: '\\u03C5',\n  phi: '\\u03C6',\n  chi: '\\u03C7',\n  psi: '\\u03C8',\n  omega: '\\u03C9',\n  thetasym: '\\u03D1',\n  upsih: '\\u03D2',\n  piv: '\\u03D6',\n  ensp: '\\u2002',\n  emsp: '\\u2003',\n  thinsp: '\\u2009',\n  zwnj: '\\u200C',\n  zwj: '\\u200D',\n  lrm: '\\u200E',\n  rlm: '\\u200F',\n  ndash: '\\u2013',\n  mdash: '\\u2014',\n  lsquo: '\\u2018',\n  rsquo: '\\u2019',\n  sbquo: '\\u201A',\n  ldquo: '\\u201C',\n  rdquo: '\\u201D',\n  bdquo: '\\u201E',\n  dagger: '\\u2020',\n  Dagger: '\\u2021',\n  bull: '\\u2022',\n  hellip: '\\u2026',\n  permil: '\\u2030',\n  prime: '\\u2032',\n  Prime: '\\u2033',\n  lsaquo: '\\u2039',\n  rsaquo: '\\u203A',\n  oline: '\\u203E',\n  frasl: '\\u2044',\n  euro: '\\u20AC',\n  image: '\\u2111',\n  weierp: '\\u2118',\n  real: '\\u211C',\n  trade: '\\u2122',\n  alefsym: '\\u2135',\n  larr: '\\u2190',\n  uarr: '\\u2191',\n  rarr: '\\u2192',\n  darr: '\\u2193',\n  harr: '\\u2194',\n  crarr: '\\u21B5',\n  lArr: '\\u21D0',\n  uArr: '\\u21D1',\n  rArr: '\\u21D2',\n  dArr: '\\u21D3',\n  hArr: '\\u21D4',\n  forall: '\\u2200',\n  part: '\\u2202',\n  exist: '\\u2203',\n  empty: '\\u2205',\n  nabla: '\\u2207',\n  isin: '\\u2208',\n  notin: '\\u2209',\n  ni: '\\u220B',\n  prod: '\\u220F',\n  sum: '\\u2211',\n  minus: '\\u2212',\n  lowast: '\\u2217',\n  radic: '\\u221A',\n  prop: '\\u221D',\n  infin: '\\u221E',\n  ang: '\\u2220',\n  and: '\\u2227',\n  or: '\\u2228',\n  cap: '\\u2229',\n  cup: '\\u222A',\n  'int': '\\u222B',\n  there4: '\\u2234',\n  sim: '\\u223C',\n  cong: '\\u2245',\n  asymp: '\\u2248',\n  ne: '\\u2260',\n  equiv: '\\u2261',\n  le: '\\u2264',\n  ge: '\\u2265',\n  sub: '\\u2282',\n  sup: '\\u2283',\n  nsub: '\\u2284',\n  sube: '\\u2286',\n  supe: '\\u2287',\n  oplus: '\\u2295',\n  otimes: '\\u2297',\n  perp: '\\u22A5',\n  sdot: '\\u22C5',\n  lceil: '\\u2308',\n  rceil: '\\u2309',\n  lfloor: '\\u230A',\n  rfloor: '\\u230B',\n  lang: '\\u2329',\n  rang: '\\u232A',\n  loz: '\\u25CA',\n  spades: '\\u2660',\n  clubs: '\\u2663',\n  hearts: '\\u2665',\n  diams: '\\u2666'\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 11872, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11877, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/acorn-jsx/index.js"],"sourcesContent":["'use strict';\n\nconst XHTMLEntities = require('./xhtml');\n\nconst hexNumber = /^[\\da-fA-F]+$/;\nconst decimalNumber = /^\\d+$/;\n\n// The map to `acorn-jsx` tokens from `acorn` namespace objects.\nconst acornJsxMap = new WeakMap();\n\n// Get the original tokens for the given `acorn` namespace object.\nfunction getJsxTokens(acorn) {\n  acorn = acorn.Parser.acorn || acorn;\n  let acornJsx = acornJsxMap.get(acorn);\n  if (!acornJsx) {\n    const tt = acorn.tokTypes;\n    const TokContext = acorn.TokContext;\n    const TokenType = acorn.TokenType;\n    const tc_oTag = new TokContext('<tag', false);\n    const tc_cTag = new TokContext('</tag', false);\n    const tc_expr = new TokContext('<tag>...</tag>', true, true);\n    const tokContexts = {\n      tc_oTag: tc_oTag,\n      tc_cTag: tc_cTag,\n      tc_expr: tc_expr\n    };\n    const tokTypes = {\n      jsxName: new TokenType('jsxName'),\n      jsxText: new TokenType('jsxText', {beforeExpr: true}),\n      jsxTagStart: new TokenType('jsxTagStart', {startsExpr: true}),\n      jsxTagEnd: new TokenType('jsxTagEnd')\n    };\n\n    tokTypes.jsxTagStart.updateContext = function() {\n      this.context.push(tc_expr); // treat as beginning of JSX expression\n      this.context.push(tc_oTag); // start opening tag context\n      this.exprAllowed = false;\n    };\n    tokTypes.jsxTagEnd.updateContext = function(prevType) {\n      let out = this.context.pop();\n      if (out === tc_oTag && prevType === tt.slash || out === tc_cTag) {\n        this.context.pop();\n        this.exprAllowed = this.curContext() === tc_expr;\n      } else {\n        this.exprAllowed = true;\n      }\n    };\n\n    acornJsx = { tokContexts: tokContexts, tokTypes: tokTypes };\n    acornJsxMap.set(acorn, acornJsx);\n  }\n\n  return acornJsx;\n}\n\n// Transforms JSX element name to string.\n\nfunction getQualifiedJSXName(object) {\n  if (!object)\n    return object;\n\n  if (object.type === 'JSXIdentifier')\n    return object.name;\n\n  if (object.type === 'JSXNamespacedName')\n    return object.namespace.name + ':' + object.name.name;\n\n  if (object.type === 'JSXMemberExpression')\n    return getQualifiedJSXName(object.object) + '.' +\n    getQualifiedJSXName(object.property);\n}\n\nmodule.exports = function(options) {\n  options = options || {};\n  return function(Parser) {\n    return plugin({\n      allowNamespaces: options.allowNamespaces !== false,\n      allowNamespacedObjects: !!options.allowNamespacedObjects\n    }, Parser);\n  };\n};\n\n// This is `tokTypes` of the peer dep.\n// This can be different instances from the actual `tokTypes` this plugin uses.\nObject.defineProperty(module.exports, \"tokTypes\", {\n  get: function get_tokTypes() {\n    return getJsxTokens(require(\"acorn\")).tokTypes;\n  },\n  configurable: true,\n  enumerable: true\n});\n\nfunction plugin(options, Parser) {\n  const acorn = Parser.acorn || require(\"acorn\");\n  const acornJsx = getJsxTokens(acorn);\n  const tt = acorn.tokTypes;\n  const tok = acornJsx.tokTypes;\n  const tokContexts = acorn.tokContexts;\n  const tc_oTag = acornJsx.tokContexts.tc_oTag;\n  const tc_cTag = acornJsx.tokContexts.tc_cTag;\n  const tc_expr = acornJsx.tokContexts.tc_expr;\n  const isNewLine = acorn.isNewLine;\n  const isIdentifierStart = acorn.isIdentifierStart;\n  const isIdentifierChar = acorn.isIdentifierChar;\n\n  return class extends Parser {\n    // Expose actual `tokTypes` and `tokContexts` to other plugins.\n    static get acornJsx() {\n      return acornJsx;\n    }\n\n    // Reads inline JSX contents token.\n    jsx_readToken() {\n      let out = '', chunkStart = this.pos;\n      for (;;) {\n        if (this.pos >= this.input.length)\n          this.raise(this.start, 'Unterminated JSX contents');\n        let ch = this.input.charCodeAt(this.pos);\n\n        switch (ch) {\n        case 60: // '<'\n        case 123: // '{'\n          if (this.pos === this.start) {\n            if (ch === 60 && this.exprAllowed) {\n              ++this.pos;\n              return this.finishToken(tok.jsxTagStart);\n            }\n            return this.getTokenFromCode(ch);\n          }\n          out += this.input.slice(chunkStart, this.pos);\n          return this.finishToken(tok.jsxText, out);\n\n        case 38: // '&'\n          out += this.input.slice(chunkStart, this.pos);\n          out += this.jsx_readEntity();\n          chunkStart = this.pos;\n          break;\n\n        case 62: // '>'\n        case 125: // '}'\n          this.raise(\n            this.pos,\n            \"Unexpected token `\" + this.input[this.pos] + \"`. Did you mean `\" +\n              (ch === 62 ? \"&gt;\" : \"&rbrace;\") + \"` or \" + \"`{\\\"\" + this.input[this.pos] + \"\\\"}\" + \"`?\"\n          );\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.pos);\n            out += this.jsx_readNewLine(true);\n            chunkStart = this.pos;\n          } else {\n            ++this.pos;\n          }\n        }\n      }\n    }\n\n    jsx_readNewLine(normalizeCRLF) {\n      let ch = this.input.charCodeAt(this.pos);\n      let out;\n      ++this.pos;\n      if (ch === 13 && this.input.charCodeAt(this.pos) === 10) {\n        ++this.pos;\n        out = normalizeCRLF ? '\\n' : '\\r\\n';\n      } else {\n        out = String.fromCharCode(ch);\n      }\n      if (this.options.locations) {\n        ++this.curLine;\n        this.lineStart = this.pos;\n      }\n\n      return out;\n    }\n\n    jsx_readString(quote) {\n      let out = '', chunkStart = ++this.pos;\n      for (;;) {\n        if (this.pos >= this.input.length)\n          this.raise(this.start, 'Unterminated string constant');\n        let ch = this.input.charCodeAt(this.pos);\n        if (ch === quote) break;\n        if (ch === 38) { // '&'\n          out += this.input.slice(chunkStart, this.pos);\n          out += this.jsx_readEntity();\n          chunkStart = this.pos;\n        } else if (isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.pos);\n          out += this.jsx_readNewLine(false);\n          chunkStart = this.pos;\n        } else {\n          ++this.pos;\n        }\n      }\n      out += this.input.slice(chunkStart, this.pos++);\n      return this.finishToken(tt.string, out);\n    }\n\n    jsx_readEntity() {\n      let str = '', count = 0, entity;\n      let ch = this.input[this.pos];\n      if (ch !== '&')\n        this.raise(this.pos, 'Entity must start with an ampersand');\n      let startPos = ++this.pos;\n      while (this.pos < this.input.length && count++ < 10) {\n        ch = this.input[this.pos++];\n        if (ch === ';') {\n          if (str[0] === '#') {\n            if (str[1] === 'x') {\n              str = str.substr(2);\n              if (hexNumber.test(str))\n                entity = String.fromCharCode(parseInt(str, 16));\n            } else {\n              str = str.substr(1);\n              if (decimalNumber.test(str))\n                entity = String.fromCharCode(parseInt(str, 10));\n            }\n          } else {\n            entity = XHTMLEntities[str];\n          }\n          break;\n        }\n        str += ch;\n      }\n      if (!entity) {\n        this.pos = startPos;\n        return '&';\n      }\n      return entity;\n    }\n\n    // Read a JSX identifier (valid tag or attribute name).\n    //\n    // Optimized version since JSX identifiers can't contain\n    // escape characters and so can be read as single slice.\n    // Also assumes that first character was already checked\n    // by isIdentifierStart in readToken.\n\n    jsx_readWord() {\n      let ch, start = this.pos;\n      do {\n        ch = this.input.charCodeAt(++this.pos);\n      } while (isIdentifierChar(ch) || ch === 45); // '-'\n      return this.finishToken(tok.jsxName, this.input.slice(start, this.pos));\n    }\n\n    // Parse next token as JSX identifier\n\n    jsx_parseIdentifier() {\n      let node = this.startNode();\n      if (this.type === tok.jsxName)\n        node.name = this.value;\n      else if (this.type.keyword)\n        node.name = this.type.keyword;\n      else\n        this.unexpected();\n      this.next();\n      return this.finishNode(node, 'JSXIdentifier');\n    }\n\n    // Parse namespaced identifier.\n\n    jsx_parseNamespacedName() {\n      let startPos = this.start, startLoc = this.startLoc;\n      let name = this.jsx_parseIdentifier();\n      if (!options.allowNamespaces || !this.eat(tt.colon)) return name;\n      var node = this.startNodeAt(startPos, startLoc);\n      node.namespace = name;\n      node.name = this.jsx_parseIdentifier();\n      return this.finishNode(node, 'JSXNamespacedName');\n    }\n\n    // Parses element name in any form - namespaced, member\n    // or single identifier.\n\n    jsx_parseElementName() {\n      if (this.type === tok.jsxTagEnd) return '';\n      let startPos = this.start, startLoc = this.startLoc;\n      let node = this.jsx_parseNamespacedName();\n      if (this.type === tt.dot && node.type === 'JSXNamespacedName' && !options.allowNamespacedObjects) {\n        this.unexpected();\n      }\n      while (this.eat(tt.dot)) {\n        let newNode = this.startNodeAt(startPos, startLoc);\n        newNode.object = node;\n        newNode.property = this.jsx_parseIdentifier();\n        node = this.finishNode(newNode, 'JSXMemberExpression');\n      }\n      return node;\n    }\n\n    // Parses any type of JSX attribute value.\n\n    jsx_parseAttributeValue() {\n      switch (this.type) {\n      case tt.braceL:\n        let node = this.jsx_parseExpressionContainer();\n        if (node.expression.type === 'JSXEmptyExpression')\n          this.raise(node.start, 'JSX attributes must only be assigned a non-empty expression');\n        return node;\n\n      case tok.jsxTagStart:\n      case tt.string:\n        return this.parseExprAtom();\n\n      default:\n        this.raise(this.start, 'JSX value should be either an expression or a quoted JSX text');\n      }\n    }\n\n    // JSXEmptyExpression is unique type since it doesn't actually parse anything,\n    // and so it should start at the end of last read token (left brace) and finish\n    // at the beginning of the next one (right brace).\n\n    jsx_parseEmptyExpression() {\n      let node = this.startNodeAt(this.lastTokEnd, this.lastTokEndLoc);\n      return this.finishNodeAt(node, 'JSXEmptyExpression', this.start, this.startLoc);\n    }\n\n    // Parses JSX expression enclosed into curly brackets.\n\n    jsx_parseExpressionContainer() {\n      let node = this.startNode();\n      this.next();\n      node.expression = this.type === tt.braceR\n        ? this.jsx_parseEmptyExpression()\n        : this.parseExpression();\n      this.expect(tt.braceR);\n      return this.finishNode(node, 'JSXExpressionContainer');\n    }\n\n    // Parses following JSX attribute name-value pair.\n\n    jsx_parseAttribute() {\n      let node = this.startNode();\n      if (this.eat(tt.braceL)) {\n        this.expect(tt.ellipsis);\n        node.argument = this.parseMaybeAssign();\n        this.expect(tt.braceR);\n        return this.finishNode(node, 'JSXSpreadAttribute');\n      }\n      node.name = this.jsx_parseNamespacedName();\n      node.value = this.eat(tt.eq) ? this.jsx_parseAttributeValue() : null;\n      return this.finishNode(node, 'JSXAttribute');\n    }\n\n    // Parses JSX opening tag starting after '<'.\n\n    jsx_parseOpeningElementAt(startPos, startLoc) {\n      let node = this.startNodeAt(startPos, startLoc);\n      node.attributes = [];\n      let nodeName = this.jsx_parseElementName();\n      if (nodeName) node.name = nodeName;\n      while (this.type !== tt.slash && this.type !== tok.jsxTagEnd)\n        node.attributes.push(this.jsx_parseAttribute());\n      node.selfClosing = this.eat(tt.slash);\n      this.expect(tok.jsxTagEnd);\n      return this.finishNode(node, nodeName ? 'JSXOpeningElement' : 'JSXOpeningFragment');\n    }\n\n    // Parses JSX closing tag starting after '</'.\n\n    jsx_parseClosingElementAt(startPos, startLoc) {\n      let node = this.startNodeAt(startPos, startLoc);\n      let nodeName = this.jsx_parseElementName();\n      if (nodeName) node.name = nodeName;\n      this.expect(tok.jsxTagEnd);\n      return this.finishNode(node, nodeName ? 'JSXClosingElement' : 'JSXClosingFragment');\n    }\n\n    // Parses entire JSX element, including it's opening tag\n    // (starting after '<'), attributes, contents and closing tag.\n\n    jsx_parseElementAt(startPos, startLoc) {\n      let node = this.startNodeAt(startPos, startLoc);\n      let children = [];\n      let openingElement = this.jsx_parseOpeningElementAt(startPos, startLoc);\n      let closingElement = null;\n\n      if (!openingElement.selfClosing) {\n        contents: for (;;) {\n          switch (this.type) {\n          case tok.jsxTagStart:\n            startPos = this.start; startLoc = this.startLoc;\n            this.next();\n            if (this.eat(tt.slash)) {\n              closingElement = this.jsx_parseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n            children.push(this.jsx_parseElementAt(startPos, startLoc));\n            break;\n\n          case tok.jsxText:\n            children.push(this.parseExprAtom());\n            break;\n\n          case tt.braceL:\n            children.push(this.jsx_parseExpressionContainer());\n            break;\n\n          default:\n            this.unexpected();\n          }\n        }\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(\n            closingElement.start,\n            'Expected corresponding JSX closing tag for <' + getQualifiedJSXName(openingElement.name) + '>');\n        }\n      }\n      let fragmentOrElement = openingElement.name ? 'Element' : 'Fragment';\n\n      node['opening' + fragmentOrElement] = openingElement;\n      node['closing' + fragmentOrElement] = closingElement;\n      node.children = children;\n      if (this.type === tt.relational && this.value === \"<\") {\n        this.raise(this.start, \"Adjacent JSX elements must be wrapped in an enclosing tag\");\n      }\n      return this.finishNode(node, 'JSX' + fragmentOrElement);\n    }\n\n    // Parse JSX text\n\n    jsx_parseText() {\n      let node = this.parseLiteral(this.value);\n      node.type = \"JSXText\";\n      return node;\n    }\n\n    // Parses entire JSX element from current position.\n\n    jsx_parseElement() {\n      let startPos = this.start, startLoc = this.startLoc;\n      this.next();\n      return this.jsx_parseElementAt(startPos, startLoc);\n    }\n\n    parseExprAtom(refShortHandDefaultPos) {\n      if (this.type === tok.jsxText)\n        return this.jsx_parseText();\n      else if (this.type === tok.jsxTagStart)\n        return this.jsx_parseElement();\n      else\n        return super.parseExprAtom(refShortHandDefaultPos);\n    }\n\n    readToken(code) {\n      let context = this.curContext();\n\n      if (context === tc_expr) return this.jsx_readToken();\n\n      if (context === tc_oTag || context === tc_cTag) {\n        if (isIdentifierStart(code)) return this.jsx_readWord();\n\n        if (code == 62) {\n          ++this.pos;\n          return this.finishToken(tok.jsxTagEnd);\n        }\n\n        if ((code === 34 || code === 39) && context == tc_oTag)\n          return this.jsx_readString(code);\n      }\n\n      if (code === 60 && this.exprAllowed && this.input.charCodeAt(this.pos + 1) !== 33) {\n        ++this.pos;\n        return this.finishToken(tok.jsxTagStart);\n      }\n      return super.readToken(code);\n    }\n\n    updateContext(prevType) {\n      if (this.type == tt.braceL) {\n        var curContext = this.curContext();\n        if (curContext == tc_oTag) this.context.push(tokContexts.b_expr);\n        else if (curContext == tc_expr) this.context.push(tokContexts.b_tmpl);\n        else super.updateContext(prevType);\n        this.exprAllowed = true;\n      } else if (this.type === tt.slash && prevType === tok.jsxTagStart) {\n        this.context.length -= 2; // do not consider JSX expr -> JSX open tag -> ... anymore\n        this.context.push(tc_cTag); // reconsider as closing tag context\n        this.exprAllowed = false;\n      } else {\n        return super.updateContext(prevType);\n      }\n    }\n  };\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 12280, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12286, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/estree-util-visit/lib/color.default.js"],"sourcesContent":["/**\n * @param {string} d\n * @returns {string}\n */\nexport function color(d) {\n  return d\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AACM,SAAS,MAAM,CAAC;IACrB,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 12295, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12301, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/estree-util-visit/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('estree-jsx').Node} Node\n */\n\n/**\n * @typedef {CONTINUE | EXIT | SKIP} Action\n *   Union of the action types.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed), when moving in an array.\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n */\n\n/**\n * @callback Visitor\n *   Handle a node.\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node`, the `Visitor` should\n *   return a new `Index` to specify the sibling to traverse after `node` is\n *   traversed.\n *   Adding or removing next siblings of `node` is handled as expected without\n *   needing to return a new `Index`.\n * @param {Node} node\n *   Found node.\n * @param {string | undefined} key\n *   Field at which `node` lives in its parent (or where a list of nodes lives).\n * @param {number | undefined} index\n *   Index where `node` lives if `parent[key]` is an array.\n * @param {Array<Node>} ancestors\n *   Ancestors of `node`.\n * @returns {Action | ActionTuple | Index | null | undefined | void}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @typedef Visitors\n *   Handle nodes when entering (preorder) and leaving (postorder).\n * @property {Visitor | null | undefined} [enter]\n *   Handle nodes when entering (preorder) (optional).\n * @property {Visitor | null | undefined} [leave]\n *   Handle nodes when leaving (postorder) (optional).\n */\n\nimport {color} from 'estree-util-visit/do-not-use-color'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = Symbol('continue')\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = Symbol('exit')\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = Symbol('skip')\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) and/or *postorder* (**LRN**).\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor(s) when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * @param {Node} tree\n *   Tree to traverse\n * @param {Visitor | Visitors | null | undefined} [visitor]\n *   Handle each node (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport function visit(tree, visitor) {\n  /** @type {Visitor | undefined} */\n  let enter\n  /** @type {Visitor | undefined} */\n  let leave\n\n  if (typeof visitor === 'function') {\n    enter = visitor\n  } else if (visitor && typeof visitor === 'object') {\n    if (visitor.enter) enter = visitor.enter\n    if (visitor.leave) leave = visitor.leave\n  }\n\n  build(tree, undefined, undefined, [])()\n\n  /**\n   * @param {Node} node\n   * @param {string | undefined} key\n   * @param {number | undefined} index\n   * @param {Array<Node>} parents\n   */\n  function build(node, key, index, parents) {\n    if (nodelike(node)) {\n      visit.displayName = 'node (' + color(node.type) + ')'\n    }\n\n    return visit\n\n    /**\n     * @returns {ActionTuple}\n     */\n    function visit() {\n      /** @type {ActionTuple} */\n      const result = enter ? toResult(enter(node, key, index, parents)) : []\n\n      if (result[0] === EXIT) {\n        return result\n      }\n\n      if (result[0] !== SKIP) {\n        /** @type {keyof node} */\n        let cKey\n\n        for (cKey in node) {\n          if (\n            own.call(node, cKey) &&\n            node[cKey] &&\n            typeof node[cKey] === 'object' &&\n            // @ts-expect-error: custom esast extension.\n            cKey !== 'data' &&\n            // @ts-expect-error: custom esast extension.\n            cKey !== 'position'\n          ) {\n            const grandparents = parents.concat(node)\n            /** @type {unknown} */\n            const value = node[cKey]\n\n            if (Array.isArray(value)) {\n              const nodes = /** @type {Array<unknown>} */ (value)\n              let cIndex = 0\n\n              while (cIndex > -1 && cIndex < nodes.length) {\n                const subvalue = nodes[cIndex]\n\n                if (nodelike(subvalue)) {\n                  const subresult = build(\n                    subvalue,\n                    cKey,\n                    cIndex,\n                    grandparents\n                  )()\n                  if (subresult[0] === EXIT) return subresult\n                  cIndex =\n                    typeof subresult[1] === 'number' ? subresult[1] : cIndex + 1\n                } else {\n                  cIndex++\n                }\n              }\n            } else if (nodelike(value)) {\n              const subresult = build(value, cKey, undefined, grandparents)()\n              if (subresult[0] === EXIT) return subresult\n            }\n          }\n        }\n      }\n\n      return leave ? toResult(leave(node, key, index, parents)) : result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {Action | ActionTuple | Index | null | undefined | void} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n\n/**\n * Check if something looks like a node.\n *\n * @param {unknown} value\n *   Anything.\n * @returns {value is Node}\n *   Whether `value` looks like a node.\n */\nfunction nodelike(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'type' in value &&\n      typeof value.type === 'string' &&\n      value.type.length > 0\n  )\n}\n"],"names":[],"mappings":"AAAA;;CAEC,GAED;;;;;;;;;;;;;;;CAeC,GAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAgCC,GAED;;;;;;;CAOC;;;;;;AAED;;AAEA,MAAM,MAAM,CAAC,EAAE,cAAc;AAKtB,MAAM,WAAW,OAAO;AAKxB,MAAM,OAAO,OAAO;AAKpB,MAAM,OAAO,OAAO;AAoBpB,SAAS,MAAM,IAAI,EAAE,OAAO;IACjC,gCAAgC,GAChC,IAAI;IACJ,gCAAgC,GAChC,IAAI;IAEJ,IAAI,OAAO,YAAY,YAAY;QACjC,QAAQ;IACV,OAAO,IAAI,WAAW,OAAO,YAAY,UAAU;QACjD,IAAI,QAAQ,KAAK,EAAE,QAAQ,QAAQ,KAAK;QACxC,IAAI,QAAQ,KAAK,EAAE,QAAQ,QAAQ,KAAK;IAC1C;IAEA,MAAM,MAAM,WAAW,WAAW,EAAE;IAEpC;;;;;GAKC,GACD,SAAS,MAAM,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO;QACtC,IAAI,SAAS,OAAO;YAClB,MAAM,WAAW,GAAG,WAAW,CAAA,GAAA,8JAAA,CAAA,QAAK,AAAD,EAAE,KAAK,IAAI,IAAI;QACpD;QAEA,OAAO;;QAEP;;KAEC,GACD,SAAS;YACP,wBAAwB,GACxB,MAAM,SAAS,QAAQ,SAAS,MAAM,MAAM,KAAK,OAAO,YAAY,EAAE;YAEtE,IAAI,MAAM,CAAC,EAAE,KAAK,MAAM;gBACtB,OAAO;YACT;YAEA,IAAI,MAAM,CAAC,EAAE,KAAK,MAAM;gBACtB,uBAAuB,GACvB,IAAI;gBAEJ,IAAK,QAAQ,KAAM;oBACjB,IACE,IAAI,IAAI,CAAC,MAAM,SACf,IAAI,CAAC,KAAK,IACV,OAAO,IAAI,CAAC,KAAK,KAAK,YACtB,4CAA4C;oBAC5C,SAAS,UACT,4CAA4C;oBAC5C,SAAS,YACT;wBACA,MAAM,eAAe,QAAQ,MAAM,CAAC;wBACpC,oBAAoB,GACpB,MAAM,QAAQ,IAAI,CAAC,KAAK;wBAExB,IAAI,MAAM,OAAO,CAAC,QAAQ;4BACxB,MAAM,QAAuC;4BAC7C,IAAI,SAAS;4BAEb,MAAO,SAAS,CAAC,KAAK,SAAS,MAAM,MAAM,CAAE;gCAC3C,MAAM,WAAW,KAAK,CAAC,OAAO;gCAE9B,IAAI,SAAS,WAAW;oCACtB,MAAM,YAAY,MAChB,UACA,MACA,QACA;oCAEF,IAAI,SAAS,CAAC,EAAE,KAAK,MAAM,OAAO;oCAClC,SACE,OAAO,SAAS,CAAC,EAAE,KAAK,WAAW,SAAS,CAAC,EAAE,GAAG,SAAS;gCAC/D,OAAO;oCACL;gCACF;4BACF;wBACF,OAAO,IAAI,SAAS,QAAQ;4BAC1B,MAAM,YAAY,MAAM,OAAO,MAAM,WAAW;4BAChD,IAAI,SAAS,CAAC,EAAE,KAAK,MAAM,OAAO;wBACpC;oBACF;gBACF;YACF;YAEA,OAAO,QAAQ,SAAS,MAAM,MAAM,KAAK,OAAO,YAAY;QAC9D;IACF;AACF;AAEA;;;;;;;CAOC,GACD,SAAS,SAAS,KAAK;IACrB,IAAI,MAAM,OAAO,CAAC,QAAQ;QACxB,OAAO;IACT;IAEA,IAAI,OAAO,UAAU,UAAU;QAC7B,OAAO;YAAC;YAAU;SAAM;IAC1B;IAEA,OAAO;QAAC;KAAM;AAChB;AAEA;;;;;;;CAOC,GACD,SAAS,SAAS,KAAK;IACrB,OAAO,QACL,SACE,OAAO,UAAU,YACjB,UAAU,SACV,OAAO,MAAM,IAAI,KAAK,YACtB,MAAM,IAAI,CAAC,MAAM,GAAG;AAE1B","ignoreList":[0]}},
    {"offset": {"line": 12460, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12466, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-util-events-to-acorn/dev/index.js"],"sourcesContent":["/**\n * @typedef {import('acorn').Comment} Comment\n * @typedef {import('acorn').Node} AcornNode\n * @typedef {import('acorn').Options} AcornOptions\n * @typedef {import('acorn').Token} Token\n * @typedef {import('estree').Node} EstreeNode\n * @typedef {import('estree').Program} Program\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Point} MicromarkPoint\n * @typedef {import('micromark-util-types').TokenType} TokenType\n * @typedef {import('unist').Point} UnistPoint\n */\n\n/**\n * @typedef Acorn\n *   Acorn-like interface.\n * @property {import('acorn').parse} parse\n *   Parse a program.\n * @property {import('acorn').parseExpressionAt} parseExpressionAt\n *   Parse an expression.\n *\n * @typedef AcornLoc\n * @property {number} line\n * @property {number} column\n *\n * @typedef AcornErrorFields\n * @property {number} raisedAt\n * @property {number} pos\n * @property {AcornLoc} loc\n *\n * @typedef {Error & AcornErrorFields} AcornError\n *\n * @typedef Options\n *   Configuration.\n * @property {Acorn} acorn\n *   Typically `acorn`, object with `parse` and `parseExpressionAt` fields (required).\n * @property {Array<TokenType>} tokenTypes\n *   Names of (void) tokens to consider as data; `'lineEnding'` is always\n *   included (required).\n * @property {AcornOptions | null | undefined} [acornOptions]\n *   Configuration for `acorn` (optional).\n * @property {MicromarkPoint | null | undefined} [start]\n *   Place where events start (optional, required if `allowEmpty`).\n * @property {string | null | undefined} [prefix='']\n *   Text to place before events (default: `''`).\n * @property {string | null | undefined} [suffix='']\n *   Text to place after events (default: `''`).\n * @property {boolean | null | undefined} [expression=false]\n *   Whether this is a program or expression (default: `false`).\n * @property {boolean | null | undefined} [allowEmpty=false]\n *   Whether an empty expression is allowed (programs are always allowed to\n *   be empty) (default: `false`).\n *\n * @typedef Result\n *   Result.\n * @property {Program | undefined} estree\n *   Program.\n * @property {AcornError | undefined} error\n *   Error if unparseable\n * @property {boolean} swallow\n *   Whether the error, if there is one, can be swallowed and more JavaScript\n *   could be valid.\n *\n * @typedef {[number, MicromarkPoint]} Stop\n *\n * @typedef Collection\n * @property {string} value\n * @property {Array<Stop>} stops\n */\n\nimport {ok as assert} from 'devlop'\nimport {visit} from 'estree-util-visit'\nimport {codes, types, values} from 'micromark-util-symbol'\nimport {VFileMessage} from 'vfile-message'\n\n/**\n * Parse a list of micromark events with acorn.\n *\n * @param {Array<Event>} events\n *   Events.\n * @param {Options} options\n *   Configuration (required).\n * @returns {Result}\n *   Result.\n */\n// eslint-disable-next-line complexity\nexport function eventsToAcorn(events, options) {\n  const prefix = options.prefix || ''\n  const suffix = options.suffix || ''\n  const acornOptions = Object.assign({}, options.acornOptions)\n  /** @type {Array<Comment>} */\n  const comments = []\n  /** @type {Array<Token>} */\n  const tokens = []\n  const onComment = acornOptions.onComment\n  const onToken = acornOptions.onToken\n  let swallow = false\n  /** @type {AcornNode | undefined} */\n  let estree\n  /** @type {AcornError | undefined} */\n  let exception\n  /** @type {AcornOptions} */\n  const acornConfig = Object.assign({}, acornOptions, {\n    onComment: comments,\n    preserveParens: true\n  })\n\n  if (onToken) {\n    acornConfig.onToken = tokens\n  }\n\n  const collection = collect(events, options.tokenTypes)\n\n  const source = collection.value\n\n  const value = prefix + source + suffix\n  const isEmptyExpression = options.expression && empty(source)\n\n  if (isEmptyExpression && !options.allowEmpty) {\n    throw new VFileMessage('Unexpected empty expression', {\n      place: parseOffsetToUnistPoint(0),\n      ruleId: 'unexpected-empty-expression',\n      source: 'micromark-extension-mdx-expression'\n    })\n  }\n\n  try {\n    estree =\n      options.expression && !isEmptyExpression\n        ? options.acorn.parseExpressionAt(value, 0, acornConfig)\n        : options.acorn.parse(value, acornConfig)\n  } catch (error_) {\n    const error = /** @type {AcornError} */ (error_)\n    const point = parseOffsetToUnistPoint(error.pos)\n    error.message = String(error.message).replace(/ \\(\\d+:\\d+\\)$/, '')\n    // Always defined in our unist points that come from micromark.\n    assert(point.offset !== undefined, 'expected `offset`')\n    error.pos = point.offset\n    error.loc = {line: point.line, column: point.column - 1}\n    exception = error\n    swallow =\n      error.raisedAt >= prefix.length + source.length ||\n      // Broken comments are raised at their start, not their end.\n      error.message === 'Unterminated comment'\n  }\n\n  if (estree && options.expression && !isEmptyExpression) {\n    if (empty(value.slice(estree.end, value.length - suffix.length))) {\n      estree = {\n        type: 'Program',\n        start: 0,\n        end: prefix.length + source.length,\n        // @ts-expect-error: It’s good.\n        body: [\n          {\n            type: 'ExpressionStatement',\n            expression: estree,\n            start: 0,\n            end: prefix.length + source.length\n          }\n        ],\n        sourceType: 'module',\n        comments: []\n      }\n    } else {\n      const point = parseOffsetToUnistPoint(estree.end)\n      const error = /** @type {AcornError} */ (\n        new Error('Unexpected content after expression')\n      )\n      // Always defined in our unist points that come from micromark.\n      assert(point.offset !== undefined, 'expected `offset`')\n      error.pos = point.offset\n      error.loc = {line: point.line, column: point.column - 1}\n      exception = error\n      estree = undefined\n    }\n  }\n\n  if (estree) {\n    // @ts-expect-error: acorn *does* allow comments\n    estree.comments = comments\n\n    // @ts-expect-error: acorn looks enough like estree.\n    visit(estree, function (esnode, field, index, parents) {\n      let context = /** @type {AcornNode | Array<AcornNode>} */ (\n        parents[parents.length - 1]\n      )\n      /** @type {number | string | undefined} */\n      let prop = field\n\n      // Remove non-standard `ParenthesizedExpression`.\n      // @ts-expect-error: included in acorn.\n      if (esnode.type === 'ParenthesizedExpression' && context && prop) {\n        /* c8 ignore next 5 */\n        if (typeof index === 'number') {\n          // @ts-expect-error: indexable.\n          context = context[prop]\n          prop = index\n        }\n\n        // @ts-expect-error: indexable.\n        context[prop] = esnode.expression\n      }\n\n      fixPosition(esnode)\n    })\n\n    // Comment positions are fixed by `visit` because they’re in the tree.\n    if (Array.isArray(onComment)) {\n      onComment.push(...comments)\n    } else if (typeof onComment === 'function') {\n      for (const comment of comments) {\n        assert(comment.loc, 'expected `loc` on comment')\n        onComment(\n          comment.type === 'Block',\n          comment.value,\n          comment.start,\n          comment.end,\n          comment.loc.start,\n          comment.loc.end\n        )\n      }\n    }\n\n    for (const token of tokens) {\n      // Ignore tokens that ends in prefix or start in suffix:\n      if (\n        token.end <= prefix.length ||\n        token.start - prefix.length >= source.length\n      ) {\n        continue\n      }\n\n      fixPosition(token)\n\n      if (Array.isArray(onToken)) {\n        onToken.push(token)\n      } else {\n        // `tokens` are not added if `onToken` is not defined, so it must be a\n        // function.\n        assert(typeof onToken === 'function', 'expected function')\n        onToken(token)\n      }\n    }\n  }\n\n  // @ts-expect-error: It’s a program now.\n  return {estree, error: exception, swallow}\n\n  /**\n   * Update the position of a node.\n   *\n   * @param {AcornNode | EstreeNode | Token} nodeOrToken\n   * @returns {undefined}\n   */\n  function fixPosition(nodeOrToken) {\n    assert(\n      'start' in nodeOrToken,\n      'expected `start` in node or token from acorn'\n    )\n    assert('end' in nodeOrToken, 'expected `end` in node or token from acorn')\n    const pointStart = parseOffsetToUnistPoint(nodeOrToken.start)\n    const pointEnd = parseOffsetToUnistPoint(nodeOrToken.end)\n    // Always defined in our unist points that come from micromark.\n    assert(pointStart.offset !== undefined, 'expected `offset`')\n    assert(pointEnd.offset !== undefined, 'expected `offset`')\n    nodeOrToken.start = pointStart.offset\n    nodeOrToken.end = pointEnd.offset\n    nodeOrToken.loc = {\n      start: {\n        line: pointStart.line,\n        column: pointStart.column - 1,\n        offset: pointStart.offset\n      },\n      end: {\n        line: pointEnd.line,\n        column: pointEnd.column - 1,\n        offset: pointEnd.offset\n      }\n    }\n    nodeOrToken.range = [nodeOrToken.start, nodeOrToken.end]\n  }\n\n  /**\n   * Turn an arbitrary offset into the parsed value, into a point in the source\n   * value.\n   *\n   * @param {number} acornOffset\n   * @returns {UnistPoint}\n   */\n  function parseOffsetToUnistPoint(acornOffset) {\n    let sourceOffset = acornOffset - prefix.length\n\n    if (sourceOffset < 0) {\n      sourceOffset = 0\n    } else if (sourceOffset > source.length) {\n      sourceOffset = source.length\n    }\n\n    let point = relativeToPoint(collection.stops, sourceOffset)\n\n    if (!point) {\n      assert(\n        options.start,\n        'empty expressions are need `options.start` being passed'\n      )\n      point = {\n        line: options.start.line,\n        column: options.start.column,\n        offset: options.start.offset\n      }\n    }\n\n    return point\n  }\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return /^\\s*$/.test(\n    value\n      // Multiline comments.\n      .replace(/\\/\\*[\\s\\S]*?\\*\\//g, '')\n      // Line comments.\n      // EOF instead of EOL is specifically not allowed, because that would\n      // mean the closing brace is on the commented-out line\n      .replace(/\\/\\/[^\\r\\n]*(\\r\\n|\\n|\\r)/g, '')\n  )\n}\n\n// Port from <https://github.com/wooorm/markdown-rs/blob/e692ab0/src/util/mdx_collect.rs#L15>.\n/**\n * @param {Array<Event>} events\n * @param {Array<TokenType>} tokenTypes\n * @returns {Collection}\n */\nfunction collect(events, tokenTypes) {\n  /** @type {Collection} */\n  const result = {value: '', stops: []}\n  let index = -1\n\n  while (++index < events.length) {\n    const event = events[index]\n\n    // Assume void.\n    if (event[0] === 'enter') {\n      const type = event[1].type\n\n      if (type === types.lineEnding || tokenTypes.includes(type)) {\n        const chunks = event[2].sliceStream(event[1])\n\n        // Drop virtual spaces.\n        while (chunks.length > 0 && chunks[0] === codes.virtualSpace) {\n          chunks.shift()\n        }\n\n        const value = serializeChunks(chunks)\n        result.stops.push([result.value.length, event[1].start])\n        result.value += value\n        result.stops.push([result.value.length, event[1].end])\n      }\n    }\n  }\n\n  return result\n}\n\n// Port from <https://github.com/wooorm/markdown-rs/blob/e692ab0/src/util/location.rs#L91>.\n/**\n * Turn a relative offset into an absolute offset.\n *\n * @param {Array<Stop>} stops\n * @param {number} relative\n * @returns {UnistPoint | undefined}\n */\nfunction relativeToPoint(stops, relative) {\n  let index = 0\n\n  while (index < stops.length && stops[index][0] <= relative) {\n    index += 1\n  }\n\n  // There are no points: that only occurs if there was an empty string.\n  if (index === 0) {\n    return undefined\n  }\n\n  const [stopRelative, stopAbsolute] = stops[index - 1]\n  const rest = relative - stopRelative\n  return {\n    line: stopAbsolute.line,\n    column: stopAbsolute.column + rest,\n    offset: stopAbsolute.offset + rest\n  }\n}\n\n// Copy from <https://github.com/micromark/micromark/blob/ce3593a/packages/micromark/dev/lib/create-tokenizer.js#L595>\n// To do: expose that?\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @returns {string}\n */\nfunction serializeChunks(chunks) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {boolean | undefined} */\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case codes.carriageReturn: {\n          value = values.cr\n\n          break\n        }\n\n        case codes.lineFeed: {\n          value = values.lf\n\n          break\n        }\n\n        case codes.carriageReturnLineFeed: {\n          value = values.cr + values.lf\n\n          break\n        }\n\n        case codes.horizontalTab: {\n          value = values.ht\n\n          break\n        }\n\n        /* c8 ignore next 6 */\n        case codes.virtualSpace: {\n          if (atTab) continue\n          value = values.space\n\n          break\n        }\n\n        default: {\n          assert(typeof chunk === 'number', 'expected number')\n          // Currently only replacement character.\n          // eslint-disable-next-line unicorn/prefer-code-point\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === codes.horizontalTab\n    result.push(value)\n  }\n\n  return result.join('')\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 12860, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12866, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/unist-util-position-from-estree/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('unist').Point} UnistPoint\n * @typedef {import('unist').Position} UnistPosition\n */\n\n/**\n * @typedef {[start: number | null | undefined, end: number | null | undefined]} RangeLike\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n *\n * @typedef LocLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef NodeLike\n * @property {LocLike | null | undefined} [loc]\n * @property {RangeLike | null | undefined} [range]\n * @property {number | null | undefined} [start]\n * @property {number | null | undefined} [end]\n */\n\n/**\n * Turn an estree `node` into a unist `position`.\n *\n * @param {NodeLike | null | undefined} [node]\n *   estree node.\n * @returns {UnistPosition | undefined}\n *   unist position.\n */\nexport function positionFromEstree(node) {\n  const nodeLike = node || {}\n  const loc = nodeLike.loc || {}\n  const range = nodeLike.range || [undefined, undefined]\n  const start = pointOrUndefined(loc.start, range[0] || nodeLike.start)\n  const end = pointOrUndefined(loc.end, range[1] || nodeLike.end)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n\n/**\n * @param {unknown} estreePoint\n *   estree point.\n * @param {unknown} estreeOffset\n *  estree offset.\n * @returns {UnistPoint | undefined}\n *   unist point.\n */\nfunction pointOrUndefined(estreePoint, estreeOffset) {\n  if (estreePoint && typeof estreePoint === 'object') {\n    const line =\n      'line' in estreePoint ? numberOrUndefined(estreePoint.line) : undefined\n    const column =\n      'column' in estreePoint\n        ? numberOrUndefined(estreePoint.column)\n        : undefined\n\n    if (line && column !== undefined) {\n      return {\n        line,\n        column: column + 1,\n        offset: numberOrUndefined(estreeOffset)\n      }\n    }\n  }\n}\n\n/**\n * @param {unknown} value\n * @returns {number | undefined}\n */\nfunction numberOrUndefined(value) {\n  return typeof value === 'number' && value > -1 ? value : undefined\n}\n"],"names":[],"mappings":"AAAA;;;CAGC,GAED;;;;;;;;;;;;;;;;CAgBC,GAED;;;;;;;CAOC;;;AACM,SAAS,mBAAmB,IAAI;IACrC,MAAM,WAAW,QAAQ,CAAC;IAC1B,MAAM,MAAM,SAAS,GAAG,IAAI,CAAC;IAC7B,MAAM,QAAQ,SAAS,KAAK,IAAI;QAAC;QAAW;KAAU;IACtD,MAAM,QAAQ,iBAAiB,IAAI,KAAK,EAAE,KAAK,CAAC,EAAE,IAAI,SAAS,KAAK;IACpE,MAAM,MAAM,iBAAiB,IAAI,GAAG,EAAE,KAAK,CAAC,EAAE,IAAI,SAAS,GAAG;IAE9D,IAAI,SAAS,KAAK;QAChB,OAAO;YAAC;YAAO;QAAG;IACpB;AACF;AAEA;;;;;;;CAOC,GACD,SAAS,iBAAiB,WAAW,EAAE,YAAY;IACjD,IAAI,eAAe,OAAO,gBAAgB,UAAU;QAClD,MAAM,OACJ,UAAU,cAAc,kBAAkB,YAAY,IAAI,IAAI;QAChE,MAAM,SACJ,YAAY,cACR,kBAAkB,YAAY,MAAM,IACpC;QAEN,IAAI,QAAQ,WAAW,WAAW;YAChC,OAAO;gBACL;gBACA,QAAQ,SAAS;gBACjB,QAAQ,kBAAkB;YAC5B;QACF;IACF;AACF;AAEA;;;CAGC,GACD,SAAS,kBAAkB,KAAK;IAC9B,OAAO,OAAO,UAAU,YAAY,QAAQ,CAAC,IAAI,QAAQ;AAC3D","ignoreList":[0]}},
    {"offset": {"line": 12937, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12943, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-extension-mdxjs-esm/dev/lib/syntax.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-events-to-acorn').Acorn} Acorn\n * @typedef {import('micromark-util-events-to-acorn').AcornOptions} AcornOptions\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef Options\n *   Configuration (required).\n * @property {Acorn} acorn\n *   Acorn parser to use (required).\n * @property {AcornOptions | null | undefined} [acornOptions]\n *   Configuration for acorn (default: `{ecmaVersion: 2024, locations: true,\n *   sourceType: 'module'}`); all fields except `locations` can be set.\n * @property {boolean | null | undefined} [addResult=false]\n *   Whether to add `estree` fields to tokens with results from acorn\n *   (default: `false`).\n */\n\nimport {ok as assert} from 'devlop'\nimport {blankLine} from 'micromark-core-commonmark'\nimport {asciiAlpha, markdownLineEnding} from 'micromark-util-character'\nimport {eventsToAcorn} from 'micromark-util-events-to-acorn'\nimport {codes, types} from 'micromark-util-symbol'\nimport {positionFromEstree} from 'unist-util-position-from-estree'\nimport {VFileMessage} from 'vfile-message'\n\nconst blankLineBefore = {tokenize: tokenizeNextBlank, partial: true}\n\nconst trouble = 'https://github.com/micromark/micromark-extension-mdxjs-esm'\n\nconst allowedAcornTypes = new Set([\n  'ExportAllDeclaration',\n  'ExportDefaultDeclaration',\n  'ExportNamedDeclaration',\n  'ImportDeclaration'\n])\n\n/**\n * Create an extension for `micromark` to enable MDX ESM syntax.\n *\n * @param {Options} options\n *   Configuration (required).\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable MDX\n *   ESM syntax.\n */\nexport function mdxjsEsm(options) {\n  const exportImportConstruct = {tokenize: tokenizeExportImport, concrete: true}\n\n  if (!options || !options.acorn || !options.acorn.parse) {\n    throw new Error('Expected an `acorn` instance passed in as `options.acorn`')\n  }\n\n  const acorn = options.acorn\n  const acornOptions = Object.assign(\n    {ecmaVersion: 2024, sourceType: 'module'},\n    options.acornOptions,\n    {locations: true}\n  )\n\n  return {\n    flow: {\n      [codes.lowercaseE]: exportImportConstruct,\n      [codes.lowercaseI]: exportImportConstruct\n    }\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeExportImport(effects, ok, nok) {\n    const self = this\n    const definedModuleSpecifiers =\n      self.parser.definedModuleSpecifiers ||\n      (self.parser.definedModuleSpecifiers = [])\n    const eventStart = this.events.length + 1 // Add the main `mdxjsEsm` token\n    let buffer = ''\n\n    return self.interrupt ? nok : start\n\n    /**\n     * Start of MDX ESM.\n     *\n     * ```markdown\n     * > | import a from 'b'\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      assert(\n        code === codes.lowercaseE || code === codes.lowercaseI,\n        'expected `e` or `i`'\n      )\n\n      // Only at the start of a line, not at whitespace or in a container.\n      if (self.now().column > 1) return nok(code)\n\n      effects.enter('mdxjsEsm')\n      effects.enter('mdxjsEsmData')\n      effects.consume(code)\n      // eslint-disable-next-line unicorn/prefer-code-point\n      buffer += String.fromCharCode(code)\n      return word\n    }\n\n    /**\n     * In keyword.\n     *\n     * ```markdown\n     * > | import a from 'b'\n     *     ^^^^^^\n     * ```\n     *\n     * @type {State}\n     */\n    function word(code) {\n      if (asciiAlpha(code)) {\n        effects.consume(code)\n        // @ts-expect-error: definitely a number.\n        // eslint-disable-next-line unicorn/prefer-code-point\n        buffer += String.fromCharCode(code)\n        return word\n      }\n\n      if (\n        (buffer === 'import' || buffer === 'export') &&\n        code === codes.space\n      ) {\n        effects.consume(code)\n        return inside\n      }\n\n      return nok(code)\n    }\n\n    /**\n     * In data.\n     *\n     * ```markdown\n     * > | import a from 'b'\n     *           ^\n     * ```\n     *\n     * @type {State}\n     */\n    function inside(code) {\n      if (code === codes.eof || markdownLineEnding(code)) {\n        effects.exit('mdxjsEsmData')\n        return lineStart(code)\n      }\n\n      effects.consume(code)\n      return inside\n    }\n\n    /**\n     * At line ending.\n     *\n     * ```markdown\n     * > | import a from 'b'\n     *                      ^\n     *   | export {a}\n     * ```\n     *\n     * @type {State}\n     */\n    function lineStart(code) {\n      if (code === codes.eof) {\n        return atEnd(code)\n      }\n\n      if (markdownLineEnding(code)) {\n        return effects.check(blankLineBefore, atEnd, continuationStart)(code)\n      }\n\n      effects.enter('mdxjsEsmData')\n      return inside(code)\n    }\n\n    /**\n     * At line ending that continues.\n     *\n     * ```markdown\n     * > | import a from 'b'\n     *                      ^\n     *   | export {a}\n     * ```\n     *\n     * @type {State}\n     */\n    function continuationStart(code) {\n      assert(markdownLineEnding(code))\n      effects.enter(types.lineEnding)\n      effects.consume(code)\n      effects.exit(types.lineEnding)\n      return lineStart\n    }\n\n    /**\n     * At end of line (blank or eof).\n     *\n     * ```markdown\n     * > | import a from 'b'\n     *                      ^\n     * ```\n     *\n     * @type {State}\n     */\n    function atEnd(code) {\n      const result = eventsToAcorn(self.events.slice(eventStart), {\n        acorn,\n        acornOptions,\n        tokenTypes: ['mdxjsEsmData'],\n        prefix:\n          definedModuleSpecifiers.length > 0\n            ? 'var ' + definedModuleSpecifiers.join(',') + '\\n'\n            : ''\n      })\n\n      if (result.error) {\n        // There’s an error, which could be solved with more content, and there\n        // is more content.\n        if (code !== codes.eof && result.swallow) {\n          return continuationStart(code)\n        }\n\n        const error = new VFileMessage(\n          'Could not parse import/exports with acorn',\n          {\n            cause: result.error,\n            place: {\n              line: result.error.loc.line,\n              column: result.error.loc.column + 1,\n              offset: result.error.pos\n            },\n            ruleId: 'acorn',\n            source: 'micromark-extension-mdxjs-esm'\n          }\n        )\n        error.url = trouble + '#could-not-parse-importexports-with-acorn'\n        throw error\n      }\n\n      assert(result.estree, 'expected `estree` to be defined')\n\n      // Remove the `VariableDeclaration`.\n      if (definedModuleSpecifiers.length > 0) {\n        const declaration = result.estree.body.shift()\n        assert(declaration)\n        assert(declaration.type === 'VariableDeclaration')\n      }\n\n      let index = -1\n\n      while (++index < result.estree.body.length) {\n        const node = result.estree.body[index]\n\n        if (!allowedAcornTypes.has(node.type)) {\n          const error = new VFileMessage(\n            'Unexpected `' +\n              node.type +\n              '` in code: only import/exports are supported',\n            {\n              place: positionFromEstree(node),\n              ruleId: 'non-esm',\n              source: 'micromark-extension-mdxjs-esm'\n            }\n          )\n          error.url =\n            trouble +\n            '#unexpected-type-in-code-only-importexports-are-supported'\n          throw error\n        }\n\n        // Otherwise, when we’re not interrupting (hacky, because `interrupt` is\n        // used to parse containers and “sniff” if this is ESM), collect all the\n        // local values that are imported.\n        if (node.type === 'ImportDeclaration' && !self.interrupt) {\n          let index = -1\n\n          while (++index < node.specifiers.length) {\n            const specifier = node.specifiers[index]\n            definedModuleSpecifiers.push(specifier.local.name)\n          }\n        }\n      }\n\n      Object.assign(\n        effects.exit('mdxjsEsm'),\n        options.addResult ? {estree: result.estree} : undefined\n      )\n\n      return ok(code)\n    }\n  }\n}\n\n/** @type {Tokenizer} */\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n\n  /**\n   * @type {State}\n   */\n  function start(code) {\n    assert(markdownLineEnding(code))\n    effects.enter(types.lineEndingBlank)\n    effects.consume(code)\n    effects.exit(types.lineEndingBlank)\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 13207, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13213, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-factory-mdx-expression/dev/index.js"],"sourcesContent":["/**\n * @import {Program} from 'estree'\n * @import {Acorn, AcornOptions} from 'micromark-util-events-to-acorn'\n * @import {Effects, Point, State, TokenType, TokenizeContext} from 'micromark-util-types'\n */\n\n/**\n * @typedef MdxSignalOk\n *   Good result.\n * @property {'ok'} type\n *   Type.\n * @property {Program | undefined} estree\n *   Value.\n *\n * @typedef MdxSignalNok\n *   Bad result.\n * @property {'nok'} type\n *   Type.\n * @property {VFileMessage} message\n *   Value.\n *\n * @typedef {MdxSignalNok | MdxSignalOk} MdxSignal\n */\n\nimport {ok as assert} from 'devlop'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\nimport {eventsToAcorn} from 'micromark-util-events-to-acorn'\nimport {codes, types} from 'micromark-util-symbol'\nimport {positionFromEstree} from 'unist-util-position-from-estree'\nimport {VFileMessage} from 'vfile-message'\n\n// Tab-size to eat has to be the same as what we serialize as.\n// While in some places in markdown that’s 4, in JS it’s more common as 2.\n// Which is what’s also in `mdast-util-mdx-jsx`:\n// <https://github.com/syntax-tree/mdast-util-mdx-jsx/blob/40b951b/lib/index.js#L52>\nconst indentSize = 2\n\nconst trouble =\n  'https://github.com/micromark/micromark-extension-mdx-expression/tree/main/packages/micromark-extension-mdx-expression'\n\nconst unexpectedEndOfFileHash =\n  '#unexpected-end-of-file-in-expression-expected-a-corresponding-closing-brace-for-'\nconst unexpectedLazyHash =\n  '#unexpected-lazy-line-in-expression-in-container-expected-line-to-be-prefixed'\nconst nonSpreadHash =\n  '#unexpected-type-in-code-expected-an-object-spread-spread'\nconst spreadExtraHash =\n  '#unexpected-extra-content-in-spread-only-a-single-spread-is-supported'\nconst acornHash = '#could-not-parse-expression-with-acorn'\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful\n * @param {TokenType} type\n *   Token type for whole (`{}`).\n * @param {TokenType} markerType\n *   Token type for the markers (`{`, `}`).\n * @param {TokenType} chunkType\n *   Token type for the value (`1`).\n * @param {Acorn | null | undefined} [acorn]\n *   Object with `acorn.parse` and `acorn.parseExpressionAt`.\n * @param {AcornOptions | null | undefined} [acornOptions]\n *   Configuration for acorn.\n * @param {boolean | null | undefined} [addResult=false]\n *   Add `estree` to token (default: `false`).\n * @param {boolean | null | undefined} [spread=false]\n *   Support a spread (`{...a}`) only (default: `false`).\n * @param {boolean | null | undefined} [allowEmpty=false]\n *   Support an empty expression (default: `false`).\n * @param {boolean | null | undefined} [allowLazy=false]\n *   Support lazy continuation of an expression (default: `false`).\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryMdxExpression(\n  effects,\n  ok,\n  type,\n  markerType,\n  chunkType,\n  acorn,\n  acornOptions,\n  addResult,\n  spread,\n  allowEmpty,\n  allowLazy\n) {\n  const self = this\n  const eventStart = this.events.length + 3 // Add main and marker token\n  let size = 0\n  /** @type {Point} */\n  let pointStart\n  /** @type {Error} */\n  let lastCrash\n\n  return start\n\n  /**\n   * Start of an MDX expression.\n   *\n   * ```markdown\n   * > | a {Math.PI} c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.leftCurlyBrace, 'expected `{`')\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    pointStart = self.now()\n    return before\n  }\n\n  /**\n   * Before data.\n   *\n   * ```markdown\n   * > | a {Math.PI} c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    if (code === codes.eof) {\n      if (lastCrash) throw lastCrash\n\n      const error = new VFileMessage(\n        'Unexpected end of file in expression, expected a corresponding closing brace for `{`',\n        {\n          place: self.now(),\n          ruleId: 'unexpected-eof',\n          source: 'micromark-extension-mdx-expression'\n        }\n      )\n      error.url = trouble + unexpectedEndOfFileHash\n      throw error\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter(types.lineEnding)\n      effects.consume(code)\n      effects.exit(types.lineEnding)\n      return eolAfter\n    }\n\n    if (code === codes.rightCurlyBrace && size === 0) {\n      /** @type {MdxSignal} */\n      const next = acorn\n        ? mdxExpressionParse.call(\n            self,\n            acorn,\n            acornOptions,\n            chunkType,\n            eventStart,\n            pointStart,\n            allowEmpty || false,\n            spread || false\n          )\n        : {type: 'ok', estree: undefined}\n\n      if (next.type === 'ok') {\n        effects.enter(markerType)\n        effects.consume(code)\n        effects.exit(markerType)\n        const token = effects.exit(type)\n\n        if (addResult && next.estree) {\n          Object.assign(token, {estree: next.estree})\n        }\n\n        return ok\n      }\n\n      lastCrash = next.message\n      effects.enter(chunkType)\n      effects.consume(code)\n      return inside\n    }\n\n    effects.enter(chunkType)\n    return inside(code)\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | a {Math.PI} c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (\n      (code === codes.rightCurlyBrace && size === 0) ||\n      code === codes.eof ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit(chunkType)\n      return before(code)\n    }\n\n    // Don’t count if gnostic.\n    if (code === codes.leftCurlyBrace && !acorn) {\n      size += 1\n    } else if (code === codes.rightCurlyBrace) {\n      size -= 1\n    }\n\n    effects.consume(code)\n    return inside\n  }\n\n  /**\n   * After eol.\n   *\n   * ```markdown\n   *   | a {b +\n   * > | c} d\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function eolAfter(code) {\n    const now = self.now()\n\n    // Lazy continuation in a flow expression (or flow tag) is a syntax error.\n    if (\n      now.line !== pointStart.line &&\n      !allowLazy &&\n      self.parser.lazy[now.line]\n    ) {\n      const error = new VFileMessage(\n        'Unexpected lazy line in expression in container, expected line to be prefixed with `>` when in a block quote, whitespace when in a list, etc',\n        {\n          place: self.now(),\n          ruleId: 'unexpected-lazy',\n          source: 'micromark-extension-mdx-expression'\n        }\n      )\n      error.url = trouble + unexpectedLazyHash\n      throw error\n    }\n\n    // Note: `markdown-rs` uses `4`, but we use `2`.\n    //\n    // Idea: investigate if we’d need to use more complex stripping.\n    // Take this example:\n    //\n    // ```markdown\n    // >  aaa <b c={`\n    // >      d\n    // >  `} /> eee\n    // ```\n    //\n    // Currently, the “paragraph” starts at `> | aaa`, so for the next line\n    // here we split it into `>␠|␠␠|␠␠␠d` (prefix, this indent here,\n    // expression data).\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        before,\n        types.linePrefix,\n        indentSize + 1\n      )(code)\n    }\n\n    return before(code)\n  }\n}\n\n/**\n * Mix of `markdown-rs`’s `parse_expression` and `MdxExpressionParse`\n * functionality, to wrap our `eventsToAcorn`.\n *\n * In the future, the plan is to realise the rust way, which allows arbitrary\n * parsers.\n *\n * @this {TokenizeContext}\n * @param {Acorn} acorn\n * @param {AcornOptions | null | undefined} acornOptions\n * @param {TokenType} chunkType\n * @param {number} eventStart\n * @param {Point} pointStart\n * @param {boolean} allowEmpty\n * @param {boolean} spread\n * @returns {MdxSignal}\n */\n// eslint-disable-next-line max-params\nfunction mdxExpressionParse(\n  acorn,\n  acornOptions,\n  chunkType,\n  eventStart,\n  pointStart,\n  allowEmpty,\n  spread\n) {\n  // Gnostic mode: parse w/ acorn.\n  const result = eventsToAcorn(this.events.slice(eventStart), {\n    acorn,\n    tokenTypes: [chunkType],\n    acornOptions,\n    start: pointStart,\n    expression: true,\n    allowEmpty,\n    prefix: spread ? '({' : '',\n    suffix: spread ? '})' : ''\n  })\n  const estree = result.estree\n\n  // Get the spread value.\n  if (spread && estree) {\n    // Should always be the case as we wrap in `d={}`\n    assert(estree.type === 'Program', 'expected program')\n    const head = estree.body[0]\n    assert(head, 'expected body')\n\n    if (\n      head.type !== 'ExpressionStatement' ||\n      head.expression.type !== 'ObjectExpression'\n    ) {\n      const place = positionFromEstree(head)\n      assert(place, 'expected position')\n      const error = new VFileMessage(\n        'Unexpected `' +\n          head.type +\n          '` in code: expected an object spread (`{...spread}`)',\n        {\n          place: place.start,\n          ruleId: 'non-spread',\n          source: 'micromark-extension-mdx-expression'\n        }\n      )\n      error.url = trouble + nonSpreadHash\n      throw error\n    }\n\n    if (head.expression.properties[1]) {\n      const place = positionFromEstree(head.expression.properties[1])\n      assert(place, 'expected position')\n      const error = new VFileMessage(\n        'Unexpected extra content in spread: only a single spread is supported',\n        {\n          place: place.start,\n          ruleId: 'spread-extra',\n          source: 'micromark-extension-mdx-expression'\n        }\n      )\n      error.url = trouble + spreadExtraHash\n      throw error\n    }\n\n    if (\n      head.expression.properties[0] &&\n      head.expression.properties[0].type !== 'SpreadElement'\n    ) {\n      const place = positionFromEstree(head.expression.properties[0])\n      assert(place, 'expected position')\n      const error = new VFileMessage(\n        'Unexpected `' +\n          head.expression.properties[0].type +\n          '` in code: only spread elements are supported',\n        {\n          place: place.start,\n          ruleId: 'non-spread',\n          source: 'micromark-extension-mdx-expression'\n        }\n      )\n      error.url = trouble + nonSpreadHash\n      throw error\n    }\n  }\n\n  if (result.error) {\n    const error = new VFileMessage('Could not parse expression with acorn', {\n      cause: result.error,\n      place: {\n        line: result.error.loc.line,\n        column: result.error.loc.column + 1,\n        offset: result.error.pos\n      },\n      ruleId: 'acorn',\n      source: 'micromark-extension-mdx-expression'\n    })\n    error.url = trouble + acornHash\n\n    return {type: 'nok', message: error}\n  }\n\n  return {type: 'ok', estree}\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 13499, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13505, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-extension-mdx-expression/dev/lib/syntax.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-events-to-acorn').Acorn} Acorn\n * @typedef {import('micromark-util-events-to-acorn').AcornOptions} AcornOptions\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {Acorn | null | undefined} [acorn]\n *   Acorn parser to use (optional).\n * @property {AcornOptions | null | undefined} [acornOptions]\n *   Configuration for acorn (default: `{ecmaVersion: 2024, locations: true,\n *   sourceType: 'module'}`).\n *\n *   All fields except `locations` can be set.\n * @property {boolean | null | undefined} [addResult=false]\n *   Whether to add `estree` fields to tokens with results from acorn (default:\n *   `false`).\n * @property {boolean | null | undefined} [spread=false]\n *   Undocumented option to parse only a spread (used by\n *   `micromark-extension-mdx-jsx` to parse spread attributes) (default:\n *   `false`).\n * @property {boolean | null | undefined} [allowEmpty=true]\n *   Undocumented option to disallow empty attributes (used by\n *   `micromark-extension-mdx-jsx` to prohobit empty attribute values)\n *   (default: `false`).\n */\n\nimport {ok as assert} from 'devlop'\nimport {factoryMdxExpression} from 'micromark-factory-mdx-expression'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\nimport {codes, types} from 'micromark-util-symbol'\n\n/**\n * Create an extension for `micromark` to enable MDX expression syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable MDX\n *   expression syntax.\n */\nexport function mdxExpression(options) {\n  const options_ = options || {}\n  const addResult = options_.addResult\n  const acorn = options_.acorn\n  // Hidden: `micromark-extension-mdx-jsx` supports expressions in tags,\n  // and one of them is only “spread” elements.\n  // It also has expressions that are not allowed to be empty (`<x y={}/>`).\n  // Instead of duplicating code there, this are two small hidden feature here\n  // to test that behavior.\n  const spread = options_.spread\n  let allowEmpty = options_.allowEmpty\n  /** @type {AcornOptions} */\n  let acornOptions\n\n  if (allowEmpty === null || allowEmpty === undefined) {\n    allowEmpty = true\n  }\n\n  if (acorn) {\n    if (!acorn.parseExpressionAt) {\n      throw new Error(\n        'Expected a proper `acorn` instance passed in as `options.acorn`'\n      )\n    }\n\n    acornOptions = Object.assign(\n      {ecmaVersion: 2024, sourceType: 'module'},\n      options_.acornOptions\n    )\n  } else if (options_.acornOptions || options_.addResult) {\n    throw new Error('Expected an `acorn` instance passed in as `options.acorn`')\n  }\n\n  return {\n    flow: {\n      [codes.leftCurlyBrace]: {\n        name: 'mdxFlowExpression',\n        tokenize: tokenizeFlowExpression,\n        concrete: true\n      }\n    },\n    text: {\n      [codes.leftCurlyBrace]: {\n        name: 'mdxTextExpression',\n        tokenize: tokenizeTextExpression\n      }\n    }\n  }\n\n  /**\n   * MDX expression (flow).\n   *\n   * ```markdown\n   * > | {Math.PI}\n   *     ^^^^^^^^^\n   * ```\n   *\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeFlowExpression(effects, ok, nok) {\n    const self = this\n\n    return start\n\n    /**\n     * Start of an MDX expression (flow).\n     *\n     * ```markdown\n     * > | {Math.PI}\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // To do: in `markdown-rs`, constructs need to parse the indent themselves.\n      // This should also be introduced in `micromark-js`.\n      assert(code === codes.leftCurlyBrace, 'expected `{`')\n      return before(code)\n    }\n\n    /**\n     * After optional whitespace, before expression.\n     *\n     * ```markdown\n     * > | {Math.PI}\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function before(code) {\n      return factoryMdxExpression.call(\n        self,\n        effects,\n        after,\n        'mdxFlowExpression',\n        'mdxFlowExpressionMarker',\n        'mdxFlowExpressionChunk',\n        acorn,\n        acornOptions,\n        addResult,\n        spread,\n        allowEmpty\n      )(code)\n    }\n\n    /**\n     * After expression.\n     *\n     * ```markdown\n     * > | {Math.PI}\n     *              ^\n     * ```\n     *\n     * @type {State}\n     */\n    function after(code) {\n      return markdownSpace(code)\n        ? factorySpace(effects, end, types.whitespace)(code)\n        : end(code)\n    }\n\n    /**\n     * After expression, after optional whitespace.\n     *\n     * ```markdown\n     * > | {Math.PI}␠␊\n     *               ^\n     * ```\n     *\n     * @type {State}\n     */\n    function end(code) {\n      // We want to allow tags directly after expressions.\n      //\n      // This case is useful:\n      //\n      // ```mdx\n      // <a>{b}</a>\n      // ```\n      //\n      // This case is not (very?) useful:\n      //\n      // ```mdx\n      // {a}<b/>\n      // ```\n      //\n      // …but it would be tougher than needed to disallow.\n      //\n      // To allow that, here we call the flow construct of\n      // `micromark-extension-mdx-jsx`, and there we call this one.\n      //\n      // It would introduce a cyclical interdependency if we test JSX and\n      // expressions here.\n      // Because the JSX extension already uses parts of this monorepo, we\n      // instead test it there.\n      const lessThanValue = self.parser.constructs.flow[codes.lessThan]\n      const constructs = Array.isArray(lessThanValue)\n        ? lessThanValue\n        : /* c8 ignore next 3 -- always a list when normalized. */\n        lessThanValue\n        ? [lessThanValue]\n        : []\n      const jsxTag = constructs.find(function (d) {\n        return d.name === 'mdxJsxFlowTag'\n      })\n\n      /* c8 ignore next 3 -- this is tested in `micromark-extension-mdx-jsx` */\n      if (code === codes.lessThan && jsxTag) {\n        return effects.attempt(jsxTag, end, nok)(code)\n      }\n\n      return code === codes.eof || markdownLineEnding(code)\n        ? ok(code)\n        : nok(code)\n    }\n  }\n\n  /**\n   * MDX expression (text).\n   *\n   * ```markdown\n   * > | a {Math.PI} c.\n   *       ^^^^^^^^^\n   * ```\n   *\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeTextExpression(effects, ok) {\n    const self = this\n\n    return start\n\n    /**\n     * Start of an MDX expression (text).\n     *\n     * ```markdown\n     * > | a {Math.PI} c.\n     *       ^\n     * ```\n     *\n     *\n     * @type {State}\n     */\n    function start(code) {\n      assert(code === codes.leftCurlyBrace, 'expected `{`')\n      return factoryMdxExpression.call(\n        self,\n        effects,\n        ok,\n        'mdxTextExpression',\n        'mdxTextExpressionMarker',\n        'mdxTextExpressionChunk',\n        acorn,\n        acornOptions,\n        addResult,\n        spread,\n        allowEmpty,\n        true\n      )(code)\n    }\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 13718, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13724, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/estree-util-is-identifier-name/lib/index.js"],"sourcesContent":["/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [jsx=false]\n *   Support JSX identifiers (default: `false`).\n */\n\nconst startRe = /[$_\\p{ID_Start}]/u\nconst contRe = /[$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst contReJsx = /[-$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst nameRe = /^[$_\\p{ID_Start}][$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\nconst nameReJsx = /^[$_\\p{ID_Start}][-$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Checks if the given code point can start an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @returns {boolean}\n *   Whether `code` can start an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function start(code) {\n  return code ? startRe.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given code point can continue an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `code` can continue an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function cont(code, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? contReJsx : contRe\n  return code ? re.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given value is a valid identifier name.\n *\n * @param {string} name\n *   Identifier to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `name` can be an identifier.\n */\nexport function name(name, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? nameReJsx : nameRe\n  return re.test(name)\n}\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;;;AAED,MAAM,UAAU;AAChB,MAAM,SAAS;AACf,MAAM,YAAY;AAClB,MAAM,SAAS;AACf,MAAM,YAAY;AAElB,oBAAoB,GACpB,MAAM,eAAe,CAAC;AAWf,SAAS,MAAM,IAAI;IACxB,OAAO,OAAO,QAAQ,IAAI,CAAC,OAAO,aAAa,CAAC,SAAS;AAC3D;AAaO,SAAS,KAAK,IAAI,EAAE,OAAO;IAChC,MAAM,WAAW,WAAW;IAC5B,MAAM,KAAK,SAAS,GAAG,GAAG,YAAY;IACtC,OAAO,OAAO,GAAG,IAAI,CAAC,OAAO,aAAa,CAAC,SAAS;AACtD;AAYO,SAAS,KAAK,IAAI,EAAE,OAAO;IAChC,MAAM,WAAW,WAAW;IAC5B,MAAM,KAAK,SAAS,GAAG,GAAG,YAAY;IACtC,OAAO,GAAG,IAAI,CAAC;AACjB","ignoreList":[0]}},
    {"offset": {"line": 13753, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13759, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-extension-mdx-jsx/dev/lib/factory-tag.js"],"sourcesContent":["/**\n * @import {Acorn, AcornOptions} from 'micromark-util-events-to-acorn'\n * @import {Code, Effects, State, TokenizeContext, TokenType} from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {cont as idCont, start as idStart} from 'estree-util-is-identifier-name'\nimport {factoryMdxExpression} from 'micromark-factory-mdx-expression'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace,\n  unicodeWhitespace\n} from 'micromark-util-character'\nimport {codes, constants, types} from 'micromark-util-symbol'\nimport {VFileMessage} from 'vfile-message'\n\nconst trouble = 'https://github.com/micromark/micromark-extension-mdx-jsx'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {Acorn | null | undefined} acorn\n * @param {AcornOptions | null | undefined} acornOptions\n * @param {boolean | null | undefined} addResult\n * @param {boolean | undefined} allowLazy\n * @param {TokenType} tagType\n * @param {TokenType} tagMarkerType\n * @param {TokenType} tagClosingMarkerType\n * @param {TokenType} tagSelfClosingMarker\n * @param {TokenType} tagNameType\n * @param {TokenType} tagNamePrimaryType\n * @param {TokenType} tagNameMemberMarkerType\n * @param {TokenType} tagNameMemberType\n * @param {TokenType} tagNamePrefixMarkerType\n * @param {TokenType} tagNameLocalType\n * @param {TokenType} tagExpressionAttributeType\n * @param {TokenType} tagExpressionAttributeMarkerType\n * @param {TokenType} tagExpressionAttributeValueType\n * @param {TokenType} tagAttributeType\n * @param {TokenType} tagAttributeNameType\n * @param {TokenType} tagAttributeNamePrimaryType\n * @param {TokenType} tagAttributeNamePrefixMarkerType\n * @param {TokenType} tagAttributeNameLocalType\n * @param {TokenType} tagAttributeInitializerMarkerType\n * @param {TokenType} tagAttributeValueLiteralType\n * @param {TokenType} tagAttributeValueLiteralMarkerType\n * @param {TokenType} tagAttributeValueLiteralValueType\n * @param {TokenType} tagAttributeValueExpressionType\n * @param {TokenType} tagAttributeValueExpressionMarkerType\n * @param {TokenType} tagAttributeValueExpressionValueType\n */\n// eslint-disable-next-line max-params\nexport function factoryTag(\n  effects,\n  ok,\n  nok,\n  acorn,\n  acornOptions,\n  addResult,\n  allowLazy,\n  tagType,\n  tagMarkerType,\n  tagClosingMarkerType,\n  tagSelfClosingMarker,\n  tagNameType,\n  tagNamePrimaryType,\n  tagNameMemberMarkerType,\n  tagNameMemberType,\n  tagNamePrefixMarkerType,\n  tagNameLocalType,\n  tagExpressionAttributeType,\n  tagExpressionAttributeMarkerType,\n  tagExpressionAttributeValueType,\n  tagAttributeType,\n  tagAttributeNameType,\n  tagAttributeNamePrimaryType,\n  tagAttributeNamePrefixMarkerType,\n  tagAttributeNameLocalType,\n  tagAttributeInitializerMarkerType,\n  tagAttributeValueLiteralType,\n  tagAttributeValueLiteralMarkerType,\n  tagAttributeValueLiteralValueType,\n  tagAttributeValueExpressionType,\n  tagAttributeValueExpressionMarkerType,\n  tagAttributeValueExpressionValueType\n) {\n  const self = this\n  /** @type {State} */\n  let returnState\n  /** @type {NonNullable<Code> | undefined} */\n  let marker\n\n  return start\n\n  /**\n   * Start of MDX: JSX.\n   *\n   * ```markdown\n   * > | a <B /> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.lessThan, 'expected `<`')\n    effects.enter(tagType)\n    effects.enter(tagMarkerType)\n    effects.consume(code)\n    effects.exit(tagMarkerType)\n    return startAfter\n  }\n\n  /**\n   * After `<`.\n   *\n   * ```markdown\n   * > | a <B /> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function startAfter(code) {\n    // Deviate from JSX, which allows arbitrary whitespace.\n    // See: <https://github.com/micromark/micromark-extension-mdx-jsx/issues/7>.\n    if (markdownLineEndingOrSpace(code)) {\n      return nok(code)\n    }\n\n    // Any other ES whitespace does not get this treatment.\n    returnState = nameBefore\n    return esWhitespaceStart(code)\n  }\n\n  /**\n   * Before name, self slash, or end of tag for fragments.\n   *\n   * ```markdown\n   * > | a <B> c\n   *        ^\n   * > | a </B> c\n   *        ^\n   * > | a <> b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function nameBefore(code) {\n    // Closing tag.\n    if (code === codes.slash) {\n      effects.enter(tagClosingMarkerType)\n      effects.consume(code)\n      effects.exit(tagClosingMarkerType)\n      returnState = closingTagNameBefore\n      return esWhitespaceStart\n    }\n\n    // Fragment opening tag.\n    if (code === codes.greaterThan) {\n      return tagEnd(code)\n    }\n\n    // Start of a name.\n    if (code !== codes.eof && code >= 0 && idStart(code)) {\n      effects.enter(tagNameType)\n      effects.enter(tagNamePrimaryType)\n      effects.consume(code)\n      return primaryName\n    }\n\n    crash(\n      code,\n      'before name',\n      'a character that can start a name, such as a letter, `$`, or `_`' +\n        (code === codes.exclamationMark\n          ? ' (note: to create a comment in MDX, use `{/* text */}`)'\n          : '')\n    )\n  }\n\n  /**\n   * Before name of closing tag or end of closing fragment tag.\n   *\n   * ```markdown\n   * > | a </> b\n   *         ^\n   * > | a </B> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function closingTagNameBefore(code) {\n    // Fragment closing tag.\n    if (code === codes.greaterThan) {\n      return tagEnd(code)\n    }\n\n    // Start of a closing tag name.\n    if (code !== codes.eof && code >= 0 && idStart(code)) {\n      effects.enter(tagNameType)\n      effects.enter(tagNamePrimaryType)\n      effects.consume(code)\n      return primaryName\n    }\n\n    crash(\n      code,\n      'before name',\n      'a character that can start a name, such as a letter, `$`, or `_`' +\n        (code === codes.asterisk || code === codes.slash\n          ? ' (note: JS comments in JSX tags are not supported in MDX)'\n          : '')\n    )\n  }\n\n  /**\n   * In primary name.\n   *\n   * ```markdown\n   * > | a <Bc> d\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function primaryName(code) {\n    // Continuation of name: remain.\n    if (code !== codes.eof && code >= 0 && idCont(code, {jsx: true})) {\n      effects.consume(code)\n      return primaryName\n    }\n\n    // End of name.\n    if (\n      code === codes.dot ||\n      code === codes.slash ||\n      code === codes.colon ||\n      code === codes.greaterThan ||\n      code === codes.leftCurlyBrace ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      effects.exit(tagNamePrimaryType)\n      returnState = primaryNameAfter\n      return esWhitespaceStart(code)\n    }\n\n    crash(\n      code,\n      'in name',\n      'a name character such as letters, digits, `$`, or `_`; whitespace before attributes; or the end of the tag' +\n        (code === codes.atSign\n          ? ' (note: to create a link in MDX, use `[text](url)`)'\n          : '')\n    )\n  }\n\n  /**\n   * After primary name.\n   *\n   * ```markdown\n   * > | a <b.c> d\n   *         ^\n   * > | a <b:c> d\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function primaryNameAfter(code) {\n    // Start of a member name.\n    if (code === codes.dot) {\n      effects.enter(tagNameMemberMarkerType)\n      effects.consume(code)\n      effects.exit(tagNameMemberMarkerType)\n      returnState = memberNameBefore\n      return esWhitespaceStart\n    }\n\n    // Start of a local name.\n    if (code === codes.colon) {\n      effects.enter(tagNamePrefixMarkerType)\n      effects.consume(code)\n      effects.exit(tagNamePrefixMarkerType)\n      returnState = localNameBefore\n      return esWhitespaceStart\n    }\n\n    // End of name.\n    if (\n      code === codes.slash ||\n      code === codes.greaterThan ||\n      code === codes.leftCurlyBrace ||\n      (code !== codes.eof && code >= 0 && idStart(code))\n    ) {\n      effects.exit(tagNameType)\n      return attributeBefore(code)\n    }\n\n    crash(\n      code,\n      'after name',\n      'a character that can start an attribute name, such as a letter, `$`, or `_`; whitespace before attributes; or the end of the tag'\n    )\n  }\n\n  /**\n   * Before member name.\n   *\n   * ```markdown\n   * > | a <b.c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function memberNameBefore(code) {\n    // Start of a member name.\n    if (code !== codes.eof && code >= 0 && idStart(code)) {\n      effects.enter(tagNameMemberType)\n      effects.consume(code)\n      return memberName\n    }\n\n    crash(\n      code,\n      'before member name',\n      'a character that can start an attribute name, such as a letter, `$`, or `_`; whitespace before attributes; or the end of the tag'\n    )\n  }\n\n  /**\n   * In member name.\n   *\n   * ```markdown\n   * > | a <b.cd> e\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function memberName(code) {\n    // Continuation of name: remain.\n    if (code !== codes.eof && code >= 0 && idCont(code, {jsx: true})) {\n      effects.consume(code)\n      return memberName\n    }\n\n    // End of name.\n    // Note: no `:` allowed here.\n    if (\n      code === codes.dot ||\n      code === codes.slash ||\n      code === codes.greaterThan ||\n      code === codes.leftCurlyBrace ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      effects.exit(tagNameMemberType)\n      returnState = memberNameAfter\n      return esWhitespaceStart(code)\n    }\n\n    crash(\n      code,\n      'in member name',\n      'a name character such as letters, digits, `$`, or `_`; whitespace before attributes; or the end of the tag' +\n        (code === codes.atSign\n          ? ' (note: to create a link in MDX, use `[text](url)`)'\n          : '')\n    )\n  }\n\n  /**\n   * After member name.\n   *\n   * ```markdown\n   * > | a <b.c> d\n   *           ^\n   * > | a <b.c.d> e\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function memberNameAfter(code) {\n    // Start another member name.\n    if (code === codes.dot) {\n      effects.enter(tagNameMemberMarkerType)\n      effects.consume(code)\n      effects.exit(tagNameMemberMarkerType)\n      returnState = memberNameBefore\n      return esWhitespaceStart\n    }\n\n    // End of name.\n    if (\n      code === codes.slash ||\n      code === codes.greaterThan ||\n      code === codes.leftCurlyBrace ||\n      (code !== codes.eof && code >= 0 && idStart(code))\n    ) {\n      effects.exit(tagNameType)\n      return attributeBefore(code)\n    }\n\n    crash(\n      code,\n      'after member name',\n      'a character that can start an attribute name, such as a letter, `$`, or `_`; whitespace before attributes; or the end of the tag'\n    )\n  }\n\n  /**\n   * Local member name.\n   *\n   * ```markdown\n   * > | a <b:c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function localNameBefore(code) {\n    // Start of a local name.\n    if (code !== codes.eof && code >= 0 && idStart(code)) {\n      effects.enter(tagNameLocalType)\n      effects.consume(code)\n      return localName\n    }\n\n    crash(\n      code,\n      'before local name',\n      'a character that can start a name, such as a letter, `$`, or `_`' +\n        (code === codes.plusSign ||\n        (code !== null &&\n          code > codes.dot &&\n          code < codes.colon) /* `/` - `9` */\n          ? ' (note: to create a link in MDX, use `[text](url)`)'\n          : '')\n    )\n  }\n\n  /**\n   * In local name.\n   *\n   * ```markdown\n   * > | a <b:cd> e\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function localName(code) {\n    // Continuation of name: remain.\n    if (code !== codes.eof && code >= 0 && idCont(code, {jsx: true})) {\n      effects.consume(code)\n      return localName\n    }\n\n    // End of local name (note that we don’t expect another colon, or a member).\n    if (\n      code === codes.slash ||\n      code === codes.greaterThan ||\n      code === codes.leftCurlyBrace ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      effects.exit(tagNameLocalType)\n      returnState = localNameAfter\n      return esWhitespaceStart(code)\n    }\n\n    crash(\n      code,\n      'in local name',\n      'a name character such as letters, digits, `$`, or `_`; whitespace before attributes; or the end of the tag'\n    )\n  }\n\n  /**\n   * After local name.\n   *\n   * This is like as `primary_name_after`, but we don’t expect colons or\n   * periods.\n   *\n   * ```markdown\n   * > | a <b.c> d\n   *           ^\n   * > | a <b.c.d> e\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function localNameAfter(code) {\n    // End of name.\n    if (\n      code === codes.slash ||\n      code === codes.greaterThan ||\n      code === codes.leftCurlyBrace ||\n      (code !== codes.eof && code >= 0 && idStart(code))\n    ) {\n      effects.exit(tagNameType)\n      return attributeBefore(code)\n    }\n\n    crash(\n      code,\n      'after local name',\n      'a character that can start an attribute name, such as a letter, `$`, or `_`; whitespace before attributes; or the end of the tag'\n    )\n  }\n\n  /**\n   * Before attribute.\n   *\n   * ```markdown\n   * > | a <b /> c\n   *          ^\n   * > | a <b > c\n   *          ^\n   * > | a <b {...c}> d\n   *          ^\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function attributeBefore(code) {\n    // Self-closing.\n    if (code === codes.slash) {\n      effects.enter(tagSelfClosingMarker)\n      effects.consume(code)\n      effects.exit(tagSelfClosingMarker)\n      returnState = selfClosing\n      return esWhitespaceStart\n    }\n\n    // End of tag.\n    if (code === codes.greaterThan) {\n      return tagEnd(code)\n    }\n\n    // Attribute expression.\n    if (code === codes.leftCurlyBrace) {\n      return factoryMdxExpression.call(\n        self,\n        effects,\n        attributeExpressionAfter,\n        tagExpressionAttributeType,\n        tagExpressionAttributeMarkerType,\n        tagExpressionAttributeValueType,\n        acorn,\n        acornOptions,\n        addResult,\n        true,\n        false,\n        allowLazy\n      )(code)\n    }\n\n    // Start of an attribute name.\n    if (code !== codes.eof && code >= 0 && idStart(code)) {\n      effects.enter(tagAttributeType)\n      effects.enter(tagAttributeNameType)\n      effects.enter(tagAttributeNamePrimaryType)\n      effects.consume(code)\n      return attributePrimaryName\n    }\n\n    crash(\n      code,\n      'before attribute name',\n      'a character that can start an attribute name, such as a letter, `$`, or `_`; whitespace before attributes; or the end of the tag'\n    )\n  }\n\n  /**\n   * After attribute expression.\n   *\n   * ```markdown\n   * > | a <b {c} d/> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function attributeExpressionAfter(code) {\n    returnState = attributeBefore\n    return esWhitespaceStart(code)\n  }\n\n  /**\n   * In primary attribute name.\n   *\n   * ```markdown\n   * > | a <b cd/> e\n   *           ^\n   * > | a <b c:d> e\n   *           ^\n   * > | a <b c=d> e\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function attributePrimaryName(code) {\n    // Continuation of name: remain.\n    if (code !== codes.eof && code >= 0 && idCont(code, {jsx: true})) {\n      effects.consume(code)\n      return attributePrimaryName\n    }\n\n    // End of attribute name or tag.\n    if (\n      code === codes.slash ||\n      code === codes.colon ||\n      code === codes.equalsTo ||\n      code === codes.greaterThan ||\n      code === codes.leftCurlyBrace ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      effects.exit(tagAttributeNamePrimaryType)\n      returnState = attributePrimaryNameAfter\n      return esWhitespaceStart(code)\n    }\n\n    crash(\n      code,\n      'in attribute name',\n      'an attribute name character such as letters, digits, `$`, or `_`; `=` to initialize a value; whitespace before attributes; or the end of the tag'\n    )\n  }\n\n  /**\n   * After primary attribute name.\n   *\n   * ```markdown\n   * > | a <b c/> d\n   *           ^\n   * > | a <b c:d> e\n   *           ^\n   * > | a <b c=d> e\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function attributePrimaryNameAfter(code) {\n    // Start of a local name.\n    if (code === codes.colon) {\n      effects.enter(tagAttributeNamePrefixMarkerType)\n      effects.consume(code)\n      effects.exit(tagAttributeNamePrefixMarkerType)\n      returnState = attributeLocalNameBefore\n      return esWhitespaceStart\n    }\n\n    // Initializer: start of an attribute value.\n    if (code === codes.equalsTo) {\n      effects.exit(tagAttributeNameType)\n      effects.enter(tagAttributeInitializerMarkerType)\n      effects.consume(code)\n      effects.exit(tagAttributeInitializerMarkerType)\n      returnState = attributeValueBefore\n      return esWhitespaceStart\n    }\n\n    // End of tag / new attribute.\n    if (\n      code === codes.slash ||\n      code === codes.greaterThan ||\n      code === codes.leftCurlyBrace ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code) ||\n      (code !== codes.eof && code >= 0 && idStart(code))\n    ) {\n      effects.exit(tagAttributeNameType)\n      effects.exit(tagAttributeType)\n      returnState = attributeBefore\n      return esWhitespaceStart(code)\n    }\n\n    crash(\n      code,\n      'after attribute name',\n      'a character that can start an attribute name, such as a letter, `$`, or `_`; `=` to initialize a value; or the end of the tag'\n    )\n  }\n\n  /**\n   * Before local attribute name.\n   *\n   * ```markdown\n   * > | a <b c:d/> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function attributeLocalNameBefore(code) {\n    // Start of a local name.\n    if (code !== codes.eof && code >= 0 && idStart(code)) {\n      effects.enter(tagAttributeNameLocalType)\n      effects.consume(code)\n      return attributeLocalName\n    }\n\n    crash(\n      code,\n      'before local attribute name',\n      'a character that can start an attribute name, such as a letter, `$`, or `_`; `=` to initialize a value; or the end of the tag'\n    )\n  }\n\n  /**\n   * In local attribute name.\n   *\n   * ```markdown\n   * > | a <b c:de/> f\n   *             ^\n   * > | a <b c:d=e/> f\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function attributeLocalName(code) {\n    // Continuation of name: remain.\n    if (code !== codes.eof && code >= 0 && idCont(code, {jsx: true})) {\n      effects.consume(code)\n      return attributeLocalName\n    }\n\n    // End of local name (note that we don’t expect another colon).\n    if (\n      code === codes.slash ||\n      code === codes.equalsTo ||\n      code === codes.greaterThan ||\n      code === codes.leftCurlyBrace ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      effects.exit(tagAttributeNameLocalType)\n      effects.exit(tagAttributeNameType)\n      returnState = attributeLocalNameAfter\n      return esWhitespaceStart(code)\n    }\n\n    crash(\n      code,\n      'in local attribute name',\n      'an attribute name character such as letters, digits, `$`, or `_`; `=` to initialize a value; whitespace before attributes; or the end of the tag'\n    )\n  }\n\n  /**\n   * After local attribute name.\n   *\n   * ```markdown\n   * > | a <b c:d/> f\n   *             ^\n   * > | a <b c:d=e/> f\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function attributeLocalNameAfter(code) {\n    // Start of an attribute value.\n    if (code === codes.equalsTo) {\n      effects.enter(tagAttributeInitializerMarkerType)\n      effects.consume(code)\n      effects.exit(tagAttributeInitializerMarkerType)\n      returnState = attributeValueBefore\n      return esWhitespaceStart\n    }\n\n    // End of name.\n    if (\n      code === codes.slash ||\n      code === codes.greaterThan ||\n      code === codes.leftCurlyBrace ||\n      (code !== codes.eof && code >= 0 && idStart(code))\n    ) {\n      effects.exit(tagAttributeType)\n      return attributeBefore(code)\n    }\n\n    crash(\n      code,\n      'after local attribute name',\n      'a character that can start an attribute name, such as a letter, `$`, or `_`; `=` to initialize a value; or the end of the tag'\n    )\n  }\n\n  /**\n   * After `=`, before value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"/> e\n   *            ^\n   * > | a <b c={d}/> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function attributeValueBefore(code) {\n    // Start of double- or single quoted value.\n    if (code === codes.quotationMark || code === codes.apostrophe) {\n      effects.enter(tagAttributeValueLiteralType)\n      effects.enter(tagAttributeValueLiteralMarkerType)\n      effects.consume(code)\n      effects.exit(tagAttributeValueLiteralMarkerType)\n      marker = code\n      return attributeValueQuotedStart\n    }\n\n    // Attribute value expression.\n    if (code === codes.leftCurlyBrace) {\n      return factoryMdxExpression.call(\n        self,\n        effects,\n        attributeValueExpressionAfter,\n        tagAttributeValueExpressionType,\n        tagAttributeValueExpressionMarkerType,\n        tagAttributeValueExpressionValueType,\n        acorn,\n        acornOptions,\n        addResult,\n        false,\n        false,\n        allowLazy\n      )(code)\n    }\n\n    crash(\n      code,\n      'before attribute value',\n      'a character that can start an attribute value, such as `\"`, `\\'`, or `{`' +\n        (code === codes.lessThan\n          ? ' (note: to use an element or fragment as a prop value in MDX, use `{<element />}`)'\n          : '')\n    )\n  }\n\n  /**\n   * After attribute value expression.\n   *\n   * ```markdown\n   * > | a <b c={d} e/> f\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function attributeValueExpressionAfter(code) {\n    effects.exit(tagAttributeType)\n    returnState = attributeBefore\n    return esWhitespaceStart(code)\n  }\n\n  /**\n   * Before quoted literal attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"/> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function attributeValueQuotedStart(code) {\n    assert(marker !== undefined, 'expected `marker` to be defined')\n\n    if (code === codes.eof) {\n      crash(\n        code,\n        'in attribute value',\n        'a corresponding closing quote `' + String.fromCodePoint(marker) + '`'\n      )\n    }\n\n    if (code === marker) {\n      effects.enter(tagAttributeValueLiteralMarkerType)\n      effects.consume(code)\n      effects.exit(tagAttributeValueLiteralMarkerType)\n      effects.exit(tagAttributeValueLiteralType)\n      effects.exit(tagAttributeType)\n      marker = undefined\n      returnState = attributeBefore\n      return esWhitespaceStart\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = attributeValueQuotedStart\n      return esWhitespaceStart(code)\n    }\n\n    effects.enter(tagAttributeValueLiteralValueType)\n    return attributeValueQuoted(code)\n  }\n\n  /**\n   * In quoted literal attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"/> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function attributeValueQuoted(code) {\n    if (code === codes.eof || code === marker || markdownLineEnding(code)) {\n      effects.exit(tagAttributeValueLiteralValueType)\n      return attributeValueQuotedStart(code)\n    }\n\n    effects.consume(code)\n    return attributeValueQuoted\n  }\n\n  /**\n   * After self-closing slash.\n   *\n   * ```markdown\n   * > | a <b/> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function selfClosing(code) {\n    if (code === codes.greaterThan) {\n      return tagEnd(code)\n    }\n\n    crash(\n      code,\n      'after self-closing slash',\n      '`>` to end the tag' +\n        (code === codes.asterisk || code === codes.slash\n          ? ' (note: JS comments in JSX tags are not supported in MDX)'\n          : '')\n    )\n  }\n\n  /**\n   * At final `>`.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagEnd(code) {\n    assert(code === codes.greaterThan, 'expected `>`')\n    effects.enter(tagMarkerType)\n    effects.consume(code)\n    effects.exit(tagMarkerType)\n    effects.exit(tagType)\n    return ok\n  }\n\n  /**\n   * Before optional ECMAScript whitespace.\n   *\n   * ```markdown\n   * > | a <a b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function esWhitespaceStart(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(types.lineEnding)\n      effects.consume(code)\n      effects.exit(types.lineEnding)\n      return esWhitespaceEolAfter\n    }\n\n    if (markdownSpace(code) || unicodeWhitespace(code)) {\n      effects.enter('esWhitespace')\n      return esWhitespaceInside(code)\n    }\n\n    return returnState(code)\n  }\n\n  /**\n   * In ECMAScript whitespace.\n   *\n   * ```markdown\n   * > | a <a  b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function esWhitespaceInside(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('esWhitespace')\n      return esWhitespaceStart(code)\n    }\n\n    if (markdownSpace(code) || unicodeWhitespace(code)) {\n      effects.consume(code)\n      return esWhitespaceInside\n    }\n\n    effects.exit('esWhitespace')\n    return returnState(code)\n  }\n\n  /**\n   * After eol in whitespace.\n   *\n   * ```markdown\n   * > | a <a\\nb> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function esWhitespaceEolAfter(code) {\n    // Lazy continuation in a flow tag is a syntax error.\n    if (!allowLazy && self.parser.lazy[self.now().line]) {\n      const error = new VFileMessage(\n        'Unexpected lazy line in container, expected line to be prefixed with `>` when in a block quote, whitespace when in a list, etc',\n        self.now(),\n        'micromark-extension-mdx-jsx:unexpected-lazy'\n      )\n      error.url =\n        trouble + '#unexpected-lazy-line-in-container-expected-line-to-be'\n      throw error\n    }\n\n    return esWhitespaceStart(code)\n  }\n\n  /**\n   * Crash at a nonconforming character.\n   *\n   * @param {Code} code\n   * @param {string} at\n   * @param {string} expect\n   */\n  function crash(code, at, expect) {\n    const error = new VFileMessage(\n      'Unexpected ' +\n        (code === codes.eof\n          ? 'end of file'\n          : 'character `' +\n            (code === codes.graveAccent\n              ? '` ` `'\n              : String.fromCodePoint(code)) +\n            '` (' +\n            serializeCharCode(code) +\n            ')') +\n        ' ' +\n        at +\n        ', expected ' +\n        expect,\n      self.now(),\n      'micromark-extension-mdx-jsx:unexpected-' +\n        (code === codes.eof ? 'eof' : 'character')\n    )\n    error.url =\n      trouble +\n      (code === codes.eof\n        ? '#unexpected-end-of-file-at-expected-expect'\n        : '#unexpected-character-at-expected-expect')\n    throw error\n  }\n}\n\n/**\n * @param {NonNullable<Code>} code\n * @returns {string}\n */\nfunction serializeCharCode(code) {\n  return (\n    'U+' +\n    code\n      .toString(constants.numericBaseHexadecimal)\n      .toUpperCase()\n      .padStart(4, '0')\n  )\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 14475, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14481, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-extension-mdx-jsx/dev/lib/jsx-flow.js"],"sourcesContent":["/**\n * @import {Options} from 'micromark-extension-mdx-jsx'\n * @import {Acorn} from 'micromark-util-events-to-acorn'\n * @import {Construct, State, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\nimport {factorySpace} from 'micromark-factory-space'\nimport {codes, types} from 'micromark-util-symbol'\nimport {factoryTag} from './factory-tag.js'\n\n/**\n * Parse JSX (flow).\n *\n * @param {Acorn | undefined} acorn\n *   Acorn parser to use (optional).\n * @param {Options} options\n *   Configuration.\n * @returns {Construct}\n *   Construct.\n */\nexport function jsxFlow(acorn, options) {\n  return {name: 'mdxJsxFlowTag', tokenize: tokenizeJsxFlow, concrete: true}\n\n  /**\n   * MDX JSX (flow).\n   *\n   * ```markdown\n   * > | <A />\n   *     ^^^^^\n   * ```\n   *\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeJsxFlow(effects, ok, nok) {\n    const self = this\n\n    return start\n\n    /**\n     * Start of MDX: JSX (flow).\n     *\n     * ```markdown\n     * > | <A />\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // To do: in `markdown-rs`, constructs need to parse the indent themselves.\n      // This should also be introduced in `micromark-js`.\n      assert(code === codes.lessThan, 'expected `<`')\n      return before(code)\n    }\n\n    /**\n     * After optional whitespace, before of MDX JSX (flow).\n     *\n     * ```markdown\n     * > | <A />\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function before(code) {\n      return factoryTag.call(\n        self,\n        effects,\n        after,\n        nok,\n        acorn,\n        options.acornOptions,\n        options.addResult,\n        false,\n        'mdxJsxFlowTag',\n        'mdxJsxFlowTagMarker',\n        'mdxJsxFlowTagClosingMarker',\n        'mdxJsxFlowTagSelfClosingMarker',\n        'mdxJsxFlowTagName',\n        'mdxJsxFlowTagNamePrimary',\n        'mdxJsxFlowTagNameMemberMarker',\n        'mdxJsxFlowTagNameMember',\n        'mdxJsxFlowTagNamePrefixMarker',\n        'mdxJsxFlowTagNameLocal',\n        'mdxJsxFlowTagExpressionAttribute',\n        'mdxJsxFlowTagExpressionAttributeMarker',\n        'mdxJsxFlowTagExpressionAttributeValue',\n        'mdxJsxFlowTagAttribute',\n        'mdxJsxFlowTagAttributeName',\n        'mdxJsxFlowTagAttributeNamePrimary',\n        'mdxJsxFlowTagAttributeNamePrefixMarker',\n        'mdxJsxFlowTagAttributeNameLocal',\n        'mdxJsxFlowTagAttributeInitializerMarker',\n        'mdxJsxFlowTagAttributeValueLiteral',\n        'mdxJsxFlowTagAttributeValueLiteralMarker',\n        'mdxJsxFlowTagAttributeValueLiteralValue',\n        'mdxJsxFlowTagAttributeValueExpression',\n        'mdxJsxFlowTagAttributeValueExpressionMarker',\n        'mdxJsxFlowTagAttributeValueExpressionValue'\n      )(code)\n    }\n\n    /**\n     * After an MDX JSX (flow) tag.\n     *\n     * ```markdown\n     * > | <A>\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function after(code) {\n      return markdownSpace(code)\n        ? factorySpace(effects, end, types.whitespace)(code)\n        : end(code)\n    }\n\n    /**\n     * After an MDX JSX (flow) tag, after optional whitespace.\n     *\n     * ```markdown\n     * > | <A> <B>\n     *         ^\n     * ```\n     *\n     * @type {State}\n     */\n    function end(code) {\n      // We want to allow expressions directly after tags.\n      // See <https://github.com/micromark/micromark-extension-mdx-expression/blob/d5d92b9/packages/micromark-extension-mdx-expression/dev/lib/syntax.js#L183>\n      // for more info.\n      const leftBraceValue = self.parser.constructs.flow[codes.leftCurlyBrace]\n      /* c8 ignore next 5 -- always a list when normalized. */\n      const constructs = Array.isArray(leftBraceValue)\n        ? leftBraceValue\n        : leftBraceValue\n          ? [leftBraceValue]\n          : []\n      const expression = constructs.find((d) => d.name === 'mdxFlowExpression')\n\n      // Another tag.\n      return code === codes.lessThan\n        ? // We can’t just say: fine. Lines of blocks have to be parsed until an eol/eof.\n          start(code)\n        : code === codes.leftCurlyBrace && expression\n          ? effects.attempt(expression, end, nok)(code)\n          : code === codes.eof || markdownLineEnding(code)\n            ? ok(code)\n            : nok(code)\n    }\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;AAED;AAGA;AACA;AAHA;AACA;AACA;;;;;;AAaO,SAAS,QAAQ,KAAK,EAAE,OAAO;IACpC,OAAO;QAAC,MAAM;QAAiB,UAAU;QAAiB,UAAU;IAAI;;IAExE;;;;;;;;;;GAUC,GACD,SAAS,gBAAgB,OAAO,EAAE,EAAE,EAAE,GAAG;QACvC,MAAM,OAAO,IAAI;QAEjB,OAAO;;QAEP;;;;;;;;;KASC,GACD,SAAS,MAAM,IAAI;YACjB,2EAA2E;YAC3E,oDAAoD;YACpD,CAAA,GAAA,wIAAA,CAAA,KAAM,AAAD,EAAE,SAAS,uJAAA,CAAA,QAAK,CAAC,QAAQ,EAAE;YAChC,OAAO,OAAO;QAChB;QAEA;;;;;;;;;KASC,GACD,SAAS,OAAO,IAAI;YAClB,OAAO,gLAAA,CAAA,aAAU,CAAC,IAAI,CACpB,MACA,SACA,OACA,KACA,OACA,QAAQ,YAAY,EACpB,QAAQ,SAAS,EACjB,OACA,iBACA,uBACA,8BACA,kCACA,qBACA,4BACA,iCACA,2BACA,iCACA,0BACA,oCACA,0CACA,yCACA,0BACA,8BACA,qCACA,0CACA,mCACA,2CACA,sCACA,4CACA,2CACA,yCACA,+CACA,8CACA;QACJ;QAEA;;;;;;;;;KASC,GACD,SAAS,MAAM,IAAI;YACjB,OAAO,CAAA,GAAA,0JAAA,CAAA,gBAAa,AAAD,EAAE,QACjB,CAAA,GAAA,yJAAA,CAAA,eAAY,AAAD,EAAE,SAAS,KAAK,uJAAA,CAAA,QAAK,CAAC,UAAU,EAAE,QAC7C,IAAI;QACV;QAEA;;;;;;;;;KASC,GACD,SAAS,IAAI,IAAI;YACf,oDAAoD;YACpD,wJAAwJ;YACxJ,iBAAiB;YACjB,MAAM,iBAAiB,KAAK,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,uJAAA,CAAA,QAAK,CAAC,cAAc,CAAC;YACxE,sDAAsD,GACtD,MAAM,aAAa,MAAM,OAAO,CAAC,kBAC7B,iBACA,iBACE;gBAAC;aAAe,GAChB,EAAE;YACR,MAAM,aAAa,WAAW,IAAI,CAAC,CAAC,IAAM,EAAE,IAAI,KAAK;YAErD,eAAe;YACf,OAAO,SAAS,uJAAA,CAAA,QAAK,CAAC,QAAQ,GAE1B,MAAM,QACN,SAAS,uJAAA,CAAA,QAAK,CAAC,cAAc,IAAI,aAC/B,QAAQ,OAAO,CAAC,YAAY,KAAK,KAAK,QACtC,SAAS,uJAAA,CAAA,QAAK,CAAC,GAAG,IAAI,CAAA,GAAA,0JAAA,CAAA,qBAAkB,AAAD,EAAE,QACvC,GAAG,QACH,IAAI;QACd;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 14582, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14588, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-extension-mdx-jsx/dev/lib/jsx-text.js"],"sourcesContent":["/**\n * @import {Options} from 'micromark-extension-mdx-jsx'\n * @import {Acorn} from 'micromark-util-events-to-acorn'\n * @import {Construct, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport {factoryTag} from './factory-tag.js'\n\n/**\n * Parse JSX (text).\n *\n * @param {Acorn | undefined} acorn\n *   Acorn parser to use (optional).\n * @param {Options} options\n *   Configuration.\n * @returns {Construct}\n *   Construct.\n */\nexport function jsxText(acorn, options) {\n  return {name: 'mdxJsxTextTag', tokenize: tokenizeJsxText}\n\n  /**\n   * MDX JSX (text).\n   *\n   * ```markdown\n   * > | a <b />.\n   *       ^^^^^\n   * ```\n   *\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeJsxText(effects, ok, nok) {\n    return factoryTag.call(\n      this,\n      effects,\n      ok,\n      nok,\n      acorn,\n      options.acornOptions,\n      options.addResult,\n      true,\n      'mdxJsxTextTag',\n      'mdxJsxTextTagMarker',\n      'mdxJsxTextTagClosingMarker',\n      'mdxJsxTextTagSelfClosingMarker',\n      'mdxJsxTextTagName',\n      'mdxJsxTextTagNamePrimary',\n      'mdxJsxTextTagNameMemberMarker',\n      'mdxJsxTextTagNameMember',\n      'mdxJsxTextTagNamePrefixMarker',\n      'mdxJsxTextTagNameLocal',\n      'mdxJsxTextTagExpressionAttribute',\n      'mdxJsxTextTagExpressionAttributeMarker',\n      'mdxJsxTextTagExpressionAttributeValue',\n      'mdxJsxTextTagAttribute',\n      'mdxJsxTextTagAttributeName',\n      'mdxJsxTextTagAttributeNamePrimary',\n      'mdxJsxTextTagAttributeNamePrefixMarker',\n      'mdxJsxTextTagAttributeNameLocal',\n      'mdxJsxTextTagAttributeInitializerMarker',\n      'mdxJsxTextTagAttributeValueLiteral',\n      'mdxJsxTextTagAttributeValueLiteralMarker',\n      'mdxJsxTextTagAttributeValueLiteralValue',\n      'mdxJsxTextTagAttributeValueExpression',\n      'mdxJsxTextTagAttributeValueExpressionMarker',\n      'mdxJsxTextTagAttributeValueExpressionValue'\n    )\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;AAED;;AAYO,SAAS,QAAQ,KAAK,EAAE,OAAO;IACpC,OAAO;QAAC,MAAM;QAAiB,UAAU;IAAe;;IAExD;;;;;;;;;;GAUC,GACD,SAAS,gBAAgB,OAAO,EAAE,EAAE,EAAE,GAAG;QACvC,OAAO,gLAAA,CAAA,aAAU,CAAC,IAAI,CACpB,IAAI,EACJ,SACA,IACA,KACA,OACA,QAAQ,YAAY,EACpB,QAAQ,SAAS,EACjB,MACA,iBACA,uBACA,8BACA,kCACA,qBACA,4BACA,iCACA,2BACA,iCACA,0BACA,oCACA,0CACA,yCACA,0BACA,8BACA,qCACA,0CACA,mCACA,2CACA,sCACA,4CACA,2CACA,yCACA,+CACA;IAEJ;AACF","ignoreList":[0]}},
    {"offset": {"line": 14617, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14623, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-extension-mdx-jsx/dev/lib/syntax.js"],"sourcesContent":["/**\n * @import {Options} from 'micromark-extension-mdx-jsx'\n * @import {AcornOptions} from 'micromark-util-events-to-acorn'\n * @import {Extension} from 'micromark-util-types'\n */\n\nimport {codes} from 'micromark-util-symbol'\nimport {jsxText} from './jsx-text.js'\nimport {jsxFlow} from './jsx-flow.js'\n\n/**\n * Create an extension for `micromark` to enable MDX JSX syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable MDX\n *   JSX syntax.\n */\nexport function mdxJsx(options) {\n  const settings = options || {}\n  const acorn = settings.acorn\n  /** @type {AcornOptions | undefined} */\n  let acornOptions\n\n  if (acorn) {\n    if (!acorn.parse || !acorn.parseExpressionAt) {\n      throw new Error(\n        'Expected a proper `acorn` instance passed in as `options.acorn`'\n      )\n    }\n\n    acornOptions = Object.assign(\n      {ecmaVersion: 2024, sourceType: 'module'},\n      settings.acornOptions,\n      {locations: true}\n    )\n  } else if (settings.acornOptions || settings.addResult) {\n    throw new Error('Expected an `acorn` instance passed in as `options.acorn`')\n  }\n\n  return {\n    flow: {\n      [codes.lessThan]: jsxFlow(acorn || undefined, {\n        acornOptions,\n        addResult: settings.addResult || undefined\n      })\n    },\n    text: {\n      [codes.lessThan]: jsxText(acorn || undefined, {\n        acornOptions,\n        addResult: settings.addResult || undefined\n      })\n    }\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;AAED;AAEA;AADA;;;;AAYO,SAAS,OAAO,OAAO;IAC5B,MAAM,WAAW,WAAW,CAAC;IAC7B,MAAM,QAAQ,SAAS,KAAK;IAC5B,qCAAqC,GACrC,IAAI;IAEJ,IAAI,OAAO;QACT,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,iBAAiB,EAAE;YAC5C,MAAM,IAAI,MACR;QAEJ;QAEA,eAAe,OAAO,MAAM,CAC1B;YAAC,aAAa;YAAM,YAAY;QAAQ,GACxC,SAAS,YAAY,EACrB;YAAC,WAAW;QAAI;IAEpB,OAAO,IAAI,SAAS,YAAY,IAAI,SAAS,SAAS,EAAE;QACtD,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO;QACL,MAAM;YACJ,CAAC,uJAAA,CAAA,QAAK,CAAC,QAAQ,CAAC,EAAE,CAAA,GAAA,6KAAA,CAAA,UAAO,AAAD,EAAE,SAAS,WAAW;gBAC5C;gBACA,WAAW,SAAS,SAAS,IAAI;YACnC;QACF;QACA,MAAM;YACJ,CAAC,uJAAA,CAAA,QAAK,CAAC,QAAQ,CAAC,EAAE,CAAA,GAAA,6KAAA,CAAA,UAAO,AAAD,EAAE,SAAS,WAAW;gBAC5C;gBACA,WAAW,SAAS,SAAS,IAAI;YACnC;QACF;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 14668, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14674, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-extension-mdx-md/index.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\n\n/**\n * Create an extension for `micromark` to disable some CommonMark syntax (code\n * (indented), autolinks, and HTML (flow and text)) for MDX.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to disable\n *   some CommonMark syntax for MDX.\n */\nexport function mdxMd() {\n  return {\n    disable: {null: ['autolink', 'codeIndented', 'htmlFlow', 'htmlText']}\n  }\n}\n"],"names":[],"mappings":"AAAA;;CAEC,GAED;;;;;;;CAOC;;;AACM,SAAS;IACd,OAAO;QACL,SAAS;YAAC,MAAM;gBAAC;gBAAY;gBAAgB;gBAAY;aAAW;QAAA;IACtE;AACF","ignoreList":[0]}},
    {"offset": {"line": 14698, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14704, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-extension-mdxjs/index.js"],"sourcesContent":["/**\n * @typedef {import('micromark-extension-mdx-expression').Options} Options\n * @typedef {import('micromark-util-types').Extension} Extension\n */\n\nimport {Parser} from 'acorn'\nimport acornJsx from 'acorn-jsx'\nimport {mdxExpression} from 'micromark-extension-mdx-expression'\nimport {mdxJsx} from 'micromark-extension-mdx-jsx'\nimport {mdxMd} from 'micromark-extension-mdx-md'\nimport {mdxjsEsm} from 'micromark-extension-mdxjs-esm'\nimport {combineExtensions} from 'micromark-util-combine-extensions'\n\n/**\n * Create an extension for `micromark` to enable MDX syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable MDX\n *   syntax.\n */\nexport function mdxjs(options) {\n  const settings = Object.assign(\n    {\n      acorn: Parser.extend(acornJsx()),\n      acornOptions: {ecmaVersion: 2024, sourceType: 'module'},\n      addResult: true\n    },\n    options\n  )\n\n  return combineExtensions([\n    mdxjsEsm(settings),\n    mdxExpression(settings),\n    mdxJsx(settings),\n    mdxMd()\n  ])\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AAED;AACA;AAKA;AADA;AAHA;AACA;AACA;;;;;;;;AAaO,SAAS,MAAM,OAAO;IAC3B,MAAM,WAAW,OAAO,MAAM,CAC5B;QACE,OAAO,mIAAA,CAAA,SAAM,CAAC,MAAM,CAAC,CAAA,GAAA,iIAAA,CAAA,UAAQ,AAAD;QAC5B,cAAc;YAAC,aAAa;YAAM,YAAY;QAAQ;QACtD,WAAW;IACb,GACA;IAGF,OAAO,CAAA,GAAA,+JAAA,CAAA,oBAAiB,AAAD,EAAE;QACvB,CAAA,GAAA,0KAAA,CAAA,WAAQ,AAAD,EAAE;QACT,CAAA,GAAA,+KAAA,CAAA,gBAAa,AAAD,EAAE;QACd,CAAA,GAAA,wKAAA,CAAA,SAAM,AAAD,EAAE;QACP,CAAA,GAAA,wJAAA,CAAA,QAAK,AAAD;KACL;AACH","ignoreList":[0]}},
    {"offset": {"line": 14740, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14746, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-mdx-expression/lib/index.js"],"sourcesContent":["/**\n * @import {CompileContext, Extension as FromMarkdownExtension, Handle as FromMarkdownHandle} from 'mdast-util-from-markdown'\n * @import {MdxFlowExpression, MdxTextExpression} from 'mdast-util-mdx-expression'\n * @import {Handle as ToMarkdownHandle, Options as ToMarkdownExtension, State} from 'mdast-util-to-markdown'\n * @import {Parents} from 'mdast'\n */\n\nimport {ok as assert} from 'devlop'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable MDX expressions\n * in markdown.\n *\n * When using the micromark syntax extension with `addResult`, nodes will have\n * a `data.estree` field set to an ESTree `Program` node.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable MDX expressions.\n */\nexport function mdxExpressionFromMarkdown() {\n  return {\n    enter: {\n      mdxFlowExpression: enterMdxFlowExpression,\n      mdxTextExpression: enterMdxTextExpression\n    },\n    exit: {\n      mdxFlowExpression: exitMdxExpression,\n      mdxFlowExpressionChunk: exitMdxExpressionData,\n      mdxTextExpression: exitMdxExpression,\n      mdxTextExpressionChunk: exitMdxExpressionData\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable MDX expressions\n * in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable MDX expressions.\n */\nexport function mdxExpressionToMarkdown() {\n  return {\n    handlers: {\n      mdxFlowExpression: handleMdxExpression,\n      mdxTextExpression: handleMdxExpression\n    },\n    unsafe: [\n      {character: '{', inConstruct: ['phrasing']},\n      {atBreak: true, character: '{'}\n    ]\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterMdxFlowExpression(token) {\n  this.enter({type: 'mdxFlowExpression', value: ''}, token)\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterMdxTextExpression(token) {\n  this.enter({type: 'mdxTextExpression', value: ''}, token)\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitMdxExpression(token) {\n  const value = this.resume()\n  const estree = token.estree\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'mdxFlowExpression' || node.type === 'mdxTextExpression')\n  this.exit(token)\n  node.value = value\n\n  if (estree) {\n    node.data = {estree}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitMdxExpressionData(token) {\n  this.config.enter.data.call(this, token)\n  this.config.exit.data.call(this, token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {MdxFlowExpression | MdxTextExpression} node\n *   Node.\n * @param {Parents | undefined} parent\n *   Parent, if any.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized markdown.\n */\nfunction handleMdxExpression(node, parent, state) {\n  const value = node.value || ''\n  const result = state.indentLines(value, function (line, index, blank) {\n    // Tab-size to eat has to be the same as what we serialize as.\n    // While in some places in markdown that’s 4, in JS it’s more common as 2.\n    // Which is what’s also in `mdast-util-mdx-jsx`:\n    // <https://github.com/syntax-tree/mdast-util-mdx-jsx/blob/40b951b/lib/index.js#L52>\n    return (index === 0 || blank ? '' : '  ') + line\n  })\n  return '{' + result + '}'\n}\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;;AAED;;AAYO,SAAS;IACd,OAAO;QACL,OAAO;YACL,mBAAmB;YACnB,mBAAmB;QACrB;QACA,MAAM;YACJ,mBAAmB;YACnB,wBAAwB;YACxB,mBAAmB;YACnB,wBAAwB;QAC1B;IACF;AACF;AASO,SAAS;IACd,OAAO;QACL,UAAU;YACR,mBAAmB;YACnB,mBAAmB;QACrB;QACA,QAAQ;YACN;gBAAC,WAAW;gBAAK,aAAa;oBAAC;iBAAW;YAAA;YAC1C;gBAAC,SAAS;gBAAM,WAAW;YAAG;SAC/B;IACH;AACF;AAEA;;;CAGC,GACD,SAAS,uBAAuB,KAAK;IACnC,IAAI,CAAC,KAAK,CAAC;QAAC,MAAM;QAAqB,OAAO;IAAE,GAAG;IACnD,IAAI,CAAC,MAAM;AACb;AAEA;;;CAGC,GACD,SAAS,uBAAuB,KAAK;IACnC,IAAI,CAAC,KAAK,CAAC;QAAC,MAAM;QAAqB,OAAO;IAAE,GAAG;IACnD,IAAI,CAAC,MAAM;AACb;AAEA;;;CAGC,GACD,SAAS,kBAAkB,KAAK;IAC9B,MAAM,QAAQ,IAAI,CAAC,MAAM;IACzB,MAAM,SAAS,MAAM,MAAM;IAC3B,MAAM,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE;IAC9C,CAAA,GAAA,wIAAA,CAAA,KAAM,AAAD,EAAE,KAAK,IAAI,KAAK,uBAAuB,KAAK,IAAI,KAAK;IAC1D,IAAI,CAAC,IAAI,CAAC;IACV,KAAK,KAAK,GAAG;IAEb,IAAI,QAAQ;QACV,KAAK,IAAI,GAAG;YAAC;QAAM;IACrB;AACF;AAEA;;;CAGC,GACD,SAAS,sBAAsB,KAAK;IAClC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;IAClC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;AACnC;AAEA;;;;;;;;;;CAUC,GACD,SAAS,oBAAoB,IAAI,EAAE,MAAM,EAAE,KAAK;IAC9C,MAAM,QAAQ,KAAK,KAAK,IAAI;IAC5B,MAAM,SAAS,MAAM,WAAW,CAAC,OAAO,SAAU,IAAI,EAAE,KAAK,EAAE,KAAK;QAClE,8DAA8D;QAC9D,0EAA0E;QAC1E,gDAAgD;QAChD,oFAAoF;QACpF,OAAO,CAAC,UAAU,KAAK,QAAQ,KAAK,IAAI,IAAI;IAC9C;IACA,OAAO,MAAM,SAAS;AACxB","ignoreList":[0]}},
    {"offset": {"line": 14855, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14861, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/is-hexadecimal/index.js"],"sourcesContent":["/**\n * Check if the given character code, or the character code at the first\n * character, is hexadecimal.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is hexadecimal\n */\nexport function isHexadecimal(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 /* a */ && code <= 102) /* z */ ||\n    (code >= 65 /* A */ && code <= 70) /* Z */ ||\n    (code >= 48 /* A */ && code <= 57) /* Z */\n  )\n}\n"],"names":[],"mappings":"AAAA;;;;;;CAMC;;;AACM,SAAS,cAAc,SAAS;IACrC,MAAM,OACJ,OAAO,cAAc,WAAW,UAAU,UAAU,CAAC,KAAK;IAE5D,OACE,AAAC,QAAQ,GAAG,KAAK,OAAM,QAAQ,OAC9B,QAAQ,GAAG,KAAK,OAAM,QAAQ,MAC9B,QAAQ,GAAG,KAAK,OAAM,QAAQ;AAEnC","ignoreList":[0]}},
    {"offset": {"line": 14874, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14880, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/is-decimal/index.js"],"sourcesContent":["/**\n * Check if the given character code, or the character code at the first\n * character, is decimal.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is a decimal\n */\nexport function isDecimal(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return code >= 48 && code <= 57 /* 0-9 */\n}\n"],"names":[],"mappings":"AAAA;;;;;;CAMC;;;AACM,SAAS,UAAU,SAAS;IACjC,MAAM,OACJ,OAAO,cAAc,WAAW,UAAU,UAAU,CAAC,KAAK;IAE5D,OAAO,QAAQ,MAAM,QAAQ,GAAG,OAAO;AACzC","ignoreList":[0]}},
    {"offset": {"line": 14893, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14899, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/is-alphabetical/index.js"],"sourcesContent":["/**\n * Check if the given character code, or the character code at the first\n * character, is alphabetical.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is alphabetical.\n */\nexport function isAlphabetical(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 && code <= 122) /* a-z */ ||\n    (code >= 65 && code <= 90) /* A-Z */\n  )\n}\n"],"names":[],"mappings":"AAAA;;;;;;CAMC;;;AACM,SAAS,eAAe,SAAS;IACtC,MAAM,OACJ,OAAO,cAAc,WAAW,UAAU,UAAU,CAAC,KAAK;IAE5D,OACE,AAAC,QAAQ,MAAM,QAAQ,OACtB,QAAQ,MAAM,QAAQ;AAE3B","ignoreList":[0]}},
    {"offset": {"line": 14912, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14918, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/is-alphanumerical/index.js"],"sourcesContent":["import {isAlphabetical} from 'is-alphabetical'\nimport {isDecimal} from 'is-decimal'\n\n/**\n * Check if the given character code, or the character code at the first\n * character, is alphanumerical.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is alphanumerical.\n */\nexport function isAlphanumerical(character) {\n  return isAlphabetical(character) || isDecimal(character)\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AASO,SAAS,iBAAiB,SAAS;IACxC,OAAO,CAAA,GAAA,uIAAA,CAAA,iBAAc,AAAD,EAAE,cAAc,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD,EAAE;AAChD","ignoreList":[0]}},
    {"offset": {"line": 14928, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14934, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/character-entities-legacy/index.js"],"sourcesContent":["/**\n * List of legacy HTML named character references that don’t need a trailing semicolon.\n *\n * @type {Array<string>}\n */\nexport const characterEntitiesLegacy = [\n  'AElig',\n  'AMP',\n  'Aacute',\n  'Acirc',\n  'Agrave',\n  'Aring',\n  'Atilde',\n  'Auml',\n  'COPY',\n  'Ccedil',\n  'ETH',\n  'Eacute',\n  'Ecirc',\n  'Egrave',\n  'Euml',\n  'GT',\n  'Iacute',\n  'Icirc',\n  'Igrave',\n  'Iuml',\n  'LT',\n  'Ntilde',\n  'Oacute',\n  'Ocirc',\n  'Ograve',\n  'Oslash',\n  'Otilde',\n  'Ouml',\n  'QUOT',\n  'REG',\n  'THORN',\n  'Uacute',\n  'Ucirc',\n  'Ugrave',\n  'Uuml',\n  'Yacute',\n  'aacute',\n  'acirc',\n  'acute',\n  'aelig',\n  'agrave',\n  'amp',\n  'aring',\n  'atilde',\n  'auml',\n  'brvbar',\n  'ccedil',\n  'cedil',\n  'cent',\n  'copy',\n  'curren',\n  'deg',\n  'divide',\n  'eacute',\n  'ecirc',\n  'egrave',\n  'eth',\n  'euml',\n  'frac12',\n  'frac14',\n  'frac34',\n  'gt',\n  'iacute',\n  'icirc',\n  'iexcl',\n  'igrave',\n  'iquest',\n  'iuml',\n  'laquo',\n  'lt',\n  'macr',\n  'micro',\n  'middot',\n  'nbsp',\n  'not',\n  'ntilde',\n  'oacute',\n  'ocirc',\n  'ograve',\n  'ordf',\n  'ordm',\n  'oslash',\n  'otilde',\n  'ouml',\n  'para',\n  'plusmn',\n  'pound',\n  'quot',\n  'raquo',\n  'reg',\n  'sect',\n  'shy',\n  'sup1',\n  'sup2',\n  'sup3',\n  'szlig',\n  'thorn',\n  'times',\n  'uacute',\n  'ucirc',\n  'ugrave',\n  'uml',\n  'uuml',\n  'yacute',\n  'yen',\n  'yuml'\n]\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;AACM,MAAM,0BAA0B;IACrignoreList":[0]}},
    {"offset": {"line": 15049, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15055, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/character-reference-invalid/index.js"],"sourcesContent":["/**\n * Map of invalid numeric character references to their replacements, according to HTML.\n *\n * @type {Record<number, string>}\n */\nexport const characterReferenceInvalid = {\n  0: '�',\n  128: '€',\n  130: '‚',\n  131: 'ƒ',\n  132: '„',\n  133: '…',\n  134: '†',\n  135: '‡',\n  136: 'ˆ',\n  137: '‰',\n  138: 'Š',\n  139: '‹',\n  140: 'Œ',\n  142: 'Ž',\n  145: '‘',\n  146: '’',\n  147: '“',\n  148: '”',\n  149: '•',\n  150: '–',\n  151: '—',\n  152: '˜',\n  153: '™',\n  154: 'š',\n  155: '›',\n  156: 'œ',\n  158: 'ž',\n  159: 'Ÿ'\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;AACM,MAAM,4BAA4B;IACvC,GAAG;IACH,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;AACP","ignoreList":[0]}},
    {"offset": {"line": 15092, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15098, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/parse-entities/lib/index.js"],"sourcesContent":["/**\n * @import {Point} from 'unist'\n * @import {Options} from '../index.js'\n */\n\nimport {characterEntitiesLegacy} from 'character-entities-legacy'\nimport {characterReferenceInvalid} from 'character-reference-invalid'\nimport {isDecimal} from 'is-decimal'\nimport {isHexadecimal} from 'is-hexadecimal'\nimport {isAlphanumerical} from 'is-alphanumerical'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\n\n// Warning messages.\nconst messages = [\n  '',\n  /* 1: Non terminated (named) */\n  'Named character references must be terminated by a semicolon',\n  /* 2: Non terminated (numeric) */\n  'Numeric character references must be terminated by a semicolon',\n  /* 3: Empty (named) */\n  'Named character references cannot be empty',\n  /* 4: Empty (numeric) */\n  'Numeric character references cannot be empty',\n  /* 5: Unknown (named) */\n  'Named character references must be known',\n  /* 6: Disallowed (numeric) */\n  'Numeric character references cannot be disallowed',\n  /* 7: Prohibited (numeric) */\n  'Numeric character references cannot be outside the permissible Unicode range'\n]\n\n/**\n * Parse HTML character references.\n *\n * @param {string} value\n * @param {Readonly<Options> | null | undefined} [options]\n */\nexport function parseEntities(value, options) {\n  const settings = options || {}\n  const additional =\n    typeof settings.additional === 'string'\n      ? settings.additional.charCodeAt(0)\n      : settings.additional\n  /** @type {Array<string>} */\n  const result = []\n  let index = 0\n  let lines = -1\n  let queue = ''\n  /** @type {Point | undefined} */\n  let point\n  /** @type {Array<number>|undefined} */\n  let indent\n\n  if (settings.position) {\n    if ('start' in settings.position || 'indent' in settings.position) {\n      // @ts-expect-error: points don’t have indent.\n      indent = settings.position.indent\n      // @ts-expect-error: points don’t have indent.\n      point = settings.position.start\n    } else {\n      point = settings.position\n    }\n  }\n\n  let line = (point ? point.line : 0) || 1\n  let column = (point ? point.column : 0) || 1\n\n  // Cache the current point.\n  let previous = now()\n  /** @type {number|undefined} */\n  let character\n\n  // Ensure the algorithm walks over the first character (inclusive).\n  index--\n\n  while (++index <= value.length) {\n    // If the previous character was a newline.\n    if (character === 10 /* `\\n` */) {\n      column = (indent ? indent[lines] : 0) || 1\n    }\n\n    character = value.charCodeAt(index)\n\n    if (character === 38 /* `&` */) {\n      const following = value.charCodeAt(index + 1)\n\n      // The behavior depends on the identity of the next character.\n      if (\n        following === 9 /* `\\t` */ ||\n        following === 10 /* `\\n` */ ||\n        following === 12 /* `\\f` */ ||\n        following === 32 /* ` ` */ ||\n        following === 38 /* `&` */ ||\n        following === 60 /* `<` */ ||\n        Number.isNaN(following) ||\n        (additional && following === additional)\n      ) {\n        // Not a character reference.\n        // No characters are consumed, and nothing is returned.\n        // This is not an error, either.\n        queue += String.fromCharCode(character)\n        column++\n        continue\n      }\n\n      const start = index + 1\n      let begin = start\n      let end = start\n      /** @type {string} */\n      let type\n\n      if (following === 35 /* `#` */) {\n        // Numerical reference.\n        end = ++begin\n\n        // The behavior further depends on the next character.\n        const following = value.charCodeAt(end)\n\n        if (following === 88 /* `X` */ || following === 120 /* `x` */) {\n          // ASCII hexadecimal digits.\n          type = 'hexadecimal'\n          end = ++begin\n        } else {\n          // ASCII decimal digits.\n          type = 'decimal'\n        }\n      } else {\n        // Named reference.\n        type = 'named'\n      }\n\n      let characterReferenceCharacters = ''\n      let characterReference = ''\n      let characters = ''\n      // Each type of character reference accepts different characters.\n      // This test is used to detect whether a reference has ended (as the semicolon\n      // is not strictly needed).\n      const test =\n        type === 'named'\n          ? isAlphanumerical\n          : type === 'decimal'\n            ? isDecimal\n            : isHexadecimal\n\n      end--\n\n      while (++end <= value.length) {\n        const following = value.charCodeAt(end)\n\n        if (!test(following)) {\n          break\n        }\n\n        characters += String.fromCharCode(following)\n\n        // Check if we can match a legacy named reference.\n        // If so, we cache that as the last viable named reference.\n        // This ensures we do not need to walk backwards later.\n        if (type === 'named' && characterEntitiesLegacy.includes(characters)) {\n          characterReferenceCharacters = characters\n          // @ts-expect-error: always able to decode.\n          characterReference = decodeNamedCharacterReference(characters)\n        }\n      }\n\n      let terminated = value.charCodeAt(end) === 59 /* `;` */\n\n      if (terminated) {\n        end++\n\n        const namedReference =\n          type === 'named' ? decodeNamedCharacterReference(characters) : false\n\n        if (namedReference) {\n          characterReferenceCharacters = characters\n          characterReference = namedReference\n        }\n      }\n\n      let diff = 1 + end - start\n      let reference = ''\n\n      if (!terminated && settings.nonTerminated === false) {\n        // Empty.\n      } else if (!characters) {\n        // An empty (possible) reference is valid, unless it’s numeric (thus an\n        // ampersand followed by an octothorp).\n        if (type !== 'named') {\n          warning(4 /* Empty (numeric) */, diff)\n        }\n      } else if (type === 'named') {\n        // An ampersand followed by anything unknown, and not terminated, is\n        // invalid.\n        if (terminated && !characterReference) {\n          warning(5 /* Unknown (named) */, 1)\n        } else {\n          // If there’s something after an named reference which is not known,\n          // cap the reference.\n          if (characterReferenceCharacters !== characters) {\n            end = begin + characterReferenceCharacters.length\n            diff = 1 + end - begin\n            terminated = false\n          }\n\n          // If the reference is not terminated, warn.\n          if (!terminated) {\n            const reason = characterReferenceCharacters\n              ? 1 /* Non terminated (named) */\n              : 3 /* Empty (named) */\n\n            if (settings.attribute) {\n              const following = value.charCodeAt(end)\n\n              if (following === 61 /* `=` */) {\n                warning(reason, diff)\n                characterReference = ''\n              } else if (isAlphanumerical(following)) {\n                characterReference = ''\n              } else {\n                warning(reason, diff)\n              }\n            } else {\n              warning(reason, diff)\n            }\n          }\n        }\n\n        reference = characterReference\n      } else {\n        if (!terminated) {\n          // All nonterminated numeric references are not rendered, and emit a\n          // warning.\n          warning(2 /* Non terminated (numeric) */, diff)\n        }\n\n        // When terminated and numerical, parse as either hexadecimal or\n        // decimal.\n        let referenceCode = Number.parseInt(\n          characters,\n          type === 'hexadecimal' ? 16 : 10\n        )\n\n        // Emit a warning when the parsed number is prohibited, and replace with\n        // replacement character.\n        if (prohibited(referenceCode)) {\n          warning(7 /* Prohibited (numeric) */, diff)\n          reference = String.fromCharCode(65533 /* `�` */)\n        } else if (referenceCode in characterReferenceInvalid) {\n          // Emit a warning when the parsed number is disallowed, and replace by\n          // an alternative.\n          warning(6 /* Disallowed (numeric) */, diff)\n          reference = characterReferenceInvalid[referenceCode]\n        } else {\n          // Parse the number.\n          let output = ''\n\n          // Emit a warning when the parsed number should not be used.\n          if (disallowed(referenceCode)) {\n            warning(6 /* Disallowed (numeric) */, diff)\n          }\n\n          // Serialize the number.\n          if (referenceCode > 0xffff) {\n            referenceCode -= 0x10000\n            output += String.fromCharCode(\n              (referenceCode >>> (10 & 0x3ff)) | 0xd800\n            )\n            referenceCode = 0xdc00 | (referenceCode & 0x3ff)\n          }\n\n          reference = output + String.fromCharCode(referenceCode)\n        }\n      }\n\n      // Found it!\n      // First eat the queued characters as normal text, then eat a reference.\n      if (reference) {\n        flush()\n\n        previous = now()\n        index = end - 1\n        column += end - start + 1\n        result.push(reference)\n        const next = now()\n        next.offset++\n\n        if (settings.reference) {\n          settings.reference.call(\n            settings.referenceContext || undefined,\n            reference,\n            {start: previous, end: next},\n            value.slice(start - 1, end)\n          )\n        }\n\n        previous = next\n      } else {\n        // If we could not find a reference, queue the checked characters (as\n        // normal characters), and move the pointer to their end.\n        // This is possible because we can be certain neither newlines nor\n        // ampersands are included.\n        characters = value.slice(start - 1, end)\n        queue += characters\n        column += characters.length\n        index = end - 1\n      }\n    } else {\n      // Handle anything other than an ampersand, including newlines and EOF.\n      if (character === 10 /* `\\n` */) {\n        line++\n        lines++\n        column = 0\n      }\n\n      if (Number.isNaN(character)) {\n        flush()\n      } else {\n        queue += String.fromCharCode(character)\n        column++\n      }\n    }\n  }\n\n  // Return the reduced nodes.\n  return result.join('')\n\n  // Get current position.\n  function now() {\n    return {\n      line,\n      column,\n      offset: index + ((point ? point.offset : 0) || 0)\n    }\n  }\n\n  /**\n   * Handle the warning.\n   *\n   * @param {1|2|3|4|5|6|7} code\n   * @param {number} offset\n   */\n  function warning(code, offset) {\n    /** @type {ReturnType<now>} */\n    let position\n\n    if (settings.warning) {\n      position = now()\n      position.column += offset\n      position.offset += offset\n\n      settings.warning.call(\n        settings.warningContext || undefined,\n        messages[code],\n        position,\n        code\n      )\n    }\n  }\n\n  /**\n   * Flush `queue` (normal text).\n   * Macro invoked before each reference and at the end of `value`.\n   * Does nothing when `queue` is empty.\n   */\n  function flush() {\n    if (queue) {\n      result.push(queue)\n\n      if (settings.text) {\n        settings.text.call(settings.textContext || undefined, queue, {\n          start: previous,\n          end: now()\n        })\n      }\n\n      queue = ''\n    }\n  }\n}\n\n/**\n * Check if `character` is outside the permissible unicode range.\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction prohibited(code) {\n  return (code >= 0xd800 && code <= 0xdfff) || code > 0x10ffff\n}\n\n/**\n * Check if `character` is disallowed.\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction disallowed(code) {\n  return (\n    (code >= 0x0001 && code <= 0x0008) ||\n    code === 0x000b ||\n    (code >= 0x000d && code <= 0x001f) ||\n    (code >= 0x007f && code <= 0x009f) ||\n    (code >= 0xfdd0 && code <= 0xfdef) ||\n    (code & 0xffff) === 0xffff ||\n    (code & 0xffff) === 0xfffe\n  )\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 15400, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15406, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/ccount/index.js"],"sourcesContent":["/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;CASC;;;AACM,SAAS,OAAO,KAAK,EAAE,SAAS;IACrC,MAAM,SAAS,OAAO;IAEtB,IAAI,OAAO,cAAc,UAAU;QACjC,MAAM,IAAI,UAAU;IACtB;IAEA,IAAI,QAAQ;IACZ,IAAI,QAAQ,OAAO,OAAO,CAAC;IAE3B,MAAO,UAAU,CAAC,EAAG;QACnB;QACA,QAAQ,OAAO,OAAO,CAAC,WAAW,QAAQ,UAAU,MAAM;IAC5D;IAEA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 15431, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15437, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/stringify-entities/lib/core.js"],"sourcesContent":["/**\n * @typedef CoreOptions\n * @property {ReadonlyArray<string>} [subset=[]]\n *   Whether to only escape the given subset of characters.\n * @property {boolean} [escapeOnly=false]\n *   Whether to only escape possibly dangerous characters.\n *   Those characters are `\"`, `&`, `'`, `<`, `>`, and `` ` ``.\n *\n * @typedef FormatOptions\n * @property {(code: number, next: number, options: CoreWithFormatOptions) => string} format\n *   Format strategy.\n *\n * @typedef {CoreOptions & FormatOptions & import('./util/format-smart.js').FormatSmartOptions} CoreWithFormatOptions\n */\n\nconst defaultSubsetRegex = /[\"&'<>`]/g\nconst surrogatePairsRegex = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g\nconst controlCharactersRegex =\n  // eslint-disable-next-line no-control-regex, unicorn/no-hex-escape\n  /[\\x01-\\t\\v\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g\nconst regexEscapeRegex = /[|\\\\{}()[\\]^$+*?.]/g\n\n/** @type {WeakMap<ReadonlyArray<string>, RegExp>} */\nconst subsetToRegexCache = new WeakMap()\n\n/**\n * Encode certain characters in `value`.\n *\n * @param {string} value\n * @param {CoreWithFormatOptions} options\n * @returns {string}\n */\nexport function core(value, options) {\n  value = value.replace(\n    options.subset\n      ? charactersToExpressionCached(options.subset)\n      : defaultSubsetRegex,\n    basic\n  )\n\n  if (options.subset || options.escapeOnly) {\n    return value\n  }\n\n  return (\n    value\n      // Surrogate pairs.\n      .replace(surrogatePairsRegex, surrogate)\n      // BMP control characters (C0 except for LF, CR, SP; DEL; and some more\n      // non-ASCII ones).\n      .replace(controlCharactersRegex, basic)\n  )\n\n  /**\n   * @param {string} pair\n   * @param {number} index\n   * @param {string} all\n   */\n  function surrogate(pair, index, all) {\n    return options.format(\n      (pair.charCodeAt(0) - 0xd800) * 0x400 +\n        pair.charCodeAt(1) -\n        0xdc00 +\n        0x10000,\n      all.charCodeAt(index + 2),\n      options\n    )\n  }\n\n  /**\n   * @param {string} character\n   * @param {number} index\n   * @param {string} all\n   */\n  function basic(character, index, all) {\n    return options.format(\n      character.charCodeAt(0),\n      all.charCodeAt(index + 1),\n      options\n    )\n  }\n}\n\n/**\n * A wrapper function that caches the result of `charactersToExpression` with a WeakMap.\n * This can improve performance when tooling calls `charactersToExpression` repeatedly\n * with the same subset.\n *\n * @param {ReadonlyArray<string>} subset\n * @returns {RegExp}\n */\nfunction charactersToExpressionCached(subset) {\n  let cached = subsetToRegexCache.get(subset)\n\n  if (!cached) {\n    cached = charactersToExpression(subset)\n    subsetToRegexCache.set(subset, cached)\n  }\n\n  return cached\n}\n\n/**\n * @param {ReadonlyArray<string>} subset\n * @returns {RegExp}\n */\nfunction charactersToExpression(subset) {\n  /** @type {Array<string>} */\n  const groups = []\n  let index = -1\n\n  while (++index < subset.length) {\n    groups.push(subset[index].replace(regexEscapeRegex, '\\\\$&'))\n  }\n\n  return new RegExp('(?:' + groups.join('|') + ')', 'g')\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;CAaC;;;AAED,MAAM,qBAAqB;AAC3B,MAAM,sBAAsB;AAC5B,MAAM,yBACJ,mEAAmE;AACnE;AACF,MAAM,mBAAmB;AAEzB,mDAAmD,GACnD,MAAM,qBAAqB,IAAI;AASxB,SAAS,KAAK,KAAK,EAAE,OAAO;IACjC,QAAQ,MAAM,OAAO,CACnB,QAAQ,MAAM,GACV,6BAA6B,QAAQ,MAAM,IAC3C,oBACJ;IAGF,IAAI,QAAQ,MAAM,IAAI,QAAQ,UAAU,EAAE;QACxC,OAAO;IACT;IAEA,OACE,KACE,mBAAmB;KAClB,OAAO,CAAC,qBAAqB,UAC9B,uEAAuE;IACvE,mBAAmB;KAClB,OAAO,CAAC,wBAAwB;;IAGrC;;;;GAIC,GACD,SAAS,UAAU,IAAI,EAAE,KAAK,EAAE,GAAG;QACjC,OAAO,QAAQ,MAAM,CACnB,CAAC,KAAK,UAAU,CAAC,KAAK,MAAM,IAAI,QAC9B,KAAK,UAAU,CAAC,KAChB,SACA,SACF,IAAI,UAAU,CAAC,QAAQ,IACvB;IAEJ;IAEA;;;;GAIC,GACD,SAAS,MAAM,SAAS,EAAE,KAAK,EAAE,GAAG;QAClC,OAAO,QAAQ,MAAM,CACnB,UAAU,UAAU,CAAC,IACrB,IAAI,UAAU,CAAC,QAAQ,IACvB;IAEJ;AACF;AAEA;;;;;;;CAOC,GACD,SAAS,6BAA6B,MAAM;IAC1C,IAAI,SAAS,mBAAmB,GAAG,CAAC;IAEpC,IAAI,CAAC,QAAQ;QACX,SAAS,uBAAuB;QAChC,mBAAmB,GAAG,CAAC,QAAQ;IACjC;IAEA,OAAO;AACT;AAEA;;;CAGC,GACD,SAAS,uBAAuB,MAAM;IACpC,0BAA0B,GAC1B,MAAM,SAAS,EAAE;IACjB,IAAI,QAAQ,CAAC;IAEb,MAAO,EAAE,QAAQ,OAAO,MAAM,CAAE;QAC9B,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,kBAAkB;IACtD;IAEA,OAAO,IAAI,OAAO,QAAQ,OAAO,IAAI,CAAC,OAAO,KAAK;AACpD","ignoreList":[0]}},
    {"offset": {"line": 15510, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15516, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/stringify-entities/lib/util/to-hexadecimal.js"],"sourcesContent":["const hexadecimalRegex = /[\\dA-Fa-f]/\n\n/**\n * Configurable ways to encode characters as hexadecimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nexport function toHexadecimal(code, next, omit) {\n  const value = '&#x' + code.toString(16).toUpperCase()\n  return omit && next && !hexadecimalRegex.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n"],"names":[],"mappings":";;;AAAA,MAAM,mBAAmB;AAUlB,SAAS,cAAc,IAAI,EAAE,IAAI,EAAE,IAAI;IAC5C,MAAM,QAAQ,QAAQ,KAAK,QAAQ,CAAC,IAAI,WAAW;IACnD,OAAO,QAAQ,QAAQ,CAAC,iBAAiB,IAAI,CAAC,OAAO,YAAY,CAAC,SAC9D,QACA,QAAQ;AACd","ignoreList":[0]}},
    {"offset": {"line": 15524, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15530, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/stringify-entities/lib/constant/dangerous.js"],"sourcesContent":["/**\n * List of legacy (that don’t need a trailing `;`) named references which could,\n * depending on what follows them, turn into a different meaning\n *\n * @type {Array<string>}\n */\nexport const dangerous = [\n  'cent',\n  'copy',\n  'divide',\n  'gt',\n  'lt',\n  'not',\n  'para',\n  'times'\n]\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;AACM,MAAM,YAAY;IACvB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD","ignoreList":[0]}},
    {"offset": {"line": 15548, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15554, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/stringify-entities/lib/util/to-named.js"],"sourcesContent":["import {characterEntitiesLegacy} from 'character-entities-legacy'\nimport {characterEntitiesHtml4} from 'character-entities-html4'\nimport {dangerous} from '../constant/dangerous.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * `characterEntitiesHtml4` but inverted.\n *\n * @type {Record<string, string>}\n */\nconst characters = {}\n\n/** @type {string} */\nlet key\n\nfor (key in characterEntitiesHtml4) {\n  if (own.call(characterEntitiesHtml4, key)) {\n    characters[characterEntitiesHtml4[key]] = key\n  }\n}\n\nconst notAlphanumericRegex = /[^\\dA-Za-z]/\n\n/**\n * Configurable ways to encode characters as named references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @param {boolean|undefined} attribute\n * @returns {string}\n */\nexport function toNamed(code, next, omit, attribute) {\n  const character = String.fromCharCode(code)\n\n  if (own.call(characters, character)) {\n    const name = characters[character]\n    const value = '&' + name\n\n    if (\n      omit &&\n      characterEntitiesLegacy.includes(name) &&\n      !dangerous.includes(name) &&\n      (!attribute ||\n        (next &&\n          next !== 61 /* `=` */ &&\n          notAlphanumericRegex.test(String.fromCharCode(next))))\n    ) {\n      return value\n    }\n\n    return value + ';'\n  }\n\n  return ''\n}\n"],"names":[],"mappings":";;;AACA;AADA;AAEA;;;;AAEA,MAAM,MAAM,CAAC,EAAE,cAAc;AAE7B;;;;CAIC,GACD,MAAM,aAAa,CAAC;AAEpB,mBAAmB,GACnB,IAAI;AAEJ,IAAK,OAAO,mJAAA,CAAA,yBAAsB,CAAE;IAClC,IAAI,IAAI,IAAI,CAAC,mJAAA,CAAA,yBAAsB,EAAE,MAAM;QACzC,UAAU,CAAC,mJAAA,CAAA,yBAAsB,CAAC,IAAI,CAAC,GAAG;IAC5C;AACF;AAEA,MAAM,uBAAuB;AAWtB,SAAS,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS;IACjD,MAAM,YAAY,OAAO,YAAY,CAAC;IAEtC,IAAI,IAAI,IAAI,CAAC,YAAY,YAAY;QACnC,MAAM,OAAO,UAAU,CAAC,UAAU;QAClC,MAAM,QAAQ,MAAM;QAEpB,IACE,QACA,oJAAA,CAAA,0BAAuB,CAAC,QAAQ,CAAC,SACjC,CAAC,iKAAA,CAAA,YAAS,CAAC,QAAQ,CAAC,SACpB,CAAC,CAAC,aACC,QACC,SAAS,GAAG,OAAO,OACnB,qBAAqB,IAAI,CAAC,OAAO,YAAY,CAAC,MAAO,GACzD;YACA,OAAO;QACT;QAEA,OAAO,QAAQ;IACjB;IAEA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 15588, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15594, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/stringify-entities/lib/util/to-decimal.js"],"sourcesContent":["const decimalRegex = /\\d/\n\n/**\n * Configurable ways to encode characters as decimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nexport function toDecimal(code, next, omit) {\n  const value = '&#' + String(code)\n  return omit && next && !decimalRegex.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n"],"names":[],"mappings":";;;AAAA,MAAM,eAAe;AAUd,SAAS,UAAU,IAAI,EAAE,IAAI,EAAE,IAAI;IACxC,MAAM,QAAQ,OAAO,OAAO;IAC5B,OAAO,QAAQ,QAAQ,CAAC,aAAa,IAAI,CAAC,OAAO,YAAY,CAAC,SAC1D,QACA,QAAQ;AACd","ignoreList":[0]}},
    {"offset": {"line": 15602, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15608, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/stringify-entities/lib/util/format-smart.js"],"sourcesContent":["/**\n * @typedef FormatSmartOptions\n * @property {boolean} [useNamedReferences=false]\n *   Prefer named character references (`&amp;`) where possible.\n * @property {boolean} [useShortestReferences=false]\n *   Prefer the shortest possible reference, if that results in less bytes.\n *   **Note**: `useNamedReferences` can be omitted when using `useShortestReferences`.\n * @property {boolean} [omitOptionalSemicolons=false]\n *   Whether to omit semicolons when possible.\n *   **Note**: This creates what HTML calls “parse errors” but is otherwise still valid HTML — don’t use this except when building a minifier.\n *   Omitting semicolons is possible for certain named and numeric references in some cases.\n * @property {boolean} [attribute=false]\n *   Create character references which don’t fail in attributes.\n *   **Note**: `attribute` only applies when operating dangerously with\n *   `omitOptionalSemicolons: true`.\n */\n\nimport {toHexadecimal} from './to-hexadecimal.js'\nimport {toDecimal} from './to-decimal.js'\nimport {toNamed} from './to-named.js'\n\n/**\n * Configurable ways to encode a character yielding pretty or small results.\n *\n * @param {number} code\n * @param {number} next\n * @param {FormatSmartOptions} options\n * @returns {string}\n */\nexport function formatSmart(code, next, options) {\n  let numeric = toHexadecimal(code, next, options.omitOptionalSemicolons)\n  /** @type {string|undefined} */\n  let named\n\n  if (options.useNamedReferences || options.useShortestReferences) {\n    named = toNamed(\n      code,\n      next,\n      options.omitOptionalSemicolons,\n      options.attribute\n    )\n  }\n\n  // Use the shortest numeric reference when requested.\n  // A simple algorithm would use decimal for all code points under 100, as\n  // those are shorter than hexadecimal:\n  //\n  // * `&#99;` vs `&#x63;` (decimal shorter)\n  // * `&#100;` vs `&#x64;` (equal)\n  //\n  // However, because we take `next` into consideration when `omit` is used,\n  // And it would be possible that decimals are shorter on bigger values as\n  // well if `next` is hexadecimal but not decimal, we instead compare both.\n  if (\n    (options.useShortestReferences || !named) &&\n    options.useShortestReferences\n  ) {\n    const decimal = toDecimal(code, next, options.omitOptionalSemicolons)\n\n    if (decimal.length < numeric.length) {\n      numeric = decimal\n    }\n  }\n\n  return named &&\n    (!options.useShortestReferences || named.length < numeric.length)\n    ? named\n    : numeric\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;CAeC;;;AAED;AAEA;AADA;;;;AAWO,SAAS,YAAY,IAAI,EAAE,IAAI,EAAE,OAAO;IAC7C,IAAI,UAAU,CAAA,GAAA,qKAAA,CAAA,gBAAa,AAAD,EAAE,MAAM,MAAM,QAAQ,sBAAsB;IACtE,6BAA6B,GAC7B,IAAI;IAEJ,IAAI,QAAQ,kBAAkB,IAAI,QAAQ,qBAAqB,EAAE;QAC/D,QAAQ,CAAA,GAAA,+JAAA,CAAA,UAAO,AAAD,EACZ,MACA,MACA,QAAQ,sBAAsB,EAC9B,QAAQ,SAAS;IAErB;IAEA,qDAAqD;IACrD,yEAAyE;IACzE,sCAAsC;IACtC,EAAE;IACF,0CAA0C;IAC1C,iCAAiC;IACjC,EAAE;IACF,0EAA0E;IAC1E,yEAAyE;IACzE,0EAA0E;IAC1E,IACE,CAAC,QAAQ,qBAAqB,IAAI,CAAC,KAAK,KACxC,QAAQ,qBAAqB,EAC7B;QACA,MAAM,UAAU,CAAA,GAAA,iKAAA,CAAA,YAAS,AAAD,EAAE,MAAM,MAAM,QAAQ,sBAAsB;QAEpE,IAAI,QAAQ,MAAM,GAAG,QAAQ,MAAM,EAAE;YACnC,UAAU;QACZ;IACF;IAEA,OAAO,SACL,CAAC,CAAC,QAAQ,qBAAqB,IAAI,MAAM,MAAM,GAAG,QAAQ,MAAM,IAC9D,QACA;AACN","ignoreList":[0]}},
    {"offset": {"line": 15656, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15662, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/stringify-entities/lib/util/format-basic.js"],"sourcesContent":["/**\n * The smallest way to encode a character.\n *\n * @param {number} code\n * @returns {string}\n */\nexport function formatBasic(code) {\n  return '&#x' + code.toString(16).toUpperCase() + ';'\n}\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;AACM,SAAS,YAAY,IAAI;IAC9B,OAAO,QAAQ,KAAK,QAAQ,CAAC,IAAI,WAAW,KAAK;AACnD","ignoreList":[0]}},
    {"offset": {"line": 15673, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15679, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/stringify-entities/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('./core.js').CoreOptions & import('./util/format-smart.js').FormatSmartOptions} Options\n * @typedef {import('./core.js').CoreOptions} LightOptions\n */\n\nimport {core} from './core.js'\nimport {formatSmart} from './util/format-smart.js'\nimport {formatBasic} from './util/format-basic.js'\n\n/**\n * Encode special characters in `value`.\n *\n * @param {string} value\n *   Value to encode.\n * @param {Options} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nexport function stringifyEntities(value, options) {\n  return core(value, Object.assign({format: formatSmart}, options))\n}\n\n/**\n * Encode special characters in `value` as hexadecimals.\n *\n * @param {string} value\n *   Value to encode.\n * @param {LightOptions} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nexport function stringifyEntitiesLight(value, options) {\n  return core(value, Object.assign({format: formatBasic}, options))\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;;AAED;AACA;AACA;;;;AAYO,SAAS,kBAAkB,KAAK,EAAE,OAAO;IAC9C,OAAO,CAAA,GAAA,gJAAA,CAAA,OAAI,AAAD,EAAE,OAAO,OAAO,MAAM,CAAC;QAAC,QAAQ,mKAAA,CAAA,cAAW;IAAA,GAAG;AAC1D;AAYO,SAAS,uBAAuB,KAAK,EAAE,OAAO;IACnD,OAAO,CAAA,GAAA,gJAAA,CAAA,OAAI,AAAD,EAAE,OAAO,OAAO,MAAM,CAAC;QAAC,QAAQ,mKAAA,CAAA,cAAW;IAAA,GAAG;AAC1D","ignoreList":[0]}},
    {"offset": {"line": 15702, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15708, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/character-entities-html4/index.js"],"sourcesContent":["/**\n * Map of named character references from HTML 4.\n *\n * @type {Record<string, string>}\n */\nexport const characterEntitiesHtml4 = {\n  nbsp: ' ',\n  iexcl: '¡',\n  cent: '¢',\n  pound: '£',\n  curren: '¤',\n  yen: '¥',\n  brvbar: '¦',\n  sect: '§',\n  uml: '¨',\n  copy: '©',\n  ordf: 'ª',\n  laquo: '«',\n  not: '¬',\n  shy: '­',\n  reg: '®',\n  macr: '¯',\n  deg: '°',\n  plusmn: '±',\n  sup2: '²',\n  sup3: '³',\n  acute: '´',\n  micro: 'µ',\n  para: '¶',\n  middot: '·',\n  cedil: '¸',\n  sup1: '¹',\n  ordm: 'º',\n  raquo: '»',\n  frac14: '¼',\n  frac12: '½',\n  frac34: '¾',\n  iquest: '¿',\n  Agrave: 'À',\n  Aacute: 'Á',\n  Acirc: 'Â',\n  Atilde: 'Ã',\n  Auml: 'Ä',\n  Aring: 'Å',\n  AElig: 'Æ',\n  Ccedil: 'Ç',\n  Egrave: 'È',\n  Eacute: 'É',\n  Ecirc: 'Ê',\n  Euml: 'Ë',\n  Igrave: 'Ì',\n  Iacute: 'Í',\n  Icirc: 'Î',\n  Iuml: 'Ï',\n  ETH: 'Ð',\n  Ntilde: 'Ñ',\n  Ograve: 'Ò',\n  Oacute: 'Ó',\n  Ocirc: 'Ô',\n  Otilde: 'Õ',\n  Ouml: 'Ö',\n  times: '×',\n  Oslash: 'Ø',\n  Ugrave: 'Ù',\n  Uacute: 'Ú',\n  Ucirc: 'Û',\n  Uuml: 'Ü',\n  Yacute: 'Ý',\n  THORN: 'Þ',\n  szlig: 'ß',\n  agrave: 'à',\n  aacute: 'á',\n  acirc: 'â',\n  atilde: 'ã',\n  auml: 'ä',\n  aring: 'å',\n  aelig: 'æ',\n  ccedil: 'ç',\n  egrave: 'è',\n  eacute: 'é',\n  ecirc: 'ê',\n  euml: 'ë',\n  igrave: 'ì',\n  iacute: 'í',\n  icirc: 'î',\n  iuml: 'ï',\n  eth: 'ð',\n  ntilde: 'ñ',\n  ograve: 'ò',\n  oacute: 'ó',\n  ocirc: 'ô',\n  otilde: 'õ',\n  ouml: 'ö',\n  divide: '÷',\n  oslash: 'ø',\n  ugrave: 'ù',\n  uacute: 'ú',\n  ucirc: 'û',\n  uuml: 'ü',\n  yacute: 'ý',\n  thorn: 'þ',\n  yuml: 'ÿ',\n  fnof: 'ƒ',\n  Alpha: 'Α',\n  Beta: 'Β',\n  Gamma: 'Γ',\n  Delta: 'Δ',\n  Epsilon: 'Ε',\n  Zeta: 'Ζ',\n  Eta: 'Η',\n  Theta: 'Θ',\n  Iota: 'Ι',\n  Kappa: 'Κ',\n  Lambda: 'Λ',\n  Mu: 'Μ',\n  Nu: 'Ν',\n  Xi: 'Ξ',\n  Omicron: 'Ο',\n  Pi: 'Π',\n  Rho: 'Ρ',\n  Sigma: 'Σ',\n  Tau: 'Τ',\n  Upsilon: 'Υ',\n  Phi: 'Φ',\n  Chi: 'Χ',\n  Psi: 'Ψ',\n  Omega: 'Ω',\n  alpha: 'α',\n  beta: 'β',\n  gamma: 'γ',\n  delta: 'δ',\n  epsilon: 'ε',\n  zeta: 'ζ',\n  eta: 'η',\n  theta: 'θ',\n  iota: 'ι',\n  kappa: 'κ',\n  lambda: 'λ',\n  mu: 'μ',\n  nu: 'ν',\n  xi: 'ξ',\n  omicron: 'ο',\n  pi: 'π',\n  rho: 'ρ',\n  sigmaf: 'ς',\n  sigma: 'σ',\n  tau: 'τ',\n  upsilon: 'υ',\n  phi: 'φ',\n  chi: 'χ',\n  psi: 'ψ',\n  omega: 'ω',\n  thetasym: 'ϑ',\n  upsih: 'ϒ',\n  piv: 'ϖ',\n  bull: '•',\n  hellip: '…',\n  prime: '′',\n  Prime: '″',\n  oline: '‾',\n  frasl: '⁄',\n  weierp: '℘',\n  image: 'ℑ',\n  real: 'ℜ',\n  trade: '™',\n  alefsym: 'ℵ',\n  larr: '←',\n  uarr: '↑',\n  rarr: '→',\n  darr: '↓',\n  harr: '↔',\n  crarr: '↵',\n  lArr: '⇐',\n  uArr: '⇑',\n  rArr: '⇒',\n  dArr: '⇓',\n  hArr: '⇔',\n  forall: '∀',\n  part: '∂',\n  exist: '∃',\n  empty: '∅',\n  nabla: '∇',\n  isin: '∈',\n  notin: '∉',\n  ni: '∋',\n  prod: '∏',\n  sum: '∑',\n  minus: '−',\n  lowast: '∗',\n  radic: '√',\n  prop: '∝',\n  infin: '∞',\n  ang: '∠',\n  and: '∧',\n  or: '∨',\n  cap: '∩',\n  cup: '∪',\n  int: '∫',\n  there4: '∴',\n  sim: '∼',\n  cong: '≅',\n  asymp: '≈',\n  ne: '≠',\n  equiv: '≡',\n  le: '≤',\n  ge: '≥',\n  sub: '⊂',\n  sup: '⊃',\n  nsub: '⊄',\n  sube: '⊆',\n  supe: '⊇',\n  oplus: '⊕',\n  otimes: '⊗',\n  perp: '⊥',\n  sdot: '⋅',\n  lceil: '⌈',\n  rceil: '⌉',\n  lfloor: '⌊',\n  rfloor: '⌋',\n  lang: '〈',\n  rang: '〉',\n  loz: '◊',\n  spades: '♠',\n  clubs: '♣',\n  hearts: '♥',\n  diams: '♦',\n  quot: '\"',\n  amp: '&',\n  lt: '<',\n  gt: '>',\n  OElig: 'Œ',\n  oelig: 'œ',\n  Scaron: 'Š',\n  scaron: 'š',\n  Yuml: 'Ÿ',\n  circ: 'ˆ',\n  tilde: '˜',\n  ensp: ' ',\n  emsp: ' ',\n  thinsp: ' ',\n  zwnj: '‌',\n  zwj: '‍',\n  lrm: '‎',\n  rlm: '‏',\n  ndash: '–',\n  mdash: '—',\n  lsquo: '‘',\n  rsquo: '’',\n  sbquo: '‚',\n  ldquo: '“',\n  rdquo: '”',\n  bdquo: '„',\n  dagger: '†',\n  Dagger: '‡',\n  permil: '‰',\n  lsaquo: '‹',\n  rsaquo: '›',\n  euro: '€'\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 15969, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15975, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-mdx-jsx/lib/index.js"],"sourcesContent":["/**\n * @import {CompileContext, Extension as FromMarkdownExtension, Handle as FromMarkdownHandle, OnEnterError, OnExitError, Token} from 'mdast-util-from-markdown'\n * @import {Handle as ToMarkdownHandle, Options as ToMarkdownExtension, State, Tracker} from 'mdast-util-to-markdown'\n * @import {Point} from 'unist'\n * @import {MdxJsxAttribute, MdxJsxAttributeValueExpression, MdxJsxExpressionAttribute, MdxJsxFlowElement, MdxJsxTextElement} from '../index.js'\n */\n\n/**\n * @typedef Tag\n *   Single tag.\n * @property {string | undefined} name\n *   Name of tag, or `undefined` for fragment.\n *\n *   > 👉 **Note**: `null` is used in the AST for fragments, as it serializes in\n *   > JSON.\n * @property {Array<MdxJsxAttribute | MdxJsxExpressionAttribute>} attributes\n *   Attributes.\n * @property {boolean} close\n *   Whether the tag is closing (`</x>`).\n * @property {boolean} selfClosing\n *   Whether the tag is self-closing (`<x/>`).\n * @property {Token['start']} start\n *   Start point.\n * @property {Token['start']} end\n *   End point.\n *\n * @typedef ToMarkdownOptions\n *   Configuration.\n * @property {'\"' | \"'\" | null | undefined} [quote='\"']\n *   Preferred quote to use around attribute values (default: `'\"'`).\n * @property {boolean | null | undefined} [quoteSmart=false]\n *   Use the other quote if that results in less bytes (default: `false`).\n * @property {boolean | null | undefined} [tightSelfClosing=false]\n *   Do not use an extra space when closing self-closing elements: `<img/>`\n *   instead of `<img />` (default: `false`).\n * @property {number | null | undefined} [printWidth=Infinity]\n *   Try and wrap syntax at this width (default: `Infinity`).\n *\n *   When set to a finite number (say, `80`), the formatter will print\n *   attributes on separate lines when a tag doesn’t fit on one line.\n *   The normal behavior is to print attributes with spaces between them\n *   instead of line endings.\n */\n\nimport {ccount} from 'ccount'\nimport {ok as assert} from 'devlop'\nimport {parseEntities} from 'parse-entities'\nimport {stringifyEntitiesLight} from 'stringify-entities'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nimport {VFileMessage} from 'vfile-message'\n\nconst indent = '  '\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable MDX JSX.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable MDX JSX.\n *\n *   When using the syntax extension with `addResult`, nodes will have a\n *   `data.estree` field set to an ESTree `Program` node.\n */\nexport function mdxJsxFromMarkdown() {\n  return {\n    canContainEols: ['mdxJsxTextElement'],\n    enter: {\n      mdxJsxFlowTag: enterMdxJsxTag,\n      mdxJsxFlowTagClosingMarker: enterMdxJsxTagClosingMarker,\n      mdxJsxFlowTagAttribute: enterMdxJsxTagAttribute,\n      mdxJsxFlowTagExpressionAttribute: enterMdxJsxTagExpressionAttribute,\n      mdxJsxFlowTagAttributeValueLiteral: buffer,\n      mdxJsxFlowTagAttributeValueExpression: buffer,\n      mdxJsxFlowTagSelfClosingMarker: enterMdxJsxTagSelfClosingMarker,\n\n      mdxJsxTextTag: enterMdxJsxTag,\n      mdxJsxTextTagClosingMarker: enterMdxJsxTagClosingMarker,\n      mdxJsxTextTagAttribute: enterMdxJsxTagAttribute,\n      mdxJsxTextTagExpressionAttribute: enterMdxJsxTagExpressionAttribute,\n      mdxJsxTextTagAttributeValueLiteral: buffer,\n      mdxJsxTextTagAttributeValueExpression: buffer,\n      mdxJsxTextTagSelfClosingMarker: enterMdxJsxTagSelfClosingMarker\n    },\n    exit: {\n      mdxJsxFlowTagClosingMarker: exitMdxJsxTagClosingMarker,\n      mdxJsxFlowTagNamePrimary: exitMdxJsxTagNamePrimary,\n      mdxJsxFlowTagNameMember: exitMdxJsxTagNameMember,\n      mdxJsxFlowTagNameLocal: exitMdxJsxTagNameLocal,\n      mdxJsxFlowTagExpressionAttribute: exitMdxJsxTagExpressionAttribute,\n      mdxJsxFlowTagExpressionAttributeValue: data,\n      mdxJsxFlowTagAttributeNamePrimary: exitMdxJsxTagAttributeNamePrimary,\n      mdxJsxFlowTagAttributeNameLocal: exitMdxJsxTagAttributeNameLocal,\n      mdxJsxFlowTagAttributeValueLiteral: exitMdxJsxTagAttributeValueLiteral,\n      mdxJsxFlowTagAttributeValueLiteralValue: data,\n      mdxJsxFlowTagAttributeValueExpression:\n        exitMdxJsxTagAttributeValueExpression,\n      mdxJsxFlowTagAttributeValueExpressionValue: data,\n      mdxJsxFlowTagSelfClosingMarker: exitMdxJsxTagSelfClosingMarker,\n      mdxJsxFlowTag: exitMdxJsxTag,\n\n      mdxJsxTextTagClosingMarker: exitMdxJsxTagClosingMarker,\n      mdxJsxTextTagNamePrimary: exitMdxJsxTagNamePrimary,\n      mdxJsxTextTagNameMember: exitMdxJsxTagNameMember,\n      mdxJsxTextTagNameLocal: exitMdxJsxTagNameLocal,\n      mdxJsxTextTagExpressionAttribute: exitMdxJsxTagExpressionAttribute,\n      mdxJsxTextTagExpressionAttributeValue: data,\n      mdxJsxTextTagAttributeNamePrimary: exitMdxJsxTagAttributeNamePrimary,\n      mdxJsxTextTagAttributeNameLocal: exitMdxJsxTagAttributeNameLocal,\n      mdxJsxTextTagAttributeValueLiteral: exitMdxJsxTagAttributeValueLiteral,\n      mdxJsxTextTagAttributeValueLiteralValue: data,\n      mdxJsxTextTagAttributeValueExpression:\n        exitMdxJsxTagAttributeValueExpression,\n      mdxJsxTextTagAttributeValueExpressionValue: data,\n      mdxJsxTextTagSelfClosingMarker: exitMdxJsxTagSelfClosingMarker,\n      mdxJsxTextTag: exitMdxJsxTag\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function buffer() {\n    this.buffer()\n  }\n\n  /**\n   * Copy a point-like value.\n   *\n   * @param {Point} d\n   *   Point-like value.\n   * @returns {Point}\n   *   unist point.\n   */\n  function point(d) {\n    return {line: d.line, column: d.column, offset: d.offset}\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function data(token) {\n    this.config.enter.data.call(this, token)\n    this.config.exit.data.call(this, token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function enterMdxJsxTag(token) {\n    /** @type {Tag} */\n    const tag = {\n      name: undefined,\n      attributes: [],\n      close: false,\n      selfClosing: false,\n      start: token.start,\n      end: token.end\n    }\n    if (!this.data.mdxJsxTagStack) this.data.mdxJsxTagStack = []\n    this.data.mdxJsxTag = tag\n    this.buffer()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function enterMdxJsxTagClosingMarker(token) {\n    const stack = this.data.mdxJsxTagStack\n    assert(stack, 'expected `mdxJsxTagStack`')\n\n    if (stack.length === 0) {\n      throw new VFileMessage(\n        'Unexpected closing slash `/` in tag, expected an open tag first',\n        {start: token.start, end: token.end},\n        'mdast-util-mdx-jsx:unexpected-closing-slash'\n      )\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function enterMdxJsxTagAnyAttribute(token) {\n    const tag = this.data.mdxJsxTag\n    assert(tag, 'expected `mdxJsxTag`')\n\n    if (tag.close) {\n      throw new VFileMessage(\n        'Unexpected attribute in closing tag, expected the end of the tag',\n        {start: token.start, end: token.end},\n        'mdast-util-mdx-jsx:unexpected-attribute'\n      )\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function enterMdxJsxTagSelfClosingMarker(token) {\n    const tag = this.data.mdxJsxTag\n    assert(tag, 'expected `mdxJsxTag`')\n\n    if (tag.close) {\n      throw new VFileMessage(\n        'Unexpected self-closing slash `/` in closing tag, expected the end of the tag',\n        {start: token.start, end: token.end},\n        'mdast-util-mdx-jsx:unexpected-self-closing-slash'\n      )\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagClosingMarker() {\n    const tag = this.data.mdxJsxTag\n    assert(tag, 'expected `mdxJsxTag`')\n    tag.close = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagNamePrimary(token) {\n    const tag = this.data.mdxJsxTag\n    assert(tag, 'expected `mdxJsxTag`')\n    tag.name = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagNameMember(token) {\n    const tag = this.data.mdxJsxTag\n    assert(tag, 'expected `mdxJsxTag`')\n    tag.name += '.' + this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagNameLocal(token) {\n    const tag = this.data.mdxJsxTag\n    assert(tag, 'expected `mdxJsxTag`')\n    tag.name += ':' + this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function enterMdxJsxTagAttribute(token) {\n    const tag = this.data.mdxJsxTag\n    assert(tag, 'expected `mdxJsxTag`')\n    enterMdxJsxTagAnyAttribute.call(this, token)\n    tag.attributes.push({\n      type: 'mdxJsxAttribute',\n      name: '',\n      value: null,\n      position: {\n        start: point(token.start),\n        // @ts-expect-error: `end` will be patched later.\n        end: undefined\n      }\n    })\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function enterMdxJsxTagExpressionAttribute(token) {\n    const tag = this.data.mdxJsxTag\n    assert(tag, 'expected `mdxJsxTag`')\n    enterMdxJsxTagAnyAttribute.call(this, token)\n    tag.attributes.push({\n      type: 'mdxJsxExpressionAttribute',\n      value: '',\n      position: {\n        start: point(token.start),\n        // @ts-expect-error: `end` will be patched later.\n        end: undefined\n      }\n    })\n    this.buffer()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagExpressionAttribute(token) {\n    const tag = this.data.mdxJsxTag\n    assert(tag, 'expected `mdxJsxTag`')\n    const tail = tag.attributes[tag.attributes.length - 1]\n    assert(tail.type === 'mdxJsxExpressionAttribute')\n    const estree = token.estree\n\n    tail.value = this.resume()\n    assert(tail.position !== undefined)\n    tail.position.end = point(token.end)\n\n    if (estree) {\n      tail.data = {estree}\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagAttributeNamePrimary(token) {\n    const tag = this.data.mdxJsxTag\n    assert(tag, 'expected `mdxJsxTag`')\n    const node = tag.attributes[tag.attributes.length - 1]\n    assert(node.type === 'mdxJsxAttribute')\n    node.name = this.sliceSerialize(token)\n    assert(node.position !== undefined)\n    node.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagAttributeNameLocal(token) {\n    const tag = this.data.mdxJsxTag\n    assert(tag, 'expected `mdxJsxTag`')\n    const node = tag.attributes[tag.attributes.length - 1]\n    assert(node.type === 'mdxJsxAttribute')\n    node.name += ':' + this.sliceSerialize(token)\n    assert(node.position !== undefined)\n    node.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagAttributeValueLiteral(token) {\n    const tag = this.data.mdxJsxTag\n    assert(tag, 'expected `mdxJsxTag`')\n    const node = tag.attributes[tag.attributes.length - 1]\n    node.value = parseEntities(this.resume(), {nonTerminated: false})\n    assert(node.position !== undefined)\n    node.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagAttributeValueExpression(token) {\n    const tag = this.data.mdxJsxTag\n    assert(tag, 'expected `mdxJsxTag`')\n    const tail = tag.attributes[tag.attributes.length - 1]\n    assert(tail.type === 'mdxJsxAttribute')\n    /** @type {MdxJsxAttributeValueExpression} */\n    const node = {type: 'mdxJsxAttributeValueExpression', value: this.resume()}\n    const estree = token.estree\n\n    if (estree) {\n      node.data = {estree}\n    }\n\n    tail.value = node\n    assert(tail.position !== undefined)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagSelfClosingMarker() {\n    const tag = this.data.mdxJsxTag\n    assert(tag, 'expected `mdxJsxTag`')\n\n    tag.selfClosing = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTag(token) {\n    const tag = this.data.mdxJsxTag\n    assert(tag, 'expected `mdxJsxTag`')\n    const stack = this.data.mdxJsxTagStack\n    assert(stack, 'expected `mdxJsxTagStack`')\n    const tail = stack[stack.length - 1]\n\n    if (tag.close && tail.name !== tag.name) {\n      throw new VFileMessage(\n        'Unexpected closing tag `' +\n          serializeAbbreviatedTag(tag) +\n          '`, expected corresponding closing tag for `' +\n          serializeAbbreviatedTag(tail) +\n          '` (' +\n          stringifyPosition(tail) +\n          ')',\n        {start: token.start, end: token.end},\n        'mdast-util-mdx-jsx:end-tag-mismatch'\n      )\n    }\n\n    // End of a tag, so drop the buffer.\n    this.resume()\n\n    if (tag.close) {\n      stack.pop()\n    } else {\n      this.enter(\n        {\n          type:\n            token.type === 'mdxJsxTextTag'\n              ? 'mdxJsxTextElement'\n              : 'mdxJsxFlowElement',\n          name: tag.name || null,\n          attributes: tag.attributes,\n          children: []\n        },\n        token,\n        onErrorRightIsTag\n      )\n    }\n\n    if (tag.selfClosing || tag.close) {\n      this.exit(token, onErrorLeftIsTag)\n    } else {\n      stack.push(tag)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {OnEnterError}\n   */\n  function onErrorRightIsTag(closing, open) {\n    const stack = this.data.mdxJsxTagStack\n    assert(stack, 'expected `mdxJsxTagStack`')\n    const tag = stack[stack.length - 1]\n    assert(tag, 'expected `mdxJsxTag`')\n    const place = closing ? ' before the end of `' + closing.type + '`' : ''\n    const position = closing\n      ? {start: closing.start, end: closing.end}\n      : undefined\n\n    throw new VFileMessage(\n      'Expected a closing tag for `' +\n        serializeAbbreviatedTag(tag) +\n        '` (' +\n        stringifyPosition({start: open.start, end: open.end}) +\n        ')' +\n        place,\n      position,\n      'mdast-util-mdx-jsx:end-tag-mismatch'\n    )\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {OnExitError}\n   */\n  function onErrorLeftIsTag(a, b) {\n    const tag = this.data.mdxJsxTag\n    assert(tag, 'expected `mdxJsxTag`')\n\n    throw new VFileMessage(\n      'Expected the closing tag `' +\n        serializeAbbreviatedTag(tag) +\n        '` either after the end of `' +\n        b.type +\n        '` (' +\n        stringifyPosition(b.end) +\n        ') or another opening tag after the start of `' +\n        b.type +\n        '` (' +\n        stringifyPosition(b.start) +\n        ')',\n      {start: a.start, end: a.end},\n      'mdast-util-mdx-jsx:end-tag-mismatch'\n    )\n  }\n\n  /**\n   * Serialize a tag, excluding attributes.\n   * `self-closing` is not supported, because we don’t need it yet.\n   *\n   * @param {Tag} tag\n   * @returns {string}\n   */\n  function serializeAbbreviatedTag(tag) {\n    return '<' + (tag.close ? '/' : '') + (tag.name || '') + '>'\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable MDX JSX.\n *\n * This extension configures `mdast-util-to-markdown` with\n * `options.fences: true` and `options.resourceLink: true` too, do not\n * overwrite them!\n *\n * @param {ToMarkdownOptions | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable MDX JSX.\n */\nexport function mdxJsxToMarkdown(options) {\n  const options_ = options || {}\n  const quote = options_.quote || '\"'\n  const quoteSmart = options_.quoteSmart || false\n  const tightSelfClosing = options_.tightSelfClosing || false\n  const printWidth = options_.printWidth || Number.POSITIVE_INFINITY\n  const alternative = quote === '\"' ? \"'\" : '\"'\n\n  if (quote !== '\"' && quote !== \"'\") {\n    throw new Error(\n      'Cannot serialize attribute values with `' +\n        quote +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  mdxElement.peek = peekElement\n\n  return {\n    handlers: {\n      mdxJsxFlowElement: mdxElement,\n      mdxJsxTextElement: mdxElement\n    },\n    unsafe: [\n      {character: '<', inConstruct: ['phrasing']},\n      {atBreak: true, character: '<'}\n    ],\n    // Always generate fenced code (never indented code).\n    fences: true,\n    // Always generate links with resources (never autolinks).\n    resourceLink: true\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {MdxJsxFlowElement | MdxJsxTextElement} node\n   */\n  // eslint-disable-next-line complexity\n  function mdxElement(node, _, state, info) {\n    const flow = node.type === 'mdxJsxFlowElement'\n    const selfClosing = node.name\n      ? !node.children || node.children.length === 0\n      : false\n    const depth = inferDepth(state)\n    const currentIndent = createIndent(depth)\n    const trackerOneLine = state.createTracker(info)\n    const trackerMultiLine = state.createTracker(info)\n    /** @type {Array<string>} */\n    const serializedAttributes = []\n    const prefix = (flow ? currentIndent : '') + '<' + (node.name || '')\n    const exit = state.enter(node.type)\n\n    trackerOneLine.move(prefix)\n    trackerMultiLine.move(prefix)\n\n    // None.\n    if (node.attributes && node.attributes.length > 0) {\n      if (!node.name) {\n        throw new Error('Cannot serialize fragment w/ attributes')\n      }\n\n      let index = -1\n      while (++index < node.attributes.length) {\n        const attribute = node.attributes[index]\n        /** @type {string} */\n        let result\n\n        if (attribute.type === 'mdxJsxExpressionAttribute') {\n          result = '{' + (attribute.value || '') + '}'\n        } else {\n          if (!attribute.name) {\n            throw new Error('Cannot serialize attribute w/o name')\n          }\n\n          const value = attribute.value\n          const left = attribute.name\n          /** @type {string} */\n          let right = ''\n\n          if (value === null || value === undefined) {\n            // Empty.\n          } else if (typeof value === 'object') {\n            right = '{' + (value.value || '') + '}'\n          } else {\n            // If the alternative is less common than `quote`, switch.\n            const appliedQuote =\n              quoteSmart && ccount(value, quote) > ccount(value, alternative)\n                ? alternative\n                : quote\n            right =\n              appliedQuote +\n              stringifyEntitiesLight(value, {subset: [appliedQuote]}) +\n              appliedQuote\n          }\n\n          result = left + (right ? '=' : '') + right\n        }\n\n        serializedAttributes.push(result)\n      }\n    }\n\n    let attributesOnTheirOwnLine = false\n    const attributesOnOneLine = serializedAttributes.join(' ')\n\n    if (\n      // Block:\n      flow &&\n      // Including a line ending (expressions).\n      (/\\r?\\n|\\r/.test(attributesOnOneLine) ||\n        // Current position (including `<tag`).\n        trackerOneLine.current().now.column +\n          // -1 because columns, +1 for ` ` before attributes.\n          // Attributes joined by spaces.\n          attributesOnOneLine.length +\n          // ` />`.\n          (selfClosing ? (tightSelfClosing ? 2 : 3) : 1) >\n          printWidth)\n    ) {\n      attributesOnTheirOwnLine = true\n    }\n\n    let tracker = trackerOneLine\n    let value = prefix\n\n    if (attributesOnTheirOwnLine) {\n      tracker = trackerMultiLine\n\n      let index = -1\n\n      while (++index < serializedAttributes.length) {\n        // Only indent first line of of attributes, we can’t indent attribute\n        // values.\n        serializedAttributes[index] =\n          currentIndent + indent + serializedAttributes[index]\n      }\n\n      value += tracker.move(\n        '\\n' + serializedAttributes.join('\\n') + '\\n' + currentIndent\n      )\n    } else if (attributesOnOneLine) {\n      value += tracker.move(' ' + attributesOnOneLine)\n    }\n\n    if (selfClosing) {\n      value += tracker.move(\n        (tightSelfClosing || attributesOnTheirOwnLine ? '' : ' ') + '/'\n      )\n    }\n\n    value += tracker.move('>')\n\n    if (node.children && node.children.length > 0) {\n      if (node.type === 'mdxJsxTextElement') {\n        value += tracker.move(\n          state.containerPhrasing(node, {\n            ...tracker.current(),\n            before: '>',\n            after: '<'\n          })\n        )\n      } else {\n        tracker.shift(2)\n        value += tracker.move('\\n')\n        value += tracker.move(containerFlow(node, state, tracker.current()))\n        value += tracker.move('\\n')\n      }\n    }\n\n    if (!selfClosing) {\n      value += tracker.move(\n        (flow ? currentIndent : '') + '</' + (node.name || '') + '>'\n      )\n    }\n\n    exit()\n    return value\n  }\n}\n\n// Modified copy of:\n// <https://github.com/syntax-tree/mdast-util-to-markdown/blob/a381cbc/lib/util/container-flow.js>.\n//\n// To do: add `indent` support to `mdast-util-to-markdown`.\n// As indents are only used for JSX, it’s fine for now, but perhaps better\n// there.\n/**\n * @param {MdxJsxFlowElement} parent\n *   Parent of flow nodes.\n * @param {State} state\n *   Info passed around about the current state.\n * @param {ReturnType<Tracker['current']>} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined by (blank) lines.\n */\nfunction containerFlow(parent, state, info) {\n  const indexStack = state.indexStack\n  const children = parent.children\n  const tracker = state.createTracker(info)\n  const currentIndent = createIndent(inferDepth(state))\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n\n  indexStack.push(-1)\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    indexStack[indexStack.length - 1] = index\n\n    const childInfo = {before: '\\n', after: '\\n', ...tracker.current()}\n\n    const result = state.handle(child, parent, state, childInfo)\n\n    const serializedChild =\n      child.type === 'mdxJsxFlowElement'\n        ? result\n        : state.indentLines(result, function (line, _, blank) {\n            return (blank ? '' : currentIndent) + line\n          })\n\n    results.push(tracker.move(serializedChild))\n\n    if (child.type !== 'list') {\n      state.bulletLastUsed = undefined\n    }\n\n    if (index < children.length - 1) {\n      results.push(tracker.move('\\n\\n'))\n    }\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n\n/**\n * @param {State} state\n * @returns {number}\n */\nfunction inferDepth(state) {\n  let depth = 0\n  let index = state.stack.length\n\n  while (--index > -1) {\n    const name = state.stack[index]\n\n    if (name === 'blockquote' || name === 'listItem') break\n    if (name === 'mdxJsxFlowElement') depth++\n  }\n\n  return depth\n}\n\n/**\n * @param {number} depth\n * @returns {string}\n */\nfunction createIndent(depth) {\n  return indent.repeat(depth)\n}\n\n/**\n * @type {ToMarkdownHandle}\n */\nfunction peekElement() {\n  return '<'\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 16598, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16604, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-mdxjs-esm/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('../index.js').MdxjsEsm} MdxjsEsm\n */\n\n// To do: next major: expose functions.\nimport {ok as assert} from 'devlop'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable MDX.js ESM in\n * markdown.\n *\n * When using the micromark syntax extension with `addResult`, nodes will have\n * a `data.estree` field set to an ESTree [`Program`][program] node.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable MDX.js ESM.\n */\nexport function mdxjsEsmFromMarkdown() {\n  return {\n    enter: {mdxjsEsm: enterMdxjsEsm},\n    exit: {mdxjsEsm: exitMdxjsEsm, mdxjsEsmData: exitMdxjsEsmData}\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable MDX.js ESM in\n * markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable MDX.js ESM.\n */\nexport function mdxjsEsmToMarkdown() {\n  return {handlers: {mdxjsEsm: handleMdxjsEsm}}\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterMdxjsEsm(token) {\n  this.enter({type: 'mdxjsEsm', value: ''}, token)\n  this.buffer() // Capture EOLs\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitMdxjsEsm(token) {\n  const value = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'mdxjsEsm')\n\n  this.exit(token)\n\n  const estree = token.estree\n\n  node.value = value\n\n  if (estree) {\n    node.data = {estree}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitMdxjsEsmData(token) {\n  this.config.enter.data.call(this, token)\n  this.config.exit.data.call(this, token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {MdxjsEsm} node\n */\nfunction handleMdxjsEsm(node) {\n  return node.value || ''\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;CASC,GAED,uCAAuC;;;;;AACvC;;AAYO,SAAS;IACd,OAAO;QACL,OAAO;YAAC,UAAU;QAAa;QAC/B,MAAM;YAAC,UAAU;YAAc,cAAc;QAAgB;IAC/D;AACF;AASO,SAAS;IACd,OAAO;QAAC,UAAU;YAAC,UAAU;QAAc;IAAC;AAC9C;AAEA;;;CAGC,GACD,SAAS,cAAc,KAAK;IAC1B,IAAI,CAAC,KAAK,CAAC;QAAC,MAAM;QAAY,OAAO;IAAE,GAAG;IAC1C,IAAI,CAAC,MAAM,GAAG,eAAe;;AAC/B;AAEA;;;CAGC,GACD,SAAS,aAAa,KAAK;IACzB,MAAM,QAAQ,IAAI,CAAC,MAAM;IACzB,MAAM,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE;IAC9C,CAAA,GAAA,wIAAA,CAAA,KAAM,AAAD,EAAE,KAAK,IAAI,KAAK;IAErB,IAAI,CAAC,IAAI,CAAC;IAEV,MAAM,SAAS,MAAM,MAAM;IAE3B,KAAK,KAAK,GAAG;IAEb,IAAI,QAAQ;QACV,KAAK,IAAI,GAAG;YAAC;QAAM;IACrB;AACF;AAEA;;;CAGC,GACD,SAAS,iBAAiB,KAAK;IAC7B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;IAClC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;AACnC;AAEA;;;CAGC,GACD,SAAS,eAAe,IAAI;IAC1B,OAAO,KAAK,KAAK,IAAI;AACvB","ignoreList":[0]}},
    {"offset": {"line": 16678, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16684, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-mdx/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-mdx-jsx').ToMarkdownOptions} ToMarkdownOptions\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\nimport {\n  mdxExpressionFromMarkdown,\n  mdxExpressionToMarkdown\n} from 'mdast-util-mdx-expression'\nimport {mdxJsxFromMarkdown, mdxJsxToMarkdown} from 'mdast-util-mdx-jsx'\nimport {mdxjsEsmFromMarkdown, mdxjsEsmToMarkdown} from 'mdast-util-mdxjs-esm'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable MDX (ESM, JSX,\n * expressions).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable MDX (ESM, JSX,\n *   expressions).\n *\n *   When using the syntax extensions with `addResult`, ESM and expression\n *   nodes will have `data.estree` fields set to ESTree `Program` node.\n */\nexport function mdxFromMarkdown() {\n  return [\n    mdxExpressionFromMarkdown(),\n    mdxJsxFromMarkdown(),\n    mdxjsEsmFromMarkdown()\n  ]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable MDX (ESM, JSX,\n * expressions).\n *\n * @param {ToMarkdownOptions | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable MDX (ESM, JSX,\n *   expressions).\n */\nexport function mdxToMarkdown(options) {\n  return {\n    extensions: [\n      mdxExpressionToMarkdown(),\n      mdxJsxToMarkdown(options),\n      mdxjsEsmToMarkdown()\n    ]\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;;AAED;AAIA;AACA;;;;AAaO,SAAS;IACd,OAAO;QACL,CAAA,GAAA,8JAAA,CAAA,4BAAyB,AAAD;QACxB,CAAA,GAAA,uJAAA,CAAA,qBAAkB,AAAD;QACjB,CAAA,GAAA,yJAAA,CAAA,uBAAoB,AAAD;KACpB;AACH;AAYO,SAAS,cAAc,OAAO;IACnC,OAAO;QACL,YAAY;YACV,CAAA,GAAA,8JAAA,CAAA,0BAAuB,AAAD;YACtB,CAAA,GAAA,uJAAA,CAAA,mBAAgB,AAAD,EAAE;YACjB,CAAA,GAAA,yJAAA,CAAA,qBAAkB,AAAD;SAClB;IACH;AACF","ignoreList":[0]}},
    {"offset": {"line": 16714, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16720, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/remark-mdx/lib/index.js"],"sourcesContent":["/**\n * @import {ToMarkdownOptions} from 'mdast-util-mdx'\n * @import {Options as MicromarkOptions} from 'micromark-extension-mdxjs'\n * @import {Processor} from 'unified'\n */\n\n/**\n * @typedef {MicromarkOptions & ToMarkdownOptions} Options\n *   Configuration.\n */\n\nimport {mdxFromMarkdown, mdxToMarkdown} from 'mdast-util-mdx'\nimport {mdxjs} from 'micromark-extension-mdxjs'\n\n/** @type {Readonly<Options>} */\nconst emptyOptions = {}\n\n/**\n * Add support for MDX (JSX: `<Video id={123} />`, export/imports: `export {x}\n * from 'y'`; and expressions: `{1 + 1}`).\n *\n * @this {Processor}\n *   Processor.\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkMdx(options) {\n  const self = this\n  const settings = options || emptyOptions\n  const data = self.data()\n\n  const micromarkExtensions =\n    data.micromarkExtensions || (data.micromarkExtensions = [])\n  const fromMarkdownExtensions =\n    data.fromMarkdownExtensions || (data.fromMarkdownExtensions = [])\n  const toMarkdownExtensions =\n    data.toMarkdownExtensions || (data.toMarkdownExtensions = [])\n\n  micromarkExtensions.push(mdxjs(settings))\n  fromMarkdownExtensions.push(mdxFromMarkdown())\n  toMarkdownExtensions.push(mdxToMarkdown(settings))\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC,GAED;;;CAGC;;;AAGD;AADA;;;AAGA,8BAA8B,GAC9B,MAAM,eAAe,CAAC;AAaP,SAAS,UAAU,OAAO;IACvC,MAAM,OAAO,IAAI;IACjB,MAAM,WAAW,WAAW;IAC5B,MAAM,OAAO,KAAK,IAAI;IAEtB,MAAM,sBACJ,KAAK,mBAAmB,IAAI,CAAC,KAAK,mBAAmB,GAAG,EAAE;IAC5D,MAAM,yBACJ,KAAK,sBAAsB,IAAI,CAAC,KAAK,sBAAsB,GAAG,EAAE;IAClE,MAAM,uBACJ,KAAK,oBAAoB,IAAI,CAAC,KAAK,oBAAoB,GAAG,EAAE;IAE9D,oBAAoB,IAAI,CAAC,CAAA,GAAA,oJAAA,CAAA,QAAK,AAAD,EAAE;IAC/B,uBAAuB,IAAI,CAAC,CAAA,GAAA,gJAAA,CAAA,kBAAe,AAAD;IAC1C,qBAAqB,IAAI,CAAC,CAAA,GAAA,gJAAA,CAAA,gBAAa,AAAD,EAAE;AAC1C","ignoreList":[0]}},
    {"offset": {"line": 16746, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16752, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/estree-walker/src/walker.js"],"sourcesContent":["/**\n * @typedef { import('estree').Node} Node\n * @typedef {{\n *   skip: () => void;\n *   remove: () => void;\n *   replace: (node: Node) => void;\n * }} WalkerContext\n */\n\nexport class WalkerBase {\n\tconstructor() {\n\t\t/** @type {boolean} */\n\t\tthis.should_skip = false;\n\n\t\t/** @type {boolean} */\n\t\tthis.should_remove = false;\n\n\t\t/** @type {Node | null} */\n\t\tthis.replacement = null;\n\n\t\t/** @type {WalkerContext} */\n\t\tthis.context = {\n\t\t\tskip: () => (this.should_skip = true),\n\t\t\tremove: () => (this.should_remove = true),\n\t\t\treplace: (node) => (this.replacement = node)\n\t\t};\n\t}\n\n\t/**\n\t * @template {Node} Parent\n\t * @param {Parent | null | undefined} parent\n\t * @param {keyof Parent | null | undefined} prop\n\t * @param {number | null | undefined} index\n\t * @param {Node} node\n\t */\n\treplace(parent, prop, index, node) {\n\t\tif (parent && prop) {\n\t\t\tif (index != null) {\n\t\t\t\t/** @type {Array<Node>} */ (parent[prop])[index] = node;\n\t\t\t} else {\n\t\t\t\t/** @type {Node} */ (parent[prop]) = node;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @template {Node} Parent\n\t * @param {Parent | null | undefined} parent\n\t * @param {keyof Parent | null | undefined} prop\n\t * @param {number | null | undefined} index\n\t */\n\tremove(parent, prop, index) {\n\t\tif (parent && prop) {\n\t\t\tif (index !== null && index !== undefined) {\n\t\t\t\t/** @type {Array<Node>} */ (parent[prop]).splice(index, 1);\n\t\t\t} else {\n\t\t\t\tdelete parent[prop];\n\t\t\t}\n\t\t}\n\t}\n}\n"],"names":[],"mappings":"AAAA;;;;;;;CAOC;;;AAEM,MAAM;IACZ,aAAc;QACb,oBAAoB,GACpB,IAAI,CAAC,WAAW,GAAG;QAEnB,oBAAoB,GACpB,IAAI,CAAC,aAAa,GAAG;QAErB,wBAAwB,GACxB,IAAI,CAAC,WAAW,GAAG;QAEnB,0BAA0B,GAC1B,IAAI,CAAC,OAAO,GAAG;YACd,MAAM,IAAO,IAAI,CAAC,WAAW,GAAG;YAChC,QAAQ,IAAO,IAAI,CAAC,aAAa,GAAG;YACpC,SAAS,CAAC,OAAU,IAAI,CAAC,WAAW,GAAG;QACxC;IACD;IAEA;;;;;;EAMC,GACD,QAAQ,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;QAClC,IAAI,UAAU,MAAM;YACnB,IAAI,SAAS,MAAM;gBAClB,wBAAwB,GAAG,AAAC,MAAM,CAAC,KAAK,AAAC,CAAC,MAAM,GAAG;YACpD,OAAO;gBACN,iBAAiB,GAAI,MAAM,CAAC,KAAK,GAAI;YACtC;QACD;IACD;IAEA;;;;;EAKC,GACD,OAAO,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE;QAC3B,IAAI,UAAU,MAAM;YACnB,IAAI,UAAU,QAAQ,UAAU,WAAW;gBAC1C,wBAAwB,GAAG,AAAC,MAAM,CAAC,KAAK,CAAE,MAAM,CAAC,OAAO;YACzD,OAAO;gBACN,OAAO,MAAM,CAAC,KAAK;YACpB;QACD;IACD;AACD","ignoreList":[0]}},
    {"offset": {"line": 16803, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16809, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/estree-walker/src/sync.js"],"sourcesContent":["import { WalkerBase } from './walker.js';\n\n/**\n * @typedef { import('estree').Node} Node\n * @typedef { import('./walker.js').WalkerContext} WalkerContext\n * @typedef {(\n *    this: WalkerContext,\n *    node: Node,\n *    parent: Node | null,\n *    key: string | number | symbol | null | undefined,\n *    index: number | null | undefined\n * ) => void} SyncHandler\n */\n\nexport class SyncWalker extends WalkerBase {\n\t/**\n\t *\n\t * @param {SyncHandler} [enter]\n\t * @param {SyncHandler} [leave]\n\t */\n\tconstructor(enter, leave) {\n\t\tsuper();\n\n\t\t/** @type {boolean} */\n\t\tthis.should_skip = false;\n\n\t\t/** @type {boolean} */\n\t\tthis.should_remove = false;\n\n\t\t/** @type {Node | null} */\n\t\tthis.replacement = null;\n\n\t\t/** @type {WalkerContext} */\n\t\tthis.context = {\n\t\t\tskip: () => (this.should_skip = true),\n\t\t\tremove: () => (this.should_remove = true),\n\t\t\treplace: (node) => (this.replacement = node)\n\t\t};\n\n\t\t/** @type {SyncHandler | undefined} */\n\t\tthis.enter = enter;\n\n\t\t/** @type {SyncHandler | undefined} */\n\t\tthis.leave = leave;\n\t}\n\n\t/**\n\t * @template {Node} Parent\n\t * @param {Node} node\n\t * @param {Parent | null} parent\n\t * @param {keyof Parent} [prop]\n\t * @param {number | null} [index]\n\t * @returns {Node | null}\n\t */\n\tvisit(node, parent, prop, index) {\n\t\tif (node) {\n\t\t\tif (this.enter) {\n\t\t\t\tconst _should_skip = this.should_skip;\n\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\tthis.should_skip = false;\n\t\t\t\tthis.should_remove = false;\n\t\t\t\tthis.replacement = null;\n\n\t\t\t\tthis.enter.call(this.context, node, parent, prop, index);\n\n\t\t\t\tif (this.replacement) {\n\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t}\n\n\t\t\t\tif (this.should_remove) {\n\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t}\n\n\t\t\t\tconst skipped = this.should_skip;\n\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\tthis.should_skip = _should_skip;\n\t\t\t\tthis.should_remove = _should_remove;\n\t\t\t\tthis.replacement = _replacement;\n\n\t\t\t\tif (skipped) return node;\n\t\t\t\tif (removed) return null;\n\t\t\t}\n\n\t\t\t/** @type {keyof Node} */\n\t\t\tlet key;\n\n\t\t\tfor (key in node) {\n\t\t\t\t/** @type {unknown} */\n\t\t\t\tconst value = node[key];\n\n\t\t\t\tif (value && typeof value === 'object') {\n\t\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\t\tconst nodes = /** @type {Array<unknown>} */ (value);\n\t\t\t\t\t\tfor (let i = 0; i < nodes.length; i += 1) {\n\t\t\t\t\t\t\tconst item = nodes[i];\n\t\t\t\t\t\t\tif (isNode(item)) {\n\t\t\t\t\t\t\t\tif (!this.visit(item, node, key, i)) {\n\t\t\t\t\t\t\t\t\t// removed\n\t\t\t\t\t\t\t\t\ti--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (isNode(value)) {\n\t\t\t\t\t\tthis.visit(value, node, key, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.leave) {\n\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\tthis.replacement = null;\n\t\t\t\tthis.should_remove = false;\n\n\t\t\t\tthis.leave.call(this.context, node, parent, prop, index);\n\n\t\t\t\tif (this.replacement) {\n\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t}\n\n\t\t\t\tif (this.should_remove) {\n\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t}\n\n\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\tthis.replacement = _replacement;\n\t\t\t\tthis.should_remove = _should_remove;\n\n\t\t\t\tif (removed) return null;\n\t\t\t}\n\t\t}\n\n\t\treturn node;\n\t}\n}\n\n/**\n * Ducktype a node.\n *\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction isNode(value) {\n\treturn (\n\t\tvalue !== null && typeof value === 'object' && 'type' in value && typeof value.type === 'string'\n\t);\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 16914, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16920, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/estree-walker/src/async.js"],"sourcesContent":["import { WalkerBase } from './walker.js';\n\n/**\n * @typedef { import('estree').Node} Node\n * @typedef { import('./walker.js').WalkerContext} WalkerContext\n * @typedef {(\n *    this: WalkerContext,\n *    node: Node,\n *    parent: Node | null,\n *    key: string | number | symbol | null | undefined,\n *    index: number | null | undefined\n * ) => Promise<void>} AsyncHandler\n */\n\nexport class AsyncWalker extends WalkerBase {\n\t/**\n\t *\n\t * @param {AsyncHandler} [enter]\n\t * @param {AsyncHandler} [leave]\n\t */\n\tconstructor(enter, leave) {\n\t\tsuper();\n\n\t\t/** @type {boolean} */\n\t\tthis.should_skip = false;\n\n\t\t/** @type {boolean} */\n\t\tthis.should_remove = false;\n\n\t\t/** @type {Node | null} */\n\t\tthis.replacement = null;\n\n\t\t/** @type {WalkerContext} */\n\t\tthis.context = {\n\t\t\tskip: () => (this.should_skip = true),\n\t\t\tremove: () => (this.should_remove = true),\n\t\t\treplace: (node) => (this.replacement = node)\n\t\t};\n\n\t\t/** @type {AsyncHandler | undefined} */\n\t\tthis.enter = enter;\n\n\t\t/** @type {AsyncHandler | undefined} */\n\t\tthis.leave = leave;\n\t}\n\n\t/**\n\t * @template {Node} Parent\n\t * @param {Node} node\n\t * @param {Parent | null} parent\n\t * @param {keyof Parent} [prop]\n\t * @param {number | null} [index]\n\t * @returns {Promise<Node | null>}\n\t */\n\tasync visit(node, parent, prop, index) {\n\t\tif (node) {\n\t\t\tif (this.enter) {\n\t\t\t\tconst _should_skip = this.should_skip;\n\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\tthis.should_skip = false;\n\t\t\t\tthis.should_remove = false;\n\t\t\t\tthis.replacement = null;\n\n\t\t\t\tawait this.enter.call(this.context, node, parent, prop, index);\n\n\t\t\t\tif (this.replacement) {\n\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t}\n\n\t\t\t\tif (this.should_remove) {\n\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t}\n\n\t\t\t\tconst skipped = this.should_skip;\n\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\tthis.should_skip = _should_skip;\n\t\t\t\tthis.should_remove = _should_remove;\n\t\t\t\tthis.replacement = _replacement;\n\n\t\t\t\tif (skipped) return node;\n\t\t\t\tif (removed) return null;\n\t\t\t}\n\n\t\t\t/** @type {keyof Node} */\n\t\t\tlet key;\n\n\t\t\tfor (key in node) {\n\t\t\t\t/** @type {unknown} */\n\t\t\t\tconst value = node[key];\n\n\t\t\t\tif (value && typeof value === 'object') {\n\t\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\t\tconst nodes = /** @type {Array<unknown>} */ (value);\n\t\t\t\t\t\tfor (let i = 0; i < nodes.length; i += 1) {\n\t\t\t\t\t\t\tconst item = nodes[i];\n\t\t\t\t\t\t\tif (isNode(item)) {\n\t\t\t\t\t\t\t\tif (!(await this.visit(item, node, key, i))) {\n\t\t\t\t\t\t\t\t\t// removed\n\t\t\t\t\t\t\t\t\ti--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (isNode(value)) {\n\t\t\t\t\t\tawait this.visit(value, node, key, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.leave) {\n\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\tthis.replacement = null;\n\t\t\t\tthis.should_remove = false;\n\n\t\t\t\tawait this.leave.call(this.context, node, parent, prop, index);\n\n\t\t\t\tif (this.replacement) {\n\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t}\n\n\t\t\t\tif (this.should_remove) {\n\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t}\n\n\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\tthis.replacement = _replacement;\n\t\t\t\tthis.should_remove = _should_remove;\n\n\t\t\t\tif (removed) return null;\n\t\t\t}\n\t\t}\n\n\t\treturn node;\n\t}\n}\n\n/**\n * Ducktype a node.\n *\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction isNode(value) {\n\treturn (\n\t\tvalue !== null && typeof value === 'object' && 'type' in value && typeof value.type === 'string'\n\t);\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 17025, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17031, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/estree-walker/src/index.js"],"sourcesContent":["import { SyncWalker } from './sync.js';\nimport { AsyncWalker } from './async.js';\n\n/**\n * @typedef {import('estree').Node} Node\n * @typedef {import('./sync.js').SyncHandler} SyncHandler\n * @typedef {import('./async.js').AsyncHandler} AsyncHandler\n */\n\n/**\n * @param {Node} ast\n * @param {{\n *   enter?: SyncHandler\n *   leave?: SyncHandler\n * }} walker\n * @returns {Node | null}\n */\nexport function walk(ast, { enter, leave }) {\n\tconst instance = new SyncWalker(enter, leave);\n\treturn instance.visit(ast, null);\n}\n\n/**\n * @param {Node} ast\n * @param {{\n *   enter?: AsyncHandler\n *   leave?: AsyncHandler\n * }} walker\n * @returns {Promise<Node | null>}\n */\nexport async function asyncWalk(ast, { enter, leave }) {\n\tconst instance = new AsyncWalker(enter, leave);\n\treturn await instance.visit(ast, null);\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAgBO,SAAS,KAAK,GAAG,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE;IACzC,MAAM,WAAW,IAAI,2IAAA,CAAA,aAAU,CAAC,OAAO;IACvC,OAAO,SAAS,KAAK,CAAC,KAAK;AAC5B;AAUO,eAAe,UAAU,GAAG,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE;IACpD,MAAM,WAAW,IAAI,4IAAA,CAAA,cAAW,CAAC,OAAO;IACxC,OAAO,MAAM,SAAS,KAAK,CAAC,KAAK;AAClC","ignoreList":[0]}},
    {"offset": {"line": 17047, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17053, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/collapse-white-space/index.js"],"sourcesContent":["/**\n * @typedef {'html'|'js'} Style\n *\n * @typedef Options\n *   Configuration.\n * @property {Style} [style='js']\n *   Style of white space to support.\n * @property {boolean} [preserveLineEndings=false]\n *   Whether to collapse white space containing a line ending to that line\n *   ending.\n *   The default is to collapse to a single space.\n * @property {boolean} [trim=false]\n *   Whether to drop white space at the start and end of `value`.\n *   The default is to keep it.\n */\n\nconst js = /\\s+/g\nconst html = /[\\t\\n\\v\\f\\r ]+/g\n\n/**\n * Collapse white space.\n *\n * @param {string} value\n *   Value to collapse white space in.\n * @param {Style|Options} [options='js']\n *   Configuration.\n * @returns {string}\n *   Value with collapsed white space.\n */\nexport function collapseWhiteSpace(value, options) {\n  if (!options) {\n    options = {}\n  } else if (typeof options === 'string') {\n    options = {style: options}\n  }\n\n  const replace = options.preserveLineEndings ? replaceLineEnding : replaceSpace\n\n  return String(value).replace(\n    options.style === 'html' ? html : js,\n    options.trim ? trimFactory(replace) : replace\n  )\n}\n\n/**\n * Replace white space with a line ending as that line ending and otherwise a\n * space.\n *\n * @param {string} value\n * @returns {string}\n */\nfunction replaceLineEnding(value) {\n  const match = /\\r?\\n|\\r/.exec(value)\n  return match ? match[0] : ' '\n}\n\n/**\n * Replace white space with a space.\n *\n * @returns {string}\n */\nfunction replaceSpace() {\n  return ' '\n}\n\n/**\n * @param {(value: string) => string} replace\n */\nfunction trimFactory(replace) {\n  return dropOrReplace\n\n  /**\n   * Replace white space with nothing if it starts or ends the string.\n   * Calls `replace` otherwise.\n   *\n   * @param {string} value\n   * @param {number} index\n   * @param {string} all\n   * @returns {string}\n   */\n  function dropOrReplace(value, index, all) {\n    return index === 0 || index + value.length === all.length\n      ? ''\n      : replace(value)\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;CAcC;;;AAED,MAAM,KAAK;AACX,MAAM,OAAO;AAYN,SAAS,mBAAmB,KAAK,EAAE,OAAO;IAC/C,IAAI,CAAC,SAAS;QACZ,UAAU,CAAC;IACb,OAAO,IAAI,OAAO,YAAY,UAAU;QACtC,UAAU;YAAC,OAAO;QAAO;IAC3B;IAEA,MAAM,UAAU,QAAQ,mBAAmB,GAAG,oBAAoB;IAElE,OAAO,OAAO,OAAO,OAAO,CAC1B,QAAQ,KAAK,KAAK,SAAS,OAAO,IAClC,QAAQ,IAAI,GAAG,YAAY,WAAW;AAE1C;AAEA;;;;;;CAMC,GACD,SAAS,kBAAkB,KAAK;IAC9B,MAAM,QAAQ,WAAW,IAAI,CAAC;IAC9B,OAAO,QAAQ,KAAK,CAAC,EAAE,GAAG;AAC5B;AAEA;;;;CAIC,GACD,SAAS;IACP,OAAO;AACT;AAEA;;CAEC,GACD,SAAS,YAAY,OAAO;IAC1B,OAAO;;IAEP;;;;;;;;GAQC,GACD,SAAS,cAAc,KAAK,EAAE,KAAK,EAAE,GAAG;QACtC,OAAO,UAAU,KAAK,QAAQ,MAAM,MAAM,KAAK,IAAI,MAAM,GACrD,KACA,QAAQ;IACd;AACF","ignoreList":[0]}},
    {"offset": {"line": 17117, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17123, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/%40mdx-js/mdx/lib/plugin/remark-mark-and-unravel.js"],"sourcesContent":["/**\n * @import {Root, RootContent} from 'mdast'\n */\n\nimport {collapseWhiteSpace} from 'collapse-white-space'\nimport {walk} from 'estree-walker'\nimport {visit} from 'unist-util-visit'\n\n/**\n * A tiny plugin that unravels `<p><h1>x</h1></p>` but also\n * `<p><Component /></p>` (so it has no knowledge of “HTML”).\n *\n * It also marks JSX as being explicitly JSX, so when a user passes a `h1`\n * component, it is used for `# heading` but not for `<h1>heading</h1>`.\n *\n * @returns\n *   Transform.\n */\nexport function remarkMarkAndUnravel() {\n  /**\n   * @param {Root} tree\n   *   Tree.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  return function (tree) {\n    visit(tree, function (node, index, parent) {\n      let offset = -1\n      let all = true\n      let oneOrMore = false\n\n      if (parent && typeof index === 'number' && node.type === 'paragraph') {\n        const children = node.children\n\n        while (++offset < children.length) {\n          const child = children[offset]\n\n          if (\n            child.type === 'mdxJsxTextElement' ||\n            child.type === 'mdxTextExpression'\n          ) {\n            oneOrMore = true\n          } else if (\n            child.type === 'text' &&\n            collapseWhiteSpace(child.value, {style: 'html', trim: true}) === ''\n          ) {\n            // Empty.\n          } else {\n            all = false\n            break\n          }\n        }\n\n        if (all && oneOrMore) {\n          offset = -1\n\n          /** @type {Array<RootContent>} */\n          const newChildren = []\n\n          while (++offset < children.length) {\n            const child = children[offset]\n\n            if (child.type === 'mdxJsxTextElement') {\n              // @ts-expect-error: mutate because it is faster; content model is fine.\n              child.type = 'mdxJsxFlowElement'\n            }\n\n            if (child.type === 'mdxTextExpression') {\n              // @ts-expect-error: mutate because it is faster; content model is fine.\n              child.type = 'mdxFlowExpression'\n            }\n\n            if (\n              child.type === 'text' &&\n              /^[\\t\\r\\n ]+$/.test(String(child.value))\n            ) {\n              // Empty.\n            } else {\n              newChildren.push(child)\n            }\n          }\n\n          parent.children.splice(index, 1, ...newChildren)\n          return index\n        }\n      }\n\n      if (\n        node.type === 'mdxJsxFlowElement' ||\n        node.type === 'mdxJsxTextElement'\n      ) {\n        const data = node.data || (node.data = {})\n        data._mdxExplicitJsx = true\n      }\n\n      if (\n        (node.type === 'mdxFlowExpression' ||\n          node.type === 'mdxTextExpression' ||\n          node.type === 'mdxjsEsm') &&\n        node.data &&\n        node.data.estree\n      ) {\n        walk(node.data.estree, {\n          enter(node) {\n            if (node.type === 'JSXElement') {\n              const data = node.data || (node.data = {})\n              data._mdxExplicitJsx = true\n            }\n          }\n        })\n      }\n    })\n  }\n}\n"],"names":[],"mappings":"AAAA;;CAEC;;;AAGD;AACA;AAFA;;;;AAcO,SAAS;IACd;;;;;GAKC,GACD,OAAO,SAAU,IAAI;QACnB,CAAA,GAAA,kKAAA,CAAA,QAAK,AAAD,EAAE,MAAM,SAAU,IAAI,EAAE,KAAK,EAAE,MAAM;YACvC,IAAI,SAAS,CAAC;YACd,IAAI,MAAM;YACV,IAAI,YAAY;YAEhB,IAAI,UAAU,OAAO,UAAU,YAAY,KAAK,IAAI,KAAK,aAAa;gBACpE,MAAM,WAAW,KAAK,QAAQ;gBAE9B,MAAO,EAAE,SAAS,SAAS,MAAM,CAAE;oBACjC,MAAM,QAAQ,QAAQ,CAAC,OAAO;oBAE9B,IACE,MAAM,IAAI,KAAK,uBACf,MAAM,IAAI,KAAK,qBACf;wBACA,YAAY;oBACd,OAAO,IACL,MAAM,IAAI,KAAK,UACf,CAAA,GAAA,+IAAA,CAAA,qBAAkB,AAAD,EAAE,MAAM,KAAK,EAAE;wBAAC,OAAO;wBAAQ,MAAM;oBAAI,OAAO,IACjE;oBACA,SAAS;oBACX,OAAO;wBACL,MAAM;wBACN;oBACF;gBACF;gBAEA,IAAI,OAAO,WAAW;oBACpB,SAAS,CAAC;oBAEV,+BAA+B,GAC/B,MAAM,cAAc,EAAE;oBAEtB,MAAO,EAAE,SAAS,SAAS,MAAM,CAAE;wBACjC,MAAM,QAAQ,QAAQ,CAAC,OAAO;wBAE9B,IAAI,MAAM,IAAI,KAAK,qBAAqB;4BACtC,wEAAwE;4BACxE,MAAM,IAAI,GAAG;wBACf;wBAEA,IAAI,MAAM,IAAI,KAAK,qBAAqB;4BACtC,wEAAwE;4BACxE,MAAM,IAAI,GAAG;wBACf;wBAEA,IACE,MAAM,IAAI,KAAK,UACf,eAAe,IAAI,CAAC,OAAO,MAAM,KAAK,IACtC;wBACA,SAAS;wBACX,OAAO;4BACL,YAAY,IAAI,CAAC;wBACnB;oBACF;oBAEA,OAAO,QAAQ,CAAC,MAAM,CAAC,OAAO,MAAM;oBACpC,OAAO;gBACT;YACF;YAEA,IACE,KAAK,IAAI,KAAK,uBACd,KAAK,IAAI,KAAK,qBACd;gBACA,MAAM,OAAO,KAAK,IAAI,IAAI,CAAC,KAAK,IAAI,GAAG,CAAC,CAAC;gBACzC,KAAK,eAAe,GAAG;YACzB;YAEA,IACE,CAAC,KAAK,IAAI,KAAK,uBACb,KAAK,IAAI,KAAK,uBACd,KAAK,IAAI,KAAK,UAAU,KAC1B,KAAK,IAAI,IACT,KAAK,IAAI,CAAC,MAAM,EAChB;gBACA,CAAA,GAAA,4IAAA,CAAA,OAAI,AAAD,EAAE,KAAK,IAAI,CAAC,MAAM,EAAE;oBACrB,OAAM,IAAI;wBACR,IAAI,KAAK,IAAI,KAAK,cAAc;4BAC9B,MAAM,OAAO,KAAK,IAAI,IAAI,CAAC,KAAK,IAAI,GAAG,CAAC,CAAC;4BACzC,KAAK,eAAe,GAAG;wBACzB;oBACF;gBACF;YACF;QACF;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 17201, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17207, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/%40mdx-js/mdx/lib/node-types.js"],"sourcesContent":["/**\n * List of node types made by `mdast-util-mdx`, which have to be passed\n * through untouched from the mdast tree to the hast tree.\n */\nexport const nodeTypes = /** @type {const} */ ([\n  'mdxFlowExpression',\n  'mdxJsxFlowElement',\n  'mdxJsxTextElement',\n  'mdxTextExpression',\n  'mdxjsEsm'\n])\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AACM,MAAM,YAAkC;IAC7C;IACA;IACA;IACA;IACA;CACD","ignoreList":[0]}},
    {"offset": {"line": 17220, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17226, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/%40mdx-js/mdx/lib/plugin/rehype-remove-raw.js"],"sourcesContent":["/**\n * @import {Root} from 'hast'\n */\n\nimport {visit} from 'unist-util-visit'\n\n/**\n * A tiny plugin that removes raw HTML.\n *\n * This is needed if the format is `md` and `rehype-raw` was not used to parse\n * dangerous HTML into nodes.\n *\n * @returns\n *   Transform.\n */\nexport function rehypeRemoveRaw() {\n  /**\n   * @param {Root} tree\n   *   Tree.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  return function (tree) {\n    visit(tree, 'raw', function (_, index, parent) {\n      if (parent && typeof index === 'number') {\n        parent.children.splice(index, 1)\n        return index\n      }\n    })\n  }\n}\n"],"names":[],"mappings":"AAAA;;CAEC;;;AAED;;AAWO,SAAS;IACd;;;;;GAKC,GACD,OAAO,SAAU,IAAI;QACnB,CAAA,GAAA,kKAAA,CAAA,QAAK,AAAD,EAAE,MAAM,OAAO,SAAU,CAAC,EAAE,KAAK,EAAE,MAAM;YAC3C,IAAI,UAAU,OAAO,UAAU,UAAU;gBACvC,OAAO,QAAQ,CAAC,MAAM,CAAC,OAAO;gBAC9B,OAAO;YACT;QACF;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 17248, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17254, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/%40mdx-js/mdx/lib/util/estree-util-create.js"],"sourcesContent":["/**\n * @import {Node} from 'estree-jsx'\n */\n\n// Fix to show references to above types in VS Code.\n''\n\n/**\n * @param {Readonly<Node>} from\n *   Node to take from.\n * @param {Node} to\n *   Node to add to.\n * @returns {undefined}\n *   Nothing.\n */\nexport function create(from, to) {\n  /** @type {Array<keyof Node>} */\n  const fields = ['start', 'end', 'loc', 'range']\n  let index = -1\n\n  while (++index < fields.length) {\n    const field = fields[index]\n\n    if (field in from) {\n      // @ts-expect-error: assume they’re settable.\n      to[field] = from[field]\n    }\n  }\n}\n"],"names":[],"mappings":"AAAA;;CAEC,GAED,oDAAoD;;;;AACpD;AAUO,SAAS,OAAO,IAAI,EAAE,EAAE;IAC7B,8BAA8B,GAC9B,MAAM,SAAS;QAAC;QAAS;QAAO;QAAO;KAAQ;IAC/C,IAAI,QAAQ,CAAC;IAEb,MAAO,EAAE,QAAQ,OAAO,MAAM,CAAE;QAC9B,MAAM,QAAQ,MAAM,CAAC,MAAM;QAE3B,IAAI,SAAS,MAAM;YACjB,6CAA6C;YAC7C,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM;QACzB;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 17277, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17283, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/%40mdx-js/mdx/lib/util/estree-util-is-declaration.js"],"sourcesContent":["/**\n * @import {\n      Declaration,\n      MaybeNamedClassDeclaration,\n      MaybeNamedFunctionDeclaration,\n      Node\n * } from 'estree-jsx'\n */\n\n// Fix to show references to above types in VS Code.\n''\n\n/**\n * Check if `node` is a declaration.\n *\n * @param {Readonly<MaybeNamedClassDeclaration | MaybeNamedFunctionDeclaration | Node>} node\n *   Node to check.\n * @returns {node is Declaration | MaybeNamedClassDeclaration | MaybeNamedFunctionDeclaration}\n *   Whether `node` is a declaration.\n */\nexport function isDeclaration(node) {\n  return Boolean(\n    node.type === 'FunctionDeclaration' ||\n      node.type === 'ClassDeclaration' ||\n      node.type === 'VariableDeclaration'\n  )\n}\n"],"names":[],"mappings":"AAAA;;;;;;;CAOC,GAED,oDAAoD;;;;AACpD;AAUO,SAAS,cAAc,IAAI;IAChC,OAAO,QACL,KAAK,IAAI,KAAK,yBACZ,KAAK,IAAI,KAAK,sBACd,KAAK,IAAI,KAAK;AAEpB","ignoreList":[0]}},
    {"offset": {"line": 17298, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17304, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/%40mdx-js/mdx/lib/util/estree-util-declaration-to-expression.js"],"sourcesContent":["/**\n * @import {\n      Declaration,\n      Expression,\n      MaybeNamedClassDeclaration,\n      MaybeNamedFunctionDeclaration\n * } from 'estree-jsx'\n */\n\nimport {ok as assert} from 'devlop'\n\n/**\n * Turn a declaration into an expression.\n *\n * Doesn’t work for variable declarations, but that’s fine for our use case\n * because currently we’re using this utility for export default declarations,\n * which can’t contain variable declarations.\n *\n * @param {Readonly<Declaration | MaybeNamedClassDeclaration | MaybeNamedFunctionDeclaration>} declaration\n *   Declaration.\n * @returns {Expression}\n *   Expression.\n */\nexport function declarationToExpression(declaration) {\n  if (declaration.type === 'FunctionDeclaration') {\n    return {...declaration, type: 'FunctionExpression'}\n  }\n\n  // This is currently an internal utility so the next shouldn’t happen or a\n  // maintainer is making a mistake.\n  assert(declaration.type === 'ClassDeclaration', 'unexpected node type')\n  return {...declaration, type: 'ClassExpression'}\n}\n"],"names":[],"mappings":"AAAA;;;;;;;CAOC;;;AAED;;AAcO,SAAS,wBAAwB,WAAW;IACjD,IAAI,YAAY,IAAI,KAAK,uBAAuB;QAC9C,OAAO;YAAC,GAAG,WAAW;YAAE,MAAM;QAAoB;IACpD;IAEA,0EAA0E;IAC1E,kCAAkC;IAClC,CAAA,GAAA,wIAAA,CAAA,KAAM,AAAD,EAAE,YAAY,IAAI,KAAK,oBAAoB;IAChD,OAAO;QAAC,GAAG,WAAW;QAAE,MAAM;IAAiB;AACjD","ignoreList":[0]}},
    {"offset": {"line": 17331, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17337, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/%40mdx-js/mdx/lib/util/estree-util-specifiers-to-declarations.js"],"sourcesContent":["/**\n * @import {\n      AssignmentProperty,\n      ExportSpecifier,\n      Expression,\n      Identifier,\n      ImportDefaultSpecifier,\n      ImportNamespaceSpecifier,\n      ImportSpecifier,\n      Literal,\n      VariableDeclarator\n * } from 'estree-jsx'\n */\n\nimport {ok as assert} from 'devlop'\nimport {create} from './estree-util-create.js'\n\n/**\n * @param {ReadonlyArray<Readonly<ExportSpecifier> | Readonly<ImportDefaultSpecifier> | Readonly<ImportNamespaceSpecifier> | Readonly<ImportSpecifier>>} specifiers\n *   Specifiers.\n * @param {Readonly<Expression>} init\n *   Initializer.\n * @returns {Array<VariableDeclarator>}\n *   Declarations.\n */\nexport function specifiersToDeclarations(specifiers, init) {\n  let index = -1\n  /** @type {Array<VariableDeclarator>} */\n  const declarations = []\n  /** @type {Array<ExportSpecifier | ImportDefaultSpecifier | ImportSpecifier>} */\n  const otherSpecifiers = []\n  // Can only be one according to JS syntax.\n  /** @type {ImportNamespaceSpecifier | undefined} */\n  let importNamespaceSpecifier\n\n  while (++index < specifiers.length) {\n    const specifier = specifiers[index]\n\n    if (specifier.type === 'ImportNamespaceSpecifier') {\n      importNamespaceSpecifier = specifier\n    } else {\n      otherSpecifiers.push(specifier)\n    }\n  }\n\n  if (importNamespaceSpecifier) {\n    /** @type {VariableDeclarator} */\n    const declarator = {\n      type: 'VariableDeclarator',\n      id: importNamespaceSpecifier.local,\n      init\n    }\n    create(importNamespaceSpecifier, declarator)\n    declarations.push(declarator)\n  }\n\n  declarations.push({\n    type: 'VariableDeclarator',\n    id: {\n      type: 'ObjectPattern',\n      properties: otherSpecifiers.map(function (specifier) {\n        /** @type {Identifier | Literal} */\n        let key =\n          specifier.type === 'ImportSpecifier'\n            ? specifier.imported\n            : specifier.type === 'ExportSpecifier'\n              ? specifier.exported\n              : {type: 'Identifier', name: 'default'}\n        let value = specifier.local\n\n        // Switch them around if we’re exporting.\n        if (specifier.type === 'ExportSpecifier') {\n          value = key\n          key = specifier.local\n        }\n\n        // To do: what to do about literals?\n        // `const { a: 'b' } = c()` does not work?\n        assert(value.type === 'Identifier')\n\n        /** @type {AssignmentProperty} */\n        const property = {\n          type: 'Property',\n          kind: 'init',\n          shorthand:\n            key.type === 'Identifier' &&\n            value.type === 'Identifier' &&\n            key.name === value.name,\n          method: false,\n          computed: false,\n          key,\n          value\n        }\n        create(specifier, property)\n        return property\n      })\n    },\n    init: importNamespaceSpecifier\n      ? {type: 'Identifier', name: importNamespaceSpecifier.local.name}\n      : init\n  })\n\n  return declarations\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;CAYC;;;AAGD;AADA;;;AAWO,SAAS,yBAAyB,UAAU,EAAE,IAAI;IACvD,IAAI,QAAQ,CAAC;IACb,sCAAsC,GACtC,MAAM,eAAe,EAAE;IACvB,8EAA8E,GAC9E,MAAM,kBAAkB,EAAE;IAC1B,0CAA0C;IAC1C,iDAAiD,GACjD,IAAI;IAEJ,MAAO,EAAE,QAAQ,WAAW,MAAM,CAAE;QAClC,MAAM,YAAY,UAAU,CAAC,MAAM;QAEnC,IAAI,UAAU,IAAI,KAAK,4BAA4B;YACjD,2BAA2B;QAC7B,OAAO;YACL,gBAAgB,IAAI,CAAC;QACvB;IACF;IAEA,IAAI,0BAA0B;QAC5B,+BAA+B,GAC/B,MAAM,aAAa;YACjB,MAAM;YACN,IAAI,yBAAyB,KAAK;YAClC;QACF;QACA,CAAA,GAAA,yKAAA,CAAA,SAAM,AAAD,EAAE,0BAA0B;QACjC,aAAa,IAAI,CAAC;IACpB;IAEA,aAAa,IAAI,CAAC;QAChB,MAAM;QACN,IAAI;YACF,MAAM;YACN,YAAY,gBAAgB,GAAG,CAAC,SAAU,SAAS;gBACjD,iCAAiC,GACjC,IAAI,MACF,UAAU,IAAI,KAAK,oBACf,UAAU,QAAQ,GAClB,UAAU,IAAI,KAAK,oBACjB,UAAU,QAAQ,GAClB;oBAAC,MAAM;oBAAc,MAAM;gBAAS;gBAC5C,IAAI,QAAQ,UAAU,KAAK;gBAE3B,yCAAyC;gBACzC,IAAI,UAAU,IAAI,KAAK,mBAAmB;oBACxC,QAAQ;oBACR,MAAM,UAAU,KAAK;gBACvB;gBAEA,oCAAoC;gBACpC,0CAA0C;gBAC1C,CAAA,GAAA,wIAAA,CAAA,KAAM,AAAD,EAAE,MAAM,IAAI,KAAK;gBAEtB,+BAA+B,GAC/B,MAAM,WAAW;oBACf,MAAM;oBACN,MAAM;oBACN,WACE,IAAI,IAAI,KAAK,gBACb,MAAM,IAAI,KAAK,gBACf,IAAI,IAAI,KAAK,MAAM,IAAI;oBACzB,QAAQ;oBACR,UAAU;oBACV;oBACA;gBACF;gBACA,CAAA,GAAA,yKAAA,CAAA,SAAM,AAAD,EAAE,WAAW;gBAClB,OAAO;YACT;QACF;QACA,MAAM,2BACF;YAAC,MAAM;YAAc,MAAM,yBAAyB,KAAK,CAAC,IAAI;QAAA,IAC9D;IACN;IAEA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 17417, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17423, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/%40mdx-js/mdx/lib/util/estree-util-to-id-or-member-expression.js"],"sourcesContent":["/**\n * @import {\n      Identifier,\n      JSXIdentifier,\n      JSXMemberExpression,\n      Literal,\n      MemberExpression\n * } from 'estree-jsx'\n */\n\nimport {ok as assert} from 'devlop'\nimport {name as isIdentifierName} from 'estree-util-is-identifier-name'\n\n/**\n * @param {ReadonlyArray<number | string>} ids\n *   Identifiers (example: `['list', 0]).\n * @returns {Identifier | MemberExpression}\n *   Identifier or member expression.\n */\nexport function toIdOrMemberExpression(ids) {\n  let index = -1\n  /** @type {Identifier | Literal | MemberExpression | undefined} */\n  let object\n\n  while (++index < ids.length) {\n    const name = ids[index]\n    /** @type {Identifier | Literal} */\n    const id =\n      typeof name === 'string' && isIdentifierName(name)\n        ? {type: 'Identifier', name}\n        : {type: 'Literal', value: name}\n    object = object\n      ? {\n          type: 'MemberExpression',\n          object,\n          property: id,\n          computed: id.type === 'Literal',\n          optional: false\n        }\n      : id\n  }\n\n  assert(object, 'expected non-empty `ids` to be passed')\n  assert(object.type !== 'Literal', 'expected identifier as left-most value')\n  return object\n}\n\n/**\n * @param {ReadonlyArray<number | string>} ids\n *   Identifiers (example: `['list', 0]).\n * @returns {JSXIdentifier | JSXMemberExpression}\n *   Identifier or member expression.\n */\nexport function toJsxIdOrMemberExpression(ids) {\n  let index = -1\n  /** @type {JSXIdentifier | JSXMemberExpression | undefined} */\n  let object\n\n  while (++index < ids.length) {\n    const name = ids[index]\n    assert(\n      typeof name === 'string' && isIdentifierName(name, {jsx: true}),\n      'expected valid jsx identifier, not `' + name + '`'\n    )\n\n    /** @type {JSXIdentifier} */\n    const id = {type: 'JSXIdentifier', name}\n    object = object ? {type: 'JSXMemberExpression', object, property: id} : id\n  }\n\n  assert(object, 'expected non-empty `ids` to be passed')\n  return object\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;CAQC;;;;AAGD;AADA;;;AASO,SAAS,uBAAuB,GAAG;IACxC,IAAI,QAAQ,CAAC;IACb,gEAAgE,GAChE,IAAI;IAEJ,MAAO,EAAE,QAAQ,IAAI,MAAM,CAAE;QAC3B,MAAM,OAAO,GAAG,CAAC,MAAM;QACvB,iCAAiC,GACjC,MAAM,KACJ,OAAO,SAAS,YAAY,CAAA,GAAA,sKAAA,CAAA,OAAgB,AAAD,EAAE,QACzC;YAAC,MAAM;YAAc;QAAI,IACzB;YAAC,MAAM;YAAW,OAAO;QAAI;QACnC,SAAS,SACL;YACE,MAAM;YACN;YACA,UAAU;YACV,UAAU,GAAG,IAAI,KAAK;YACtB,UAAU;QACZ,IACA;IACN;IAEA,CAAA,GAAA,wIAAA,CAAA,KAAM,AAAD,EAAE,QAAQ;IACf,CAAA,GAAA,wIAAA,CAAA,KAAM,AAAD,EAAE,OAAO,IAAI,KAAK,WAAW;IAClC,OAAO;AACT;AAQO,SAAS,0BAA0B,GAAG;IAC3C,IAAI,QAAQ,CAAC;IACb,4DAA4D,GAC5D,IAAI;IAEJ,MAAO,EAAE,QAAQ,IAAI,MAAM,CAAE;QAC3B,MAAM,OAAO,GAAG,CAAC,MAAM;QACvB,CAAA,GAAA,wIAAA,CAAA,KAAM,AAAD,EACH,OAAO,SAAS,YAAY,CAAA,GAAA,sKAAA,CAAA,OAAgB,AAAD,EAAE,MAAM;YAAC,KAAK;QAAI,IAC7D,yCAAyC,OAAO;QAGlD,0BAA0B,GAC1B,MAAM,KAAK;YAAC,MAAM;YAAiB;QAAI;QACvC,SAAS,SAAS;YAAC,MAAM;YAAuB;YAAQ,UAAU;QAAE,IAAI;IAC1E;IAEA,CAAA,GAAA,wIAAA,CAAA,KAAM,AAAD,EAAE,QAAQ;IACf,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 17484, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17490, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/%40mdx-js/mdx/lib/plugin/recma-document.js"],"sourcesContent":["/**\n * @import {\n      CallExpression,\n      Directive,\n      ExportAllDeclaration,\n      ExportDefaultDeclaration,\n      ExportNamedDeclaration,\n      ExportSpecifier,\n      Expression,\n      FunctionDeclaration,\n      Identifier,\n      ImportDeclaration,\n      ImportDefaultSpecifier,\n      ImportExpression,\n      ImportSpecifier,\n      JSXElement,\n      JSXFragment,\n      Literal,\n      ModuleDeclaration,\n      Node,\n      Program,\n      Property,\n      SimpleLiteral,\n      SpreadElement,\n      Statement,\n      VariableDeclarator\n * } from 'estree-jsx'\n * @import {VFile} from 'vfile'\n * @import {ProcessorOptions} from '../core.js'\n */\n\nimport {ok as assert} from 'devlop'\nimport {createVisitors} from 'estree-util-scope'\nimport {walk} from 'estree-walker'\nimport {positionFromEstree} from 'unist-util-position-from-estree'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nimport {create} from '../util/estree-util-create.js'\nimport {declarationToExpression} from '../util/estree-util-declaration-to-expression.js'\nimport {isDeclaration} from '../util/estree-util-is-declaration.js'\nimport {specifiersToDeclarations} from '../util/estree-util-specifiers-to-declarations.js'\nimport {toIdOrMemberExpression} from '../util/estree-util-to-id-or-member-expression.js'\n\n/**\n * Wrap the estree in `MDXContent`.\n *\n * @param {Readonly<ProcessorOptions>} options\n *   Configuration.\n * @returns\n *   Transform.\n */\nexport function recmaDocument(options) {\n  const baseUrl = options.baseUrl || undefined\n  const baseHref = typeof baseUrl === 'object' ? baseUrl.href : baseUrl\n  const outputFormat = options.outputFormat || 'program'\n  const pragma =\n    options.pragma === undefined ? 'React.createElement' : options.pragma\n  const pragmaFrag =\n    options.pragmaFrag === undefined ? 'React.Fragment' : options.pragmaFrag\n  const pragmaImportSource = options.pragmaImportSource || 'react'\n  const jsxImportSource = options.jsxImportSource || 'react'\n  const jsxRuntime = options.jsxRuntime || 'automatic'\n\n  /**\n   * @param {Program} tree\n   *   Tree.\n   * @param {VFile} file\n   *   File.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  return function (tree, file) {\n    /** @type {Array<[string, string] | string>} */\n    const exportedValues = []\n    /** @type {Array<Directive | ModuleDeclaration | Statement>} */\n    const replacement = []\n    let exportAllCount = 0\n    /** @type {ExportDefaultDeclaration | ExportSpecifier | undefined} */\n    let layout\n    /** @type {boolean | undefined} */\n    let content\n    /** @type {Node} */\n    let child\n\n    if (jsxRuntime === 'classic' && pragmaFrag) {\n      injectPragma(tree, '@jsxFrag', pragmaFrag)\n    }\n\n    if (jsxRuntime === 'classic' && pragma) {\n      injectPragma(tree, '@jsx', pragma)\n    }\n\n    if (jsxRuntime === 'automatic' && jsxImportSource) {\n      injectPragma(tree, '@jsxImportSource', jsxImportSource)\n    }\n\n    if (jsxRuntime) {\n      injectPragma(tree, '@jsxRuntime', jsxRuntime)\n    }\n\n    if (jsxRuntime === 'classic' && pragmaImportSource) {\n      if (!pragma) {\n        throw new Error(\n          'Missing `pragma` in classic runtime with `pragmaImportSource`'\n        )\n      }\n\n      handleEsm({\n        type: 'ImportDeclaration',\n        specifiers: [\n          {\n            type: 'ImportDefaultSpecifier',\n            local: {type: 'Identifier', name: pragma.split('.')[0]}\n          }\n        ],\n        source: {type: 'Literal', value: pragmaImportSource}\n      })\n    }\n\n    // Find the `export default`, the JSX expression, and leave the rest\n    // (import/exports) as they are.\n    for (child of tree.body) {\n      // ```tsx\n      // export default properties => <>{properties.children}</>\n      // ```\n      //\n      // Treat it as an inline layout declaration.\n      if (child.type === 'ExportDefaultDeclaration') {\n        if (layout) {\n          file.fail(\n            'Unexpected duplicate layout, expected a single layout (previous: ' +\n              stringifyPosition(positionFromEstree(layout)) +\n              ')',\n            {\n              ancestors: [tree, child],\n              place: positionFromEstree(child),\n              ruleId: 'duplicate-layout',\n              source: 'recma-document'\n            }\n          )\n        }\n\n        layout = child\n        replacement.push({\n          type: 'VariableDeclaration',\n          kind: 'const',\n          declarations: [\n            {\n              type: 'VariableDeclarator',\n              id: {type: 'Identifier', name: 'MDXLayout'},\n              init: isDeclaration(child.declaration)\n                ? declarationToExpression(child.declaration)\n                : child.declaration\n            }\n          ]\n        })\n      }\n      // ```tsx\n      // export {a, b as c} from 'd'\n      // ```\n      else if (child.type === 'ExportNamedDeclaration' && child.source) {\n        // Cast because always simple.\n        const source = /** @type {SimpleLiteral} */ (child.source)\n\n        // Remove `default` or `as default`, but not `default as`, specifier.\n        child.specifiers = child.specifiers.filter(function (specifier) {\n          if (\n            specifier.exported.type === 'Identifier' &&\n            specifier.exported.name === 'default'\n          ) {\n            if (layout) {\n              file.fail(\n                'Unexpected duplicate layout, expected a single layout (previous: ' +\n                  stringifyPosition(positionFromEstree(layout)) +\n                  ')',\n                {\n                  ancestors: [tree, child, specifier],\n                  place: positionFromEstree(child),\n                  ruleId: 'duplicate-layout',\n                  source: 'recma-document'\n                }\n              )\n            }\n\n            layout = specifier\n\n            // Make it just an import: `import MDXLayout from '…'`.\n            /** @type {Array<ImportDefaultSpecifier | ImportSpecifier>} */\n            const specifiers = []\n\n            // Default as default / something else as default.\n            if (\n              specifier.local.type === 'Identifier' &&\n              specifier.local.name === 'default'\n            ) {\n              specifiers.push({\n                type: 'ImportDefaultSpecifier',\n                local: {type: 'Identifier', name: 'MDXLayout'}\n              })\n            } else {\n              /** @type {ImportSpecifier} */\n              const importSpecifier = {\n                type: 'ImportSpecifier',\n                imported: specifier.local,\n                local: {type: 'Identifier', name: 'MDXLayout'}\n              }\n              create(specifier.local, importSpecifier)\n              specifiers.push(importSpecifier)\n            }\n\n            /** @type {Literal} */\n            const from = {type: 'Literal', value: source.value}\n            create(source, from)\n\n            /** @type {ImportDeclaration} */\n            const declaration = {\n              type: 'ImportDeclaration',\n              specifiers,\n              source: from\n            }\n            create(specifier, declaration)\n            handleEsm(declaration)\n\n            return false\n          }\n\n          return true\n        })\n\n        // If there are other things imported, keep it.\n        if (child.specifiers.length > 0) {\n          handleExport(child)\n        }\n      }\n      // ```tsx\n      // export {a, b as c}\n      // export * from 'a'\n      // ```\n      else if (\n        child.type === 'ExportNamedDeclaration' ||\n        child.type === 'ExportAllDeclaration'\n      ) {\n        handleExport(child)\n      } else if (child.type === 'ImportDeclaration') {\n        handleEsm(child)\n      } else if (\n        child.type === 'ExpressionStatement' &&\n        (child.expression.type === 'JSXElement' ||\n          child.expression.type === 'JSXFragment')\n      ) {\n        content = true\n        replacement.push(\n          ...createMdxContent(child.expression, outputFormat, Boolean(layout))\n        )\n      } else {\n        // This catch-all branch is because plugins might add other things.\n        // Normally, we only have import/export/jsx, but just add whatever’s\n        // there.\n        replacement.push(child)\n      }\n    }\n\n    // If there was no JSX content at all, add an empty function.\n    if (!content) {\n      replacement.push(\n        ...createMdxContent(undefined, outputFormat, Boolean(layout))\n      )\n    }\n\n    exportedValues.push(['MDXContent', 'default'])\n\n    if (outputFormat === 'function-body') {\n      replacement.push({\n        type: 'ReturnStatement',\n        argument: {\n          type: 'ObjectExpression',\n          properties: [\n            ...Array.from({length: exportAllCount}).map(\n              /**\n               * @param {undefined} _\n               *   Nothing.\n               * @param {number} index\n               *   Index.\n               * @returns {SpreadElement}\n               *   Node.\n               */\n              function (_, index) {\n                return {\n                  type: 'SpreadElement',\n                  argument: {\n                    type: 'Identifier',\n                    name: '_exportAll' + (index + 1)\n                  }\n                }\n              }\n            ),\n            ...exportedValues.map(function (d) {\n              /** @type {Property} */\n              const property = {\n                type: 'Property',\n                kind: 'init',\n                method: false,\n                computed: false,\n                shorthand: typeof d === 'string',\n                key: {\n                  type: 'Identifier',\n                  name: typeof d === 'string' ? d : d[1]\n                },\n                value: {\n                  type: 'Identifier',\n                  name: typeof d === 'string' ? d : d[0]\n                }\n              }\n\n              return property\n            })\n          ]\n        }\n      })\n    }\n\n    tree.body = replacement\n\n    let usesImportMetaUrlVariable = false\n    let usesResolveDynamicHelper = false\n\n    if (baseHref || outputFormat === 'function-body') {\n      walk(tree, {\n        enter(node) {\n          if (\n            (node.type === 'ExportAllDeclaration' ||\n              node.type === 'ExportNamedDeclaration' ||\n              node.type === 'ImportDeclaration') &&\n            node.source\n          ) {\n            // We never hit this branch when generating function bodies, as\n            // statements are already compiled away into import expressions.\n            assert(baseHref, 'unexpected missing `baseHref` in branch')\n\n            let value = node.source.value\n            // The literal source for statements can only be string.\n            assert(typeof value === 'string', 'expected string source')\n\n            // Resolve a specifier.\n            // This is the same as `_resolveDynamicMdxSpecifier`, which has to\n            // be injected to work with expressions at runtime, but as we have\n            // `baseHref` at compile time here and statements are static\n            // strings, we can do it now.\n            try {\n              // To do: next major: use `URL.canParse`.\n              // eslint-disable-next-line no-new\n              new URL(value)\n              // Fine: a full URL.\n            } catch {\n              if (\n                value.startsWith('/') ||\n                value.startsWith('./') ||\n                value.startsWith('../')\n              ) {\n                value = new URL(value, baseHref).href\n              } else {\n                // Fine: are bare specifier.\n              }\n            }\n\n            /** @type {SimpleLiteral} */\n            const replacement = {type: 'Literal', value}\n            create(node.source, replacement)\n            node.source = replacement\n            return\n          }\n\n          if (node.type === 'ImportExpression') {\n            usesResolveDynamicHelper = true\n            /** @type {CallExpression} */\n            const replacement = {\n              type: 'CallExpression',\n              callee: {type: 'Identifier', name: '_resolveDynamicMdxSpecifier'},\n              arguments: [node.source],\n              optional: false\n            }\n            node.source = replacement\n            return\n          }\n\n          // To do: add support for `import.meta.resolve`.\n\n          if (\n            node.type === 'MemberExpression' &&\n            'object' in node &&\n            node.object.type === 'MetaProperty' &&\n            node.property.type === 'Identifier' &&\n            node.object.meta.name === 'import' &&\n            node.object.property.name === 'meta' &&\n            node.property.name === 'url'\n          ) {\n            usesImportMetaUrlVariable = true\n            /** @type {Identifier} */\n            const replacement = {type: 'Identifier', name: '_importMetaUrl'}\n            create(node, replacement)\n            this.replace(replacement)\n          }\n        }\n      })\n    }\n\n    if (usesResolveDynamicHelper) {\n      if (!baseHref) {\n        usesImportMetaUrlVariable = true\n      }\n\n      tree.body.push(\n        resolveDynamicMdxSpecifier(\n          baseHref\n            ? {type: 'Literal', value: baseHref}\n            : {type: 'Identifier', name: '_importMetaUrl'}\n        )\n      )\n    }\n\n    if (usesImportMetaUrlVariable) {\n      assert(\n        outputFormat === 'function-body',\n        'expected `function-body` when using dynamic url injection'\n      )\n      tree.body.unshift(...createImportMetaUrlVariable())\n    }\n\n    /**\n     * @param {ExportAllDeclaration | ExportNamedDeclaration} node\n     *   Export node.\n     * @returns {undefined}\n     *   Nothing.\n     */\n    function handleExport(node) {\n      if (node.type === 'ExportNamedDeclaration') {\n        // ```tsx\n        // export function a() {}\n        // export class A {}\n        // export var a = 1\n        // ```\n        if (node.declaration) {\n          const visitors = createVisitors()\n          // Walk the top-level scope.\n          walk(node, {\n            enter(node) {\n              visitors.enter(node)\n\n              if (\n                node.type === 'ArrowFunctionExpression' ||\n                node.type === 'FunctionDeclaration' ||\n                node.type === 'FunctionExpression'\n              ) {\n                this.skip()\n                visitors.exit(node)\n              }\n            },\n            leave: visitors.exit\n          })\n          exportedValues.push(...visitors.scopes[0].defined)\n        }\n\n        // ```tsx\n        // export {a, b as c}\n        // export {a, b as c} from 'd'\n        // ```\n        for (child of node.specifiers) {\n          if (child.exported.type === 'Identifier') {\n            exportedValues.push(child.exported.name)\n            /* c8 ignore next 5 -- to do: <https://github.com/mdx-js/mdx/issues/2536> */\n          } else {\n            // Must be string.\n            assert(typeof child.exported.value === 'string')\n            exportedValues.push(child.exported.value)\n          }\n        }\n      }\n\n      handleEsm(node)\n    }\n\n    /**\n     * @param {ExportAllDeclaration | ExportNamedDeclaration | ImportDeclaration} node\n     *   Export or import node.\n     * @returns {undefined}\n     *   Nothing.\n     */\n    function handleEsm(node) {\n      /** @type {ModuleDeclaration | Statement | undefined} */\n      let replace\n      /** @type {Expression} */\n      let init\n\n      if (outputFormat === 'function-body') {\n        if (\n          // Always have a source:\n          node.type === 'ImportDeclaration' ||\n          node.type === 'ExportAllDeclaration' ||\n          // Source optional:\n          (node.type === 'ExportNamedDeclaration' && node.source)\n        ) {\n          // We always have a source, but types say they can be missing.\n          assert(node.source, 'expected `node.source` to be defined')\n\n          // ```\n          // import 'a'\n          // //=> await import('a')\n          // import a from 'b'\n          // //=> const {default: a} = await import('b')\n          // export {a, b as c} from 'd'\n          // //=> const {a, c: b} = await import('d')\n          // export * from 'a'\n          // //=> const _exportAll0 = await import('a')\n          // ```\n          /** @type {ImportExpression} */\n          const argument = {type: 'ImportExpression', source: node.source}\n          create(node, argument)\n          init = {type: 'AwaitExpression', argument}\n\n          if (\n            (node.type === 'ImportDeclaration' ||\n              node.type === 'ExportNamedDeclaration') &&\n            node.specifiers.length === 0\n          ) {\n            replace = {type: 'ExpressionStatement', expression: init}\n          } else {\n            replace = {\n              type: 'VariableDeclaration',\n              kind: 'const',\n              declarations:\n                node.type === 'ExportAllDeclaration'\n                  ? [\n                      {\n                        type: 'VariableDeclarator',\n                        id: {\n                          type: 'Identifier',\n                          name: '_exportAll' + ++exportAllCount\n                        },\n                        init\n                      }\n                    ]\n                  : specifiersToDeclarations(node.specifiers, init)\n            }\n          }\n        } else if (node.declaration) {\n          replace = node.declaration\n        } else {\n          /** @type {Array<VariableDeclarator>} */\n          const declarators = []\n\n          for (const specifier of node.specifiers) {\n            // `id` can only be an identifier,\n            // so we ignore literal.\n            if (\n              specifier.exported.type === 'Identifier' &&\n              specifier.local.type === 'Identifier' &&\n              specifier.local.name !== specifier.exported.name\n            ) {\n              declarators.push({\n                type: 'VariableDeclarator',\n                id: specifier.exported,\n                init: specifier.local\n              })\n            }\n          }\n\n          if (declarators.length > 0) {\n            replace = {\n              type: 'VariableDeclaration',\n              kind: 'const',\n              declarations: declarators\n            }\n          }\n        }\n      } else {\n        replace = node\n      }\n\n      if (replace) {\n        replacement.push(replace)\n      }\n    }\n  }\n\n  /**\n   * @param {Readonly<Expression> | undefined} content\n   *   Content.\n   * @param {'function-body' | 'program'} outputFormat\n   *   Output format.\n   * @param {boolean | undefined} [hasInternalLayout=false]\n   *   Whether there’s an internal layout (default: `false`).\n   * @returns {Array<ExportDefaultDeclaration | FunctionDeclaration>}\n   *   Functions.\n   */\n  function createMdxContent(content, outputFormat, hasInternalLayout) {\n    /** @type {JSXElement} */\n    const element = {\n      type: 'JSXElement',\n      openingElement: {\n        type: 'JSXOpeningElement',\n        name: {type: 'JSXIdentifier', name: 'MDXLayout'},\n        attributes: [\n          {\n            type: 'JSXSpreadAttribute',\n            argument: {type: 'Identifier', name: 'props'}\n          }\n        ],\n        selfClosing: false\n      },\n      closingElement: {\n        type: 'JSXClosingElement',\n        name: {type: 'JSXIdentifier', name: 'MDXLayout'}\n      },\n      children: [\n        {\n          type: 'JSXElement',\n          openingElement: {\n            type: 'JSXOpeningElement',\n            name: {type: 'JSXIdentifier', name: '_createMdxContent'},\n            attributes: [\n              {\n                type: 'JSXSpreadAttribute',\n                argument: {type: 'Identifier', name: 'props'}\n              }\n            ],\n            selfClosing: true\n          },\n          closingElement: null,\n          children: []\n        }\n      ]\n    }\n\n    let result = /** @type {Expression} */ (element)\n\n    if (!hasInternalLayout) {\n      result = {\n        type: 'ConditionalExpression',\n        test: {type: 'Identifier', name: 'MDXLayout'},\n        consequent: result,\n        alternate: {\n          type: 'CallExpression',\n          callee: {type: 'Identifier', name: '_createMdxContent'},\n          arguments: [{type: 'Identifier', name: 'props'}],\n          optional: false\n        }\n      }\n    }\n\n    let argument =\n      // Cast because TS otherwise does not think `JSXFragment`s are expressions.\n      /** @type {Readonly<Expression> | Readonly<JSXFragment>} */ (\n        content || {type: 'Identifier', name: 'undefined'}\n      )\n\n    // Unwrap a fragment of a single element.\n    if (\n      argument.type === 'JSXFragment' &&\n      argument.children.length === 1 &&\n      argument.children[0].type === 'JSXElement'\n    ) {\n      argument = argument.children[0]\n    }\n\n    let awaitExpression = false\n\n    walk(argument, {\n      enter(node) {\n        if (\n          node.type === 'ArrowFunctionExpression' ||\n          node.type === 'FunctionDeclaration' ||\n          node.type === 'FunctionExpression'\n        ) {\n          return this.skip()\n        }\n\n        if (\n          node.type === 'AwaitExpression' ||\n          /* c8 ignore next 2 -- can only occur in a function (which then can\n           * only be async, so skipped it) */\n          (node.type === 'ForOfStatement' && node.await)\n        ) {\n          awaitExpression = true\n        }\n      }\n    })\n\n    /** @type {FunctionDeclaration} */\n    const declaration = {\n      type: 'FunctionDeclaration',\n      id: {type: 'Identifier', name: 'MDXContent'},\n      params: [\n        {\n          type: 'AssignmentPattern',\n          left: {type: 'Identifier', name: 'props'},\n          right: {type: 'ObjectExpression', properties: []}\n        }\n      ],\n      body: {\n        type: 'BlockStatement',\n        body: [{type: 'ReturnStatement', argument: result}]\n      }\n    }\n\n    return [\n      {\n        type: 'FunctionDeclaration',\n        async: awaitExpression,\n        id: {type: 'Identifier', name: '_createMdxContent'},\n        params: [{type: 'Identifier', name: 'props'}],\n        body: {\n          type: 'BlockStatement',\n          body: [\n            {\n              type: 'ReturnStatement',\n              // Cast because TS doesn’t think `JSXFragment` is an expression.\n              // eslint-disable-next-line object-shorthand\n              argument: /** @type {Expression} */ (argument)\n            }\n          ]\n        }\n      },\n      outputFormat === 'program'\n        ? {type: 'ExportDefaultDeclaration', declaration}\n        : declaration\n    ]\n  }\n}\n\n/**\n * @param {Program} tree\n * @param {string} name\n * @param {string} value\n * @returns {undefined}\n */\nfunction injectPragma(tree, name, value) {\n  tree.comments?.unshift({\n    type: 'Block',\n    value: name + ' ' + value,\n    data: {_mdxIsPragmaComment: true}\n  })\n}\n\n/**\n * @param {Expression} importMetaUrl\n * @returns {FunctionDeclaration}\n */\nfunction resolveDynamicMdxSpecifier(importMetaUrl) {\n  return {\n    type: 'FunctionDeclaration',\n    id: {type: 'Identifier', name: '_resolveDynamicMdxSpecifier'},\n    generator: false,\n    async: false,\n    params: [{type: 'Identifier', name: 'd'}],\n    body: {\n      type: 'BlockStatement',\n      body: [\n        {\n          type: 'IfStatement',\n          test: {\n            type: 'BinaryExpression',\n            left: {\n              type: 'UnaryExpression',\n              operator: 'typeof',\n              prefix: true,\n              argument: {type: 'Identifier', name: 'd'}\n            },\n            operator: '!==',\n            right: {type: 'Literal', value: 'string'}\n          },\n          consequent: {\n            type: 'ReturnStatement',\n            argument: {type: 'Identifier', name: 'd'}\n          },\n          alternate: null\n        },\n        // To do: use `URL.canParse` when widely supported (see commented\n        // out code below).\n        {\n          type: 'TryStatement',\n          block: {\n            type: 'BlockStatement',\n            body: [\n              {\n                type: 'ExpressionStatement',\n                expression: {\n                  type: 'NewExpression',\n                  callee: {type: 'Identifier', name: 'URL'},\n                  arguments: [{type: 'Identifier', name: 'd'}]\n                }\n              },\n              {\n                type: 'ReturnStatement',\n                argument: {type: 'Identifier', name: 'd'}\n              }\n            ]\n          },\n          handler: {\n            type: 'CatchClause',\n            param: null,\n            body: {type: 'BlockStatement', body: []}\n          },\n          finalizer: null\n        },\n        // To do: use `URL.canParse` when widely supported.\n        // {\n        //   type: 'IfStatement',\n        //   test: {\n        //     type: 'CallExpression',\n        //     callee: toIdOrMemberExpression(['URL', 'canParse']),\n        //     arguments: [{type: 'Identifier', name: 'd'}],\n        //     optional: false\n        //   },\n        //   consequent: {\n        //     type: 'ReturnStatement',\n        //     argument: {type: 'Identifier', name: 'd'}\n        //   },\n        //   alternate: null\n        // },\n        {\n          type: 'IfStatement',\n          test: {\n            type: 'LogicalExpression',\n            left: {\n              type: 'LogicalExpression',\n              left: {\n                type: 'CallExpression',\n                callee: toIdOrMemberExpression(['d', 'startsWith']),\n                arguments: [{type: 'Literal', value: '/'}],\n                optional: false\n              },\n              operator: '||',\n              right: {\n                type: 'CallExpression',\n                callee: toIdOrMemberExpression(['d', 'startsWith']),\n                arguments: [{type: 'Literal', value: './'}],\n                optional: false\n              }\n            },\n            operator: '||',\n            right: {\n              type: 'CallExpression',\n              callee: toIdOrMemberExpression(['d', 'startsWith']),\n              arguments: [{type: 'Literal', value: '../'}],\n              optional: false\n            }\n          },\n          consequent: {\n            type: 'ReturnStatement',\n            argument: {\n              type: 'MemberExpression',\n              object: {\n                type: 'NewExpression',\n                callee: {type: 'Identifier', name: 'URL'},\n                arguments: [{type: 'Identifier', name: 'd'}, importMetaUrl]\n              },\n              property: {type: 'Identifier', name: 'href'},\n              computed: false,\n              optional: false\n            }\n          },\n          alternate: null\n        },\n        {\n          type: 'ReturnStatement',\n          argument: {type: 'Identifier', name: 'd'}\n        }\n      ]\n    }\n  }\n}\n\n/**\n * @returns {Array<Statement>}\n */\nfunction createImportMetaUrlVariable() {\n  return [\n    {\n      type: 'VariableDeclaration',\n      declarations: [\n        {\n          type: 'VariableDeclarator',\n          id: {type: 'Identifier', name: '_importMetaUrl'},\n          init: toIdOrMemberExpression(['arguments', 0, 'baseUrl'])\n        }\n      ],\n      kind: 'const'\n    },\n    {\n      type: 'IfStatement',\n      test: {\n        type: 'UnaryExpression',\n        operator: '!',\n        prefix: true,\n        argument: {type: 'Identifier', name: '_importMetaUrl'}\n      },\n      consequent: {\n        type: 'ThrowStatement',\n        argument: {\n          type: 'NewExpression',\n          callee: {type: 'Identifier', name: 'Error'},\n          arguments: [\n            {\n              type: 'Literal',\n              value:\n                'Unexpected missing `options.baseUrl` needed to support `export … from`, `import`, or `import.meta.url` when generating `function-body`'\n            }\n          ]\n        }\n      },\n      alternate: null\n    }\n  ]\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA6BC;;;AAID;AAEA;AADA;AAEA;AAEA;AADA;AANA;AACA;AAOA;AACA;;;;;;;;;;;AAUO,SAAS,cAAc,OAAO;IACnC,MAAM,UAAU,QAAQ,OAAO,IAAI;IACnC,MAAM,WAAW,OAAO,YAAY,WAAW,QAAQ,IAAI,GAAG;IAC9D,MAAM,eAAe,QAAQ,YAAY,IAAI;IAC7C,MAAM,SACJ,QAAQ,MAAM,KAAK,YAAY,wBAAwB,QAAQ,MAAM;IACvE,MAAM,aACJ,QAAQ,UAAU,KAAK,YAAY,mBAAmB,QAAQ,UAAU;IAC1E,MAAM,qBAAqB,QAAQ,kBAAkB,IAAI;IACzD,MAAM,kBAAkB,QAAQ,eAAe,IAAI;IACnD,MAAM,aAAa,QAAQ,UAAU,IAAI;IAEzC;;;;;;;GAOC,GACD,OAAO,SAAU,IAAI,EAAE,IAAI;QACzB,6CAA6C,GAC7C,MAAM,iBAAiB,EAAE;QACzB,6DAA6D,GAC7D,MAAM,cAAc,EAAE;QACtB,IAAI,iBAAiB;QACrB,mEAAmE,GACnE,IAAI;QACJ,gCAAgC,GAChC,IAAI;QACJ,iBAAiB,GACjB,IAAI;QAEJ,IAAI,eAAe,aAAa,YAAY;YAC1C,aAAa,MAAM,YAAY;QACjC;QAEA,IAAI,eAAe,aAAa,QAAQ;YACtC,aAAa,MAAM,QAAQ;QAC7B;QAEA,IAAI,eAAe,eAAe,iBAAiB;YACjD,aAAa,MAAM,oBAAoB;QACzC;QAEA,wCAAgB;YACd,aAAa,MAAM,eAAe;QACpC;QAEA,IAAI,eAAe,aAAa,oBAAoB;YAClD,IAAI,CAAC,QAAQ;gBACX,MAAM,IAAI,MACR;YAEJ;YAEA,UAAU;gBACR,MAAM;gBACN,YAAY;oBACV;wBACE,MAAM;wBACN,OAAO;4BAAC,MAAM;4BAAc,MAAM,OAAO,KAAK,CAAC,IAAI,CAAC,EAAE;wBAAA;oBACxD;iBACD;gBACD,QAAQ;oBAAC,MAAM;oBAAW,OAAO;gBAAkB;YACrD;QACF;QAEA,oEAAoE;QACpE,gCAAgC;QAChC,KAAK,SAAS,KAAK,IAAI,CAAE;YACvB,SAAS;YACT,0DAA0D;YAC1D,MAAM;YACN,EAAE;YACF,4CAA4C;YAC5C,IAAI,MAAM,IAAI,KAAK,4BAA4B;gBAC7C,IAAI,QAAQ;oBACV,KAAK,IAAI,CACP,sEACE,CAAA,GAAA,kKAAA,CAAA,oBAAiB,AAAD,EAAE,CAAA,GAAA,uKAAA,CAAA,qBAAkB,AAAD,EAAE,WACrC,KACF;wBACE,WAAW;4BAAC;4BAAM;yBAAM;wBACxB,OAAO,CAAA,GAAA,uKAAA,CAAA,qBAAkB,AAAD,EAAE;wBAC1B,QAAQ;wBACR,QAAQ;oBACV;gBAEJ;gBAEA,SAAS;gBACT,YAAY,IAAI,CAAC;oBACf,MAAM;oBACN,MAAM;oBACN,cAAc;wBACZ;4BACE,MAAM;4BACN,IAAI;gCAAC,MAAM;gCAAc,MAAM;4BAAW;4BAC1C,MAAM,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE,MAAM,WAAW,IACjC,CAAA,GAAA,kMAAA,CAAA,0BAAuB,AAAD,EAAE,MAAM,WAAW,IACzC,MAAM,WAAW;wBACvB;qBACD;gBACH;YACF,OAIK,IAAI,MAAM,IAAI,KAAK,4BAA4B,MAAM,MAAM,EAAE;gBAChE,8BAA8B;gBAC9B,MAAM,SAAuC,MAAM,MAAM;gBAEzD,qEAAqE;gBACrE,MAAM,UAAU,GAAG,MAAM,UAAU,CAAC,MAAM,CAAC,SAAU,SAAS;oBAC5D,IACE,UAAU,QAAQ,CAAC,IAAI,KAAK,gBAC5B,UAAU,QAAQ,CAAC,IAAI,KAAK,WAC5B;wBACA,IAAI,QAAQ;4BACV,KAAK,IAAI,CACP,sEACE,CAAA,GAAA,kKAAA,CAAA,oBAAiB,AAAD,EAAE,CAAA,GAAA,uKAAA,CAAA,qBAAkB,AAAD,EAAE,WACrC,KACF;gCACE,WAAW;oCAAC;oCAAM;oCAAO;iCAAU;gCACnC,OAAO,CAAA,GAAA,uKAAA,CAAA,qBAAkB,AAAD,EAAE;gCAC1B,QAAQ;gCACR,QAAQ;4BACV;wBAEJ;wBAEA,SAAS;wBAET,uDAAuD;wBACvD,4DAA4D,GAC5D,MAAM,aAAa,EAAE;wBAErB,kDAAkD;wBAClD,IACE,UAAU,KAAK,CAAC,IAAI,KAAK,gBACzB,UAAU,KAAK,CAAC,IAAI,KAAK,WACzB;4BACA,WAAW,IAAI,CAAC;gCACd,MAAM;gCACN,OAAO;oCAAC,MAAM;oCAAc,MAAM;gCAAW;4BAC/C;wBACF,OAAO;4BACL,4BAA4B,GAC5B,MAAM,kBAAkB;gCACtB,MAAM;gCACN,UAAU,UAAU,KAAK;gCACzB,OAAO;oCAAC,MAAM;oCAAc,MAAM;gCAAW;4BAC/C;4BACA,CAAA,GAAA,yKAAA,CAAA,SAAM,AAAD,EAAE,UAAU,KAAK,EAAE;4BACxB,WAAW,IAAI,CAAC;wBAClB;wBAEA,oBAAoB,GACpB,MAAM,OAAO;4BAAC,MAAM;4BAAW,OAAO,OAAO,KAAK;wBAAA;wBAClD,CAAA,GAAA,yKAAA,CAAA,SAAM,AAAD,EAAE,QAAQ;wBAEf,8BAA8B,GAC9B,MAAM,cAAc;4BAClB,MAAM;4BACN;4BACA,QAAQ;wBACV;wBACA,CAAA,GAAA,yKAAA,CAAA,SAAM,AAAD,EAAE,WAAW;wBAClB,UAAU;wBAEV,OAAO;oBACT;oBAEA,OAAO;gBACT;gBAEA,+CAA+C;gBAC/C,IAAI,MAAM,UAAU,CAAC,MAAM,GAAG,GAAG;oBAC/B,aAAa;gBACf;YACF,OAKK,IACH,MAAM,IAAI,KAAK,4BACf,MAAM,IAAI,KAAK,wBACf;gBACA,aAAa;YACf,OAAO,IAAI,MAAM,IAAI,KAAK,qBAAqB;gBAC7C,UAAU;YACZ,OAAO,IACL,MAAM,IAAI,KAAK,yBACf,CAAC,MAAM,UAAU,CAAC,IAAI,KAAK,gBACzB,MAAM,UAAU,CAAC,IAAI,KAAK,aAAa,GACzC;gBACA,UAAU;gBACV,YAAY,IAAI,IACX,iBAAiB,MAAM,UAAU,EAAE,cAAc,QAAQ;YAEhE,OAAO;gBACL,mEAAmE;gBACnE,oEAAoE;gBACpE,SAAS;gBACT,YAAY,IAAI,CAAC;YACnB;QACF;QAEA,6DAA6D;QAC7D,IAAI,CAAC,SAAS;YACZ,YAAY,IAAI,IACX,iBAAiB,WAAW,cAAc,QAAQ;QAEzD;QAEA,eAAe,IAAI,CAAC;YAAC;YAAc;SAAU;QAE7C,IAAI,iBAAiB,iBAAiB;YACpC,YAAY,IAAI,CAAC;gBACf,MAAM;gBACN,UAAU;oBACR,MAAM;oBACN,YAAY;2BACP,MAAM,IAAI,CAAC;4BAAC,QAAQ;wBAAc,GAAG,GAAG,CACzC;;;;;;;eAOC,GACD,SAAU,CAAC,EAAE,KAAK;4BAChB,OAAO;gCACL,MAAM;gCACN,UAAU;oCACR,MAAM;oCACN,MAAM,eAAe,CAAC,QAAQ,CAAC;gCACjC;4BACF;wBACF;2BAEC,eAAe,GAAG,CAAC,SAAU,CAAC;4BAC/B,qBAAqB,GACrB,MAAM,WAAW;gCACf,MAAM;gCACN,MAAM;gCACN,QAAQ;gCACR,UAAU;gCACV,WAAW,OAAO,MAAM;gCACxB,KAAK;oCACH,MAAM;oCACN,MAAM,OAAO,MAAM,WAAW,IAAI,CAAC,CAAC,EAAE;gCACxC;gCACA,OAAO;oCACL,MAAM;oCACN,MAAM,OAAO,MAAM,WAAW,IAAI,CAAC,CAAC,EAAE;gCACxC;4BACF;4BAEA,OAAO;wBACT;qBACD;gBACH;YACF;QACF;QAEA,KAAK,IAAI,GAAG;QAEZ,IAAI,4BAA4B;QAChC,IAAI,2BAA2B;QAE/B,IAAI,YAAY,iBAAiB,iBAAiB;YAChD,CAAA,GAAA,4IAAA,CAAA,OAAI,AAAD,EAAE,MAAM;gBACT,OAAM,IAAI;oBACR,IACE,CAAC,KAAK,IAAI,KAAK,0BACb,KAAK,IAAI,KAAK,4BACd,KAAK,IAAI,KAAK,mBAAmB,KACnC,KAAK,MAAM,EACX;wBACA,+DAA+D;wBAC/D,gEAAgE;wBAChE,CAAA,GAAA,wIAAA,CAAA,KAAM,AAAD,EAAE,UAAU;wBAEjB,IAAI,QAAQ,KAAK,MAAM,CAAC,KAAK;wBAC7B,wDAAwD;wBACxD,CAAA,GAAA,wIAAA,CAAA,KAAM,AAAD,EAAE,OAAO,UAAU,UAAU;wBAElC,uBAAuB;wBACvB,kEAAkE;wBAClE,kEAAkE;wBAClE,4DAA4D;wBAC5D,6BAA6B;wBAC7B,IAAI;4BACF,yCAAyC;4BACzC,kCAAkC;4BAClC,IAAI,IAAI;wBACR,oBAAoB;wBACtB,EAAE,OAAM;4BACN,IACE,MAAM,UAAU,CAAC,QACjB,MAAM,UAAU,CAAC,SACjB,MAAM,UAAU,CAAC,QACjB;gCACA,QAAQ,IAAI,IAAI,OAAO,UAAU,IAAI;4BACvC,OAAO;4BACL,4BAA4B;4BAC9B;wBACF;wBAEA,0BAA0B,GAC1B,MAAM,cAAc;4BAAC,MAAM;4BAAW;wBAAK;wBAC3C,CAAA,GAAA,yKAAA,CAAA,SAAM,AAAD,EAAE,KAAK,MAAM,EAAE;wBACpB,KAAK,MAAM,GAAG;wBACd;oBACF;oBAEA,IAAI,KAAK,IAAI,KAAK,oBAAoB;wBACpC,2BAA2B;wBAC3B,2BAA2B,GAC3B,MAAM,cAAc;4BAClB,MAAM;4BACN,QAAQ;gCAAC,MAAM;gCAAc,MAAM;4BAA6B;4BAChE,WAAW;gCAAC,KAAK,MAAM;6BAAC;4BACxB,UAAU;wBACZ;wBACA,KAAK,MAAM,GAAG;wBACd;oBACF;oBAEA,gDAAgD;oBAEhD,IACE,KAAK,IAAI,KAAK,sBACd,YAAY,QACZ,KAAK,MAAM,CAAC,IAAI,KAAK,kBACrB,KAAK,QAAQ,CAAC,IAAI,KAAK,gBACvB,KAAK,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,YAC1B,KAAK,MAAM,CAAC,QAAQ,CAAC,IAAI,KAAK,UAC9B,KAAK,QAAQ,CAAC,IAAI,KAAK,OACvB;wBACA,4BAA4B;wBAC5B,uBAAuB,GACvB,MAAM,cAAc;4BAAC,MAAM;4BAAc,MAAM;wBAAgB;wBAC/D,CAAA,GAAA,yKAAA,CAAA,SAAM,AAAD,EAAE,MAAM;wBACb,IAAI,CAAC,OAAO,CAAC;oBACf;gBACF;YACF;QACF;QAEA,IAAI,0BAA0B;YAC5B,IAAI,CAAC,UAAU;gBACb,4BAA4B;YAC9B;YAEA,KAAK,IAAI,CAAC,IAAI,CACZ,2BACE,WACI;gBAAC,MAAM;gBAAW,OAAO;YAAQ,IACjC;gBAAC,MAAM;gBAAc,MAAM;YAAgB;QAGrD;QAEA,IAAI,2BAA2B;YAC7B,CAAA,GAAA,wIAAA,CAAA,KAAM,AAAD,EACH,iBAAiB,iBACjB;YAEF,KAAK,IAAI,CAAC,OAAO,IAAI;QACvB;QAEA;;;;;KAKC,GACD,SAAS,aAAa,IAAI;YACxB,IAAI,KAAK,IAAI,KAAK,0BAA0B;gBAC1C,SAAS;gBACT,yBAAyB;gBACzB,oBAAoB;gBACpB,mBAAmB;gBACnB,MAAM;gBACN,IAAI,KAAK,WAAW,EAAE;oBACpB,MAAM,WAAW,CAAA,GAAA,mJAAA,CAAA,iBAAc,AAAD;oBAC9B,4BAA4B;oBAC5B,CAAA,GAAA,4IAAA,CAAA,OAAI,AAAD,EAAE,MAAM;wBACT,OAAM,IAAI;4BACR,SAAS,KAAK,CAAC;4BAEf,IACE,KAAK,IAAI,KAAK,6BACd,KAAK,IAAI,KAAK,yBACd,KAAK,IAAI,KAAK,sBACd;gCACA,IAAI,CAAC,IAAI;gCACT,SAAS,IAAI,CAAC;4BAChB;wBACF;wBACA,OAAO,SAAS,IAAI;oBACtB;oBACA,eAAe,IAAI,IAAI,SAAS,MAAM,CAAC,EAAE,CAAC,OAAO;gBACnD;gBAEA,SAAS;gBACT,qBAAqB;gBACrB,8BAA8B;gBAC9B,MAAM;gBACN,KAAK,SAAS,KAAK,UAAU,CAAE;oBAC7B,IAAI,MAAM,QAAQ,CAAC,IAAI,KAAK,cAAc;wBACxC,eAAe,IAAI,CAAC,MAAM,QAAQ,CAAC,IAAI;oBACvC,0EAA0E,GAC5E,OAAO;wBACL,kBAAkB;wBAClB,CAAA,GAAA,wIAAA,CAAA,KAAM,AAAD,EAAE,OAAO,MAAM,QAAQ,CAAC,KAAK,KAAK;wBACvC,eAAe,IAAI,CAAC,MAAM,QAAQ,CAAC,KAAK;oBAC1C;gBACF;YACF;YAEA,UAAU;QACZ;QAEA;;;;;KAKC,GACD,SAAS,UAAU,IAAI;YACrB,sDAAsD,GACtD,IAAI;YACJ,uBAAuB,GACvB,IAAI;YAEJ,IAAI,iBAAiB,iBAAiB;gBACpC,IACE,wBAAwB;gBACxB,KAAK,IAAI,KAAK,uBACd,KAAK,IAAI,KAAK,0BAEb,KAAK,IAAI,KAAK,4BAA4B,KAAK,MAAM,EACtD;oBACA,8DAA8D;oBAC9D,CAAA,GAAA,wIAAA,CAAA,KAAM,AAAD,EAAE,KAAK,MAAM,EAAE;oBAEpB,MAAM;oBACN,aAAa;oBACb,yBAAyB;oBACzB,oBAAoB;oBACpB,8CAA8C;oBAC9C,8BAA8B;oBAC9B,2CAA2C;oBAC3C,oBAAoB;oBACpB,6CAA6C;oBAC7C,MAAM;oBACN,6BAA6B,GAC7B,MAAM,WAAW;wBAAC,MAAM;wBAAoB,QAAQ,KAAK,MAAM;oBAAA;oBAC/D,CAAA,GAAA,yKAAA,CAAA,SAAM,AAAD,EAAE,MAAM;oBACb,OAAO;wBAAC,MAAM;wBAAmB;oBAAQ;oBAEzC,IACE,CAAC,KAAK,IAAI,KAAK,uBACb,KAAK,IAAI,KAAK,wBAAwB,KACxC,KAAK,UAAU,CAAC,MAAM,KAAK,GAC3B;wBACA,UAAU;4BAAC,MAAM;4BAAuB,YAAY;wBAAI;oBAC1D,OAAO;wBACL,UAAU;4BACR,MAAM;4BACN,MAAM;4BACN,cACE,KAAK,IAAI,KAAK,yBACV;gCACE;oCACE,MAAM;oCACN,IAAI;wCACF,MAAM;wCACN,MAAM,eAAe,EAAE;oCACzB;oCACA;gCACF;6BACD,GACD,CAAA,GAAA,mMAAA,CAAA,2BAAwB,AAAD,EAAE,KAAK,UAAU,EAAE;wBAClD;oBACF;gBACF,OAAO,IAAI,KAAK,WAAW,EAAE;oBAC3B,UAAU,KAAK,WAAW;gBAC5B,OAAO;oBACL,sCAAsC,GACtC,MAAM,cAAc,EAAE;oBAEtB,KAAK,MAAM,aAAa,KAAK,UAAU,CAAE;wBACvC,kCAAkC;wBAClC,wBAAwB;wBACxB,IACE,UAAU,QAAQ,CAAC,IAAI,KAAK,gBAC5B,UAAU,KAAK,CAAC,IAAI,KAAK,gBACzB,UAAU,KAAK,CAAC,IAAI,KAAK,UAAU,QAAQ,CAAC,IAAI,EAChD;4BACA,YAAY,IAAI,CAAC;gCACf,MAAM;gCACN,IAAI,UAAU,QAAQ;gCACtB,MAAM,UAAU,KAAK;4BACvB;wBACF;oBACF;oBAEA,IAAI,YAAY,MAAM,GAAG,GAAG;wBAC1B,UAAU;4BACR,MAAM;4BACN,MAAM;4BACN,cAAc;wBAChB;oBACF;gBACF;YACF,OAAO;gBACL,UAAU;YACZ;YAEA,IAAI,SAAS;gBACX,YAAY,IAAI,CAAC;YACnB;QACF;IACF;;IAEA;;;;;;;;;GASC,GACD,SAAS,iBAAiB,OAAO,EAAE,YAAY,EAAE,iBAAiB;QAChE,uBAAuB,GACvB,MAAM,UAAU;YACd,MAAM;YACN,gBAAgB;gBACd,MAAM;gBACN,MAAM;oBAAC,MAAM;oBAAiB,MAAM;gBAAW;gBAC/C,YAAY;oBACV;wBACE,MAAM;wBACN,UAAU;4BAAC,MAAM;4BAAc,MAAM;wBAAO;oBAC9C;iBACD;gBACD,aAAa;YACf;YACA,gBAAgB;gBACd,MAAM;gBACN,MAAM;oBAAC,MAAM;oBAAiB,MAAM;gBAAW;YACjD;YACA,UAAU;gBACR;oBACE,MAAM;oBACN,gBAAgB;wBACd,MAAM;wBACN,MAAM;4BAAC,MAAM;4BAAiB,MAAM;wBAAmB;wBACvD,YAAY;4BACV;gCACE,MAAM;gCACN,UAAU;oCAAC,MAAM;oCAAc,MAAM;gCAAO;4BAC9C;yBACD;wBACD,aAAa;oBACf;oBACA,gBAAgB;oBAChB,UAAU,EAAE;gBACd;aACD;QACH;QAEA,IAAI,SAAoC;QAExC,IAAI,CAAC,mBAAmB;YACtB,SAAS;gBACP,MAAM;gBACN,MAAM;oBAAC,MAAM;oBAAc,MAAM;gBAAW;gBAC5C,YAAY;gBACZ,WAAW;oBACT,MAAM;oBACN,QAAQ;wBAAC,MAAM;wBAAc,MAAM;oBAAmB;oBACtD,WAAW;wBAAC;4BAAC,MAAM;4BAAc,MAAM;wBAAO;qBAAE;oBAChD,UAAU;gBACZ;YACF;QACF;QAEA,IAAI,WAGA,WAAW;YAAC,MAAM;YAAc,MAAM;QAAW;QAGrD,yCAAyC;QACzC,IACE,SAAS,IAAI,KAAK,iBAClB,SAAS,QAAQ,CAAC,MAAM,KAAK,KAC7B,SAAS,QAAQ,CAAC,EAAE,CAAC,IAAI,KAAK,cAC9B;YACA,WAAW,SAAS,QAAQ,CAAC,EAAE;QACjC;QAEA,IAAI,kBAAkB;QAEtB,CAAA,GAAA,4IAAA,CAAA,OAAI,AAAD,EAAE,UAAU;YACb,OAAM,IAAI;gBACR,IACE,KAAK,IAAI,KAAK,6BACd,KAAK,IAAI,KAAK,yBACd,KAAK,IAAI,KAAK,sBACd;oBACA,OAAO,IAAI,CAAC,IAAI;gBAClB;gBAEA,IACE,KAAK,IAAI,KAAK,qBAGb,KAAK,IAAI,KAAK,oBAAoB,KAAK,KAAK,EAC7C;oBACA,kBAAkB;gBACpB;YACF;QACF;QAEA,gCAAgC,GAChC,MAAM,cAAc;YAClB,MAAM;YACN,IAAI;gBAAC,MAAM;gBAAc,MAAM;YAAY;YAC3C,QAAQ;gBACN;oBACE,MAAM;oBACN,MAAM;wBAAC,MAAM;wBAAc,MAAM;oBAAO;oBACxC,OAAO;wBAAC,MAAM;wBAAoB,YAAY,EAAE;oBAAA;gBAClD;aACD;YACD,MAAM;gBACJ,MAAM;gBACN,MAAM;oBAAC;wBAAC,MAAM;wBAAmB,UAAU;oBAAM;iBAAE;YACrD;QACF;QAEA,OAAO;YACL;gBACE,MAAM;gBACN,OAAO;gBACP,IAAI;oBAAC,MAAM;oBAAc,MAAM;gBAAmB;gBAClD,QAAQ;oBAAC;wBAAC,MAAM;wBAAc,MAAM;oBAAO;iBAAE;gBAC7C,MAAM;oBACJ,MAAM;oBACN,MAAM;wBACJ;4BACE,MAAM;4BACN,gEAAgE;4BAChE,4CAA4C;4BAC5C,UAAqC;wBACvC;qBACD;gBACH;YACF;YACA,iBAAiB,YACb;gBAAC,MAAM;gBAA4B;YAAW,IAC9C;SACL;IACH;AACF;AAEA;;;;;CAKC,GACD,SAAS,aAAa,IAAI,EAAE,IAAI,EAAE,KAAK;IACrC,KAAK,QAAQ,EAAE,QAAQ;QACrB,MAAM;QACN,OAAO,OAAO,MAAM;QACpB,MAAM;YAAC,qBAAqB;QAAI;IAClC;AACF;AAEA;;;CAGC,GACD,SAAS,2BAA2B,aAAa;IAC/C,OAAO;QACL,MAAM;QACN,IAAI;YAAC,MAAM;YAAc,MAAM;QAA6B;QAC5D,WAAW;QACX,OAAO;QACP,QAAQ;YAAC;gBAAC,MAAM;gBAAc,MAAM;YAAG;SAAE;QACzC,MAAM;YACJ,MAAM;YACN,MAAM;gBACJ;oBACE,MAAM;oBACN,MAAM;wBACJ,MAAM;wBACN,MAAM;4BACJ,MAAM;4BACN,UAAU;4BACV,QAAQ;4BACR,UAAU;gCAAC,MAAM;gCAAc,MAAM;4BAAG;wBAC1C;wBACA,UAAU;wBACV,OAAO;4BAAC,MAAM;4BAAW,OAAO;wBAAQ;oBAC1C;oBACA,YAAY;wBACV,MAAM;wBACN,UAAU;4BAAC,MAAM;4BAAc,MAAM;wBAAG;oBAC1C;oBACA,WAAW;gBACb;gBACA,iEAAiE;gBACjE,mBAAmB;gBACnB;oBACE,MAAM;oBACN,OAAO;wBACL,MAAM;wBACN,MAAM;4BACJ;gCACE,MAAM;gCACN,YAAY;oCACV,MAAM;oCACN,QAAQ;wCAAC,MAAM;wCAAc,MAAM;oCAAK;oCACxC,WAAW;wCAAC;4CAAC,MAAM;4CAAc,MAAM;wCAAG;qCAAE;gCAC9C;4BACF;4BACA;gCACE,MAAM;gCACN,UAAU;oCAAC,MAAM;oCAAc,MAAM;gCAAG;4BAC1C;yBACD;oBACH;oBACA,SAAS;wBACP,MAAM;wBACN,OAAO;wBACP,MAAM;4BAAC,MAAM;4BAAkB,MAAM,EAAE;wBAAA;oBACzC;oBACA,WAAW;gBACb;gBACA,mDAAmD;gBACnD,IAAI;gBACJ,yBAAyB;gBACzB,YAAY;gBACZ,8BAA8B;gBAC9B,2DAA2D;gBAC3D,oDAAoD;gBACpD,sBAAsB;gBACtB,OAAO;gBACP,kBAAkB;gBAClB,+BAA+B;gBAC/B,gDAAgD;gBAChD,OAAO;gBACP,oBAAoB;gBACpB,KAAK;gBACL;oBACE,MAAM;oBACN,MAAM;wBACJ,MAAM;wBACN,MAAM;4BACJ,MAAM;4BACN,MAAM;gCACJ,MAAM;gCACN,QAAQ,CAAA,GAAA,yMAAA,CAAA,yBAAsB,AAAD,EAAE;oCAAC;oCAAK;iCAAa;gCAClD,WAAW;oCAAC;wCAAC,MAAM;wCAAW,OAAO;oCAAG;iCAAE;gCAC1C,UAAU;4BACZ;4BACA,UAAU;4BACV,OAAO;gCACL,MAAM;gCACN,QAAQ,CAAA,GAAA,yMAAA,CAAA,yBAAsB,AAAD,EAAE;oCAAC;oCAAK;iCAAa;gCAClD,WAAW;oCAAC;wCAAC,MAAM;wCAAW,OAAO;oCAAI;iCAAE;gCAC3C,UAAU;4BACZ;wBACF;wBACA,UAAU;wBACV,OAAO;4BACL,MAAM;4BACN,QAAQ,CAAA,GAAA,yMAAA,CAAA,yBAAsB,AAAD,EAAE;gCAAC;gCAAK;6BAAa;4BAClD,WAAW;gCAAC;oCAAC,MAAM;oCAAW,OAAO;gCAAK;6BAAE;4BAC5C,UAAU;wBACZ;oBACF;oBACA,YAAY;wBACV,MAAM;wBACN,UAAU;4BACR,MAAM;4BACN,QAAQ;gCACN,MAAM;gCACN,QAAQ;oCAAC,MAAM;oCAAc,MAAM;gCAAK;gCACxC,WAAW;oCAAC;wCAAC,MAAM;wCAAc,MAAM;oCAAG;oCAAG;iCAAc;4BAC7D;4BACA,UAAU;gCAAC,MAAM;gCAAc,MAAM;4BAAM;4BAC3C,UAAU;4BACV,UAAU;wBACZ;oBACF;oBACA,WAAW;gBACb;gBACA;oBACE,MAAM;oBACN,UAAU;wBAAC,MAAM;wBAAc,MAAM;oBAAG;gBAC1C;aACD;QACH;IACF;AACF;AAEA;;CAEC,GACD,SAAS;IACP,OAAO;QACL;YACE,MAAM;YACN,cAAc;gBACZ;oBACE,MAAM;oBACN,IAAI;wBAAC,MAAM;wBAAc,MAAM;oBAAgB;oBAC/C,MAAM,CAAA,GAAA,yMAAA,CAAA,yBAAsB,AAAD,EAAE;wBAAC;wBAAa;wBAAG;qBAAU;gBAC1D;aACD;YACD,MAAM;QACR;QACA;YACE,MAAM;YACN,MAAM;gBACJ,MAAM;gBACN,UAAU;gBACV,QAAQ;gBACR,UAAU;oBAAC,MAAM;oBAAc,MAAM;gBAAgB;YACvD;YACA,YAAY;gBACV,MAAM;gBACN,UAAU;oBACR,MAAM;oBACN,QAAQ;wBAAC,MAAM;wBAAc,MAAM;oBAAO;oBAC1C,WAAW;wBACT;4BACE,MAAM;4BACN,OACE;wBACJ;qBACD;gBACH;YACF;YACA,WAAW;QACb;KACD;AACH","ignoreList":[0]}},
    {"offset": {"line": 18405, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18411, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/%40mdx-js/mdx/lib/util/estree-util-to-binary-addition.js"],"sourcesContent":["/**\n * @import {Expression} from 'estree-jsx'\n */\n\nimport {ok as assert} from 'devlop'\n\n/**\n * @param {ReadonlyArray<Expression>} expressions\n *   Expressions.\n * @returns {Expression}\n *   Addition.\n */\nexport function toBinaryAddition(expressions) {\n  let index = -1\n  /** @type {Expression | undefined} */\n  let left\n\n  while (++index < expressions.length) {\n    const right = expressions[index]\n    left = left ? {type: 'BinaryExpression', left, operator: '+', right} : right\n  }\n\n  assert(left, 'expected non-empty `expressions` to be passed')\n  return left\n}\n"],"names":[],"mappings":"AAAA;;CAEC;;;AAED;;AAQO,SAAS,iBAAiB,WAAW;IAC1C,IAAI,QAAQ,CAAC;IACb,mCAAmC,GACnC,IAAI;IAEJ,MAAO,EAAE,QAAQ,YAAY,MAAM,CAAE;QACnC,MAAM,QAAQ,WAAW,CAAC,MAAM;QAChC,OAAO,OAAO;YAAC,MAAM;YAAoB;YAAM,UAAU;YAAK;QAAK,IAAI;IACzE;IAEA,CAAA,GAAA,wIAAA,CAAA,KAAM,AAAD,EAAE,MAAM;IACb,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 18433, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18439, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/%40mdx-js/mdx/lib/plugin/recma-jsx-rewrite.js"],"sourcesContent":["/**\n * @import {\n      Expression,\n      Function as EstreeFunction,\n      Identifier,\n      ImportSpecifier,\n      JSXElement,\n      ModuleDeclaration,\n      ObjectPattern,\n      Program,\n      Property,\n      SpreadElement,\n      Statement,\n      VariableDeclarator\n * } from 'estree-jsx'\n * @import {Scope} from 'estree-util-scope'\n * @import {VFile} from 'vfile'\n * @import {ProcessorOptions} from '../core.js'\n */\n\n/**\n * @typedef StackEntry\n *   Entry.\n * @property {Array<string>} components\n *   Used components.\n * @property {Map<string, string>} idToInvalidComponentName\n *   Map of JSX identifiers which cannot be used as JS identifiers, to valid JS identifiers.\n * @property {Readonly<EstreeFunction>} node\n *   Function.\n * @property {Array<string>} objects\n *   Identifiers of used objects (such as `x` in `x.y`).\n * @property {Record<string, {node: Readonly<JSXElement>, component: boolean}>} references\n *   Map of JSX identifiers for components and objects, to where they were first used.\n * @property {Array<string>} tags\n *   Tag names.\n */\n\nimport {name as isIdentifierName} from 'estree-util-is-identifier-name'\nimport {createVisitors} from 'estree-util-scope'\nimport {walk} from 'estree-walker'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nimport {positionFromEstree} from 'unist-util-position-from-estree'\nimport {specifiersToDeclarations} from '../util/estree-util-specifiers-to-declarations.js'\nimport {toBinaryAddition} from '../util/estree-util-to-binary-addition.js'\nimport {\n  toIdOrMemberExpression,\n  toJsxIdOrMemberExpression\n} from '../util/estree-util-to-id-or-member-expression.js'\n\n/**\n * A plugin that rewrites JSX in functions to accept components as\n * `props.components` (when the function is called `_createMdxContent`), or from\n * a provider (if there is one).\n * It also makes sure that any undefined components are defined: either from\n * received components or as a function that throws an error.\n *\n * @param {Readonly<ProcessorOptions>} options\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport function recmaJsxRewrite(options) {\n  const {development, outputFormat, providerImportSource} = options\n\n  /**\n   * @param {Program} tree\n   *   Tree.\n   * @param {VFile} file\n   *   File.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  return function (tree, file) {\n    const visitors = createVisitors()\n    /** @type {Array<StackEntry>} */\n    const functionStack = []\n    let importProvider = false\n    let createErrorHelper = false\n\n    walk(tree, {\n      enter(node) {\n        visitors.enter(node)\n\n        if (\n          node.type === 'FunctionDeclaration' ||\n          node.type === 'FunctionExpression' ||\n          node.type === 'ArrowFunctionExpression'\n        ) {\n          functionStack.push({\n            components: [],\n            idToInvalidComponentName: new Map(),\n            node,\n            objects: [],\n            references: {},\n            tags: []\n          })\n\n          // `MDXContent` only ever contains `MDXLayout`.\n          if (\n            isNamedFunction(node, 'MDXContent') &&\n            !inScope(visitors.scopes, 'MDXLayout')\n          ) {\n            functionStack[0].components.push('MDXLayout')\n          }\n        }\n\n        const functionInfo = functionStack[0]\n\n        if (\n          !functionInfo ||\n          (!isNamedFunction(functionInfo.node, '_createMdxContent') &&\n            !providerImportSource)\n        ) {\n          return\n        }\n\n        if (node.type === 'JSXElement') {\n          let name = node.openingElement.name\n\n          // `<x.y>`, `<Foo.Bar>`, `<x.y.z>`.\n          if (name.type === 'JSXMemberExpression') {\n            /** @type {Array<string>} */\n            const ids = []\n\n            // Find the left-most identifier.\n            while (name.type === 'JSXMemberExpression') {\n              ids.unshift(name.property.name)\n              name = name.object\n            }\n\n            ids.unshift(name.name)\n            const fullId = ids.join('.')\n            const id = name.name\n            const isInScope = inScope(visitors.scopes, id)\n\n            if (\n              !Object.hasOwn(functionInfo.references, fullId) &&\n              (!isInScope ||\n                // If the parent scope is `_createMdxContent`, then this\n                // references a component we can add a check statement for.\n                (functionStack.length === 1 &&\n                  functionStack[0].node.type === 'FunctionDeclaration' &&\n                  isNamedFunction(functionStack[0].node, '_createMdxContent')))\n            ) {\n              functionInfo.references[fullId] = {component: true, node}\n            }\n\n            if (!functionInfo.objects.includes(id) && !isInScope) {\n              functionInfo.objects.push(id)\n            }\n          }\n          // `<xml:thing>`.\n          else if (name.type === 'JSXNamespacedName') {\n            // Ignore namespaces.\n          }\n          // If the name is a valid ES identifier, and it doesn’t start with a\n          // lowercase letter, it’s a component.\n          // For example, `$foo`, `_bar`, `Baz` are all component names.\n          // But `foo` and `b-ar` are tag names.\n          else if (isIdentifierName(name.name) && !/^[a-z]/.test(name.name)) {\n            const id = name.name\n\n            if (!inScope(visitors.scopes, id)) {\n              // No need to add an error for an undefined layout — we use an\n              // `if` later.\n              if (\n                id !== 'MDXLayout' &&\n                !Object.hasOwn(functionInfo.references, id)\n              ) {\n                functionInfo.references[id] = {component: true, node}\n              }\n\n              if (!functionInfo.components.includes(id)) {\n                functionInfo.components.push(id)\n              }\n            }\n          } else if (node.data && node.data._mdxExplicitJsx) {\n            // Do not turn explicit JSX into components from `_components`.\n            // As in, a given `h1` component is used for `# heading` (next case),\n            // but not for `<h1>heading</h1>`.\n          } else {\n            const id = name.name\n\n            if (!functionInfo.tags.includes(id)) {\n              functionInfo.tags.push(id)\n            }\n\n            /** @type {Array<number | string>} */\n            let jsxIdExpression = ['_components', id]\n            if (isIdentifierName(id) === false) {\n              let invalidComponentName =\n                functionInfo.idToInvalidComponentName.get(id)\n              if (invalidComponentName === undefined) {\n                invalidComponentName = `_component${functionInfo.idToInvalidComponentName.size}`\n                functionInfo.idToInvalidComponentName.set(\n                  id,\n                  invalidComponentName\n                )\n              }\n\n              jsxIdExpression = [invalidComponentName]\n            }\n\n            node.openingElement.name =\n              toJsxIdOrMemberExpression(jsxIdExpression)\n\n            if (node.closingElement) {\n              node.closingElement.name =\n                toJsxIdOrMemberExpression(jsxIdExpression)\n            }\n          }\n        }\n      },\n      leave(node) {\n        visitors.exit(node)\n\n        /** @type {Array<Property | SpreadElement>} */\n        const defaults = []\n        /** @type {Array<string>} */\n        const actual = []\n        /** @type {Array<Expression>} */\n        const parameters = []\n        /** @type {Array<VariableDeclarator>} */\n        const declarations = []\n\n        if (\n          node.type === 'FunctionDeclaration' ||\n          node.type === 'FunctionExpression' ||\n          node.type === 'ArrowFunctionExpression'\n        ) {\n          const functionInfo = functionStack[functionStack.length - 1]\n\n          /** @type {string} */\n          let name\n\n          for (name of functionInfo.tags.sort()) {\n            defaults.push({\n              type: 'Property',\n              kind: 'init',\n              key: isIdentifierName(name)\n                ? {type: 'Identifier', name}\n                : {type: 'Literal', value: name},\n              value: {type: 'Literal', value: name},\n              method: false,\n              shorthand: false,\n              computed: false\n            })\n          }\n\n          actual.push(...functionInfo.components)\n\n          for (name of functionInfo.objects) {\n            // In some cases, a component is used directly (`<X>`) but it’s also\n            // used as an object (`<X.Y>`).\n            if (!actual.includes(name)) {\n              actual.push(name)\n            }\n          }\n\n          actual.sort()\n\n          /** @type {Array<Statement>} */\n          const statements = []\n\n          if (\n            defaults.length > 0 ||\n            actual.length > 0 ||\n            functionInfo.idToInvalidComponentName.size > 0\n          ) {\n            if (providerImportSource) {\n              importProvider = true\n              parameters.push({\n                type: 'CallExpression',\n                callee: {type: 'Identifier', name: '_provideComponents'},\n                arguments: [],\n                optional: false\n              })\n            }\n\n            // Accept `components` as a prop if this is the `MDXContent` or\n            // `_createMdxContent` function.\n            if (\n              isNamedFunction(functionInfo.node, 'MDXContent') ||\n              isNamedFunction(functionInfo.node, '_createMdxContent')\n            ) {\n              parameters.push(toIdOrMemberExpression(['props', 'components']))\n            }\n\n            if (defaults.length > 0 || parameters.length > 1) {\n              for (const parameter of parameters) {\n                defaults.push({type: 'SpreadElement', argument: parameter})\n              }\n            }\n\n            // If we’re getting components from several sources, merge them.\n            /** @type {Expression} */\n            let componentsInit =\n              defaults.length > 0\n                ? {type: 'ObjectExpression', properties: defaults}\n                : // If we’re only getting components from `props.components`,\n                  // make sure it’s defined.\n                  {\n                    type: 'LogicalExpression',\n                    operator: '||',\n                    left: parameters[0],\n                    right: {type: 'ObjectExpression', properties: []}\n                  }\n\n            /** @type {ObjectPattern | undefined} */\n            let componentsPattern\n\n            // Add components to scope.\n            // For `['MyComponent', 'MDXLayout']` this generates:\n            // ```tsx\n            // const {MyComponent, wrapper: MDXLayout} = _components\n            // ```\n            // Note that MDXLayout is special as it’s taken from\n            // `_components.wrapper`.\n            if (actual.length > 0) {\n              componentsPattern = {\n                type: 'ObjectPattern',\n                properties: actual.map(function (name) {\n                  return {\n                    type: 'Property',\n                    kind: 'init',\n                    key: {\n                      type: 'Identifier',\n                      name: name === 'MDXLayout' ? 'wrapper' : name\n                    },\n                    value: {type: 'Identifier', name},\n                    method: false,\n                    shorthand: name !== 'MDXLayout',\n                    computed: false\n                  }\n                })\n              }\n            }\n\n            if (functionInfo.tags.length > 0) {\n              declarations.push({\n                type: 'VariableDeclarator',\n                id: {type: 'Identifier', name: '_components'},\n                init: componentsInit\n              })\n              componentsInit = {type: 'Identifier', name: '_components'}\n            }\n\n            if (isNamedFunction(functionInfo.node, '_createMdxContent')) {\n              for (const [id, componentName] of [\n                ...functionInfo.idToInvalidComponentName\n              ].sort(function ([a], [b]) {\n                return a.localeCompare(b)\n              })) {\n                // For JSX IDs that can’t be represented as JavaScript IDs (as in,\n                // those with dashes, such as `custom-element`), generate a\n                // separate variable that is a valid JS ID (such as `_component0`),\n                // and takes it from components:\n                // `const _component0 = _components['custom-element']`\n                declarations.push({\n                  type: 'VariableDeclarator',\n                  id: {\n                    type: 'Identifier',\n                    name: componentName\n                  },\n                  init: {\n                    type: 'MemberExpression',\n                    object: {type: 'Identifier', name: '_components'},\n                    property: {type: 'Literal', value: id},\n                    computed: true,\n                    optional: false\n                  }\n                })\n              }\n            }\n\n            if (componentsPattern) {\n              declarations.push({\n                type: 'VariableDeclarator',\n                id: componentsPattern,\n                init: componentsInit\n              })\n            }\n\n            if (declarations.length > 0) {\n              statements.push({\n                type: 'VariableDeclaration',\n                kind: 'const',\n                declarations\n              })\n            }\n          }\n\n          /** @type {string} */\n          let key\n\n          // Add partials (so for `x.y.z` it’d generate `x` and `x.y` too).\n          for (key in functionInfo.references) {\n            if (Object.hasOwn(functionInfo.references, key)) {\n              const parts = key.split('.')\n              let index = 0\n              while (++index < parts.length) {\n                const partial = parts.slice(0, index).join('.')\n                if (!Object.hasOwn(functionInfo.references, partial)) {\n                  functionInfo.references[partial] = {\n                    component: false,\n                    node: functionInfo.references[key].node\n                  }\n                }\n              }\n            }\n          }\n\n          const references = Object.keys(functionInfo.references).sort()\n\n          let index = -1\n          while (++index < references.length) {\n            const id = references[index]\n            const info = functionInfo.references[id]\n            const place = stringifyPosition(positionFromEstree(info.node))\n            /** @type {Array<Expression>} */\n            const parameters = [\n              {type: 'Literal', value: id},\n              {type: 'Literal', value: info.component}\n            ]\n\n            createErrorHelper = true\n\n            if (development && place) {\n              parameters.push({type: 'Literal', value: place})\n            }\n\n            statements.push({\n              type: 'IfStatement',\n              test: {\n                type: 'UnaryExpression',\n                operator: '!',\n                prefix: true,\n                argument: toIdOrMemberExpression(id.split('.'))\n              },\n              consequent: {\n                type: 'ExpressionStatement',\n                expression: {\n                  type: 'CallExpression',\n                  callee: {type: 'Identifier', name: '_missingMdxReference'},\n                  arguments: parameters,\n                  optional: false\n                }\n              },\n              alternate: undefined\n            })\n          }\n\n          if (statements.length > 0) {\n            // Arrow functions with an implied return:\n            if (node.body.type !== 'BlockStatement') {\n              node.body = {\n                type: 'BlockStatement',\n                body: [{type: 'ReturnStatement', argument: node.body}]\n              }\n            }\n\n            node.body.body.unshift(...statements)\n          }\n\n          functionStack.pop()\n        }\n      }\n    })\n\n    // If a provider is used (and can be used), import it.\n    if (importProvider && providerImportSource) {\n      tree.body.unshift(\n        createImportProvider(providerImportSource, outputFormat)\n      )\n    }\n\n    // If potentially missing components are used.\n    if (createErrorHelper) {\n      /** @type {Array<Expression>} */\n      const message = [\n        {type: 'Literal', value: 'Expected '},\n        {\n          type: 'ConditionalExpression',\n          test: {type: 'Identifier', name: 'component'},\n          consequent: {type: 'Literal', value: 'component'},\n          alternate: {type: 'Literal', value: 'object'}\n        },\n        {type: 'Literal', value: ' `'},\n        {type: 'Identifier', name: 'id'},\n        {\n          type: 'Literal',\n          value:\n            '` to be defined: you likely forgot to import, pass, or provide it.'\n        }\n      ]\n\n      /** @type {Array<Identifier>} */\n      const parameters = [\n        {type: 'Identifier', name: 'id'},\n        {type: 'Identifier', name: 'component'}\n      ]\n\n      if (development) {\n        message.push({\n          type: 'ConditionalExpression',\n          test: {type: 'Identifier', name: 'place'},\n          consequent: toBinaryAddition([\n            {type: 'Literal', value: '\\nIt’s referenced in your code at `'},\n            {type: 'Identifier', name: 'place'},\n            {\n              type: 'Literal',\n              value: (file.path ? '` in `' + file.path : '') + '`'\n            }\n          ]),\n          alternate: {type: 'Literal', value: ''}\n        })\n\n        parameters.push({type: 'Identifier', name: 'place'})\n      }\n\n      tree.body.push({\n        type: 'FunctionDeclaration',\n        id: {type: 'Identifier', name: '_missingMdxReference'},\n        generator: false,\n        async: false,\n        params: parameters,\n        body: {\n          type: 'BlockStatement',\n          body: [\n            {\n              type: 'ThrowStatement',\n              argument: {\n                type: 'NewExpression',\n                callee: {type: 'Identifier', name: 'Error'},\n                arguments: [toBinaryAddition(message)]\n              }\n            }\n          ]\n        }\n      })\n    }\n\n    if (outputFormat === 'function-body') {\n      tree.body.unshift({\n        type: 'ExpressionStatement',\n        expression: {type: 'Literal', value: 'use strict'},\n        directive: 'use strict'\n      })\n    }\n  }\n}\n\n/**\n * @param {string} providerImportSource\n *   Provider source.\n * @param {'function-body' | 'program' | null | undefined} outputFormat\n *   Format.\n * @returns {ModuleDeclaration | Statement}\n *   Node.\n */\nfunction createImportProvider(providerImportSource, outputFormat) {\n  /** @type {Array<ImportSpecifier>} */\n  const specifiers = [\n    {\n      type: 'ImportSpecifier',\n      imported: {type: 'Identifier', name: 'useMDXComponents'},\n      local: {type: 'Identifier', name: '_provideComponents'}\n    }\n  ]\n\n  return outputFormat === 'function-body'\n    ? {\n        type: 'VariableDeclaration',\n        kind: 'const',\n        declarations: specifiersToDeclarations(\n          specifiers,\n          toIdOrMemberExpression(['arguments', 0])\n        )\n      }\n    : {\n        type: 'ImportDeclaration',\n        specifiers,\n        source: {type: 'Literal', value: providerImportSource}\n      }\n}\n\n/**\n * @param {Readonly<EstreeFunction>} node\n *   Node.\n * @param {string} name\n *   Name.\n * @returns {boolean}\n *   Whether `node` is a named function with `name`.\n */\nfunction isNamedFunction(node, name) {\n  return Boolean(node && 'id' in node && node.id && node.id.name === name)\n}\n\n/**\n * @param {Array<Scope>} scopes\n *   Scope.\n * @param {string} id\n *   Identifier.\n * @returns {boolean}\n *   Whether `id` is in `scope`.\n */\nfunction inScope(scopes, id) {\n  let index = scopes.length\n\n  while (index--) {\n    const scope = scopes[index]\n\n    if (scope.defined.includes(id)) {\n      return true\n    }\n  }\n\n  return false\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;CAkBC,GAED;;;;;;;;;;;;;;;CAeC;;;AAID;AADA;AADA;AAOA;AAJA;AACA;AAEA;AADA;;;;;;;;;AAmBO,SAAS,gBAAgB,OAAO;IACrC,MAAM,EAAC,WAAW,EAAE,YAAY,EAAE,oBAAoB,EAAC,GAAG;IAE1D;;;;;;;GAOC,GACD,OAAO,SAAU,IAAI,EAAE,IAAI;QACzB,MAAM,WAAW,CAAA,GAAA,mJAAA,CAAA,iBAAc,AAAD;QAC9B,8BAA8B,GAC9B,MAAM,gBAAgB,EAAE;QACxB,IAAI,iBAAiB;QACrB,IAAI,oBAAoB;QAExB,CAAA,GAAA,4IAAA,CAAA,OAAI,AAAD,EAAE,MAAM;YACT,OAAM,IAAI;gBACR,SAAS,KAAK,CAAC;gBAEf,IACE,KAAK,IAAI,KAAK,yBACd,KAAK,IAAI,KAAK,wBACd,KAAK,IAAI,KAAK,2BACd;oBACA,cAAc,IAAI,CAAC;wBACjB,YAAY,EAAE;wBACd,0BAA0B,IAAI;wBAC9B;wBACA,SAAS,EAAE;wBACX,YAAY,CAAC;wBACb,MAAM,EAAE;oBACV;oBAEA,+CAA+C;oBAC/C,IACE,gBAAgB,MAAM,iBACtB,CAAC,QAAQ,SAAS,MAAM,EAAE,cAC1B;wBACA,aAAa,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC;oBACnC;gBACF;gBAEA,MAAM,eAAe,aAAa,CAAC,EAAE;gBAErC,IACE,CAAC,gBACA,CAAC,gBAAgB,aAAa,IAAI,EAAE,wBACnC,CAAC,sBACH;oBACA;gBACF;gBAEA,IAAI,KAAK,IAAI,KAAK,cAAc;oBAC9B,IAAI,OAAO,KAAK,cAAc,CAAC,IAAI;oBAEnC,mCAAmC;oBACnC,IAAI,KAAK,IAAI,KAAK,uBAAuB;wBACvC,0BAA0B,GAC1B,MAAM,MAAM,EAAE;wBAEd,iCAAiC;wBACjC,MAAO,KAAK,IAAI,KAAK,sBAAuB;4BAC1C,IAAI,OAAO,CAAC,KAAK,QAAQ,CAAC,IAAI;4BAC9B,OAAO,KAAK,MAAM;wBACpB;wBAEA,IAAI,OAAO,CAAC,KAAK,IAAI;wBACrB,MAAM,SAAS,IAAI,IAAI,CAAC;wBACxB,MAAM,KAAK,KAAK,IAAI;wBACpB,MAAM,YAAY,QAAQ,SAAS,MAAM,EAAE;wBAE3C,IACE,CAAC,OAAO,MAAM,CAAC,aAAa,UAAU,EAAE,WACxC,CAAC,CAAC,aAGC,cAAc,MAAM,KAAK,KACxB,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,KAAK,yBAC/B,gBAAgB,aAAa,CAAC,EAAE,CAAC,IAAI,EAAE,oBAAqB,GAChE;4BACA,aAAa,UAAU,CAAC,OAAO,GAAG;gCAAC,WAAW;gCAAM;4BAAI;wBAC1D;wBAEA,IAAI,CAAC,aAAa,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,WAAW;4BACpD,aAAa,OAAO,CAAC,IAAI,CAAC;wBAC5B;oBACF,OAEK,IAAI,KAAK,IAAI,KAAK,qBAAqB;oBAC1C,qBAAqB;oBACvB,OAKK,IAAI,CAAA,GAAA,sKAAA,CAAA,OAAgB,AAAD,EAAE,KAAK,IAAI,KAAK,CAAC,SAAS,IAAI,CAAC,KAAK,IAAI,GAAG;wBACjE,MAAM,KAAK,KAAK,IAAI;wBAEpB,IAAI,CAAC,QAAQ,SAAS,MAAM,EAAE,KAAK;4BACjC,8DAA8D;4BAC9D,cAAc;4BACd,IACE,OAAO,eACP,CAAC,OAAO,MAAM,CAAC,aAAa,UAAU,EAAE,KACxC;gCACA,aAAa,UAAU,CAAC,GAAG,GAAG;oCAAC,WAAW;oCAAM;gCAAI;4BACtD;4BAEA,IAAI,CAAC,aAAa,UAAU,CAAC,QAAQ,CAAC,KAAK;gCACzC,aAAa,UAAU,CAAC,IAAI,CAAC;4BAC/B;wBACF;oBACF,OAAO,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI,CAAC,eAAe,EAAE;oBACjD,+DAA+D;oBAC/D,qEAAqE;oBACrE,kCAAkC;oBACpC,OAAO;wBACL,MAAM,KAAK,KAAK,IAAI;wBAEpB,IAAI,CAAC,aAAa,IAAI,CAAC,QAAQ,CAAC,KAAK;4BACnC,aAAa,IAAI,CAAC,IAAI,CAAC;wBACzB;wBAEA,mCAAmC,GACnC,IAAI,kBAAkB;4BAAC;4BAAe;yBAAG;wBACzC,IAAI,CAAA,GAAA,sKAAA,CAAA,OAAgB,AAAD,EAAE,QAAQ,OAAO;4BAClC,IAAI,uBACF,aAAa,wBAAwB,CAAC,GAAG,CAAC;4BAC5C,IAAI,yBAAyB,WAAW;gCACtC,uBAAuB,CAAC,UAAU,EAAE,aAAa,wBAAwB,CAAC,IAAI,EAAE;gCAChF,aAAa,wBAAwB,CAAC,GAAG,CACvC,IACA;4BAEJ;4BAEA,kBAAkB;gCAAC;6BAAqB;wBAC1C;wBAEA,KAAK,cAAc,CAAC,IAAI,GACtB,CAAA,GAAA,yMAAA,CAAA,4BAAyB,AAAD,EAAE;wBAE5B,IAAI,KAAK,cAAc,EAAE;4BACvB,KAAK,cAAc,CAAC,IAAI,GACtB,CAAA,GAAA,yMAAA,CAAA,4BAAyB,AAAD,EAAE;wBAC9B;oBACF;gBACF;YACF;YACA,OAAM,IAAI;gBACR,SAAS,IAAI,CAAC;gBAEd,4CAA4C,GAC5C,MAAM,WAAW,EAAE;gBACnB,0BAA0B,GAC1B,MAAM,SAAS,EAAE;gBACjB,8BAA8B,GAC9B,MAAM,aAAa,EAAE;gBACrB,sCAAsC,GACtC,MAAM,eAAe,EAAE;gBAEvB,IACE,KAAK,IAAI,KAAK,yBACd,KAAK,IAAI,KAAK,wBACd,KAAK,IAAI,KAAK,2BACd;oBACA,MAAM,eAAe,aAAa,CAAC,cAAc,MAAM,GAAG,EAAE;oBAE5D,mBAAmB,GACnB,IAAI;oBAEJ,KAAK,QAAQ,aAAa,IAAI,CAAC,IAAI,GAAI;wBACrC,SAAS,IAAI,CAAC;4BACZ,MAAM;4BACN,MAAM;4BACN,KAAK,CAAA,GAAA,sKAAA,CAAA,OAAgB,AAAD,EAAE,QAClB;gCAAC,MAAM;gCAAc;4BAAI,IACzB;gCAAC,MAAM;gCAAW,OAAO;4BAAI;4BACjC,OAAO;gCAAC,MAAM;gCAAW,OAAO;4BAAI;4BACpC,QAAQ;4BACR,WAAW;4BACX,UAAU;wBACZ;oBACF;oBAEA,OAAO,IAAI,IAAI,aAAa,UAAU;oBAEtC,KAAK,QAAQ,aAAa,OAAO,CAAE;wBACjC,oEAAoE;wBACpE,+BAA+B;wBAC/B,IAAI,CAAC,OAAO,QAAQ,CAAC,OAAO;4BAC1B,OAAO,IAAI,CAAC;wBACd;oBACF;oBAEA,OAAO,IAAI;oBAEX,6BAA6B,GAC7B,MAAM,aAAa,EAAE;oBAErB,IACE,SAAS,MAAM,GAAG,KAClB,OAAO,MAAM,GAAG,KAChB,aAAa,wBAAwB,CAAC,IAAI,GAAG,GAC7C;wBACA,IAAI,sBAAsB;4BACxB,iBAAiB;4BACjB,WAAW,IAAI,CAAC;gCACd,MAAM;gCACN,QAAQ;oCAAC,MAAM;oCAAc,MAAM;gCAAoB;gCACvD,WAAW,EAAE;gCACb,UAAU;4BACZ;wBACF;wBAEA,+DAA+D;wBAC/D,gCAAgC;wBAChC,IACE,gBAAgB,aAAa,IAAI,EAAE,iBACnC,gBAAgB,aAAa,IAAI,EAAE,sBACnC;4BACA,WAAW,IAAI,CAAC,CAAA,GAAA,yMAAA,CAAA,yBAAsB,AAAD,EAAE;gCAAC;gCAAS;6BAAa;wBAChE;wBAEA,IAAI,SAAS,MAAM,GAAG,KAAK,WAAW,MAAM,GAAG,GAAG;4BAChD,KAAK,MAAM,aAAa,WAAY;gCAClC,SAAS,IAAI,CAAC;oCAAC,MAAM;oCAAiB,UAAU;gCAAS;4BAC3D;wBACF;wBAEA,gEAAgE;wBAChE,uBAAuB,GACvB,IAAI,iBACF,SAAS,MAAM,GAAG,IACd;4BAAC,MAAM;4BAAoB,YAAY;wBAAQ,IAE/C,0BAA0B;wBAC1B;4BACE,MAAM;4BACN,UAAU;4BACV,MAAM,UAAU,CAAC,EAAE;4BACnB,OAAO;gCAAC,MAAM;gCAAoB,YAAY,EAAE;4BAAA;wBAClD;wBAEN,sCAAsC,GACtC,IAAI;wBAEJ,2BAA2B;wBAC3B,qDAAqD;wBACrD,SAAS;wBACT,wDAAwD;wBACxD,MAAM;wBACN,oDAAoD;wBACpD,yBAAyB;wBACzB,IAAI,OAAO,MAAM,GAAG,GAAG;4BACrB,oBAAoB;gCAClB,MAAM;gCACN,YAAY,OAAO,GAAG,CAAC,SAAU,IAAI;oCACnC,OAAO;wCACL,MAAM;wCACN,MAAM;wCACN,KAAK;4CACH,MAAM;4CACN,MAAM,SAAS,cAAc,YAAY;wCAC3C;wCACA,OAAO;4CAAC,MAAM;4CAAc;wCAAI;wCAChC,QAAQ;wCACR,WAAW,SAAS;wCACpB,UAAU;oCACZ;gCACF;4BACF;wBACF;wBAEA,IAAI,aAAa,IAAI,CAAC,MAAM,GAAG,GAAG;4BAChC,aAAa,IAAI,CAAC;gCAChB,MAAM;gCACN,IAAI;oCAAC,MAAM;oCAAc,MAAM;gCAAa;gCAC5C,MAAM;4BACR;4BACA,iBAAiB;gCAAC,MAAM;gCAAc,MAAM;4BAAa;wBAC3D;wBAEA,IAAI,gBAAgB,aAAa,IAAI,EAAE,sBAAsB;4BAC3D,KAAK,MAAM,CAAC,IAAI,cAAc,IAAI;mCAC7B,aAAa,wBAAwB;6BACzC,CAAC,IAAI,CAAC,SAAU,CAAC,EAAE,EAAE,CAAC,EAAE;gCACvB,OAAO,EAAE,aAAa,CAAC;4BACzB,GAAI;gCACF,kEAAkE;gCAClE,2DAA2D;gCAC3D,mEAAmE;gCACnE,gCAAgC;gCAChC,sDAAsD;gCACtD,aAAa,IAAI,CAAC;oCAChB,MAAM;oCACN,IAAI;wCACF,MAAM;wCACN,MAAM;oCACR;oCACA,MAAM;wCACJ,MAAM;wCACN,QAAQ;4CAAC,MAAM;4CAAc,MAAM;wCAAa;wCAChD,UAAU;4CAAC,MAAM;4CAAW,OAAO;wCAAE;wCACrC,UAAU;wCACV,UAAU;oCACZ;gCACF;4BACF;wBACF;wBAEA,IAAI,mBAAmB;4BACrB,aAAa,IAAI,CAAC;gCAChB,MAAM;gCACN,IAAI;gCACJ,MAAM;4BACR;wBACF;wBAEA,IAAI,aAAa,MAAM,GAAG,GAAG;4BAC3B,WAAW,IAAI,CAAC;gCACd,MAAM;gCACN,MAAM;gCACN;4BACF;wBACF;oBACF;oBAEA,mBAAmB,GACnB,IAAI;oBAEJ,iEAAiE;oBACjE,IAAK,OAAO,aAAa,UAAU,CAAE;wBACnC,IAAI,OAAO,MAAM,CAAC,aAAa,UAAU,EAAE,MAAM;4BAC/C,MAAM,QAAQ,IAAI,KAAK,CAAC;4BACxB,IAAI,QAAQ;4BACZ,MAAO,EAAE,QAAQ,MAAM,MAAM,CAAE;gCAC7B,MAAM,UAAU,MAAM,KAAK,CAAC,GAAG,OAAO,IAAI,CAAC;gCAC3C,IAAI,CAAC,OAAO,MAAM,CAAC,aAAa,UAAU,EAAE,UAAU;oCACpD,aAAa,UAAU,CAAC,QAAQ,GAAG;wCACjC,WAAW;wCACX,MAAM,aAAa,UAAU,CAAC,IAAI,CAAC,IAAI;oCACzC;gCACF;4BACF;wBACF;oBACF;oBAEA,MAAM,aAAa,OAAO,IAAI,CAAC,aAAa,UAAU,EAAE,IAAI;oBAE5D,IAAI,QAAQ,CAAC;oBACb,MAAO,EAAE,QAAQ,WAAW,MAAM,CAAE;wBAClC,MAAM,KAAK,UAAU,CAAC,MAAM;wBAC5B,MAAM,OAAO,aAAa,UAAU,CAAC,GAAG;wBACxC,MAAM,QAAQ,CAAA,GAAA,kKAAA,CAAA,oBAAiB,AAAD,EAAE,CAAA,GAAA,uKAAA,CAAA,qBAAkB,AAAD,EAAE,KAAK,IAAI;wBAC5D,8BAA8B,GAC9B,MAAM,aAAa;4BACjB;gCAAC,MAAM;gCAAW,OAAO;4BAAE;4BAC3B;gCAAC,MAAM;gCAAW,OAAO,KAAK,SAAS;4BAAA;yBACxC;wBAED,oBAAoB;wBAEpB,IAAI,eAAe,OAAO;4BACxB,WAAW,IAAI,CAAC;gCAAC,MAAM;gCAAW,OAAO;4BAAK;wBAChD;wBAEA,WAAW,IAAI,CAAC;4BACd,MAAM;4BACN,MAAM;gCACJ,MAAM;gCACN,UAAU;gCACV,QAAQ;gCACR,UAAU,CAAA,GAAA,yMAAA,CAAA,yBAAsB,AAAD,EAAE,GAAG,KAAK,CAAC;4BAC5C;4BACA,YAAY;gCACV,MAAM;gCACN,YAAY;oCACV,MAAM;oCACN,QAAQ;wCAAC,MAAM;wCAAc,MAAM;oCAAsB;oCACzD,WAAW;oCACX,UAAU;gCACZ;4BACF;4BACA,WAAW;wBACb;oBACF;oBAEA,IAAI,WAAW,MAAM,GAAG,GAAG;wBACzB,0CAA0C;wBAC1C,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,kBAAkB;4BACvC,KAAK,IAAI,GAAG;gCACV,MAAM;gCACN,MAAM;oCAAC;wCAAC,MAAM;wCAAmB,UAAU,KAAK,IAAI;oCAAA;iCAAE;4BACxD;wBACF;wBAEA,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI;oBAC5B;oBAEA,cAAc,GAAG;gBACnB;YACF;QACF;QAEA,sDAAsD;QACtD,IAAI,kBAAkB,sBAAsB;YAC1C,KAAK,IAAI,CAAC,OAAO,CACf,qBAAqB,sBAAsB;QAE/C;QAEA,8CAA8C;QAC9C,IAAI,mBAAmB;YACrB,8BAA8B,GAC9B,MAAM,UAAU;gBACd;oBAAC,MAAM;oBAAW,OAAO;gBAAW;gBACpC;oBACE,MAAM;oBACN,MAAM;wBAAC,MAAM;wBAAc,MAAM;oBAAW;oBAC5C,YAAY;wBAAC,MAAM;wBAAW,OAAO;oBAAW;oBAChD,WAAW;wBAAC,MAAM;wBAAW,OAAO;oBAAQ;gBAC9C;gBACA;oBAAC,MAAM;oBAAW,OAAO;gBAAI;gBAC7B;oBAAC,MAAM;oBAAc,MAAM;gBAAI;gBAC/B;oBACE,MAAM;oBACN,OACE;gBACJ;aACD;YAED,8BAA8B,GAC9B,MAAM,aAAa;gBACjB;oBAAC,MAAM;oBAAc,MAAM;gBAAI;gBAC/B;oBAAC,MAAM;oBAAc,MAAM;gBAAW;aACvC;YAED,IAAI,aAAa;gBACf,QAAQ,IAAI,CAAC;oBACX,MAAM;oBACN,MAAM;wBAAC,MAAM;wBAAc,MAAM;oBAAO;oBACxC,YAAY,CAAA,GAAA,2LAAA,CAAA,mBAAgB,AAAD,EAAE;wBAC3B;4BAAC,MAAM;4BAAW,OAAO;wBAAqC;wBAC9D;4BAAC,MAAM;4BAAc,MAAM;wBAAO;wBAClC;4BACE,MAAM;4BACN,OAAO,CAAC,KAAK,IAAI,GAAG,WAAW,KAAK,IAAI,GAAG,EAAE,IAAI;wBACnD;qBACD;oBACD,WAAW;wBAAC,MAAM;wBAAW,OAAO;oBAAE;gBACxC;gBAEA,WAAW,IAAI,CAAC;oBAAC,MAAM;oBAAc,MAAM;gBAAO;YACpD;YAEA,KAAK,IAAI,CAAC,IAAI,CAAC;gBACb,MAAM;gBACN,IAAI;oBAAC,MAAM;oBAAc,MAAM;gBAAsB;gBACrD,WAAW;gBACX,OAAO;gBACP,QAAQ;gBACR,MAAM;oBACJ,MAAM;oBACN,MAAM;wBACJ;4BACE,MAAM;4BACN,UAAU;gCACR,MAAM;gCACN,QAAQ;oCAAC,MAAM;oCAAc,MAAM;gCAAO;gCAC1C,WAAW;oCAAC,CAAA,GAAA,2LAAA,CAAA,mBAAgB,AAAD,EAAE;iCAAS;4BACxC;wBACF;qBACD;gBACH;YACF;QACF;QAEA,IAAI,iBAAiB,iBAAiB;YACpC,KAAK,IAAI,CAAC,OAAO,CAAC;gBAChB,MAAM;gBACN,YAAY;oBAAC,MAAM;oBAAW,OAAO;gBAAY;gBACjD,WAAW;YACb;QACF;IACF;AACF;AAEA;;;;;;;CAOC,GACD,SAAS,qBAAqB,oBAAoB,EAAE,YAAY;IAC9D,mCAAmC,GACnC,MAAM,aAAa;QACjB;YACE,MAAM;YACN,UAAU;gBAAC,MAAM;gBAAc,MAAM;YAAkB;YACvD,OAAO;gBAAC,MAAM;gBAAc,MAAM;YAAoB;QACxD;KACD;IAED,OAAO,iBAAiB,kBACpB;QACE,MAAM;QACN,MAAM;QACN,cAAc,CAAA,GAAA,mMAAA,CAAA,2BAAwB,AAAD,EACnC,YACA,CAAA,GAAA,yMAAA,CAAA,yBAAsB,AAAD,EAAE;YAAC;YAAa;SAAE;IAE3C,IACA;QACE,MAAM;QACN;QACA,QAAQ;YAAC,MAAM;YAAW,OAAO;QAAoB;IACvD;AACN;AAEA;;;;;;;CAOC,GACD,SAAS,gBAAgB,IAAI,EAAE,IAAI;IACjC,OAAO,QAAQ,QAAQ,QAAQ,QAAQ,KAAK,EAAE,IAAI,KAAK,EAAE,CAAC,IAAI,KAAK;AACrE;AAEA;;;;;;;CAOC,GACD,SAAS,QAAQ,MAAM,EAAE,EAAE;IACzB,IAAI,QAAQ,OAAO,MAAM;IAEzB,MAAO,QAAS;QACd,MAAM,QAAQ,MAAM,CAAC,MAAM;QAE3B,IAAI,MAAM,OAAO,CAAC,QAAQ,CAAC,KAAK;YAC9B,OAAO;QACT;IACF;IAEA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 19037, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19043, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/%40mdx-js/mdx/lib/plugin/recma-build-jsx-transform.js"],"sourcesContent":["/**\n * @import {Program} from 'estree-jsx'\n */\n\n/**\n * @typedef Options\n *   Configuration for internal plugin `recma-build-jsx-transform`.\n * @property {'function-body' | 'program' | null | undefined} [outputFormat='program']\n *   Whether to keep the import of the automatic runtime or get it from\n *   `arguments[0]` instead (default: `'program'`).\n */\n\nimport {specifiersToDeclarations} from '../util/estree-util-specifiers-to-declarations.js'\nimport {toIdOrMemberExpression} from '../util/estree-util-to-id-or-member-expression.js'\n\n/**\n * Plugin to change the tree after compiling JSX away.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport function recmaBuildJsxTransform(options) {\n  /* c8 ignore next -- always given in `@mdx-js/mdx` */\n  const {outputFormat} = options || {}\n\n  /**\n   * @param {Program} tree\n   *   Tree.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  return function (tree) {\n    // Remove the pragma comment that we injected ourselves as it is no longer\n    // needed.\n    if (tree.comments) {\n      tree.comments = tree.comments.filter(function (d) {\n        return !d.data?._mdxIsPragmaComment\n      })\n    }\n\n    // When compiling to a function body, replace the import that was just\n    // generated, and get `jsx`, `jsxs`, and `Fragment` from `arguments[0]`\n    // instead.\n    if (outputFormat === 'function-body') {\n      let index = 0\n\n      // Skip directives: JS currently only has `use strict`, but Acorn allows\n      // arbitrary ones.\n      // Practically things like `use client` could be used?\n      while (index < tree.body.length) {\n        const child = tree.body[index]\n        if ('directive' in child && child.directive) {\n          index++\n        } else {\n          break\n        }\n      }\n\n      const declaration = tree.body[index]\n\n      if (\n        declaration &&\n        declaration.type === 'ImportDeclaration' &&\n        typeof declaration.source.value === 'string' &&\n        /\\/jsx-(dev-)?runtime$/.test(declaration.source.value)\n      ) {\n        tree.body[index] = {\n          type: 'VariableDeclaration',\n          kind: 'const',\n          declarations: specifiersToDeclarations(\n            declaration.specifiers,\n            toIdOrMemberExpression(['arguments', 0])\n          )\n        }\n      }\n    }\n  }\n}\n"],"names":[],"mappings":"AAAA;;CAEC,GAED;;;;;;CAMC;;;AAED;AACA;;;AAUO,SAAS,uBAAuB,OAAO;IAC5C,mDAAmD,GACnD,MAAM,EAAC,YAAY,EAAC,GAAG,WAAW,CAAC;IAEnC;;;;;GAKC,GACD,OAAO,SAAU,IAAI;QACnB,0EAA0E;QAC1E,UAAU;QACV,IAAI,KAAK,QAAQ,EAAE;YACjB,KAAK,QAAQ,GAAG,KAAK,QAAQ,CAAC,MAAM,CAAC,SAAU,CAAC;gBAC9C,OAAO,CAAC,EAAE,IAAI,EAAE;YAClB;QACF;QAEA,sEAAsE;QACtE,uEAAuE;QACvE,WAAW;QACX,IAAI,iBAAiB,iBAAiB;YACpC,IAAI,QAAQ;YAEZ,wEAAwE;YACxE,kBAAkB;YAClB,sDAAsD;YACtD,MAAO,QAAQ,KAAK,IAAI,CAAC,MAAM,CAAE;gBAC/B,MAAM,QAAQ,KAAK,IAAI,CAAC,MAAM;gBAC9B,IAAI,eAAe,SAAS,MAAM,SAAS,EAAE;oBAC3C;gBACF,OAAO;oBACL;gBACF;YACF;YAEA,MAAM,cAAc,KAAK,IAAI,CAAC,MAAM;YAEpC,IACE,eACA,YAAY,IAAI,KAAK,uBACrB,OAAO,YAAY,MAAM,CAAC,KAAK,KAAK,YACpC,wBAAwB,IAAI,CAAC,YAAY,MAAM,CAAC,KAAK,GACrD;gBACA,KAAK,IAAI,CAAC,MAAM,GAAG;oBACjB,MAAM;oBACN,MAAM;oBACN,cAAc,CAAA,GAAA,mMAAA,CAAA,2BAAwB,AAAD,EACnC,YAAY,UAAU,EACtB,CAAA,GAAA,yMAAA,CAAA,yBAAsB,AAAD,EAAE;wBAAC;wBAAa;qBAAE;gBAE3C;YACF;QACF;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 19103, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19109, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/%40mdx-js/mdx/lib/core.js"],"sourcesContent":["/**\n * @import {Program} from 'estree-jsx'\n * @import {Root} from 'mdast'\n * @import {Options as RehypeRecmaOptions} from 'rehype-recma'\n * @import {Options as RemarkRehypeOptions} from 'remark-rehype'\n * @import {SourceMapGenerator} from 'source-map'\n * @import {PluggableList, Processor} from 'unified'\n */\n\n/**\n * @typedef ProcessorOptions\n *   Configuration for `createProcessor`.\n * @property {typeof SourceMapGenerator | null | undefined} [SourceMapGenerator]\n *   Add a source map (object form) as the `map` field on the resulting file\n *   (optional).\n * @property {URL | string | null | undefined} [baseUrl]\n *   Use this URL as `import.meta.url` and resolve `import` and `export … from`\n *   relative to it (optional, example: `import.meta.url`).\n * @property {boolean | null | undefined} [development=false]\n *   Whether to add extra info to error messages in generated code and use the\n *   development automatic JSX runtime (`Fragment` and `jsxDEV` from\n *   `/jsx-dev-runtime`) (default: `false`);\n *   when using the webpack loader (`@mdx-js/loader`) or the Rollup integration\n *   (`@mdx-js/rollup`) through Vite, this is automatically inferred from how\n *   you configure those tools.\n * @property {RehypeRecmaOptions['elementAttributeNameCase']} [elementAttributeNameCase='react']\n *   Casing to use for attribute names (default: `'react'`);\n *   HTML casing is for example `class`, `stroke-linecap`, `xml:lang`;\n *   React casing is for example `className`, `strokeLinecap`, `xmlLang`;\n *   for JSX components written in MDX, the author has to be aware of which\n *   framework they use and write code accordingly;\n *   for AST nodes generated by this project, this option configures it\n * @property {'md' | 'mdx' | null | undefined} [format='mdx']\n *   format of the file (default: `'mdx'`);\n *   `'md'` means treat as markdown and `'mdx'` means treat as MDX.\n * @property {boolean | null | undefined} [jsx=false]\n *   Whether to keep JSX (default: `false`);\n *   the default is to compile JSX away so that the resulting file is\n *   immediately runnable.\n * @property {string | null | undefined} [jsxImportSource='react']\n *   Place to import automatic JSX runtimes from (default: `'react'`);\n *   when in the `automatic` runtime, this is used to define an import for\n *   `Fragment`, `jsx`, `jsxDEV`, and `jsxs`.\n * @property {'automatic' | 'classic' | null | undefined} [jsxRuntime='automatic']\n *   JSX runtime to use (default: `'automatic'`);\n *   the automatic runtime compiles to `import _jsx from\n *   '$importSource/jsx-runtime'\\n_jsx('p')`;\n *   the classic runtime compiles to calls such as `h('p')`.\n *\n *   > 👉 **Note**: support for the classic runtime is deprecated and will\n *   > likely be removed in the next major version.\n * @property {ReadonlyArray<string> | null | undefined} [mdExtensions]\n *   List of markdown extensions, with dot (default: `['.md', '.markdown', …]`);\n *   affects integrations.\n * @property {ReadonlyArray<string> | null | undefined} [mdxExtensions]\n *   List of MDX extensions, with dot (default: `['.mdx']`);\n *   affects integrations.\n * @property {'function-body' | 'program' | null | undefined} [outputFormat='program']\n *   Output format to generate (default: `'program'`);\n *   in most cases `'program'` should be used, it results in a whole program;\n *   internally `evaluate` uses `'function-body'` to compile to\n *   code that can be passed to `run`;\n *   in some cases, you might want what `evaluate` does in separate steps, such\n *   as when compiling on the server and running on the client.\n * @property {string | null | undefined} [pragma='React.createElement']\n *   Pragma for JSX, used in the classic runtime as an identifier for function\n *   calls: `<x />` to `React.createElement('x')` (default:\n *   `'React.createElement'`);\n *   when changing this, you should also define `pragmaFrag` and\n *   `pragmaImportSource` too.\n *\n *   > 👉 **Note**: support for the classic runtime is deprecated and will\n *   > likely be removed in the next major version.\n * @property {string | null | undefined} [pragmaFrag='React.Fragment']\n *   Pragma for fragment symbol, used in the classic runtime as an identifier\n *   for unnamed calls: `<>` to `React.createElement(React.Fragment)` (default:\n *   `'React.Fragment'`);\n *   when changing this, you should also define `pragma` and\n *   `pragmaImportSource` too.\n *\n *   > 👉 **Note**: support for the classic runtime is deprecated and will\n *   > likely be removed in the next major version.\n * @property {string | null | undefined} [pragmaImportSource='react']\n *   Where to import the identifier of `pragma` from, used in the classic\n *   runtime (default: `'react'`);\n *   to illustrate, when `pragma` is `'a.b'` and `pragmaImportSource` is `'c'`\n *   the following will be generated: `import a from 'c'` and things such as\n *   `a.b('h1', {})`.\n *   when changing this, you should also define `pragma` and `pragmaFrag` too.\n *\n *   > 👉 **Note**: support for the classic runtime is deprecated and will\n *   > likely be removed in the next major version.\n * @property {string | null | undefined} [providerImportSource]\n *   Place to import a provider from (optional, example: `'@mdx-js/react'`);\n *   normally it’s used for runtimes that support context (React, Preact), but\n *   it can be used to inject components into the compiled code;\n *   the module must export and identifier `useMDXComponents` which is called\n *   without arguments to get an object of components (`MDXComponents` from\n *   `mdx/types.js`).\n * @property {PluggableList | null | undefined} [recmaPlugins]\n *   List of recma plugins (optional);\n *   this is a new ecosystem, currently in beta, to transform esast trees\n *   (JavaScript)\n * @property {PluggableList | null | undefined} [remarkPlugins]\n *   List of remark plugins (optional).\n * @property {PluggableList | null | undefined} [rehypePlugins]\n *   List of rehype plugins (optional).\n * @property {Readonly<RemarkRehypeOptions> | null | undefined} [remarkRehypeOptions]\n *   Options to pass through to `remark-rehype` (optional);\n *   the option `allowDangerousHtml` will always be set to `true` and the MDX\n *   nodes (see `nodeTypes`) are passed through;\n *   In particular, you might want to pass configuration for footnotes if your\n *   content is not in English.\n * @property {RehypeRecmaOptions['stylePropertyNameCase']} [stylePropertyNameCase='dom']\n *   Casing to use for property names in `style` objects (default: `'dom'`);\n *   CSS casing is for example `background-color` and `-webkit-line-clamp`;\n *   DOM casing is for example `backgroundColor` and `WebkitLineClamp`;\n *   for JSX components written in MDX, the author has to be aware of which\n *   framework they use and write code accordingly;\n *   for AST nodes generated by this project, this option configures it\n * @property {boolean | null | undefined} [tableCellAlignToStyle=true]\n *   Turn obsolete `align` properties on `td` and `th` into CSS `style`\n *   properties (default: `true`).\n */\n\nimport {unreachable} from 'devlop'\nimport recmaBuildJsx from 'recma-build-jsx'\nimport recmaJsx from 'recma-jsx'\nimport recmaStringify from 'recma-stringify'\nimport rehypeRecma from 'rehype-recma'\nimport remarkMdx from 'remark-mdx'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {unified} from 'unified'\nimport {recmaBuildJsxTransform} from './plugin/recma-build-jsx-transform.js'\nimport {recmaDocument} from './plugin/recma-document.js'\nimport {recmaJsxRewrite} from './plugin/recma-jsx-rewrite.js'\nimport {rehypeRemoveRaw} from './plugin/rehype-remove-raw.js'\nimport {remarkMarkAndUnravel} from './plugin/remark-mark-and-unravel.js'\nimport {nodeTypes} from './node-types.js'\n\nconst removedOptions = [\n  'compilers',\n  'filepath',\n  'hastPlugins',\n  'mdPlugins',\n  'skipExport',\n  'wrapExport'\n]\n\nlet warned = false\n\n/**\n * Create a processor to compile markdown or MDX to JavaScript.\n *\n * > **Note**: `format: 'detect'` is not allowed in `ProcessorOptions`.\n *\n * @param {Readonly<ProcessorOptions> | null | undefined} [options]\n *   Configuration (optional).\n * @return {Processor<Root, Program, Program, Program, string>}\n *   Processor.\n */\nexport function createProcessor(options) {\n  const settings = options || {}\n  let index = -1\n\n  while (++index < removedOptions.length) {\n    const key = removedOptions[index]\n    if (key in settings) {\n      unreachable(\n        'Unexpected removed option `' +\n          key +\n          '`; see <https://mdxjs.com/migrating/v2/> on how to migrate'\n      )\n    }\n  }\n\n  // @ts-expect-error: throw an error for a runtime value which is not allowed\n  // by the types.\n  if (settings.format === 'detect') {\n    unreachable(\n      \"Unexpected `format: 'detect'`, which is not supported by `createProcessor`, expected `'mdx'` or `'md'`\"\n    )\n  }\n\n  if (\n    (settings.jsxRuntime === 'classic' ||\n      settings.pragma ||\n      settings.pragmaFrag ||\n      settings.pragmaImportSource) &&\n    !warned\n  ) {\n    warned = true\n    console.warn(\n      \"Unexpected deprecated option `jsxRuntime: 'classic'`, `pragma`, `pragmaFrag`, or `pragmaImportSource`; see <https://mdxjs.com/migrating/v3/> on how to migrate\"\n    )\n  }\n\n  const pipeline = unified().use(remarkParse)\n\n  if (settings.format !== 'md') {\n    pipeline.use(remarkMdx)\n  }\n\n  const remarkRehypeOptions = settings.remarkRehypeOptions || {}\n\n  pipeline\n    .use(remarkMarkAndUnravel)\n    .use(settings.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...remarkRehypeOptions,\n      allowDangerousHtml: true,\n      passThrough: [...(remarkRehypeOptions.passThrough || []), ...nodeTypes]\n    })\n    .use(settings.rehypePlugins || [])\n\n  if (settings.format === 'md') {\n    pipeline.use(rehypeRemoveRaw)\n  }\n\n  pipeline\n    // @ts-expect-error: `Program` is close enough to a `Node`,\n    // but type inference has trouble with it and bridges.\n    .use(rehypeRecma, settings)\n    .use(recmaDocument, settings)\n    .use(recmaJsxRewrite, settings)\n\n  if (!settings.jsx) {\n    pipeline.use(recmaBuildJsx, settings).use(recmaBuildJsxTransform, settings)\n  }\n\n  pipeline\n    .use(recmaJsx)\n    .use(recmaStringify, settings)\n    .use(settings.recmaPlugins || [])\n\n  // @ts-expect-error: TS doesn’t get the plugins we added with if-statements.\n  return pipeline\n}\n"],"names":[],"mappings":"AAAA;;;;;;;CAOC,GAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAkHC;;;AAED;AAQA;AAFA;AADA;AAQA;AANA;AAOA;AAFA;AARA;AAMA;AACA;AAVA;AAQA;AAPA;AACA;;;;;;;;;;;;;;;;AAaA,MAAM,iBAAiB;IACrB;IACA;IACA;IACA;IACA;IACA;CACD;AAED,IAAI,SAAS;AAYN,SAAS,gBAAgB,OAAO;IACrC,MAAM,WAAW,WAAW,CAAC;IAC7B,IAAI,QAAQ,CAAC;IAEb,MAAO,EAAE,QAAQ,eAAe,MAAM,CAAE;QACtC,MAAM,MAAM,cAAc,CAAC,MAAM;QACjC,IAAI,OAAO,UAAU;YACnB,CAAA,GAAA,wIAAA,CAAA,cAAW,AAAD,EACR,gCACE,MACA;QAEN;IACF;IAEA,4EAA4E;IAC5E,gBAAgB;IAChB,IAAI,SAAS,MAAM,KAAK,UAAU;QAChC,CAAA,GAAA,wIAAA,CAAA,cAAW,AAAD,EACR;IAEJ;IAEA,IACE,CAAC,SAAS,UAAU,KAAK,aACvB,SAAS,MAAM,IACf,SAAS,UAAU,IACnB,SAAS,kBAAkB,KAC7B,CAAC,QACD;QACA,SAAS;QACT,QAAQ,IAAI,CACV;IAEJ;IAEA,MAAM,WAAW,CAAA,GAAA,mIAAA,CAAA,UAAO,AAAD,IAAI,GAAG,CAAC,2IAAA,CAAA,UAAW;IAE1C,IAAI,SAAS,MAAM,KAAK,MAAM;QAC5B,SAAS,GAAG,CAAC,yIAAA,CAAA,UAAS;IACxB;IAEA,MAAM,sBAAsB,SAAS,mBAAmB,IAAI,CAAC;IAE7D,SACG,GAAG,CAAC,mLAAA,CAAA,uBAAoB,EACxB,GAAG,CAAC,SAAS,aAAa,IAAI,EAAE,EAChC,GAAG,CAAC,4IAAA,CAAA,UAAY,EAAE;QACjB,GAAG,mBAAmB;QACtB,oBAAoB;QACpB,aAAa;eAAK,oBAAoB,WAAW,IAAI,EAAE;eAAM,sJAAA,CAAA,YAAS;SAAC;IACzE,GACC,GAAG,CAAC,SAAS,aAAa,IAAI,EAAE;IAEnC,IAAI,SAAS,MAAM,KAAK,MAAM;QAC5B,SAAS,GAAG,CAAC,0KAAA,CAAA,kBAAe;IAC9B;IAEA,QACE,2DAA2D;IAC3D,sDAAsD;KACrD,GAAG,CAAC,2IAAA,CAAA,UAAW,EAAE,UACjB,GAAG,CAAC,oKAAA,CAAA,gBAAa,EAAE,UACnB,GAAG,CAAC,0KAAA,CAAA,kBAAe,EAAE;IAExB,IAAI,CAAC,SAAS,GAAG,EAAE;QACjB,SAAS,GAAG,CAAC,iJAAA,CAAA,UAAa,EAAE,UAAU,GAAG,CAAC,qLAAA,CAAA,yBAAsB,EAAE;IACpE;IAEA,SACG,GAAG,CAAC,wIAAA,CAAA,UAAQ,EACZ,GAAG,CAAC,8IAAA,CAAA,UAAc,EAAE,UACpB,GAAG,CAAC,SAAS,YAAY,IAAI,EAAE;IAElC,4EAA4E;IAC5E,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 19316, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19322, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-hast/lib/handlers/blockquote.js"],"sourcesContent":["/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC,GAED,mDAAmD;;;;AACnD;AAYO,SAAS,WAAW,KAAK,EAAE,IAAI;IACpC,oBAAoB,GACpB,MAAM,SAAS;QACb,MAAM;QACN,SAAS;QACT,YAAY,CAAC;QACb,UAAU,MAAM,IAAI,CAAC,MAAM,GAAG,CAAC,OAAO;IACxC;IACA,MAAM,KAAK,CAAC,MAAM;IAClB,OAAO,MAAM,SAAS,CAAC,MAAM;AAC/B","ignoreList":[0]}},
    {"offset": {"line": 19341, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19347, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-hast/lib/handlers/break.js"],"sourcesContent":["/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n"],"names":[],"mappings":"AAAA;;;;;CAKC,GAED,mDAAmD;;;;AACnD;AAYO,SAAS,UAAU,KAAK,EAAE,IAAI;IACnC,oBAAoB,GACpB,MAAM,SAAS;QAAC,MAAM;QAAW,SAAS;QAAM,YAAY,CAAC;QAAG,UAAU,EAAE;IAAA;IAC5E,MAAM,KAAK,CAAC,MAAM;IAClB,OAAO;QAAC,MAAM,SAAS,CAAC,MAAM;QAAS;YAAC,MAAM;YAAQ,OAAO;QAAI;KAAE;AACrE","ignoreList":[0]}},
    {"offset": {"line": 19373, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19379, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-hast/lib/handlers/code.js"],"sourcesContent":["/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  /** @type {Properties} */\n  const properties = {}\n\n  if (node.lang) {\n    properties.className = ['language-' + node.lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n"],"names":[],"mappings":"AAAA;;;;;CAKC,GAED,mDAAmD;;;;AACnD;AAYO,SAAS,KAAK,KAAK,EAAE,IAAI;IAC9B,MAAM,QAAQ,KAAK,KAAK,GAAG,KAAK,KAAK,GAAG,OAAO;IAC/C,uBAAuB,GACvB,MAAM,aAAa,CAAC;IAEpB,IAAI,KAAK,IAAI,EAAE;QACb,WAAW,SAAS,GAAG;YAAC,cAAc,KAAK,IAAI;SAAC;IAClD;IAEA,mBAAmB;IACnB,oBAAoB,GACpB,IAAI,SAAS;QACX,MAAM;QACN,SAAS;QACT;QACA,UAAU;YAAC;gBAAC,MAAM;gBAAQ;YAAK;SAAE;IACnC;IAEA,IAAI,KAAK,IAAI,EAAE;QACb,OAAO,IAAI,GAAG;YAAC,MAAM,KAAK,IAAI;QAAA;IAChC;IAEA,MAAM,KAAK,CAAC,MAAM;IAClB,SAAS,MAAM,SAAS,CAAC,MAAM;IAE/B,kBAAkB;IAClB,SAAS;QAAC,MAAM;QAAW,SAAS;QAAO,YAAY,CAAC;QAAG,UAAU;YAAC;SAAO;IAAA;IAC7E,MAAM,KAAK,CAAC,MAAM;IAClB,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 19428, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19434, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-hast/lib/handlers/delete.js"],"sourcesContent":["/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC,GAED,mDAAmD;;;;AACnD;AAYO,SAAS,cAAc,KAAK,EAAE,IAAI;IACvC,oBAAoB,GACpB,MAAM,SAAS;QACb,MAAM;QACN,SAAS;QACT,YAAY,CAAC;QACb,UAAU,MAAM,GAAG,CAAC;IACtB;IACA,MAAM,KAAK,CAAC,MAAM;IAClB,OAAO,MAAM,SAAS,CAAC,MAAM;AAC/B","ignoreList":[0]}},
    {"offset": {"line": 19453, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19459, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-hast/lib/handlers/emphasis.js"],"sourcesContent":["/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC,GAED,mDAAmD;;;;AACnD;AAYO,SAAS,SAAS,KAAK,EAAE,IAAI;IAClC,oBAAoB,GACpB,MAAM,SAAS;QACb,MAAM;QACN,SAAS;QACT,YAAY,CAAC;QACb,UAAU,MAAM,GAAG,CAAC;IACtB;IACA,MAAM,KAAK,CAAC,MAAM;IAClB,OAAO,MAAM,SAAS,CAAC,MAAM;AAC/B","ignoreList":[0]}},
    {"offset": {"line": 19478, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19484, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js"],"sourcesContent":["/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  let reuseCounter = state.footnoteCounts.get(id)\n\n  if (reuseCounter === undefined) {\n    reuseCounter = 0\n    state.footnoteOrder.push(id)\n    counter = state.footnoteOrder.length\n  } else {\n    counter = index + 1\n  }\n\n  reuseCounter += 1\n  state.footnoteCounts.set(id, reuseCounter)\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + clobberPrefix + 'fn-' + safeId,\n      id:\n        clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;AAED;;AAYO,SAAS,kBAAkB,KAAK,EAAE,IAAI;IAC3C,MAAM,gBACJ,OAAO,MAAM,OAAO,CAAC,aAAa,KAAK,WACnC,MAAM,OAAO,CAAC,aAAa,GAC3B;IACN,MAAM,KAAK,OAAO,KAAK,UAAU,EAAE,WAAW;IAC9C,MAAM,SAAS,CAAA,GAAA,gKAAA,CAAA,eAAY,AAAD,EAAE,GAAG,WAAW;IAC1C,MAAM,QAAQ,MAAM,aAAa,CAAC,OAAO,CAAC;IAC1C,mBAAmB,GACnB,IAAI;IAEJ,IAAI,eAAe,MAAM,cAAc,CAAC,GAAG,CAAC;IAE5C,IAAI,iBAAiB,WAAW;QAC9B,eAAe;QACf,MAAM,aAAa,CAAC,IAAI,CAAC;QACzB,UAAU,MAAM,aAAa,CAAC,MAAM;IACtC,OAAO;QACL,UAAU,QAAQ;IACpB;IAEA,gBAAgB;IAChB,MAAM,cAAc,CAAC,GAAG,CAAC,IAAI;IAE7B,oBAAoB,GACpB,MAAM,OAAO;QACX,MAAM;QACN,SAAS;QACT,YAAY;YACV,MAAM,MAAM,gBAAgB,QAAQ;YACpC,IACE,gBACA,WACA,SACA,CAAC,eAAe,IAAI,MAAM,eAAe,EAAE;YAC7C,iBAAiB;YACjB,iBAAiB;gBAAC;aAAiB;QACrC;QACA,UAAU;YAAC;gBAAC,MAAM;gBAAQ,OAAO,OAAO;YAAQ;SAAE;IACpD;IACA,MAAM,KAAK,CAAC,MAAM;IAElB,oBAAoB,GACpB,MAAM,MAAM;QACV,MAAM;QACN,SAAS;QACT,YAAY,CAAC;QACb,UAAU;YAAC;SAAK;IAClB;IACA,MAAM,KAAK,CAAC,MAAM;IAClB,OAAO,MAAM,SAAS,CAAC,MAAM;AAC/B","ignoreList":[0]}},
    {"offset": {"line": 19539, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19545, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-hast/lib/handlers/heading.js"],"sourcesContent":["/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC,GAED,mDAAmD;;;;AACnD;AAYO,SAAS,QAAQ,KAAK,EAAE,IAAI;IACjC,oBAAoB,GACpB,MAAM,SAAS;QACb,MAAM;QACN,SAAS,MAAM,KAAK,KAAK;QACzB,YAAY,CAAC;QACb,UAAU,MAAM,GAAG,CAAC;IACtB;IACA,MAAM,KAAK,CAAC,MAAM;IAClB,OAAO,MAAM,SAAS,CAAC,MAAM;AAC/B","ignoreList":[0]}},
    {"offset": {"line": 19564, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19570, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-hast/lib/handlers/html.js"],"sourcesContent":["/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Html} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Element | Raw | undefined}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.options.allowDangerousHtml) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  return undefined\n}\n"],"names":[],"mappings":"AAAA;;;;;CAKC,GAED,mDAAmD;;;;AACnD;AAaO,SAAS,KAAK,KAAK,EAAE,IAAI;IAC9B,IAAI,MAAM,OAAO,CAAC,kBAAkB,EAAE;QACpC,gBAAgB,GAChB,MAAM,SAAS;YAAC,MAAM;YAAO,OAAO,KAAK,KAAK;QAAA;QAC9C,MAAM,KAAK,CAAC,MAAM;QAClB,OAAO,MAAM,SAAS,CAAC,MAAM;IAC/B;IAEA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 19591, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19597, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-hast/lib/revert.js"],"sourcesContent":["/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Reference} Reference\n *\n * @typedef {import('./state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Extract<Nodes, Reference>} node\n *   Reference node (image, link).\n * @returns {Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return [{type: 'text', value: '![' + node.alt + suffix}]\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n"],"names":[],"mappings":"AAAA;;;;;;;CAOC,GAED,mDAAmD;;;;AACnD;AAYO,SAAS,OAAO,KAAK,EAAE,IAAI;IAChC,MAAM,UAAU,KAAK,aAAa;IAClC,IAAI,SAAS;IAEb,IAAI,YAAY,aAAa;QAC3B,UAAU;IACZ,OAAO,IAAI,YAAY,QAAQ;QAC7B,UAAU,MAAM,CAAC,KAAK,KAAK,IAAI,KAAK,UAAU,IAAI;IACpD;IAEA,IAAI,KAAK,IAAI,KAAK,kBAAkB;QAClC,OAAO;YAAC;gBAAC,MAAM;gBAAQ,OAAO,OAAO,KAAK,GAAG,GAAG;YAAM;SAAE;IAC1D;IAEA,MAAM,WAAW,MAAM,GAAG,CAAC;IAC3B,MAAM,OAAO,QAAQ,CAAC,EAAE;IAExB,IAAI,QAAQ,KAAK,IAAI,KAAK,QAAQ;QAChC,KAAK,KAAK,GAAG,MAAM,KAAK,KAAK;IAC/B,OAAO;QACL,SAAS,OAAO,CAAC;YAAC,MAAM;YAAQ,OAAO;QAAG;IAC5C;IAEA,MAAM,OAAO,QAAQ,CAAC,SAAS,MAAM,GAAG,EAAE;IAE1C,IAAI,QAAQ,KAAK,IAAI,KAAK,QAAQ;QAChC,KAAK,KAAK,IAAI;IAChB,OAAO;QACL,SAAS,IAAI,CAAC;YAAC,MAAM;YAAQ,OAAO;QAAM;IAC5C;IAEA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 19646, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19652, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-hast/lib/handlers/image-reference.js"],"sourcesContent":["/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(definition.url || ''), alt: node.alt}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n"],"names":[],"mappings":"AAAA;;;;;;CAMC;;;AAED;AACA;;;AAYO,SAAS,eAAe,KAAK,EAAE,IAAI;IACxC,MAAM,KAAK,OAAO,KAAK,UAAU,EAAE,WAAW;IAC9C,MAAM,aAAa,MAAM,cAAc,CAAC,GAAG,CAAC;IAE5C,IAAI,CAAC,YAAY;QACf,OAAO,CAAA,GAAA,wJAAA,CAAA,SAAM,AAAD,EAAE,OAAO;IACvB;IAEA,uBAAuB,GACvB,MAAM,aAAa;QAAC,KAAK,CAAA,GAAA,gKAAA,CAAA,eAAY,AAAD,EAAE,WAAW,GAAG,IAAI;QAAK,KAAK,KAAK,GAAG;IAAA;IAE1E,IAAI,WAAW,KAAK,KAAK,QAAQ,WAAW,KAAK,KAAK,WAAW;QAC/D,WAAW,KAAK,GAAG,WAAW,KAAK;IACrC;IAEA,oBAAoB,GACpB,MAAM,SAAS;QAAC,MAAM;QAAW,SAAS;QAAO;QAAY,UAAU,EAAE;IAAA;IACzE,MAAM,KAAK,CAAC,MAAM;IAClB,OAAO,MAAM,SAAS,CAAC,MAAM;AAC/B","ignoreList":[0]}},
    {"offset": {"line": 19687, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19693, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-hast/lib/handlers/image.js"],"sourcesContent":["/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;AAED;;AAYO,SAAS,MAAM,KAAK,EAAE,IAAI;IAC/B,uBAAuB,GACvB,MAAM,aAAa;QAAC,KAAK,CAAA,GAAA,gKAAA,CAAA,eAAY,AAAD,EAAE,KAAK,GAAG;IAAC;IAE/C,IAAI,KAAK,GAAG,KAAK,QAAQ,KAAK,GAAG,KAAK,WAAW;QAC/C,WAAW,GAAG,GAAG,KAAK,GAAG;IAC3B;IAEA,IAAI,KAAK,KAAK,KAAK,QAAQ,KAAK,KAAK,KAAK,WAAW;QACnD,WAAW,KAAK,GAAG,KAAK,KAAK;IAC/B;IAEA,oBAAoB,GACpB,MAAM,SAAS;QAAC,MAAM;QAAW,SAAS;QAAO;QAAY,UAAU,EAAE;IAAA;IACzE,MAAM,KAAK,CAAC,MAAM;IAClB,OAAO,MAAM,SAAS,CAAC,MAAM;AAC/B","ignoreList":[0]}},
    {"offset": {"line": 19722, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19728, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-hast/lib/handlers/inline-code.js"],"sourcesContent":["/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n"],"names":[],"mappings":"AAAA;;;;;CAKC,GAED,mDAAmD;;;;AACnD;AAYO,SAAS,WAAW,KAAK,EAAE,IAAI;IACpC,iBAAiB,GACjB,MAAM,OAAO;QAAC,MAAM;QAAQ,OAAO,KAAK,KAAK,CAAC,OAAO,CAAC,aAAa;IAAI;IACvE,MAAM,KAAK,CAAC,MAAM;IAElB,oBAAoB,GACpB,MAAM,SAAS;QACb,MAAM;QACN,SAAS;QACT,YAAY,CAAC;QACb,UAAU;YAAC;SAAK;IAClB;IACA,MAAM,KAAK,CAAC,MAAM;IAClB,OAAO,MAAM,SAAS,CAAC,MAAM;AAC/B","ignoreList":[0]}},
    {"offset": {"line": 19755, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19761, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-hast/lib/handlers/link-reference.js"],"sourcesContent":["/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(definition.url || '')}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n"],"names":[],"mappings":"AAAA;;;;;;CAMC;;;AAED;AACA;;;AAYO,SAAS,cAAc,KAAK,EAAE,IAAI;IACvC,MAAM,KAAK,OAAO,KAAK,UAAU,EAAE,WAAW;IAC9C,MAAM,aAAa,MAAM,cAAc,CAAC,GAAG,CAAC;IAE5C,IAAI,CAAC,YAAY;QACf,OAAO,CAAA,GAAA,wJAAA,CAAA,SAAM,AAAD,EAAE,OAAO;IACvB;IAEA,uBAAuB,GACvB,MAAM,aAAa;QAAC,MAAM,CAAA,GAAA,gKAAA,CAAA,eAAY,AAAD,EAAE,WAAW,GAAG,IAAI;IAAG;IAE5D,IAAI,WAAW,KAAK,KAAK,QAAQ,WAAW,KAAK,KAAK,WAAW;QAC/D,WAAW,KAAK,GAAG,WAAW,KAAK;IACrC;IAEA,oBAAoB,GACpB,MAAM,SAAS;QACb,MAAM;QACN,SAAS;QACT;QACA,UAAU,MAAM,GAAG,CAAC;IACtB;IACA,MAAM,KAAK,CAAC,MAAM;IAClB,OAAO,MAAM,SAAS,CAAC,MAAM;AAC/B","ignoreList":[0]}},
    {"offset": {"line": 19795, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19801, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-hast/lib/handlers/link.js"],"sourcesContent":["/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;AAED;;AAYO,SAAS,KAAK,KAAK,EAAE,IAAI;IAC9B,uBAAuB,GACvB,MAAM,aAAa;QAAC,MAAM,CAAA,GAAA,gKAAA,CAAA,eAAY,AAAD,EAAE,KAAK,GAAG;IAAC;IAEhD,IAAI,KAAK,KAAK,KAAK,QAAQ,KAAK,KAAK,KAAK,WAAW;QACnD,WAAW,KAAK,GAAG,KAAK,KAAK;IAC/B;IAEA,oBAAoB,GACpB,MAAM,SAAS;QACb,MAAM;QACN,SAAS;QACT;QACA,UAAU,MAAM,GAAG,CAAC;IACtB;IACA,MAAM,KAAK,CAAC,MAAM;IAClB,OAAO,MAAM,SAAS,CAAC,MAAM;AAC/B","ignoreList":[0]}},
    {"offset": {"line": 19827, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19833, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-hast/lib/handlers/list-item.js"],"sourcesContent":["/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === null || spread === undefined\n    ? node.children.length > 1\n    : spread\n}\n"],"names":[],"mappings":"AAAA;;;;;;;CAOC,GAED,mDAAmD;;;;AACnD;AAcO,SAAS,SAAS,KAAK,EAAE,IAAI,EAAE,MAAM;IAC1C,MAAM,UAAU,MAAM,GAAG,CAAC;IAC1B,MAAM,QAAQ,SAAS,UAAU,UAAU,cAAc;IACzD,uBAAuB,GACvB,MAAM,aAAa,CAAC;IACpB,kCAAkC,GAClC,MAAM,WAAW,EAAE;IAEnB,IAAI,OAAO,KAAK,OAAO,KAAK,WAAW;QACrC,MAAM,OAAO,OAAO,CAAC,EAAE;QACvB,oBAAoB,GACpB,IAAI;QAEJ,IAAI,QAAQ,KAAK,IAAI,KAAK,aAAa,KAAK,OAAO,KAAK,KAAK;YAC3D,YAAY;QACd,OAAO;YACL,YAAY;gBAAC,MAAM;gBAAW,SAAS;gBAAK,YAAY,CAAC;gBAAG,UAAU,EAAE;YAAA;YACxE,QAAQ,OAAO,CAAC;QAClB;QAEA,IAAI,UAAU,QAAQ,CAAC,MAAM,GAAG,GAAG;YACjC,UAAU,QAAQ,CAAC,OAAO,CAAC;gBAAC,MAAM;gBAAQ,OAAO;YAAG;QACtD;QAEA,UAAU,QAAQ,CAAC,OAAO,CAAC;YACzB,MAAM;YACN,SAAS;YACT,YAAY;gBAAC,MAAM;gBAAY,SAAS,KAAK,OAAO;gBAAE,UAAU;YAAI;YACpE,UAAU,EAAE;QACd;QAEA,6DAA6D;QAC7D,8DAA8D;QAC9D,WAAW,SAAS,GAAG;YAAC;SAAiB;IAC3C;IAEA,IAAI,QAAQ,CAAC;IAEb,MAAO,EAAE,QAAQ,QAAQ,MAAM,CAAE;QAC/B,MAAM,QAAQ,OAAO,CAAC,MAAM;QAE5B,qEAAqE;QACrE,IACE,SACA,UAAU,KACV,MAAM,IAAI,KAAK,aACf,MAAM,OAAO,KAAK,KAClB;YACA,SAAS,IAAI,CAAC;gBAAC,MAAM;gBAAQ,OAAO;YAAI;QAC1C;QAEA,IAAI,MAAM,IAAI,KAAK,aAAa,MAAM,OAAO,KAAK,OAAO,CAAC,OAAO;YAC/D,SAAS,IAAI,IAAI,MAAM,QAAQ;QACjC,OAAO;YACL,SAAS,IAAI,CAAC;QAChB;IACF;IAEA,MAAM,OAAO,OAAO,CAAC,QAAQ,MAAM,GAAG,EAAE;IAExC,mBAAmB;IACnB,IAAI,QAAQ,CAAC,SAAS,KAAK,IAAI,KAAK,aAAa,KAAK,OAAO,KAAK,GAAG,GAAG;QACtE,SAAS,IAAI,CAAC;YAAC,MAAM;YAAQ,OAAO;QAAI;IAC1C;IAEA,oBAAoB,GACpB,MAAM,SAAS;QAAC,MAAM;QAAW,SAAS;QAAM;QAAY;IAAQ;IACpE,MAAM,KAAK,CAAC,MAAM;IAClB,OAAO,MAAM,SAAS,CAAC,MAAM;AAC/B;AAEA;;;CAGC,GACD,SAAS,UAAU,IAAI;IACrB,IAAI,QAAQ;IACZ,IAAI,KAAK,IAAI,KAAK,QAAQ;QACxB,QAAQ,KAAK,MAAM,IAAI;QACvB,MAAM,WAAW,KAAK,QAAQ;QAC9B,IAAI,QAAQ,CAAC;QAEb,MAAO,CAAC,SAAS,EAAE,QAAQ,SAAS,MAAM,CAAE;YAC1C,QAAQ,cAAc,QAAQ,CAAC,MAAM;QACvC;IACF;IAEA,OAAO;AACT;AAEA;;;CAGC,GACD,SAAS,cAAc,IAAI;IACzB,MAAM,SAAS,KAAK,MAAM;IAE1B,OAAO,WAAW,QAAQ,WAAW,YACjC,KAAK,QAAQ,CAAC,MAAM,GAAG,IACvB;AACN","ignoreList":[0]}},
    {"offset": {"line": 19941, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19947, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-hast/lib/handlers/list.js"],"sourcesContent":["/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n"],"names":[],"mappings":"AAAA;;;;;CAKC,GAED,mDAAmD;;;;AACnD;AAYO,SAAS,KAAK,KAAK,EAAE,IAAI;IAC9B,uBAAuB,GACvB,MAAM,aAAa,CAAC;IACpB,MAAM,UAAU,MAAM,GAAG,CAAC;IAC1B,IAAI,QAAQ,CAAC;IAEb,IAAI,OAAO,KAAK,KAAK,KAAK,YAAY,KAAK,KAAK,KAAK,GAAG;QACtD,WAAW,KAAK,GAAG,KAAK,KAAK;IAC/B;IAEA,+CAA+C;IAC/C,MAAO,EAAE,QAAQ,QAAQ,MAAM,CAAE;QAC/B,MAAM,QAAQ,OAAO,CAAC,MAAM;QAE5B,IACE,MAAM,IAAI,KAAK,aACf,MAAM,OAAO,KAAK,QAClB,MAAM,UAAU,IAChB,MAAM,OAAO,CAAC,MAAM,UAAU,CAAC,SAAS,KACxC,MAAM,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,mBACpC;YACA,WAAW,SAAS,GAAG;gBAAC;aAAqB;YAC7C;QACF;IACF;IAEA,oBAAoB,GACpB,MAAM,SAAS;QACb,MAAM;QACN,SAAS,KAAK,OAAO,GAAG,OAAO;QAC/B;QACA,UAAU,MAAM,IAAI,CAAC,SAAS;IAChC;IACA,MAAM,KAAK,CAAC,MAAM;IAClB,OAAO,MAAM,SAAS,CAAC,MAAM;AAC/B","ignoreList":[0]}},
    {"offset": {"line": 19983, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19989, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-hast/lib/handlers/paragraph.js"],"sourcesContent":["/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC,GAED,mDAAmD;;;;AACnD;AAYO,SAAS,UAAU,KAAK,EAAE,IAAI;IACnC,oBAAoB,GACpB,MAAM,SAAS;QACb,MAAM;QACN,SAAS;QACT,YAAY,CAAC;QACb,UAAU,MAAM,GAAG,CAAC;IACtB;IACA,MAAM,KAAK,CAAC,MAAM;IAClB,OAAO,MAAM,SAAS,CAAC,MAAM;AAC/B","ignoreList":[0]}},
    {"offset": {"line": 20008, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20014, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-hast/lib/handlers/root.js"],"sourcesContent":["/**\n * @typedef {import('hast').Parents} HastParents\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastParents}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n"],"names":[],"mappings":"AAAA;;;;;CAKC,GAED,mDAAmD;;;;AACnD;AAYO,SAAS,KAAK,KAAK,EAAE,IAAI;IAC9B,qBAAqB,GACrB,MAAM,SAAS;QAAC,MAAM;QAAQ,UAAU,MAAM,IAAI,CAAC,MAAM,GAAG,CAAC;IAAM;IACnE,MAAM,KAAK,CAAC,MAAM;IAClB,OAAO,MAAM,SAAS,CAAC,MAAM;AAC/B","ignoreList":[0]}},
    {"offset": {"line": 20032, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20038, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-hast/lib/handlers/strong.js"],"sourcesContent":["/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC,GAED,mDAAmD;;;;AACnD;AAYO,SAAS,OAAO,KAAK,EAAE,IAAI;IAChC,oBAAoB,GACpB,MAAM,SAAS;QACb,MAAM;QACN,SAAS;QACT,YAAY,CAAC;QACb,UAAU,MAAM,GAAG,CAAC;IACtB;IACA,MAAM,KAAK,CAAC,MAAM;IAClB,OAAO,MAAM,SAAS,CAAC,MAAM;AAC/B","ignoreList":[0]}},
    {"offset": {"line": 20057, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20063, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-hast/lib/handlers/table.js"],"sourcesContent":["/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointEnd, pointStart} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start && end) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;AAED;;AAYO,SAAS,MAAM,KAAK,EAAE,IAAI;IAC/B,MAAM,OAAO,MAAM,GAAG,CAAC;IACvB,MAAM,WAAW,KAAK,KAAK;IAC3B,2BAA2B,GAC3B,MAAM,eAAe,EAAE;IAEvB,IAAI,UAAU;QACZ,oBAAoB,GACpB,MAAM,OAAO;YACX,MAAM;YACN,SAAS;YACT,YAAY,CAAC;YACb,UAAU,MAAM,IAAI,CAAC;gBAAC;aAAS,EAAE;QACnC;QACA,MAAM,KAAK,CAAC,KAAK,QAAQ,CAAC,EAAE,EAAE;QAC9B,aAAa,IAAI,CAAC;IACpB;IAEA,IAAI,KAAK,MAAM,GAAG,GAAG;QACnB,oBAAoB,GACpB,MAAM,OAAO;YACX,MAAM;YACN,SAAS;YACT,YAAY,CAAC;YACb,UAAU,MAAM,IAAI,CAAC,MAAM;QAC7B;QAEA,MAAM,QAAQ,CAAA,GAAA,qJAAA,CAAA,aAAU,AAAD,EAAE,KAAK,QAAQ,CAAC,EAAE;QACzC,MAAM,MAAM,CAAA,GAAA,qJAAA,CAAA,WAAQ,AAAD,EAAE,KAAK,QAAQ,CAAC,KAAK,QAAQ,CAAC,MAAM,GAAG,EAAE;QAC5D,IAAI,SAAS,KAAK,KAAK,QAAQ,GAAG;YAAC;YAAO;QAAG;QAC7C,aAAa,IAAI,CAAC;IACpB;IAEA,oBAAoB,GACpB,MAAM,SAAS;QACb,MAAM;QACN,SAAS;QACT,YAAY,CAAC;QACb,UAAU,MAAM,IAAI,CAAC,cAAc;IACrC;IACA,MAAM,KAAK,CAAC,MAAM;IAClB,OAAO,MAAM,SAAS,CAAC,MAAM;AAC/B","ignoreList":[0]}},
    {"offset": {"line": 20112, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20118, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-hast/lib/handlers/table-cell.js"],"sourcesContent":["/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC,GAED,mDAAmD;;;;AACnD;AAYO,SAAS,UAAU,KAAK,EAAE,IAAI;IACnC,2EAA2E;IAC3E,gCAAgC;IAChC,oBAAoB,GACpB,MAAM,SAAS;QACb,MAAM;QACN,SAAS;QACT,YAAY,CAAC;QACb,UAAU,MAAM,GAAG,CAAC;IACtB;IACA,MAAM,KAAK,CAAC,MAAM;IAClB,OAAO,MAAM,SAAS,CAAC,MAAM;AAC/B","ignoreList":[0]}},
    {"offset": {"line": 20139, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20145, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-hast/lib/handlers/table-row.js"],"sourcesContent":["/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  // To do: option to use `style`?\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(cell, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n"],"names":[],"mappings":"AAAA;;;;;;;CAOC,GAED,mDAAmD;;;;AACnD;AAcO,SAAS,SAAS,KAAK,EAAE,IAAI,EAAE,MAAM;IAC1C,MAAM,WAAW,SAAS,OAAO,QAAQ,GAAG;IAC5C,2CAA2C;IAC3C,MAAM,WAAW,WAAW,SAAS,OAAO,CAAC,QAAQ;IACrD,MAAM,UAAU,aAAa,IAAI,OAAO;IACxC,gCAAgC;IAChC,MAAM,QAAQ,UAAU,OAAO,IAAI,KAAK,UAAU,OAAO,KAAK,GAAG;IACjE,MAAM,SAAS,QAAQ,MAAM,MAAM,GAAG,KAAK,QAAQ,CAAC,MAAM;IAC1D,IAAI,YAAY,CAAC;IACjB,kCAAkC,GAClC,MAAM,QAAQ,EAAE;IAEhB,MAAO,EAAE,YAAY,OAAQ;QAC3B,+BAA+B;QAC/B,MAAM,OAAO,KAAK,QAAQ,CAAC,UAAU;QACrC,uBAAuB,GACvB,MAAM,aAAa,CAAC;QACpB,MAAM,aAAa,QAAQ,KAAK,CAAC,UAAU,GAAG;QAE9C,IAAI,YAAY;YACd,WAAW,KAAK,GAAG;QACrB;QAEA,oBAAoB,GACpB,IAAI,SAAS;YAAC,MAAM;YAAW;YAAS;YAAY,UAAU,EAAE;QAAA;QAEhE,IAAI,MAAM;YACR,OAAO,QAAQ,GAAG,MAAM,GAAG,CAAC;YAC5B,MAAM,KAAK,CAAC,MAAM;YAClB,SAAS,MAAM,SAAS,CAAC,MAAM;QACjC;QAEA,MAAM,IAAI,CAAC;IACb;IAEA,oBAAoB,GACpB,MAAM,SAAS;QACb,MAAM;QACN,SAAS;QACT,YAAY,CAAC;QACb,UAAU,MAAM,IAAI,CAAC,OAAO;IAC9B;IACA,MAAM,KAAK,CAAC,MAAM;IAClB,OAAO,MAAM,SAAS,CAAC,MAAM;AAC/B","ignoreList":[0]}},
    {"offset": {"line": 20197, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20203, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-hast/lib/handlers/text.js"],"sourcesContent":["/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastElement | HastText}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;AAED;;AAYO,SAAS,KAAK,KAAK,EAAE,IAAI;IAC9B,qBAAqB,GACrB,MAAM,SAAS;QAAC,MAAM;QAAQ,OAAO,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD,EAAE,OAAO,KAAK,KAAK;IAAE;IAClE,MAAM,KAAK,CAAC,MAAM;IAClB,OAAO,MAAM,SAAS,CAAC,MAAM;AAC/B","ignoreList":[0]}},
    {"offset": {"line": 20221, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20227, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js"],"sourcesContent":["/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC,GAED,mDAAmD;;;;AACnD;AAYO,SAAS,cAAc,KAAK,EAAE,IAAI;IACvC,oBAAoB,GACpB,MAAM,SAAS;QACb,MAAM;QACN,SAAS;QACT,YAAY,CAAC;QACb,UAAU,EAAE;IACd;IACA,MAAM,KAAK,CAAC,MAAM;IAClB,OAAO,MAAM,SAAS,CAAC,MAAM;AAC/B","ignoreList":[0]}},
    {"offset": {"line": 20246, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20252, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-hast/lib/handlers/index.js"],"sourcesContent":["import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n *\n * @satisfies {import('../state.js').Handlers}\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  // @ts-expect-error: root is different, but hard to type.\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return undefined\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AADA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AAOO,MAAM,WAAW;IACtB,YAAA,wKAAA,CAAA,aAAU;IACV,OAAO,mKAAA,CAAA,YAAS;IAChB,MAAA,kKAAA,CAAA,OAAI;IACJ,QAAQ,oKAAA,CAAA,gBAAa;IACrB,UAAA,sKAAA,CAAA,WAAQ;IACR,mBAAA,mLAAA,CAAA,oBAAiB;IACjB,SAAA,qKAAA,CAAA,UAAO;IACP,MAAA,kKAAA,CAAA,OAAI;IACJ,gBAAA,gLAAA,CAAA,iBAAc;IACd,OAAA,mKAAA,CAAA,QAAK;IACL,YAAA,4KAAA,CAAA,aAAU;IACV,eAAA,+KAAA,CAAA,gBAAa;IACb,MAAA,kKAAA,CAAA,OAAI;IACJ,UAAA,0KAAA,CAAA,WAAQ;IACR,MAAA,kKAAA,CAAA,OAAI;IACJ,WAAA,uKAAA,CAAA,YAAS;IACT,yDAAyD;IACzD,MAAA,kKAAA,CAAA,OAAI;IACJ,QAAA,oKAAA,CAAA,SAAM;IACN,OAAA,mKAAA,CAAA,QAAK;IACL,WAAA,2KAAA,CAAA,YAAS;IACT,UAAA,0KAAA,CAAA,WAAQ;IACR,MAAA,kKAAA,CAAA,OAAI;IACJ,eAAA,+KAAA,CAAA,gBAAa;IACb,MAAM;IACN,MAAM;IACN,YAAY;IACZ,oBAAoB;AACtB;AAEA,6CAA6C;AAC7C,SAAS;IACP,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 20335, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20341, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-hast/lib/state.js"],"sourcesContent":["/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').RootContent} HastRootContent\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('mdast').Parents} MdastParents\n *\n * @typedef {import('vfile').VFile} VFile\n *\n * @typedef {import('./footer.js').FootnoteBackContentTemplate} FootnoteBackContentTemplate\n * @typedef {import('./footer.js').FootnoteBackLabelTemplate} FootnoteBackLabelTemplate\n */\n\n/**\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | undefined} parent\n *   Parent of `node`.\n * @returns {Array<HastElementContent> | HastElementContent | undefined}\n *   hast node.\n *\n * @typedef {Partial<Record<MdastNodes['type'], Handler>>} Handlers\n *   Handle nodes.\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree (default:\n *   `false`).\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` property on footnotes to prevent them from\n *   *clobbering* (default: `'user-content-'`).\n *\n *   Pass `''` for trusted markdown and when you are careful with\n *   polyfilling.\n *   You could pass a different prefix.\n *\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=\"x\"></p>\n *   <script>alert(x) // `x` now refers to the `p#x` DOM element</script>\n *   ```\n *\n *   The above example shows that elements are made available by browsers, by\n *   their ID, on the `window` object.\n *   This is a security risk because you might be expecting some other variable\n *   at that place.\n *   It can also break polyfills.\n *   Using a prefix solves these problems.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document (optional).\n * @property {FootnoteBackContentTemplate | string | null | undefined} [footnoteBackContent]\n *   Content of the backreference back to references (default: `defaultFootnoteBackContent`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackContent(_, rereferenceIndex) {\n *     const result = [{type: 'text', value: '↩'}]\n *\n *     if (rereferenceIndex > 1) {\n *       result.push({\n *         type: 'element',\n *         tagName: 'sup',\n *         properties: {},\n *         children: [{type: 'text', value: String(rereferenceIndex)}]\n *       })\n *     }\n *\n *     return result\n *   }\n *   ```\n *\n *   This content is used in the `a` element of each backreference (the `↩`\n *   links).\n * @property {FootnoteBackLabelTemplate | string | null | undefined} [footnoteBackLabel]\n *   Label to describe the backreference back to references (default:\n *   `defaultFootnoteBackLabel`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n *    return (\n *      'Back to reference ' +\n *      (referenceIndex + 1) +\n *      (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n *    )\n *   }\n *   ```\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is used in the `ariaLabel` property on each backreference\n *   (the `↩` links).\n *   It affects users of assistive technology.\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Textual label to use for the footnotes section (default: `'Footnotes'`).\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (default: `{className:\n *   ['sr-only']}`).\n *\n *   Change it to show the label and add other properties.\n *\n *   This label is typically hidden visually (assuming an `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass an empty string.\n *   You can also add different properties.\n *\n *   > **Note**: `id: 'footnote-label'` is always added, because footnote\n *   > calls use it with `aria-describedby` to provide an accessible label.\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   HTML tag name to use for the footnote label element (default: `'h2'`).\n *\n *   Change it to match your document structure.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes (optional).\n * @property {Array<MdastNodes['type']> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed)\n *   (optional).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes (optional).\n *\n * @typedef State\n *   Info passed around.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => HastElement | Type} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {Map<string, MdastDefinition>} definitionById\n *   Definitions by their identifier.\n * @property {Map<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Map<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {(node: MdastNodes, parent: MdastParents | undefined) => Array<HastElementContent> | HastElementContent | undefined} one\n *   Transform an mdast node to hast.\n * @property {Options} options\n *   Configuration.\n * @property {(from: MdastNodes, node: HastNodes) => undefined} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastRootContent>(nodes: Array<Type>, loose?: boolean | undefined) => Array<HastText | Type>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {visit} from 'unist-util-visit'\nimport {position} from 'unist-util-position'\nimport {handlers as defaultHandlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || emptyOptions\n  /** @type {Map<string, MdastDefinition>} */\n  const definitionById = new Map()\n  /** @type {Map<string, MdastFootnoteDefinition>} */\n  const footnoteById = new Map()\n  /** @type {Map<string, number>} */\n  const footnoteCounts = new Map()\n  /** @type {Handlers} */\n  // @ts-expect-error: the root handler returns a root.\n  // Hard to type.\n  const handlers = {...defaultHandlers, ...settings.handlers}\n\n  /** @type {State} */\n  const state = {\n    all,\n    applyData,\n    definitionById,\n    footnoteById,\n    footnoteCounts,\n    footnoteOrder: [],\n    handlers,\n    one,\n    options: settings,\n    patch,\n    wrap\n  }\n\n  visit(tree, function (node) {\n    if (node.type === 'definition' || node.type === 'footnoteDefinition') {\n      const map = node.type === 'definition' ? definitionById : footnoteById\n      const id = String(node.identifier).toUpperCase()\n\n      // Mimick CM behavior of link definitions.\n      // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/9032189/lib/index.js#L20-L21>.\n      if (!map.has(id)) {\n        // @ts-expect-error: node type matches map.\n        map.set(id, node)\n      }\n    }\n  })\n\n  return state\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {Array<HastElementContent> | HastElementContent | undefined}\n   *   Resulting hast node.\n   */\n  function one(node, parent) {\n    const type = node.type\n    const handle = state.handlers[type]\n\n    if (own.call(state.handlers, type) && handle) {\n      return handle(state, node, parent)\n    }\n\n    if (state.options.passThrough && state.options.passThrough.includes(type)) {\n      if ('children' in node) {\n        const {children, ...shallow} = node\n        const result = structuredClone(shallow)\n        // @ts-expect-error: TS doesn’t understand…\n        result.children = state.all(node)\n        // @ts-expect-error: TS doesn’t understand…\n        return result\n      }\n\n      // @ts-expect-error: it’s custom.\n      return structuredClone(node)\n    }\n\n    const unknown = state.options.unknownHandler || defaultUnknownHandler\n\n    return unknown(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function all(parent) {\n    /** @type {Array<HastElementContent>} */\n    const values = []\n\n    if ('children' in parent) {\n      const nodes = parent.children\n      let index = -1\n      while (++index < nodes.length) {\n        const result = state.one(nodes[index], parent)\n\n        // To do: see if we van clean this? Can we merge texts?\n        if (result) {\n          if (index && nodes[index - 1].type === 'break') {\n            if (!Array.isArray(result) && result.type === 'text') {\n              result.value = trimMarkdownSpaceStart(result.value)\n            }\n\n            if (!Array.isArray(result) && result.type === 'element') {\n              const head = result.children[0]\n\n              if (head && head.type === 'text') {\n                head.value = trimMarkdownSpaceStart(head.value)\n              }\n            }\n          }\n\n          if (Array.isArray(result)) {\n            values.push(...result)\n          } else {\n            values.push(result)\n          }\n        }\n      }\n    }\n\n    return values\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {HastElement | Type}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {HastElement | Type} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent of `hName` is to create an element, but likely also to keep\n      // the content around (otherwise: pass `hChildren`).\n      else {\n        /** @type {Array<HastElementContent>} */\n        // @ts-expect-error: assume no doctypes in `root`.\n        const children = 'children' in result ? result.children : [result]\n        result = {type: 'element', tagName: hName, properties: {}, children}\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      Object.assign(result.properties, structuredClone(hProperties))\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastElement | HastText}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastElement | HastText} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: state.all(node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastRootContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | undefined} [loose=false]\n *   Whether to add line endings at start and end (default: `false`).\n * @returns {Array<HastText | Type>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<HastText | Type>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n\n/**\n * Trim spaces and tabs at the start of `value`.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Result.\n */\nfunction trimMarkdownSpaceStart(value) {\n  let index = 0\n  let code = value.charCodeAt(index)\n\n  while (code === 9 || code === 32) {\n    index++\n    code = value.charCodeAt(index)\n  }\n\n  return value.slice(index)\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 20751, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20757, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-hast/lib/footer.js"],"sourcesContent":["/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @callback FootnoteBackContentTemplate\n *   Generate content for the backreference dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent> | ElementContent | string}\n *   Content for the backreference when linking back from definitions to their\n *   reference.\n *\n * @callback FootnoteBackLabelTemplate\n *   Generate a back label dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Back label to use when linking back from definitions to their reference.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate the default content that GitHub uses on backreferences.\n *\n * @param {number} _\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent>}\n *   Content.\n */\nexport function defaultFootnoteBackContent(_, rereferenceIndex) {\n  /** @type {Array<ElementContent>} */\n  const result = [{type: 'text', value: '↩'}]\n\n  if (rereferenceIndex > 1) {\n    result.push({\n      type: 'element',\n      tagName: 'sup',\n      properties: {},\n      children: [{type: 'text', value: String(rereferenceIndex)}]\n    })\n  }\n\n  return result\n}\n\n/**\n * Generate the default label that GitHub uses on backreferences.\n *\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Label.\n */\nexport function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n  return (\n    'Back to reference ' +\n    (referenceIndex + 1) +\n    (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n  )\n}\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\n// eslint-disable-next-line complexity\nexport function footer(state) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const footnoteBackContent =\n    state.options.footnoteBackContent || defaultFootnoteBackContent\n  const footnoteBackLabel =\n    state.options.footnoteBackLabel || defaultFootnoteBackLabel\n  const footnoteLabel = state.options.footnoteLabel || 'Footnotes'\n  const footnoteLabelTagName = state.options.footnoteLabelTagName || 'h2'\n  const footnoteLabelProperties = state.options.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let referenceIndex = -1\n\n  while (++referenceIndex < state.footnoteOrder.length) {\n    const definition = state.footnoteById.get(\n      state.footnoteOrder[referenceIndex]\n    )\n\n    if (!definition) {\n      continue\n    }\n\n    const content = state.all(definition)\n    const id = String(definition.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let rereferenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n    const counts = state.footnoteCounts.get(id)\n\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (counts !== undefined && ++rereferenceIndex <= counts) {\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      let children =\n        typeof footnoteBackContent === 'string'\n          ? footnoteBackContent\n          : footnoteBackContent(referenceIndex, rereferenceIndex)\n\n      if (typeof children === 'string') {\n        children = {type: 'text', value: children}\n      }\n\n      backReferences.push({\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            clobberPrefix +\n            'fnref-' +\n            safeId +\n            (rereferenceIndex > 1 ? '-' + rereferenceIndex : ''),\n          dataFootnoteBackref: '',\n          ariaLabel:\n            typeof footnoteBackLabel === 'string'\n              ? footnoteBackLabel\n              : footnoteBackLabel(referenceIndex, rereferenceIndex),\n          className: ['data-footnote-backref']\n        },\n        children: Array.isArray(children) ? children : [children]\n      })\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(definition, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: footnoteLabelTagName,\n        properties: {\n          ...structuredClone(footnoteLabelProperties),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 20978, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20984, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-hast/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('./state.js').Options} Options\n */\n\nimport {ok as assert} from 'devlop'\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {HastNodes}\n *   hast tree.\n */\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, undefined)\n  const foot = footer(state)\n  /** @type {HastNodes} */\n  const result = Array.isArray(node)\n    ? {type: 'root', children: node}\n    : node || {type: 'root', children: []}\n\n  if (foot) {\n    // If there’s a footer, there were definitions, meaning block\n    // content.\n    // So `result` is a parent node.\n    assert('children' in result)\n    result.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  return result\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;AAID;AADA;AADA;;;;AAiFO,SAAS,OAAO,IAAI,EAAE,OAAO;IAClC,MAAM,QAAQ,CAAA,GAAA,uJAAA,CAAA,cAAW,AAAD,EAAE,MAAM;IAChC,MAAM,OAAO,MAAM,GAAG,CAAC,MAAM;IAC7B,MAAM,OAAO,CAAA,GAAA,wJAAA,CAAA,SAAM,AAAD,EAAE;IACpB,sBAAsB,GACtB,MAAM,SAAS,MAAM,OAAO,CAAC,QACzB;QAAC,MAAM;QAAQ,UAAU;IAAI,IAC7B,QAAQ;QAAC,MAAM;QAAQ,UAAU,EAAE;IAAA;IAEvC,IAAI,MAAM;QACR,6DAA6D;QAC7D,WAAW;QACX,gCAAgC;QAChC,CAAA,GAAA,wIAAA,CAAA,KAAM,AAAD,EAAE,cAAc;QACrB,OAAO,QAAQ,CAAC,IAAI,CAAC;YAAC,MAAM;YAAQ,OAAO;QAAI,GAAG;IACpD;IAEA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 21020, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21026, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-util-encode/index.js"],"sourcesContent":["const characterReferences = {'\"': 'quot', '&': 'amp', '<': 'lt', '>': 'gt'}\n\n/**\n * Encode only the dangerous HTML characters.\n *\n * This ensures that certain characters which have special meaning in HTML are\n * dealt with.\n * Technically, we can skip `>` and `\"` in many cases, but CM includes them.\n *\n * @param {string} value\n *   Value to encode.\n * @returns {string}\n *   Encoded value.\n */\nexport function encode(value) {\n  return value.replace(/[\"&<>]/g, replace)\n\n  /**\n   * @param {string} value\n   *   Value to replace.\n   * @returns {string}\n   *   Encoded value.\n   */\n  function replace(value) {\n    return (\n      '&' +\n      characterReferences[\n        /** @type {keyof typeof characterReferences} */ (value)\n      ] +\n      ';'\n    )\n  }\n}\n"],"names":[],"mappings":";;;AAAA,MAAM,sBAAsB;IAAC,KAAK;IAAQ,KAAK;IAAO,KAAK;IAAM,KAAK;AAAI;AAcnE,SAAS,OAAO,KAAK;IAC1B,OAAO,MAAM,OAAO,CAAC,WAAW;;IAEhC;;;;;GAKC,GACD,SAAS,QAAQ,KAAK;QACpB,OACE,MACA,mBAAmB,CACgC,MAClD,GACD;IAEJ;AACF","ignoreList":[0]}},
    {"offset": {"line": 21047, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21053, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-util-sanitize-uri/dev/index.js"],"sourcesContent":["import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\nimport {codes, values} from 'micromark-util-symbol'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | null | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n    let replace = ''\n\n    // A correct percent encoded value.\n    if (\n      code === codes.percentSign &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    }\n    // Astral.\n    else if (code > 55_295 && code < 57_344) {\n      const next = value.charCodeAt(index + 1)\n\n      // A correct surrogate pair.\n      if (code < 56_320 && next > 56_319 && next < 57_344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      }\n      // Lone surrogate.\n      else {\n        replace = values.replacementCharacter\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AAFA;AAEA;;;;AAwBO,SAAS,YAAY,GAAG,EAAE,QAAQ;IACvC,MAAM,QAAQ,CAAA,GAAA,gJAAA,CAAA,SAAM,AAAD,EAAE,aAAa,OAAO;IAEzC,IAAI,CAAC,UAAU;QACb,OAAO;IACT;IAEA,MAAM,QAAQ,MAAM,OAAO,CAAC;IAC5B,MAAM,eAAe,MAAM,OAAO,CAAC;IACnC,MAAM,aAAa,MAAM,OAAO,CAAC;IACjC,MAAM,QAAQ,MAAM,OAAO,CAAC;IAE5B,IACE,0CAA0C;IAC1C,QAAQ,KAEP,QAAQ,CAAC,KAAK,QAAQ,SACtB,eAAe,CAAC,KAAK,QAAQ,gBAC7B,aAAa,CAAC,KAAK,QAAQ,cAC5B,0CAA0C;IAC1C,SAAS,IAAI,CAAC,MAAM,KAAK,CAAC,GAAG,SAC7B;QACA,OAAO;IACT;IAEA,OAAO;AACT;AAaO,SAAS,aAAa,KAAK;IAChC,0BAA0B,GAC1B,MAAM,SAAS,EAAE;IACjB,IAAI,QAAQ,CAAC;IACb,IAAI,QAAQ;IACZ,IAAI,OAAO;IAEX,MAAO,EAAE,QAAQ,MAAM,MAAM,CAAE;QAC7B,MAAM,OAAO,MAAM,UAAU,CAAC;QAC9B,mBAAmB,GACnB,IAAI,UAAU;QAEd,mCAAmC;QACnC,IACE,SAAS,uJAAA,CAAA,QAAK,CAAC,WAAW,IAC1B,CAAA,GAAA,0JAAA,CAAA,oBAAiB,AAAD,EAAE,MAAM,UAAU,CAAC,QAAQ,OAC3C,CAAA,GAAA,0JAAA,CAAA,oBAAiB,AAAD,EAAE,MAAM,UAAU,CAAC,QAAQ,KAC3C;YACA,OAAO;QACT,OAEK,IAAI,OAAO,KAAK;YACnB,IAAI,CAAC,oBAAoB,IAAI,CAAC,OAAO,YAAY,CAAC,QAAQ;gBACxD,UAAU,OAAO,YAAY,CAAC;YAChC;QACF,OAEK,IAAI,OAAO,UAAU,OAAO,QAAQ;YACvC,MAAM,OAAO,MAAM,UAAU,CAAC,QAAQ;YAEtC,4BAA4B;YAC5B,IAAI,OAAO,UAAU,OAAO,UAAU,OAAO,QAAQ;gBACnD,UAAU,OAAO,YAAY,CAAC,MAAM;gBACpC,OAAO;YACT,OAEK;gBACH,UAAU,wJAAA,CAAA,SAAM,CAAC,oBAAoB;YACvC;QACF,OAEK;YACH,UAAU,OAAO,YAAY,CAAC;QAChC;QAEA,IAAI,SAAS;YACX,OAAO,IAAI,CAAC,MAAM,KAAK,CAAC,OAAO,QAAQ,mBAAmB;YAC1D,QAAQ,QAAQ,OAAO;YACvB,UAAU;QACZ;QAEA,IAAI,MAAM;YACR,SAAS;YACT,OAAO;QACT;IACF;IAEA,OAAO,OAAO,IAAI,CAAC,MAAM,MAAM,KAAK,CAAC;AACvC","ignoreList":[0]}},
    {"offset": {"line": 21119, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21125, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/unist-util-position/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC,GAED;;;;;;;;;;;;;CAaC,GAED;;;;;;;CAOC;;;;;AACM,MAAM,WAAW,MAAM;AAUvB,MAAM,aAAa,MAAM;AAEhC;;;;;;;CAOC,GACD,SAAS,MAAM,IAAI;IACjB,OAAO;;IAEP;;;;;GAKC,GACD,SAAS,MAAM,IAAI;QACjB,MAAM,QAAQ,AAAC,QAAQ,KAAK,QAAQ,IAAI,KAAK,QAAQ,CAAC,KAAK,IAAK,CAAC;QAEjE,IACE,OAAO,MAAM,IAAI,KAAK,YACtB,MAAM,IAAI,GAAG,KACb,OAAO,MAAM,MAAM,KAAK,YACxB,MAAM,MAAM,GAAG,GACf;YACA,OAAO;gBACL,MAAM,MAAM,IAAI;gBAChB,QAAQ,MAAM,MAAM;gBACpB,QACE,OAAO,MAAM,MAAM,KAAK,YAAY,MAAM,MAAM,GAAG,CAAC,IAChD,MAAM,MAAM,GACZ;YACR;QACF;IACF;AACF;AAUO,SAAS,SAAS,IAAI;IAC3B,MAAM,QAAQ,WAAW;IACzB,MAAM,MAAM,SAAS;IAErB,IAAI,SAAS,KAAK;QAChB,OAAO;YAAC;YAAO;QAAG;IACpB;AACF","ignoreList":[0]}},
    {"offset": {"line": 21192, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21198, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/trim-lines/index.js"],"sourcesContent":["const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n"],"names":[],"mappings":";;;AAAA,MAAM,MAAM,EAAE,QAAQ;AACtB,MAAM,QAAQ,GAAG,OAAO;AAWjB,SAAS,UAAU,KAAK;IAC7B,MAAM,SAAS,OAAO;IACtB,MAAM,SAAS;IACf,IAAI,QAAQ,OAAO,IAAI,CAAC;IACxB,IAAI,OAAO;IACX,0BAA0B,GAC1B,MAAM,QAAQ,EAAE;IAEhB,MAAO,MAAO;QACZ,MAAM,IAAI,CACR,SAAS,OAAO,KAAK,CAAC,MAAM,MAAM,KAAK,GAAG,OAAO,GAAG,OACpD,KAAK,CAAC,EAAE;QAGV,OAAO,MAAM,KAAK,GAAG,KAAK,CAAC,EAAE,CAAC,MAAM;QACpC,QAAQ,OAAO,IAAI,CAAC;IACtB;IAEA,MAAM,IAAI,CAAC,SAAS,OAAO,KAAK,CAAC,OAAO,OAAO,GAAG;IAElD,OAAO,MAAM,IAAI,CAAC;AACpB;AAEA;;;;;;;;;CASC,GACD,SAAS,SAAS,KAAK,EAAE,KAAK,EAAE,GAAG;IACjC,IAAI,aAAa;IACjB,IAAI,WAAW,MAAM,MAAM;IAE3B,IAAI,OAAO;QACT,IAAI,OAAO,MAAM,WAAW,CAAC;QAE7B,MAAO,SAAS,OAAO,SAAS,MAAO;YACrC;YACA,OAAO,MAAM,WAAW,CAAC;QAC3B;IACF;IAEA,IAAI,KAAK;QACP,IAAI,OAAO,MAAM,WAAW,CAAC,WAAW;QAExC,MAAO,SAAS,OAAO,SAAS,MAAO;YACrC;YACA,OAAO,MAAM,WAAW,CAAC,WAAW;QACtC;IACF;IAEA,OAAO,WAAW,aAAa,MAAM,KAAK,CAAC,YAAY,YAAY;AACrE","ignoreList":[0]}},
    {"offset": {"line": 21245, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21251, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/%40ungap/structured-clone/esm/types.js"],"sourcesContent":["export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n"],"names":[],"mappings":";;;;;;;;;;;;AAAO,MAAM,OAAa,CAAC;AACpB,MAAM,YAAa;AACnB,MAAM,QAAa;AACnB,MAAM,SAAa;AACnB,MAAM,OAAa;AACnB,MAAM,SAAa;AACnB,MAAM,MAAa;AACnB,MAAM,MAAa;AACnB,MAAM,QAAa;AACnB,MAAM,SAAa,GAC1B,2BAA2B","ignoreList":[0]}},
    {"offset": {"line": 21273, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21279, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/%40ungap/structured-clone/esm/deserialize.js"],"sourcesContent":["import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n      case 'ArrayBuffer':\n        return as(new Uint8Array(value).buffer, value);\n      case 'DataView': {\n        const { buffer } = new Uint8Array(value);\n        return as(new DataView(buffer), value);\n      }\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n"],"names":[],"mappings":";;;AAAA;;AAOA,MAAM,MAAM,OAAO,SAAS,WAAW,OAAO;AAE9C,MAAM,eAAe,CAAC,GAAG;IACvB,MAAM,KAAK,CAAC,KAAK;QACf,EAAE,GAAG,CAAC,OAAO;QACb,OAAO;IACT;IAEA,MAAM,SAAS,CAAA;QACb,IAAI,EAAE,GAAG,CAAC,QACR,OAAO,EAAE,GAAG,CAAC;QAEf,MAAM,CAAC,MAAM,MAAM,GAAG,CAAC,CAAC,MAAM;QAC9B,OAAQ;YACN,KAAK,0JAAA,CAAA,YAAS;YACd,KAAK,0JAAA,CAAA,OAAI;gBACP,OAAO,GAAG,OAAO;YACnB,KAAK,0JAAA,CAAA,QAAK;gBAAE;oBACV,MAAM,MAAM,GAAG,EAAE,EAAE;oBACnB,KAAK,MAAM,SAAS,MAClB,IAAI,IAAI,CAAC,OAAO;oBAClB,OAAO;gBACT;YACA,KAAK,0JAAA,CAAA,SAAM;gBAAE;oBACX,MAAM,SAAS,GAAG,CAAC,GAAG;oBACtB,KAAK,MAAM,CAAC,KAAK,MAAM,IAAI,MACzB,MAAM,CAAC,OAAO,KAAK,GAAG,OAAO;oBAC/B,OAAO;gBACT;YACA,KAAK,0JAAA,CAAA,OAAI;gBACP,OAAO,GAAG,IAAI,KAAK,QAAQ;YAC7B,KAAK,0JAAA,CAAA,SAAM;gBAAE;oBACX,MAAM,EAAC,MAAM,EAAE,KAAK,EAAC,GAAG;oBACxB,OAAO,GAAG,IAAI,OAAO,QAAQ,QAAQ;gBACvC;YACA,KAAK,0JAAA,CAAA,MAAG;gBAAE;oBACR,MAAM,MAAM,GAAG,IAAI,KAAK;oBACxB,KAAK,MAAM,CAAC,KAAK,MAAM,IAAI,MACzB,IAAI,GAAG,CAAC,OAAO,MAAM,OAAO;oBAC9B,OAAO;gBACT;YACA,KAAK,0JAAA,CAAA,MAAG;gBAAE;oBACR,MAAM,MAAM,GAAG,IAAI,KAAK;oBACxB,KAAK,MAAM,SAAS,MAClB,IAAI,GAAG,CAAC,OAAO;oBACjB,OAAO;gBACT;YACA,KAAK,0JAAA,CAAA,QAAK;gBAAE;oBACV,MAAM,EAAC,IAAI,EAAE,OAAO,EAAC,GAAG;oBACxB,OAAO,GAAG,IAAI,GAAG,CAAC,KAAK,CAAC,UAAU;gBACpC;YACA,KAAK,0JAAA,CAAA,SAAM;gBACT,OAAO,GAAG,OAAO,QAAQ;YAC3B,KAAK;gBACH,OAAO,GAAG,OAAO,OAAO,SAAS;YACnC,KAAK;gBACH,OAAO,GAAG,IAAI,WAAW,OAAO,MAAM,EAAE;YAC1C,KAAK;gBAAY;oBACf,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,WAAW;oBAClC,OAAO,GAAG,IAAI,SAAS,SAAS;gBAClC;QACF;QACA,OAAO,GAAG,IAAI,GAAG,CAAC,KAAK,CAAC,QAAQ;IAClC;IAEA,OAAO;AACT;AAWO,MAAM,cAAc,CAAA,aAAc,aAAa,IAAI,KAAK,YAAY","ignoreList":[0]}},
    {"offset": {"line": 21350, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21356, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/%40ungap/structured-clone/esm/serialize.js"],"sourcesContent":["import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n    case 'DataView':\n      return [ARRAY, asString];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type) {\n          let spread = value;\n          if (type === 'DataView') {\n            spread = new Uint8Array(value.buffer);\n          }\n          else if (type === 'ArrayBuffer') {\n            spread = new Uint8Array(value);\n          }\n          return as([type, [...spread]], value);\n        }\n\n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 21570, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21576, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/%40ungap/structured-clone/esm/index.js"],"sourcesContent":["import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n"],"names":[],"mappings":";;;AAAA;AACA;;;uCAce,OAAO,oBAAoB,aACxC,mBAAmB,GACnB,CAAC,KAAK,UACJ,WAAW,CAAC,UAAU,WAAW,WAAW,OAAO,IACjD,CAAA,GAAA,gKAAA,CAAA,cAAW,AAAD,EAAE,CAAA,GAAA,8JAAA,CAAA,YAAS,AAAD,EAAE,KAAK,YAAY,gBAAgB,OAE3D,CAAC,KAAK,UAAY,CAAA,GAAA,gKAAA,CAAA,cAAW,AAAD,EAAE,CAAA,GAAA,8JAAA,CAAA,YAAS,AAAD,EAAE,KAAK","ignoreList":[0]}},
    {"offset": {"line": 21585, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21591, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/remark-rehype/lib/index.js"],"sourcesContent":["// Include `data` fields in mdast and `raw` nodes in hast.\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @import {Root as HastRoot} from 'hast'\n * @import {Root as MdastRoot} from 'mdast'\n * @import {Options as ToHastOptions} from 'mdast-util-to-hast'\n * @import {Processor} from 'unified'\n * @import {VFile} from 'vfile'\n */\n\n/**\n * @typedef {Omit<ToHastOptions, 'file'>} Options\n *\n * @callback TransformBridge\n *   Bridge-mode.\n *\n *   Runs the destination with the new hast tree.\n *   Discards result.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {Promise<undefined>}\n *   Nothing.\n *\n * @callback TransformMutate\n *  Mutate-mode.\n *\n *  Further transformers run on the hast tree.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {HastRoot}\n *   Tree (hast).\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n/**\n * Turn markdown into HTML.\n *\n * ##### Notes\n *\n * ###### Signature\n *\n * *   if a processor is given, runs the (rehype) plugins used on it with a\n *     hast tree, then discards the result (*bridge mode*)\n * *   otherwise, returns a hast tree, the plugins used after `remarkRehype`\n *     are rehype plugins (*mutate mode*)\n *\n * > 👉 **Note**: It’s highly unlikely that you want to pass a `processor`.\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most plugins ignore `raw` nodes but two notable ones don’t:\n *\n * *   `rehype-stringify` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful if\n *     you completely trust authors\n * *   `rehype-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only way\n *     to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `remark-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * *Example: headings (DOM clobbering)* in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @overload\n * @param {Processor} processor\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge}\n *\n * @overload\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformMutate}\n *\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n *   Processor or configuration (optional).\n * @param {Readonly<Options> | null | undefined} [options]\n *   When a processor was given, configuration (optional).\n * @returns {TransformBridge | TransformMutate}\n *   Transform.\n */\nexport default function remarkRehype(destination, options) {\n  if (destination && 'run' in destination) {\n    /**\n     * @type {TransformBridge}\n     */\n    return async function (tree, file) {\n      // Cast because root in -> root out.\n      const hastTree = /** @type {HastRoot} */ (\n        toHast(tree, {file, ...options})\n      )\n      await destination.run(hastTree, file)\n    }\n  }\n\n  /**\n   * @type {TransformMutate}\n   */\n  return function (tree, file) {\n    // Cast because root in -> root out.\n    // To do: in the future, disallow ` || options` fallback.\n    // With `unified-engine`, `destination` can be `undefined` but\n    // `options` will be the file set.\n    // We should not pass that as `options`.\n    return /** @type {HastRoot} */ (\n      toHast(tree, {file, ...(destination || options)})\n    )\n  }\n}\n"],"names":[],"mappings":"AAAA,0DAA0D;AAC1D,4CAA4C;AAE5C;;;;;;CAMC,GAED;;;;;;;;;;;;;;;;;;;;;;;;;CAyBC;;;AAED;;AAiGe,SAAS,aAAa,WAAW,EAAE,OAAO;IACvD,IAAI,eAAe,SAAS,aAAa;QACvC;;KAEC,GACD,OAAO,eAAgB,IAAI,EAAE,IAAI;YAC/B,oCAAoC;YACpC,MAAM,WACJ,CAAA,GAAA,uJAAA,CAAA,SAAM,AAAD,EAAE,MAAM;gBAAC;gBAAM,GAAG,OAAO;YAAA;YAEhC,MAAM,YAAY,GAAG,CAAC,UAAU;QAClC;IACF;IAEA;;GAEC,GACD,OAAO,SAAU,IAAI,EAAE,IAAI;QACzB,oCAAoC;QACpC,yDAAyD;QACzD,8DAA8D;QAC9D,kCAAkC;QAClC,wCAAwC;QACxC,OACE,CAAA,GAAA,uJAAA,CAAA,SAAM,AAAD,EAAE,MAAM;YAAC;YAAM,GAAI,eAAe,OAAO;QAAC;IAEnD;AACF","ignoreList":[0]}},
    {"offset": {"line": 21656, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21662, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/zwitch/index.js"],"sourcesContent":["/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nexport function zwitch(key, options) {\n  const settings = options || {}\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid\n    const handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key])\n      // @ts-expect-error Indexable.\n      fn = own.call(handlers, id) ? handlers[id] : one.unknown\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  // @ts-expect-error: matches!\n  return one\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;CAUC,GAED;;;;;;;;;;CAUC,GAED;;;;;;;;;CASC,GAED;;;;;;;;;;;;CAYC;;;AAED,MAAM,MAAM,CAAC,EAAE,cAAc;AActB,SAAS,OAAO,GAAG,EAAE,OAAO;IACjC,MAAM,WAAW,WAAW,CAAC;IAE7B;;;;;;;;;;;;;;;;;;;;;;;;;;;GA2BC,GACD,SAAS,IAAI,KAAK,EAAE,GAAG,UAAU;QAC/B,8BAA8B,GAC9B,IAAI,KAAK,IAAI,OAAO;QACpB,MAAM,WAAW,IAAI,QAAQ;QAE7B,IAAI,SAAS,IAAI,IAAI,CAAC,OAAO,MAAM;YACjC,8BAA8B;YAC9B,MAAM,KAAK,OAAO,KAAK,CAAC,IAAI;YAC5B,8BAA8B;YAC9B,KAAK,IAAI,IAAI,CAAC,UAAU,MAAM,QAAQ,CAAC,GAAG,GAAG,IAAI,OAAO;QAC1D;QAEA,IAAI,IAAI;YACN,OAAO,GAAG,IAAI,CAAC,IAAI,EAAE,UAAU;QACjC;IACF;IAEA,IAAI,QAAQ,GAAG,SAAS,QAAQ,IAAI,CAAC;IACrC,IAAI,OAAO,GAAG,SAAS,OAAO;IAC9B,IAAI,OAAO,GAAG,SAAS,OAAO;IAE9B,6BAA6B;IAC7B,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 21755, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21761, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/hast-util-to-estree/lib/handlers/comment.js"],"sourcesContent":["/**\n * @import {\n *   JSXEmptyExpression as JsxEmptyExpression,\n *   JSXExpressionContainer as JsxExpressionContainer,\n * } from 'estree-jsx'\n * @import {Comment} from 'estree'\n * @import {State} from 'hast-util-to-estree'\n * @import {Comment as HastComment} from 'hast'\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn a hast comment into an estree node.\n *\n * @param {HastComment} node\n *   hast node to transform.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {JsxExpressionContainer}\n *   estree expression.\n */\nexport function comment(node, state) {\n  /** @type {Comment} */\n  const result = {type: 'Block', value: node.value}\n  state.inherit(node, result)\n  state.comments.push(result)\n\n  /** @type {JsxEmptyExpression} */\n  const expression = {\n    type: 'JSXEmptyExpression',\n    // @ts-expect-error: `comments` is custom.\n    comments: [Object.assign({}, result, {leading: false, trailing: true})]\n  }\n  state.patch(node, expression)\n\n  /** @type {JsxExpressionContainer} */\n  const container = {type: 'JSXExpressionContainer', expression}\n  state.patch(node, container)\n  return container\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;CAQC,GAED,mDAAmD;;;;AACnD;AAYO,SAAS,QAAQ,IAAI,EAAE,KAAK;IACjC,oBAAoB,GACpB,MAAM,SAAS;QAAC,MAAM;QAAS,OAAO,KAAK,KAAK;IAAA;IAChD,MAAM,OAAO,CAAC,MAAM;IACpB,MAAM,QAAQ,CAAC,IAAI,CAAC;IAEpB,+BAA+B,GAC/B,MAAM,aAAa;QACjB,MAAM;QACN,0CAA0C;QAC1C,UAAU;YAAC,OAAO,MAAM,CAAC,CAAC,GAAG,QAAQ;gBAAC,SAAS;gBAAO,UAAU;YAAI;SAAG;IACzE;IACA,MAAM,KAAK,CAAC,MAAM;IAElB,mCAAmC,GACnC,MAAM,YAAY;QAAC,MAAM;QAA0B;IAAU;IAC7D,MAAM,KAAK,CAAC,MAAM;IAClB,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 21799, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21805, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/hast-util-to-estree/lib/handlers/element.js"],"sourcesContent":["/**\n * @import {\n *   JSXAttribute as JsxAttribute,\n *   JSXElement as JsxElement,\n *   JSXSpreadAttribute as JsxSpreadAttribute,\n * } from 'estree-jsx'\n * @import {Property} from 'estree'\n * @import {State} from 'hast-util-to-estree'\n * @import {Element as HastElement} from 'hast'\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {name as identifierName} from 'estree-util-is-identifier-name'\nimport {find, hastToReact, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport styleToObject from 'style-to-object'\n\nconst own = {}.hasOwnProperty\nconst cap = /[A-Z]/g\nconst dashSomething = /-([a-z])/g\n\nconst tableCellElement = new Set(['td', 'th'])\n\n/**\n * Turn a hast element into an estree node.\n *\n * @param {HastElement} node\n *   hast node to transform.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {JsxElement}\n *   estree expression.\n */\n// eslint-disable-next-line complexity\nexport function element(node, state) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n  const properties = node.properties || {}\n\n  if (parentSchema.space === 'html' && node.tagName.toLowerCase() === 'svg') {\n    schema = svg\n    state.schema = schema\n  }\n\n  const children = state.all(node)\n\n  /** @type {Array<JsxAttribute | JsxSpreadAttribute>} */\n  const attributes = []\n  /** @type {string} */\n  let property\n  /** @type {string | undefined} */\n  let alignValue\n  /** @type {Array<Property> | undefined} */\n  let styleProperties\n\n  for (property in properties) {\n    if (own.call(properties, property)) {\n      let value = properties[property]\n      const info = find(schema, property)\n      /** @type {JsxAttribute['value']} */\n      let attributeValue\n\n      // Ignore nullish and `NaN` values.\n      // Ignore `false` and falsey known booleans.\n      if (\n        value === null ||\n        value === undefined ||\n        value === false ||\n        (typeof value === 'number' && Number.isNaN(value)) ||\n        (!value && info.boolean)\n      ) {\n        continue\n      }\n\n      property =\n        state.elementAttributeNameCase === 'react' && info.space\n          ? hastToReact[info.property] || info.property\n          : info.attribute\n\n      if (Array.isArray(value)) {\n        // Accept `array`.\n        // Most properties are space-separated.\n        value = info.commaSeparated ? commas(value) : spaces(value)\n      }\n\n      if (property === 'style') {\n        let styleObject =\n          typeof value === 'object'\n            ? value\n            : parseStyle(String(value), node.tagName)\n\n        if (state.stylePropertyNameCase === 'css') {\n          styleObject = transformStylesToCssCasing(styleObject)\n        }\n\n        /** @type {Array<Property>} */\n        const cssProperties = []\n        /** @type {string} */\n        let cssProperty\n\n        for (cssProperty in styleObject) {\n          // eslint-disable-next-line max-depth\n          if (own.call(styleObject, cssProperty)) {\n            cssProperties.push({\n              type: 'Property',\n              method: false,\n              shorthand: false,\n              computed: false,\n              key: identifierName(cssProperty)\n                ? {type: 'Identifier', name: cssProperty}\n                : {type: 'Literal', value: cssProperty},\n              value: {type: 'Literal', value: String(styleObject[cssProperty])},\n              kind: 'init'\n            })\n          }\n        }\n\n        styleProperties = cssProperties\n        attributeValue = {\n          type: 'JSXExpressionContainer',\n          expression: {type: 'ObjectExpression', properties: cssProperties}\n        }\n      } else if (value === true) {\n        attributeValue = null\n      } else if (\n        state.tableCellAlignToStyle &&\n        tableCellElement.has(node.tagName) &&\n        property === 'align'\n      ) {\n        alignValue = String(value)\n        continue\n      } else {\n        attributeValue = {type: 'Literal', value: String(value)}\n      }\n\n      if (identifierName(property, {jsx: true})) {\n        attributes.push({\n          type: 'JSXAttribute',\n          name: {type: 'JSXIdentifier', name: property},\n          value: attributeValue\n        })\n      } else {\n        attributes.push({\n          type: 'JSXSpreadAttribute',\n          argument: {\n            type: 'ObjectExpression',\n            properties: [\n              {\n                type: 'Property',\n                method: false,\n                shorthand: false,\n                computed: false,\n                key: {type: 'Literal', value: String(property)},\n                // @ts-expect-error No need to worry about `style` (which has a\n                // `JSXExpressionContainer` value) because that’s a valid identifier.\n                value: attributeValue || {type: 'Literal', value: true},\n                kind: 'init'\n              }\n            ]\n          }\n        })\n      }\n    }\n  }\n\n  if (alignValue !== undefined) {\n    if (!styleProperties) {\n      styleProperties = []\n      attributes.push({\n        type: 'JSXAttribute',\n        name: {type: 'JSXIdentifier', name: 'style'},\n        value: {\n          type: 'JSXExpressionContainer',\n          expression: {type: 'ObjectExpression', properties: styleProperties}\n        }\n      })\n    }\n\n    const cssProperty =\n      state.stylePropertyNameCase === 'css'\n        ? transformStyleToCssCasing('textAlign')\n        : 'textAlign'\n\n    styleProperties.push({\n      type: 'Property',\n      method: false,\n      shorthand: false,\n      computed: false,\n      key: identifierName(cssProperty)\n        ? {type: 'Identifier', name: cssProperty}\n        : {type: 'Literal', value: cssProperty},\n      value: {type: 'Literal', value: alignValue},\n      kind: 'init'\n    })\n  }\n\n  // Restore parent schema.\n  state.schema = parentSchema\n\n  /** @type {JsxElement} */\n  const result = {\n    type: 'JSXElement',\n    openingElement: {\n      type: 'JSXOpeningElement',\n      attributes,\n      name: state.createJsxElementName(node.tagName),\n      selfClosing: children.length === 0\n    },\n    closingElement:\n      children.length > 0\n        ? {\n            type: 'JSXClosingElement',\n            name: state.createJsxElementName(node.tagName)\n          }\n        : null,\n    children\n  }\n  state.inherit(node, result)\n  return result\n}\n\n/**\n * Parse CSS rules as a declaration.\n *\n * @param {string} value\n *   CSS text.\n * @param {string} tagName\n *   Element name.\n * @returns {Record<string, string>}\n *   Properties.\n */\nfunction parseStyle(value, tagName) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    styleToObject(value, iterator)\n  } catch (error) {\n    const cause = /** @type {Error} */ (error)\n    const exception = new Error(\n      'Could not parse `style` attribute on `' + tagName + '`',\n      {cause}\n    )\n    throw exception\n  }\n\n  return result\n\n  /**\n   * Add `name`, as a CSS property, to `result`.\n   *\n   * @param {string} name\n   *   Key.\n   * @param {string} value\n   *   Value.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function iterator(name, value) {\n    let key = name\n\n    if (key.slice(0, 2) !== '--') {\n      // See: <https://alanhogan.com/code/vendor-prefixed-css-property-names-in-javascript>\n      if (key.slice(0, 4) === '-ms-') key = 'ms-' + key.slice(4)\n      key = key.replace(dashSomething, toCamel)\n    }\n\n    result[key] = value\n  }\n}\n\n/**\n * Transform a DOM casing style object to a CSS casing style object.\n *\n * @param {Record<string, string>} domCasing\n * @returns {Record<string, string>}\n */\nfunction transformStylesToCssCasing(domCasing) {\n  /** @type {Record<string, string>} */\n  const cssCasing = {}\n  /** @type {string} */\n  let from\n\n  for (from in domCasing) {\n    if (own.call(domCasing, from)) {\n      cssCasing[transformStyleToCssCasing(from)] = domCasing[from]\n    }\n  }\n\n  return cssCasing\n}\n\n/**\n * Transform a DOM casing style property to a CSS casing style property.\n *\n * @param {string} from\n * @returns {string}\n */\nfunction transformStyleToCssCasing(from) {\n  let to = from.replace(cap, toDash)\n  // Handle `ms-xxx` -> `-ms-xxx`.\n  if (to.slice(0, 3) === 'ms-') to = '-' + to\n  return to\n}\n\n/**\n * Make `$1` capitalized.\n *\n * @param {string} _\n *   Whatever.\n * @param {string} $1\n *   Single ASCII alphabetical.\n * @returns {string}\n *   Capitalized `$1`.\n */\nfunction toCamel(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * Make `$0` dash cased.\n *\n * @param {string} $0\n *   Capitalized ASCII leter.\n * @returns {string}\n *   Dash and lower letter.\n */\nfunction toDash($0) {\n  return '-' + $0.toLowerCase()\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 22100, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 22106, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/hast-util-to-estree/lib/handlers/mdx-expression.js"],"sourcesContent":["/**\n * @import {\n *   JSXEmptyExpression as JsxEmptyExpression,\n *   JSXExpressionContainer as JsxExpressionContainer\n * } from 'estree-jsx'\n * @import {Expression} from 'estree'\n * @import {\n *   MdxFlowExpressionHast as MdxFlowExpression,\n *   MdxTextExpressionHast as MdxTextExpression\n * } from 'mdast-util-mdx-expression'\n * @import {State} from 'hast-util-to-estree'\n */\n\nimport {attachComments} from 'estree-util-attach-comments'\n\n/**\n * Turn an MDX expression node into an estree node.\n *\n * @param {MdxFlowExpression | MdxTextExpression} node\n *   hast node to transform.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {JsxExpressionContainer}\n *   estree expression.\n */\nexport function mdxExpression(node, state) {\n  const estree = node.data && node.data.estree\n  const comments = (estree && estree.comments) || []\n  /** @type {Expression | JsxEmptyExpression | undefined} */\n  let expression\n\n  if (estree) {\n    state.comments.push(...comments)\n    attachComments(estree, estree.comments)\n    expression =\n      (estree.body[0] &&\n        estree.body[0].type === 'ExpressionStatement' &&\n        estree.body[0].expression) ||\n      undefined\n  }\n\n  if (!expression) {\n    expression = {type: 'JSXEmptyExpression'}\n    state.patch(node, expression)\n  }\n\n  /** @type {JsxExpressionContainer} */\n  const result = {type: 'JSXExpressionContainer', expression}\n  state.inherit(node, result)\n  return result\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;CAWC;;;AAED;;AAYO,SAAS,cAAc,IAAI,EAAE,KAAK;IACvC,MAAM,SAAS,KAAK,IAAI,IAAI,KAAK,IAAI,CAAC,MAAM;IAC5C,MAAM,WAAW,AAAC,UAAU,OAAO,QAAQ,IAAK,EAAE;IAClD,wDAAwD,GACxD,IAAI;IAEJ,IAAI,QAAQ;QACV,MAAM,QAAQ,CAAC,IAAI,IAAI;QACvB,CAAA,GAAA,gKAAA,CAAA,iBAAc,AAAD,EAAE,QAAQ,OAAO,QAAQ;QACtC,aACE,AAAC,OAAO,IAAI,CAAC,EAAE,IACb,OAAO,IAAI,CAAC,EAAE,CAAC,IAAI,KAAK,yBACxB,OAAO,IAAI,CAAC,EAAE,CAAC,UAAU,IAC3B;IACJ;IAEA,IAAI,CAAC,YAAY;QACf,aAAa;YAAC,MAAM;QAAoB;QACxC,MAAM,KAAK,CAAC,MAAM;IACpB;IAEA,mCAAmC,GACnC,MAAM,SAAS;QAAC,MAAM;QAA0B;IAAU;IAC1D,MAAM,OAAO,CAAC,MAAM;IACpB,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 22144, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 22150, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/hast-util-to-estree/lib/handlers/mdx-jsx-element.js"],"sourcesContent":["/**\n * @import {\n *   JSXAttribute as JsxAttribute,\n *   JSXElement as JsxElement,\n *   JSXFragment as JsxFragment,\n *   JSXSpreadAttribute as JsxSpreadAttribute\n * } from 'estree-jsx'\n * @import {Expression} from 'estree'\n * @import {State} from 'hast-util-to-estree'\n * @import {\n *   MdxJsxFlowElementHast as MdxJsxFlowElement,\n *   MdxJsxTextElementHast as MdxJsxTextElement\n * } from 'mdast-util-mdx-jsx'\n */\n\nimport {attachComments} from 'estree-util-attach-comments'\nimport {svg} from 'property-information'\n\n/**\n * Turn an MDX JSX element node into an estree node.\n *\n * @param {MdxJsxFlowElement | MdxJsxTextElement} node\n *   hast node to transform.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {JsxElement | JsxFragment}\n *   JSX element or fragment.\n */\n// eslint-disable-next-line complexity\nexport function mdxJsxElement(node, state) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n  const attributes = node.attributes || []\n  let index = -1\n\n  if (\n    node.name &&\n    parentSchema.space === 'html' &&\n    node.name.toLowerCase() === 'svg'\n  ) {\n    schema = svg\n    state.schema = schema\n  }\n\n  const children = state.all(node)\n  /** @type {Array<JsxAttribute | JsxSpreadAttribute>} */\n  const jsxAttributes = []\n\n  while (++index < attributes.length) {\n    const attribute = attributes[index]\n    const value = attribute.value\n    /** @type {JsxAttribute['value']} */\n    let attributeValue\n\n    if (attribute.type === 'mdxJsxAttribute') {\n      if (value === null || value === undefined) {\n        attributeValue = null\n        // Empty.\n      }\n      // `MdxJsxAttributeValueExpression`.\n      else if (typeof value === 'object') {\n        const estree = value.data && value.data.estree\n        const comments = (estree && estree.comments) || []\n        /** @type {Expression | undefined} */\n        let expression\n\n        if (estree) {\n          state.comments.push(...comments)\n          attachComments(estree, estree.comments)\n          // Should exist.\n          /* c8 ignore next 5 */\n          expression =\n            (estree.body[0] &&\n              estree.body[0].type === 'ExpressionStatement' &&\n              estree.body[0].expression) ||\n            undefined\n        }\n\n        attributeValue = {\n          type: 'JSXExpressionContainer',\n          expression: expression || {type: 'JSXEmptyExpression'}\n        }\n        state.inherit(value, attributeValue)\n      }\n      // Anything else.\n      else {\n        attributeValue = {type: 'Literal', value: String(value)}\n      }\n\n      /** @type {JsxAttribute} */\n      const jsxAttribute = {\n        type: 'JSXAttribute',\n        name: state.createJsxAttributeName(attribute.name),\n        value: attributeValue\n      }\n\n      state.inherit(attribute, jsxAttribute)\n      jsxAttributes.push(jsxAttribute)\n    }\n    // MdxJsxExpressionAttribute.\n    else {\n      const estree = attribute.data && attribute.data.estree\n      const comments = (estree && estree.comments) || []\n      /** @type {JsxSpreadAttribute['argument'] | undefined} */\n      let argumentValue\n\n      if (estree) {\n        state.comments.push(...comments)\n        attachComments(estree, estree.comments)\n        // Should exist.\n        /* c8 ignore next 10 */\n        argumentValue =\n          (estree.body[0] &&\n            estree.body[0].type === 'ExpressionStatement' &&\n            estree.body[0].expression &&\n            estree.body[0].expression.type === 'ObjectExpression' &&\n            estree.body[0].expression.properties &&\n            estree.body[0].expression.properties[0] &&\n            estree.body[0].expression.properties[0].type === 'SpreadElement' &&\n            estree.body[0].expression.properties[0].argument) ||\n          undefined\n      }\n\n      /** @type {JsxSpreadAttribute} */\n      const jsxAttribute = {\n        type: 'JSXSpreadAttribute',\n        argument: argumentValue || {type: 'ObjectExpression', properties: []}\n      }\n      state.inherit(attribute, jsxAttribute)\n      jsxAttributes.push(jsxAttribute)\n    }\n  }\n\n  // Restore parent schema.\n  state.schema = parentSchema\n\n  /** @type {JsxElement | JsxFragment} */\n  const result = node.name\n    ? {\n        type: 'JSXElement',\n        openingElement: {\n          type: 'JSXOpeningElement',\n          attributes: jsxAttributes,\n          name: state.createJsxElementName(node.name),\n          selfClosing: children.length === 0\n        },\n        closingElement:\n          children.length > 0\n            ? {\n                type: 'JSXClosingElement',\n                name: state.createJsxElementName(node.name)\n              }\n            : null,\n        children\n      }\n    : {\n        type: 'JSXFragment',\n        openingFragment: {type: 'JSXOpeningFragment'},\n        closingFragment: {type: 'JSXClosingFragment'},\n        children\n      }\n\n  state.inherit(node, result)\n  return result\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 22268, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 22274, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/hast-util-to-estree/lib/handlers/mdxjs-esm.js"],"sourcesContent":["/**\n * @import {MdxjsEsmHast as MdxjsEsm} from 'mdast-util-mdxjs-esm'\n * @import {State} from 'hast-util-to-estree'\n */\n\nimport {attachComments} from 'estree-util-attach-comments'\n\n/**\n * Handle an MDX ESM node.\n *\n * @param {MdxjsEsm} node\n *   hast node to transform.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nexport function mdxjsEsm(node, state) {\n  const estree = node.data && node.data.estree\n  const comments = (estree && estree.comments) || []\n\n  if (estree) {\n    state.comments.push(...comments)\n    attachComments(estree, comments)\n    state.esm.push(...estree.body)\n  }\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AAED;;AAYO,SAAS,SAAS,IAAI,EAAE,KAAK;IAClC,MAAM,SAAS,KAAK,IAAI,IAAI,KAAK,IAAI,CAAC,MAAM;IAC5C,MAAM,WAAW,AAAC,UAAU,OAAO,QAAQ,IAAK,EAAE;IAElD,IAAI,QAAQ;QACV,MAAM,QAAQ,CAAC,IAAI,IAAI;QACvB,CAAA,GAAA,gKAAA,CAAA,iBAAc,AAAD,EAAE,QAAQ;QACvB,MAAM,GAAG,CAAC,IAAI,IAAI,OAAO,IAAI;IAC/B;AACF","ignoreList":[0]}},
    {"offset": {"line": 22291, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 22297, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/hast-util-to-estree/lib/handlers/root.js"],"sourcesContent":["/**\n * @import {\n *   JSXElement as JsxElement,\n *   JSXExpressionContainer as JsxExpressionContainer,\n *   JSXFragment as JsxFragment,\n *   JSXSpreadChild as JsxSpreadChild,\n *   JSXText as JsxText,\n * } from 'estree-jsx'\n * @import {State} from 'hast-util-to-estree'\n * @import {Root as HastRoot} from 'hast'\n */\n\nimport {whitespace} from 'hast-util-whitespace'\n\n/**\n * Turn a hast root node into an estree node.\n *\n * @param {HastRoot} node\n *   hast node to transform.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {JsxFragment}\n *   estree JSX fragment.\n */\nexport function root(node, state) {\n  const children = state.all(node)\n  /** @type {Array<JsxElement | JsxExpressionContainer | JsxFragment | JsxSpreadChild | JsxText>} */\n  const cleanChildren = []\n  let index = -1\n  /** @type {Array<JsxElement | JsxExpressionContainer | JsxFragment | JsxSpreadChild | JsxText> | undefined} */\n  let queue\n\n  // Remove surrounding whitespace nodes from the fragment.\n  while (++index < children.length) {\n    const child = children[index]\n\n    if (\n      child.type === 'JSXExpressionContainer' &&\n      child.expression.type === 'Literal' &&\n      whitespace(String(child.expression.value))\n    ) {\n      if (queue) queue.push(child)\n    } else {\n      if (queue) cleanChildren.push(...queue)\n      cleanChildren.push(child)\n      queue = []\n    }\n  }\n\n  /** @type {JsxFragment} */\n  const result = {\n    type: 'JSXFragment',\n    openingFragment: {type: 'JSXOpeningFragment'},\n    closingFragment: {type: 'JSXClosingFragment'},\n    children: cleanChildren\n  }\n  state.inherit(node, result)\n  return result\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;CAUC;;;AAED;;AAYO,SAAS,KAAK,IAAI,EAAE,KAAK;IAC9B,MAAM,WAAW,MAAM,GAAG,CAAC;IAC3B,gGAAgG,GAChG,MAAM,gBAAgB,EAAE;IACxB,IAAI,QAAQ,CAAC;IACb,4GAA4G,GAC5G,IAAI;IAEJ,yDAAyD;IACzD,MAAO,EAAE,QAAQ,SAAS,MAAM,CAAE;QAChC,MAAM,QAAQ,QAAQ,CAAC,MAAM;QAE7B,IACE,MAAM,IAAI,KAAK,4BACf,MAAM,UAAU,CAAC,IAAI,KAAK,aAC1B,CAAA,GAAA,sJAAA,CAAA,aAAU,AAAD,EAAE,OAAO,MAAM,UAAU,CAAC,KAAK,IACxC;YACA,IAAI,OAAO,MAAM,IAAI,CAAC;QACxB,OAAO;YACL,IAAI,OAAO,cAAc,IAAI,IAAI;YACjC,cAAc,IAAI,CAAC;YACnB,QAAQ,EAAE;QACZ;IACF;IAEA,wBAAwB,GACxB,MAAM,SAAS;QACb,MAAM;QACN,iBAAiB;YAAC,MAAM;QAAoB;QAC5C,iBAAiB;YAAC,MAAM;QAAoB;QAC5C,UAAU;IACZ;IACA,MAAM,OAAO,CAAC,MAAM;IACpB,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 22341, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 22347, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/hast-util-to-estree/lib/handlers/text.js"],"sourcesContent":["/**\n * @import {JSXExpressionContainer as JsxExpressionContainer} from 'estree-jsx'\n * @import {Literal} from 'estree'\n * @import {State} from 'hast-util-to-estree'\n * @import {Text as HastText} from 'hast'\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn a hast text node into an estree node.\n *\n * @param {HastText} node\n *   hast node to transform.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {JsxExpressionContainer | undefined}\n *   JSX expression.\n */\nexport function text(node, state) {\n  const value = String(node.value || '')\n\n  if (value) {\n    /** @type {Literal} */\n    const result = {type: 'Literal', value}\n    state.inherit(node, result)\n    /** @type {JsxExpressionContainer} */\n    const container = {type: 'JSXExpressionContainer', expression: result}\n    state.patch(node, container)\n    return container\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;CAKC,GAED,mDAAmD;;;;AACnD;AAYO,SAAS,KAAK,IAAI,EAAE,KAAK;IAC9B,MAAM,QAAQ,OAAO,KAAK,KAAK,IAAI;IAEnC,IAAI,OAAO;QACT,oBAAoB,GACpB,MAAM,SAAS;YAAC,MAAM;YAAW;QAAK;QACtC,MAAM,OAAO,CAAC,MAAM;QACpB,mCAAmC,GACnC,MAAM,YAAY;YAAC,MAAM;YAA0B,YAAY;QAAM;QACrE,MAAM,KAAK,CAAC,MAAM;QAClB,OAAO;IACT;AACF","ignoreList":[0]}},
    {"offset": {"line": 22373, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 22379, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/hast-util-to-estree/lib/handlers/index.js"],"sourcesContent":["import {comment} from './comment.js'\nimport {element} from './element.js'\nimport {mdxExpression} from './mdx-expression.js'\nimport {mdxJsxElement} from './mdx-jsx-element.js'\nimport {mdxjsEsm} from './mdxjs-esm.js'\nimport {root} from './root.js'\nimport {text} from './text.js'\n\nexport const handlers = {\n  comment,\n  doctype: ignore,\n  element,\n  mdxFlowExpression: mdxExpression,\n  mdxJsxFlowElement: mdxJsxElement,\n  mdxJsxTextElement: mdxJsxElement,\n  mdxTextExpression: mdxExpression,\n  mdxjsEsm,\n  root,\n  text\n}\n\n/**\n * Handle a node that is ignored.\n *\n * @returns {undefined}\n *   Nothing.\n */\nfunction ignore() {}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAEO,MAAM,WAAW;IACtB,SAAA,sKAAA,CAAA,UAAO;IACP,SAAS;IACT,SAAA,sKAAA,CAAA,UAAO;IACP,mBAAmB,gLAAA,CAAA,gBAAa;IAChC,mBAAmB,oLAAA,CAAA,gBAAa;IAChC,mBAAmB,oLAAA,CAAA,gBAAa;IAChC,mBAAmB,gLAAA,CAAA,gBAAa;IAChC,UAAA,2KAAA,CAAA,WAAQ;IACR,MAAA,mKAAA,CAAA,OAAI;IACJ,MAAA,mKAAA,CAAA,OAAI;AACN;AAEA;;;;;CAKC,GACD,SAAS,UAAU","ignoreList":[0]}},
    {"offset": {"line": 22414, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 22420, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/hast-util-to-estree/lib/state.js"],"sourcesContent":["/**\n * @import {\n *   JSXElement as JsxElement,\n *   JSXExpressionContainer as JsxExpressionContainer,\n *   JSXFragment as JsxFragment,\n *   JSXIdentifier as JsxIdentifier,\n *   JSXMemberExpression as JsxMemberExpression,\n *   JSXNamespacedName as JsxNamespacedName,\n *   JSXSpreadChild as JsxSpreadChild,\n *   JSXText as JsxText,\n * } from 'estree-jsx'\n * @import {Comment, Directive, ModuleDeclaration, Node as EstreeNode, Statement} from 'estree'\n * @import {MdxJsxAttribute, MdxJsxAttributeValueExpression, MdxJsxExpressionAttribute} from 'mdast-util-mdx-jsx'\n * @import {Nodes as HastNodes, Parents as HastParents} from 'hast'\n * @import {Schema} from 'property-information'\n */\n\n/**\n * @typedef {'html' | 'react'} ElementAttributeNameCase\n *   Specify casing to use for attribute names.\n *\n *   HTML casing is for example `class`, `stroke-linecap`, `xml:lang`.\n *   React casing is for example `className`, `strokeLinecap`, `xmlLang`.\n *\n * @callback Handle\n *   Turn a hast node into an estree node.\n * @param {any} node\n *   Expected hast node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {JsxElement | JsxExpressionContainer | JsxFragment | JsxSpreadChild | JsxText | null | undefined}\n *   estree node.\n *\n * @typedef Options\n *   Configuration.\n * @property {ElementAttributeNameCase | null | undefined} [elementAttributeNameCase='react']\n *   Specify casing to use for attribute names (default: `'react'`).\n *\n *   This casing is used for hast elements, not for embedded MDX JSX nodes\n *   (components that someone authored manually).\n * @property {Record<string, Handle | null | undefined> | null | undefined} [handlers={}]\n *   Custom handlers (optional).\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {StylePropertyNameCase | null | undefined} [stylePropertyNameCase='dom']\n *   Specify casing to use for property names in `style` objects (default: `'dom'`).\n *\n *   This casing is used for hast elements, not for embedded MDX JSX nodes\n *   (components that someone authored manually).\n * @property {boolean | null | undefined} [tableCellAlignToStyle=true]\n *   Turn obsolete `align` props on `td` and `th` into CSS `style` props\n *   (default: `true`).\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n * @typedef {'css' | 'dom'} StylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n *\n *   CSS casing is for example `background-color` and `-webkit-line-clamp`.\n *   DOM casing is for example `backgroundColor` and `WebkitLineClamp`.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {(parent: HastParents) => Array<JsxElement | JsxExpressionContainer | JsxFragment | JsxSpreadChild | JsxText>} all\n *   Transform children of a hast parent to estree.\n * @property {Array<Comment>} comments\n *   List of estree comments.\n * @property {(name: string) => JsxIdentifier | JsxNamespacedName} createJsxAttributeName\n *   Create a JSX attribute name.\n * @property {(name: string) => JsxIdentifier | JsxMemberExpression | JsxNamespacedName} createJsxElementName\n *   Create a JSX element name.\n * @property {ElementAttributeNameCase} elementAttributeNameCase\n *   Casing to use for attribute names.\n * @property {Array<Directive | ModuleDeclaration | Statement>} esm\n *   List of top-level estree nodes.\n * @property {(node: any) => JsxElement | JsxExpressionContainer | JsxFragment | JsxSpreadChild | JsxText | null | undefined} handle\n *   Transform a hast node to estree.\n * @property {(from: HastNodes | MdxJsxAttribute | MdxJsxAttributeValueExpression | MdxJsxExpressionAttribute, to: Comment | EstreeNode) => undefined} inherit\n *   Take positional info and data from `from` (use `patch` if you don’t want data).\n * @property {(from: HastNodes, to: Comment | EstreeNode) => undefined} patch\n *   Take positional info from `from` (use `inherit` if you also want data).\n * @property {Schema} schema\n *   Current schema.\n * @property {StylePropertyNameCase} stylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n * @property {boolean} tableCellAlignToStyle\n *   Turn obsolete `align` props on `td` and `th` into CSS `style` props.\n */\n\nimport {ok as assert} from 'devlop'\nimport {html, svg} from 'property-information'\nimport {position} from 'unist-util-position'\nimport {zwitch} from 'zwitch'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n// `react-dom` triggers a warning for *any* white space in tables.\n// To follow GFM, `mdast-util-to-hast` injects line endings between elements.\n// Other tools might do so too, but they don’t do here, so we remove all of\n// that.\n//\n// See: <https://github.com/facebook/react/pull/7081>.\n// See: <https://github.com/facebook/react/pull/7515>.\n// See: <https://github.com/remarkjs/remark-react/issues/64>.\n// See: <https://github.com/rehypejs/rehype-react/pull/29>.\n// See: <https://github.com/rehypejs/rehype-react/pull/32>.\n// See: <https://github.com/rehypejs/rehype-react/pull/45>.\n// See: <https://github.com/mdx-js/mdx/issues/2000>\nconst tableElements = new Set(['table', 'tbody', 'thead', 'tfoot', 'tr'])\n\n/**\n * Create a state from options.\n *\n * @param {Options} options\n *   Configuration.\n * @returns {State}\n *   Info passed around about the current state.\n */\n\nexport function createState(options) {\n  /** @type {Handle} */\n  const one = zwitch('type', {\n    invalid,\n    unknown,\n    handlers: {...handlers, ...options.handlers}\n  })\n\n  return {\n    // Current space.\n    elementAttributeNameCase: options.elementAttributeNameCase || 'react',\n    schema: options.space === 'svg' ? svg : html,\n    stylePropertyNameCase: options.stylePropertyNameCase || 'dom',\n    tableCellAlignToStyle: options.tableCellAlignToStyle !== false,\n    // Results.\n    comments: [],\n    esm: [],\n    // Useful functions.\n    all,\n    createJsxAttributeName,\n    createJsxElementName,\n    handle,\n    inherit,\n    patch\n  }\n\n  /**\n   * @this {State}\n   * @param {any} node\n   * @returns {JsxElement | JsxExpressionContainer | JsxFragment | JsxSpreadChild | JsxText | null | undefined}\n   */\n  function handle(node) {\n    return one(node, this)\n  }\n}\n\n/**\n * Crash on an invalid value.\n *\n * @param {unknown} value\n *   Non-node.\n * @returns {never}\n *   Nothing (crashes).\n */\nfunction invalid(value) {\n  throw new Error('Cannot handle value `' + value + '`, expected node')\n}\n\n/**\n * Crash on an unknown node.\n *\n * @param {unknown} node\n *   Unknown node.\n * @returns {never}\n *   Nothing (crashes).\n */\nfunction unknown(node) {\n  assert(node && typeof node === 'object')\n  assert('type' in node)\n  throw new Error('Cannot handle unknown node `' + node.type + '`')\n}\n\n/**\n * @this {State} state\n *   Info passed around about the current state.\n * @param {HastParents} parent\n *   hast node whose children to transform.\n * @returns {Array<JsxElement | JsxExpressionContainer | JsxFragment | JsxSpreadChild | JsxText>}\n *   estree nodes.\n */\nfunction all(parent) {\n  const children = parent.children || []\n  let index = -1\n  /** @type {Array<JsxElement | JsxExpressionContainer | JsxFragment | JsxSpreadChild | JsxText>} */\n  const results = []\n  const ignoreLineBreak =\n    this.schema.space === 'html' &&\n    parent.type === 'element' &&\n    tableElements.has(parent.tagName.toLowerCase())\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    if (ignoreLineBreak && child.type === 'text' && child.value === '\\n') {\n      continue\n    }\n\n    const result = this.handle(child)\n\n    if (Array.isArray(result)) {\n      results.push(...result)\n    } else if (result) {\n      results.push(result)\n    }\n  }\n\n  return results\n}\n\n/**\n * Take positional info and data from `hast`.\n *\n * Use `patch` if you don’t want data.\n *\n * @param {HastNodes | MdxJsxAttribute | MdxJsxAttributeValueExpression | MdxJsxExpressionAttribute} from\n *   hast node to take positional info and data from.\n * @param {Comment | EstreeNode} to\n *   estree node to add positional info and data to.\n * @returns {undefined}\n *   Nothing.\n */\nfunction inherit(from, to) {\n  const left = /** @type {Record<string, unknown> | undefined} */ (from.data)\n  /** @type {Record<string, unknown> | undefined} */\n  let right\n  /** @type {string} */\n  let key\n\n  patch(from, to)\n\n  if (left) {\n    for (key in left) {\n      if (own.call(left, key) && key !== 'estree') {\n        if (!right) right = {}\n        right[key] = left[key]\n      }\n    }\n\n    if (right) {\n      // @ts-expect-error `esast` extension.\n      to.data = right\n    }\n  }\n}\n\n/**\n * Take positional info from `from`.\n *\n * Use `inherit` if you also want data.\n *\n * @param {HastNodes | MdxJsxAttribute | MdxJsxAttributeValueExpression | MdxJsxExpressionAttribute} from\n *   hast node to take positional info from.\n * @param {Comment | EstreeNode} to\n *   estree node to add positional info to.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  const p = position(from)\n\n  if (p && p.start.offset !== undefined && p.end.offset !== undefined) {\n    // @ts-expect-error acorn-style.\n    to.start = p.start.offset\n    // @ts-expect-error acorn-style.\n    to.end = p.end.offset\n    to.loc = {\n      start: {line: p.start.line, column: p.start.column - 1},\n      end: {line: p.end.line, column: p.end.column - 1}\n    }\n    to.range = [p.start.offset, p.end.offset]\n  }\n}\n\n/**\n * Create a JSX attribute name.\n *\n * @param {string} name\n * @returns {JsxIdentifier | JsxNamespacedName}\n */\nfunction createJsxAttributeName(name) {\n  const node = createJsxNameFromString(name)\n\n  // MDX never generates this.\n  /* c8 ignore next 3 */\n  if (node.type === 'JSXMemberExpression') {\n    throw new Error('Member expressions in attribute names are not supported')\n  }\n\n  return node\n}\n\n/**\n * Create a JSX element name.\n *\n * @param {string} name\n * @returns {JsxIdentifier | JsxMemberExpression | JsxNamespacedName}\n */\nfunction createJsxElementName(name) {\n  return createJsxNameFromString(name)\n}\n\n/**\n * Create a JSX name from a string.\n *\n * @param {string} name\n *   Name.\n * @returns {JsxIdentifier | JsxMemberExpression | JsxNamespacedName}\n *   Node.\n */\nfunction createJsxNameFromString(name) {\n  if (name.includes('.')) {\n    const names = name.split('.')\n    let part = names.shift()\n    assert(part, 'Expected `part` to be defined')\n    /** @type {JsxIdentifier | JsxMemberExpression} */\n    let node = {type: 'JSXIdentifier', name: part}\n\n    while ((part = names.shift())) {\n      node = {\n        type: 'JSXMemberExpression',\n        object: node,\n        property: {type: 'JSXIdentifier', name: part}\n      }\n    }\n\n    return node\n  }\n\n  if (name.includes(':')) {\n    const parts = name.split(':')\n    return {\n      type: 'JSXNamespacedName',\n      namespace: {type: 'JSXIdentifier', name: parts[0]},\n      name: {type: 'JSXIdentifier', name: parts[1]}\n    }\n  }\n\n  return {type: 'JSXIdentifier', name}\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;CAeC,GAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA2EC;;;AAKD;AACA;AAHA;AADA;AAEA;;;;;;AAIA,MAAM,MAAM,CAAC,EAAE,cAAc;AAE7B,kEAAkE;AAClE,6EAA6E;AAC7E,2EAA2E;AAC3E,QAAQ;AACR,EAAE;AACF,sDAAsD;AACtD,sDAAsD;AACtD,6DAA6D;AAC7D,2DAA2D;AAC3D,2DAA2D;AAC3D,2DAA2D;AAC3D,mDAAmD;AACnD,MAAM,gBAAgB,IAAI,IAAI;IAAC;IAAS;IAAS;IAAS;IAAS;CAAK;AAWjE,SAAS,YAAY,OAAO;IACjC,mBAAmB,GACnB,MAAM,MAAM,CAAA,GAAA,2HAAA,CAAA,SAAM,AAAD,EAAE,QAAQ;QACzB;QACA;QACA,UAAU;YAAC,GAAG,oKAAA,CAAA,WAAQ;YAAE,GAAG,QAAQ,QAAQ;QAAA;IAC7C;IAEA,OAAO;QACL,iBAAiB;QACjB,0BAA0B,QAAQ,wBAAwB,IAAI;QAC9D,QAAQ,QAAQ,KAAK,KAAK,QAAQ,4JAAA,CAAA,MAAG,GAAG,4JAAA,CAAA,OAAI;QAC5C,uBAAuB,QAAQ,qBAAqB,IAAI;QACxD,uBAAuB,QAAQ,qBAAqB,KAAK;QACzD,WAAW;QACX,UAAU,EAAE;QACZ,KAAK,EAAE;QACP,oBAAoB;QACpB;QACA;QACA;QACA;QACA;QACA;IACF;;IAEA;;;;GAIC,GACD,SAAS,OAAO,IAAI;QAClB,OAAO,IAAI,MAAM,IAAI;IACvB;AACF;AAEA;;;;;;;CAOC,GACD,SAAS,QAAQ,KAAK;IACpB,MAAM,IAAI,MAAM,0BAA0B,QAAQ;AACpD;AAEA;;;;;;;CAOC,GACD,SAAS,QAAQ,IAAI;IACnB,CAAA,GAAA,wIAAA,CAAA,KAAM,AAAD,EAAE,QAAQ,OAAO,SAAS;IAC/B,CAAA,GAAA,wIAAA,CAAA,KAAM,AAAD,EAAE,UAAU;IACjB,MAAM,IAAI,MAAM,iCAAiC,KAAK,IAAI,GAAG;AAC/D;AAEA;;;;;;;CAOC,GACD,SAAS,IAAI,MAAM;IACjB,MAAM,WAAW,OAAO,QAAQ,IAAI,EAAE;IACtC,IAAI,QAAQ,CAAC;IACb,gGAAgG,GAChG,MAAM,UAAU,EAAE;IAClB,MAAM,kBACJ,IAAI,CAAC,MAAM,CAAC,KAAK,KAAK,UACtB,OAAO,IAAI,KAAK,aAChB,cAAc,GAAG,CAAC,OAAO,OAAO,CAAC,WAAW;IAE9C,MAAO,EAAE,QAAQ,SAAS,MAAM,CAAE;QAChC,MAAM,QAAQ,QAAQ,CAAC,MAAM;QAE7B,IAAI,mBAAmB,MAAM,IAAI,KAAK,UAAU,MAAM,KAAK,KAAK,MAAM;YACpE;QACF;QAEA,MAAM,SAAS,IAAI,CAAC,MAAM,CAAC;QAE3B,IAAI,MAAM,OAAO,CAAC,SAAS;YACzB,QAAQ,IAAI,IAAI;QAClB,OAAO,IAAI,QAAQ;YACjB,QAAQ,IAAI,CAAC;QACf;IACF;IAEA,OAAO;AACT;AAEA;;;;;;;;;;;CAWC,GACD,SAAS,QAAQ,IAAI,EAAE,EAAE;IACvB,MAAM,OAA2D,KAAK,IAAI;IAC1E,gDAAgD,GAChD,IAAI;IACJ,mBAAmB,GACnB,IAAI;IAEJ,MAAM,MAAM;IAEZ,IAAI,MAAM;QACR,IAAK,OAAO,KAAM;YAChB,IAAI,IAAI,IAAI,CAAC,MAAM,QAAQ,QAAQ,UAAU;gBAC3C,IAAI,CAAC,OAAO,QAAQ,CAAC;gBACrB,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI;YACxB;QACF;QAEA,IAAI,OAAO;YACT,sCAAsC;YACtC,GAAG,IAAI,GAAG;QACZ;IACF;AACF;AAEA;;;;;;;;;;;CAWC,GACD,SAAS,MAAM,IAAI,EAAE,EAAE;IACrB,MAAM,IAAI,CAAA,GAAA,qJAAA,CAAA,WAAQ,AAAD,EAAE;IAEnB,IAAI,KAAK,EAAE,KAAK,CAAC,MAAM,KAAK,aAAa,EAAE,GAAG,CAAC,MAAM,KAAK,WAAW;QACnE,gCAAgC;QAChC,GAAG,KAAK,GAAG,EAAE,KAAK,CAAC,MAAM;QACzB,gCAAgC;QAChC,GAAG,GAAG,GAAG,EAAE,GAAG,CAAC,MAAM;QACrB,GAAG,GAAG,GAAG;YACP,OAAO;gBAAC,MAAM,EAAE,KAAK,CAAC,IAAI;gBAAE,QAAQ,EAAE,KAAK,CAAC,MAAM,GAAG;YAAC;YACtD,KAAK;gBAAC,MAAM,EAAE,GAAG,CAAC,IAAI;gBAAE,QAAQ,EAAE,GAAG,CAAC,MAAM,GAAG;YAAC;QAClD;QACA,GAAG,KAAK,GAAG;YAAC,EAAE,KAAK,CAAC,MAAM;YAAE,EAAE,GAAG,CAAC,MAAM;SAAC;IAC3C;AACF;AAEA;;;;;CAKC,GACD,SAAS,uBAAuB,IAAI;IAClC,MAAM,OAAO,wBAAwB;IAErC,4BAA4B;IAC5B,oBAAoB,GACpB,IAAI,KAAK,IAAI,KAAK,uBAAuB;QACvC,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO;AACT;AAEA;;;;;CAKC,GACD,SAAS,qBAAqB,IAAI;IAChC,OAAO,wBAAwB;AACjC;AAEA;;;;;;;CAOC,GACD,SAAS,wBAAwB,IAAI;IACnC,IAAI,KAAK,QAAQ,CAAC,MAAM;QACtB,MAAM,QAAQ,KAAK,KAAK,CAAC;QACzB,IAAI,OAAO,MAAM,KAAK;QACtB,CAAA,GAAA,wIAAA,CAAA,KAAM,AAAD,EAAE,MAAM;QACb,gDAAgD,GAChD,IAAI,OAAO;YAAC,MAAM;YAAiB,MAAM;QAAI;QAE7C,MAAQ,OAAO,MAAM,KAAK,GAAK;YAC7B,OAAO;gBACL,MAAM;gBACN,QAAQ;gBACR,UAAU;oBAAC,MAAM;oBAAiB,MAAM;gBAAI;YAC9C;QACF;QAEA,OAAO;IACT;IAEA,IAAI,KAAK,QAAQ,CAAC,MAAM;QACtB,MAAM,QAAQ,KAAK,KAAK,CAAC;QACzB,OAAO;YACL,MAAM;YACN,WAAW;gBAAC,MAAM;gBAAiB,MAAM,KAAK,CAAC,EAAE;YAAA;YACjD,MAAM;gBAAC,MAAM;gBAAiB,MAAM,KAAK,CAAC,EAAE;YAAA;QAC9C;IACF;IAEA,OAAO;QAAC,MAAM;QAAiB;IAAI;AACrC","ignoreList":[0]}},
    {"offset": {"line": 22757, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 22763, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/hast-util-to-estree/lib/index.js"],"sourcesContent":["/**\n * @import {} from 'mdast-util-mdx-expression'\n * @import {} from 'mdast-util-mdx-jsx'\n * @import {} from 'mdast-util-mdxjs-esm'\n * @import {ExpressionStatement, Program} from 'estree'\n * @import {Options} from 'hast-util-to-estree'\n * @import {Nodes as HastNodes} from 'hast'\n */\n\nimport {createState} from './state.js'\n\n/**\n * Transform a hast tree (with embedded MDX nodes) into an estree.\n *\n * ##### Notes\n *\n * ###### Comments\n *\n * Comments are attached to the tree in their neighbouring nodes (`recast`,\n * `babel` style) and also added as a `comments` array on the program node\n * (`espree` style).\n * You may have to do `program.comments = undefined` for certain compilers.\n *\n * ###### Frameworks\n *\n * There are differences between what JSX frameworks accept, such as whether they\n * accept `class` or `className`, or `background-color` or `backgroundColor`.\n *\n * For JSX components written in MDX, the author has to be aware of this\n * difference and write code accordingly.\n * For hast elements transformed by this project, this will be handled through\n * options.\n *\n * | Framework | `elementAttributeNameCase` | `stylePropertyNameCase` |\n * | --------- | -------------------------- | ----------------------- |\n * | Preact    | `'html'`                   | `'dom'`                 |\n * | React     | `'react'`                  | `'dom'`                 |\n * | Solid     | `'html'`                   | `'css'`                 |\n * | Vue       | `'html'`                   | `'dom'`                 |\n *\n * @param {HastNodes} tree\n *   hast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Program}\n *   estree program node.\n *\n *   The program’s last child in `body` is most likely an `ExpressionStatement`,\n *   whose expression is a `JSXFragment` or a `JSXElement`.\n *\n *   Typically, there is only one node in `body`, however, this utility also\n *   supports embedded MDX nodes in the HTML (when `mdast-util-mdx` is used\n *   with mdast to parse markdown before passing its nodes through to hast).\n *   When MDX ESM import/exports are used, those nodes are added before the\n *   fragment or element in body.\n *\n *   There aren’t many great estree serializers out there that support JSX.\n *   To do that, you can use `estree-util-to-js`.\n *   Or, use `estree-util-build-jsx` to turn JSX into function calls, and then\n *   serialize with whatever (`astring`, `escodegen`).\n */\nexport function toEstree(tree, options) {\n  const state = createState(options || {})\n  let result = state.handle(tree)\n  const body = state.esm\n\n  if (result) {\n    if (result.type !== 'JSXFragment' && result.type !== 'JSXElement') {\n      result = {\n        type: 'JSXFragment',\n        openingFragment: {type: 'JSXOpeningFragment'},\n        closingFragment: {type: 'JSXClosingFragment'},\n        children: [result]\n      }\n      state.patch(tree, result)\n    }\n\n    /** @type {ExpressionStatement} */\n    const statement = {type: 'ExpressionStatement', expression: result}\n    state.patch(tree, statement)\n    body.push(statement)\n  }\n\n  /** @type {Program} */\n  const program = {\n    type: 'Program',\n    body,\n    sourceType: 'module',\n    comments: state.comments\n  }\n  state.patch(tree, program)\n  return program\n}\n"],"names":[],"mappings":"AAAA;;;;;;;CAOC;;;AAED;;AAoDO,SAAS,SAAS,IAAI,EAAE,OAAO;IACpC,MAAM,QAAQ,CAAA,GAAA,wJAAA,CAAA,cAAW,AAAD,EAAE,WAAW,CAAC;IACtC,IAAI,SAAS,MAAM,MAAM,CAAC;IAC1B,MAAM,OAAO,MAAM,GAAG;IAEtB,IAAI,QAAQ;QACV,IAAI,OAAO,IAAI,KAAK,iBAAiB,OAAO,IAAI,KAAK,cAAc;YACjE,SAAS;gBACP,MAAM;gBACN,iBAAiB;oBAAC,MAAM;gBAAoB;gBAC5C,iBAAiB;oBAAC,MAAM;gBAAoB;gBAC5C,UAAU;oBAAC;iBAAO;YACpB;YACA,MAAM,KAAK,CAAC,MAAM;QACpB;QAEA,gCAAgC,GAChC,MAAM,YAAY;YAAC,MAAM;YAAuB,YAAY;QAAM;QAClE,MAAM,KAAK,CAAC,MAAM;QAClB,KAAK,IAAI,CAAC;IACZ;IAEA,oBAAoB,GACpB,MAAM,UAAU;QACd,MAAM;QACN;QACA,YAAY;QACZ,UAAU,MAAM,QAAQ;IAC1B;IACA,MAAM,KAAK,CAAC,MAAM;IAClB,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 22811, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 22816, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/inline-style-parser/index.js"],"sourcesContent":["// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function (style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function (node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n"],"names":[],"mappings":"AAAA,0CAA0C;AAC1C,yEAAyE;AACzE,IAAI,gBAAgB;AAEpB,IAAI,gBAAgB;AACpB,IAAI,mBAAmB;AAEvB,cAAc;AACd,IAAI,iBAAiB;AACrB,IAAI,cAAc;AAClB,IAAI,cAAc;AAClB,IAAI,kBAAkB;AAEtB,kGAAkG;AAClG,IAAI,aAAa;AAEjB,UAAU;AACV,IAAI,UAAU;AACd,IAAI,gBAAgB;AACpB,IAAI,WAAW;AACf,IAAI,eAAe;AAEnB,QAAQ;AACR,IAAI,eAAe;AACnB,IAAI,mBAAmB;AAEvB;;;;;;CAMC,GACD,OAAO,OAAO,GAAG,SAAU,KAAK,EAAE,OAAO;IACvC,IAAI,OAAO,UAAU,UAAU;QAC7B,MAAM,IAAI,UAAU;IACtB;IAEA,IAAI,CAAC,OAAO,OAAO,EAAE;IAErB,UAAU,WAAW,CAAC;IAEtB;;GAEC,GACD,IAAI,SAAS;IACb,IAAI,SAAS;IAEb;;;;GAIC,GACD,SAAS,eAAe,GAAG;QACzB,IAAI,QAAQ,IAAI,KAAK,CAAC;QACtB,IAAI,OAAO,UAAU,MAAM,MAAM;QACjC,IAAI,IAAI,IAAI,WAAW,CAAC;QACxB,SAAS,CAAC,IAAI,IAAI,MAAM,GAAG,IAAI,SAAS,IAAI,MAAM;IACpD;IAEA;;;;GAIC,GACD,SAAS;QACP,IAAI,QAAQ;YAAE,MAAM;YAAQ,QAAQ;QAAO;QAC3C,OAAO,SAAU,IAAI;YACnB,KAAK,QAAQ,GAAG,IAAI,SAAS;YAC7B;YACA,OAAO;QACT;IACF;IAEA;;;;;;;GAOC,GACD,SAAS,SAAS,KAAK;QACrB,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,GAAG,GAAG;YAAE,MAAM;YAAQ,QAAQ;QAAO;QAC1C,IAAI,CAAC,MAAM,GAAG,QAAQ,MAAM;IAC9B;IAEA;;GAEC,GACD,SAAS,SAAS,CAAC,OAAO,GAAG;IAE7B,IAAI,aAAa,EAAE;IAEnB;;;;;GAKC,GACD,SAAS,MAAM,GAAG;QAChB,IAAI,MAAM,IAAI,MACZ,QAAQ,MAAM,GAAG,MAAM,SAAS,MAAM,SAAS,OAAO;QAExD,IAAI,MAAM,GAAG;QACb,IAAI,QAAQ,GAAG,QAAQ,MAAM;QAC7B,IAAI,IAAI,GAAG;QACX,IAAI,MAAM,GAAG;QACb,IAAI,MAAM,GAAG;QAEb,IAAI,QAAQ,MAAM,EAAE;YAClB,WAAW,IAAI,CAAC;QAClB,OAAO;YACL,MAAM;QACR;IACF;IAEA;;;;;GAKC,GACD,SAAS,MAAM,EAAE;QACf,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,GAAG;QACR,IAAI,MAAM,CAAC,CAAC,EAAE;QACd,eAAe;QACf,QAAQ,MAAM,KAAK,CAAC,IAAI,MAAM;QAC9B,OAAO;IACT;IAEA;;GAEC,GACD,SAAS;QACP,MAAM;IACR;IAEA;;;;;GAKC,GACD,SAAS,SAAS,KAAK;QACrB,IAAI;QACJ,QAAQ,SAAS,EAAE;QACnB,MAAQ,IAAI,UAAY;YACtB,IAAI,MAAM,OAAO;gBACf,MAAM,IAAI,CAAC;YACb;QACF;QACA,OAAO;IACT;IAEA;;;;;GAKC,GACD,SAAS;QACP,IAAI,MAAM;QACV,IAAI,iBAAiB,MAAM,MAAM,CAAC,MAAM,YAAY,MAAM,MAAM,CAAC,IAAI;QAErE,IAAI,IAAI;QACR,MACE,gBAAgB,MAAM,MAAM,CAAC,MAC7B,CAAC,YAAY,MAAM,MAAM,CAAC,MAAM,iBAAiB,MAAM,MAAM,CAAC,IAAI,EAAE,EACpE;YACA,EAAE;QACJ;QACA,KAAK;QAEL,IAAI,iBAAiB,MAAM,MAAM,CAAC,IAAI,IAAI;YACxC,OAAO,MAAM;QACf;QAEA,IAAI,MAAM,MAAM,KAAK,CAAC,GAAG,IAAI;QAC7B,UAAU;QACV,eAAe;QACf,QAAQ,MAAM,KAAK,CAAC;QACpB,UAAU;QAEV,OAAO,IAAI;YACT,MAAM;YACN,SAAS;QACX;IACF;IAEA;;;;;GAKC,GACD,SAAS;QACP,IAAI,MAAM;QAEV,OAAO;QACP,IAAI,OAAO,MAAM;QACjB,IAAI,CAAC,MAAM;QACX;QAEA,IAAI;QACJ,IAAI,CAAC,MAAM,cAAc,OAAO,MAAM;QAEtC,MAAM;QACN,IAAI,MAAM,MAAM;QAEhB,IAAI,MAAM,IAAI;YACZ,MAAM;YACN,UAAU,KAAK,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,eAAe;YAC9C,OAAO,MACH,KAAK,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,eAAe,iBACnC;QACN;QAEA,IAAI;QACJ,MAAM;QAEN,OAAO;IACT;IAEA;;;;GAIC,GACD,SAAS;QACP,IAAI,QAAQ,EAAE;QAEd,SAAS;QAET,eAAe;QACf,IAAI;QACJ,MAAQ,OAAO,cAAgB;YAC7B,IAAI,SAAS,OAAO;gBAClB,MAAM,IAAI,CAAC;gBACX,SAAS;YACX;QACF;QAEA,OAAO;IACT;IAEA;IACA,OAAO;AACT;AAEA;;;;;CAKC,GACD,SAAS,KAAK,GAAG;IACf,OAAO,MAAM,IAAI,OAAO,CAAC,YAAY,gBAAgB;AACvD","ignoreList":[0]}},
    {"offset": {"line": 23025, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23030, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/style-to-object/src/index.ts"],"sourcesContent":["import type { Declaration } from 'inline-style-parser';\nimport parse from 'inline-style-parser';\n\nexport { Declaration };\n\ninterface StyleObject {\n  [name: string]: string;\n}\n\ntype Iterator = (\n  property: string,\n  value: string,\n  declaration: Declaration,\n) => void;\n\n/**\n * Parses inline style to object.\n *\n * @param style - Inline style.\n * @param iterator - Iterator.\n * @returns - Style object or null.\n *\n * @example Parsing inline style to object:\n *\n * ```js\n * import parse from 'style-to-object';\n * parse('line-height: 42;'); // { 'line-height': '42' }\n * ```\n */\nexport default function StyleToObject(\n  style: string,\n  iterator?: Iterator,\n): StyleObject | null {\n  let styleObject: StyleObject | null = null;\n\n  if (!style || typeof style !== 'string') {\n    return styleObject;\n  }\n\n  const declarations = parse(style);\n  const hasIterator = typeof iterator === 'function';\n\n  declarations.forEach((declaration) => {\n    if (declaration.type !== 'declaration') {\n      return;\n    }\n\n    const { property, value } = declaration;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      styleObject = styleObject || {};\n      styleObject[property] = value;\n    }\n  });\n\n  return styleObject;\n}\n"],"names":[],"mappings":";;;;;;;;;AA6BA,QAAA,OAAA,GAAA,cA6BC;AAzDD,IAAA,wBAAA,gDAAwC;AAcxC;;;;;;;;;;;;;GAaG,CACH,SAAwB,aAAa,CACnC,KAAa,EACb,QAAmB;IAEnB,IAAI,WAAW,GAAuB,IAAI,CAAC;IAE3C,IAAI,CAAC,KAAK,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;QACxC,OAAO,WAAW,CAAC;IACrB,CAAC;IAED,IAAM,YAAY,GAAG,CAAA,GAAA,sBAAA,OAAK,EAAC,KAAK,CAAC,CAAC;IAClC,IAAM,WAAW,GAAG,OAAO,QAAQ,KAAK,UAAU,CAAC;IAEnD,YAAY,CAAC,OAAO,CAAC,SAAC,WAAW;QAC/B,IAAI,WAAW,CAAC,IAAI,KAAK,aAAa,EAAE,CAAC;YACvC,OAAO;QACT,CAAC;QAEO,IAAA,QAAQ,GAAY,WAAW,CAAA,QAAvB,EAAE,KAAK,GAAK,WAAW,CAAA,KAAhB,CAAiB;QAExC,IAAI,WAAW,EAAE,CAAC;YAChB,QAAQ,CAAC,QAAQ,EAAE,KAAK,EAAE,WAAW,CAAC,CAAC;QACzC,CAAC,MAAM,IAAI,KAAK,EAAE,CAAC;YACjB,WAAW,GAAG,WAAW,IAAI,CAAA,CAAE,CAAC;YAChC,WAAW,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC;QAChC,CAAC;IACH,CAAC,CAAC,CAAC;IAEH,OAAO,WAAW,CAAC;AACrB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 23075, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23081, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/style-to-object/esm/index.mjs"],"sourcesContent":["import StyleToObject from '../cjs/index.js';\n\n// ensure compatibility with rollup umd build\nexport default StyleToObject.default || StyleToObject;\n"],"names":[],"mappings":";;;AAAA;;uCAGe,iJAAA,CAAA,UAAa,CAAC,OAAO,IAAI,iJAAA,CAAA,UAAa","ignoreList":[0]}},
    {"offset": {"line": 23087, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23093, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/property-information/lib/util/schema.js"],"sourcesContent":["/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;AAEM,MAAM;IACX;;;;;GAKC,GACD,YAAY,QAAQ,EAAE,MAAM,EAAE,KAAK,CAAE;QACnC,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,OAAO;YACT,IAAI,CAAC,KAAK,GAAG;QACf;IACF;AACF;AAEA,uBAAuB,GACvB,OAAO,SAAS,CAAC,QAAQ,GAAG,CAAC;AAC7B,mBAAmB,GACnB,OAAO,SAAS,CAAC,MAAM,GAAG,CAAC;AAC3B,wBAAwB,GACxB,OAAO,SAAS,CAAC,KAAK,GAAG","ignoreList":[0]}},
    {"offset": {"line": 23117, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23123, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/property-information/lib/util/merge.js"],"sourcesContent":["/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AAED;;AAOO,SAAS,MAAM,WAAW,EAAE,KAAK;IACtC,uBAAuB,GACvB,MAAM,WAAW,CAAC;IAClB,mBAAmB,GACnB,MAAM,SAAS,CAAC;IAChB,IAAI,QAAQ,CAAC;IAEb,MAAO,EAAE,QAAQ,YAAY,MAAM,CAAE;QACnC,OAAO,MAAM,CAAC,UAAU,WAAW,CAAC,MAAM,CAAC,QAAQ;QACnD,OAAO,MAAM,CAAC,QAAQ,WAAW,CAAC,MAAM,CAAC,MAAM;IACjD;IAEA,OAAO,IAAI,4JAAA,CAAA,SAAM,CAAC,UAAU,QAAQ;AACtC","ignoreList":[0]}},
    {"offset": {"line": 23141, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23147, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/property-information/lib/util/types.js"],"sourcesContent":["let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n"],"names":[],"mappings":";;;;;;;;;AAAA,IAAI,SAAS;AAEN,MAAM,UAAU;AAChB,MAAM,aAAa;AACnB,MAAM,oBAAoB;AAC1B,MAAM,SAAS;AACf,MAAM,iBAAiB;AACvB,MAAM,iBAAiB;AACvB,MAAM,wBAAwB;AAErC,SAAS;IACP,OAAO,KAAK,EAAE;AAChB","ignoreList":[0]}},
    {"offset": {"line": 23167, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23173, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/property-information/lib/util/info.js"],"sourcesContent":["export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n"],"names":[],"mappings":";;;AAAO,MAAM;IACX;;;;GAIC,GACD,YAAY,QAAQ,EAAE,SAAS,CAAE;QAC/B,mBAAmB,GACnB,IAAI,CAAC,QAAQ,GAAG;QAChB,mBAAmB,GACnB,IAAI,CAAC,SAAS,GAAG;IACnB;AACF;AAEA,wBAAwB,GACxB,KAAK,SAAS,CAAC,KAAK,GAAG;AACvB,KAAK,SAAS,CAAC,OAAO,GAAG;AACzB,KAAK,SAAS,CAAC,UAAU,GAAG;AAC5B,KAAK,SAAS,CAAC,iBAAiB,GAAG;AACnC,KAAK,SAAS,CAAC,MAAM,GAAG;AACxB,KAAK,SAAS,CAAC,cAAc,GAAG;AAChC,KAAK,SAAS,CAAC,cAAc,GAAG;AAChC,KAAK,SAAS,CAAC,qBAAqB,GAAG;AACvC,KAAK,SAAS,CAAC,eAAe,GAAG;AACjC,KAAK,SAAS,CAAC,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 23196, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23202, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/property-information/lib/util/defined-info.js"],"sourcesContent":["import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n"],"names":[],"mappings":";;;AACA;AADA;;;AAGA,+BAA+B,GAC/B,0BAA0B;AAC1B,MAAM,SAAS,OAAO,IAAI,CAAC;AAEpB,MAAM,oBAAoB,0JAAA,CAAA,OAAI;IACnC;;;;;;GAMC,GACD,YAAY,QAAQ,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,CAAE;QAC5C,IAAI,QAAQ,CAAC;QAEb,KAAK,CAAC,UAAU;QAEhB,KAAK,IAAI,EAAE,SAAS;QAEpB,IAAI,OAAO,SAAS,UAAU;YAC5B,MAAO,EAAE,QAAQ,OAAO,MAAM,CAAE;gBAC9B,MAAM,QAAQ,MAAM,CAAC,MAAM;gBAC3B,KAAK,IAAI,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,OAAO,2JAAK,CAAC,MAAM,MAAM,2JAAK,CAAC,MAAM;YAClE;QACF;IACF;AACF;AAEA,YAAY,SAAS,CAAC,OAAO,GAAG;AAEhC;;;;CAIC,GACD,SAAS,KAAK,MAAM,EAAE,GAAG,EAAE,KAAK;IAC9B,IAAI,OAAO;QACT,wEAAwE;QACxE,MAAM,CAAC,IAAI,GAAG;IAChB;AACF","ignoreList":[0]}},
    {"offset": {"line": 23241, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23247, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/property-information/lib/normalize.js"],"sourcesContent":["/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AACM,SAAS,UAAU,KAAK;IAC7B,OAAO,MAAM,WAAW;AAC1B","ignoreList":[0]}},
    {"offset": {"line": 23256, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23262, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/property-information/lib/util/create.js"],"sourcesContent":["/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;CAYC;;;AAID;AAFA;AACA;;;;AAGA,MAAM,MAAM,CAAC,EAAE,cAAc;AAMtB,SAAS,OAAO,UAAU;IAC/B,uBAAuB,GACvB,MAAM,WAAW,CAAC;IAClB,mBAAmB,GACnB,MAAM,SAAS,CAAC;IAChB,mBAAmB,GACnB,IAAI;IAEJ,IAAK,QAAQ,WAAW,UAAU,CAAE;QAClC,IAAI,IAAI,IAAI,CAAC,WAAW,UAAU,EAAE,OAAO;YACzC,MAAM,QAAQ,WAAW,UAAU,CAAC,KAAK;YACzC,MAAM,OAAO,IAAI,qKAAA,CAAA,cAAW,CAC1B,MACA,WAAW,SAAS,CAAC,WAAW,UAAU,IAAI,CAAC,GAAG,OAClD,OACA,WAAW,KAAK;YAGlB,IACE,WAAW,eAAe,IAC1B,WAAW,eAAe,CAAC,QAAQ,CAAC,OACpC;gBACA,KAAK,eAAe,GAAG;YACzB;YAEA,QAAQ,CAAC,KAAK,GAAG;YAEjB,MAAM,CAAC,CAAA,GAAA,uJAAA,CAAA,YAAS,AAAD,EAAE,MAAM,GAAG;YAC1B,MAAM,CAAC,CAAA,GAAA,uJAAA,CAAA,YAAS,AAAD,EAAE,KAAK,SAAS,EAAE,GAAG;QACtC;IACF;IAEA,OAAO,IAAI,4JAAA,CAAA,SAAM,CAAC,UAAU,QAAQ,WAAW,KAAK;AACtD","ignoreList":[0]}},
    {"offset": {"line": 23302, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23308, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/property-information/lib/xml.js"],"sourcesContent":["import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,MAAM,CAAA,GAAA,4JAAA,CAAA,SAAM,AAAD,EAAE;IACxB,OAAO;IACP,WAAU,CAAC,EAAE,IAAI;QACf,OAAO,SAAS,KAAK,KAAK,CAAC,GAAG,WAAW;IAC3C;IACA,YAAY;QAAC,SAAS;QAAM,SAAS;QAAM,UAAU;IAAI;AAC3D","ignoreList":[0]}},
    {"offset": {"line": 23324, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23330, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/property-information/lib/xlink.js"],"sourcesContent":["import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,QAAQ,CAAA,GAAA,4JAAA,CAAA,SAAM,AAAD,EAAE;IAC1B,OAAO;IACP,WAAU,CAAC,EAAE,IAAI;QACf,OAAO,WAAW,KAAK,KAAK,CAAC,GAAG,WAAW;IAC7C;IACA,YAAY;QACV,cAAc;QACd,cAAc;QACd,WAAW;QACX,WAAW;QACX,WAAW;QACX,YAAY;QACZ,WAAW;IACb;AACF","ignoreList":[0]}},
    {"offset": {"line": 23350, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23356, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/property-information/lib/util/case-sensitive-transform.js"],"sourcesContent":["/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;AACM,SAAS,uBAAuB,UAAU,EAAE,SAAS;IAC1D,OAAO,aAAa,aAAa,UAAU,CAAC,UAAU,GAAG;AAC3D","ignoreList":[0]}},
    {"offset": {"line": 23366, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23372, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/property-information/lib/util/case-insensitive-transform.js"],"sourcesContent":["import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n"],"names":[],"mappings":";;;AAAA;;AAOO,SAAS,yBAAyB,UAAU,EAAE,QAAQ;IAC3D,OAAO,CAAA,GAAA,oLAAA,CAAA,yBAAsB,AAAD,EAAE,YAAY,SAAS,WAAW;AAChE","ignoreList":[0]}},
    {"offset": {"line": 23380, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23386, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/property-information/lib/xmlns.js"],"sourcesContent":["import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,MAAM,QAAQ,CAAA,GAAA,4JAAA,CAAA,SAAM,AAAD,EAAE;IAC1B,OAAO;IACP,YAAY;QAAC,YAAY;IAAa;IACtC,WAAW,sLAAA,CAAA,2BAAwB;IACnC,YAAY;QAAC,OAAO;QAAM,YAAY;IAAI;AAC5C","ignoreList":[0]}},
    {"offset": {"line": 23404, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23410, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/property-information/lib/aria.js"],"sourcesContent":["import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n"],"names":[],"mappings":";;;AACA;AADA;;;AAGO,MAAM,OAAO,CAAA,GAAA,4JAAA,CAAA,SAAM,AAAD,EAAE;IACzB,WAAU,CAAC,EAAE,IAAI;QACf,OAAO,SAAS,SAAS,OAAO,UAAU,KAAK,KAAK,CAAC,GAAG,WAAW;IACrE;IACA,YAAY;QACV,sBAAsB;QACtB,YAAY,2JAAA,CAAA,aAAU;QACtB,kBAAkB;QAClB,UAAU,2JAAA,CAAA,aAAU;QACpB,aAAa,2JAAA,CAAA,aAAU;QACvB,cAAc,2JAAA,CAAA,SAAM;QACpB,cAAc,2JAAA,CAAA,SAAM;QACpB,aAAa,2JAAA,CAAA,SAAM;QACnB,cAAc,2JAAA,CAAA,iBAAc;QAC5B,aAAa;QACb,iBAAiB,2JAAA,CAAA,iBAAc;QAC/B,aAAa;QACb,cAAc,2JAAA,CAAA,aAAU;QACxB,gBAAgB,2JAAA,CAAA,iBAAc;QAC9B,kBAAkB;QAClB,cAAc,2JAAA,CAAA,aAAU;QACxB,YAAY,2JAAA,CAAA,iBAAc;QAC1B,aAAa,2JAAA,CAAA,aAAU;QACvB,cAAc;QACd,YAAY,2JAAA,CAAA,aAAU;QACtB,aAAa;QACb,kBAAkB;QAClB,WAAW;QACX,gBAAgB,2JAAA,CAAA,iBAAc;QAC9B,WAAW,2JAAA,CAAA,SAAM;QACjB,UAAU;QACV,WAAW,2JAAA,CAAA,aAAU;QACrB,eAAe,2JAAA,CAAA,aAAU;QACzB,qBAAqB,2JAAA,CAAA,aAAU;QAC/B,iBAAiB;QACjB,UAAU,2JAAA,CAAA,iBAAc;QACxB,iBAAiB;QACjB,cAAc,2JAAA,CAAA,SAAM;QACpB,aAAa,2JAAA,CAAA,aAAU;QACvB,cAAc,2JAAA,CAAA,aAAU;QACxB,cAAc;QACd,cAAc,2JAAA,CAAA,aAAU;QACxB,qBAAqB,2JAAA,CAAA,iBAAc;QACnC,cAAc,2JAAA,CAAA,SAAM;QACpB,cAAc,2JAAA,CAAA,SAAM;QACpB,aAAa,2JAAA,CAAA,SAAM;QACnB,cAAc,2JAAA,CAAA,aAAU;QACxB,aAAa,2JAAA,CAAA,SAAM;QACnB,UAAU;QACV,cAAc,2JAAA,CAAA,SAAM;QACpB,cAAc,2JAAA,CAAA,SAAM;QACpB,cAAc,2JAAA,CAAA,SAAM;QACpB,eAAe;QACf,MAAM;IACR;AACF","ignoreList":[0]}},
    {"offset": {"line": 23473, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23479, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/property-information/lib/html.js"],"sourcesContent":["import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 23802, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23808, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/property-information/lib/svg.js"],"sourcesContent":["import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 24374, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 24380, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/property-information/index.js"],"sourcesContent":["/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n"],"names":[],"mappings":"AAAA;;;CAGC;;;;AAED;AAEA;AADA;AAEA;AACA;AACA;AACA;;;;;;;;;;;AAKO,MAAM,OAAO,CAAA,GAAA,2JAAA,CAAA,QAAK,AAAD,EAAE;IAAC,iJAAA,CAAA,MAAG;IAAE,mJAAA,CAAA,QAAK;IAAE,mJAAA,CAAA,QAAK;IAAE,kJAAA,CAAA,OAAI;IAAE,kJAAA,CAAA,OAAQ;CAAC,EAAE;AACxD,MAAM,MAAM,CAAA,GAAA,2JAAA,CAAA,QAAK,AAAD,EAAE;IAAC,iJAAA,CAAA,MAAG;IAAE,mJAAA,CAAA,QAAK;IAAE,mJAAA,CAAA,QAAK;IAAE,kJAAA,CAAA,OAAI;IAAE,iJAAA,CAAA,MAAO;CAAC,EAAE","ignoreList":[0]}},
    {"offset": {"line": 24418, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 24424, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/property-information/lib/find.js"],"sourcesContent":["/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n"],"names":[],"mappings":"AAAA;;CAEC;;;AAED;AAEA;AADA;;;;AAGA,MAAM,QAAQ;AACd,MAAM,OAAO;AACb,MAAM,MAAM;AAOL,SAAS,KAAK,MAAM,EAAE,KAAK;IAChC,MAAM,SAAS,CAAA,GAAA,uJAAA,CAAA,YAAS,AAAD,EAAE;IACzB,IAAI,OAAO;IACX,IAAI,OAAO,0JAAA,CAAA,OAAI;IAEf,IAAI,UAAU,OAAO,MAAM,EAAE;QAC3B,OAAO,OAAO,QAAQ,CAAC,OAAO,MAAM,CAAC,OAAO,CAAC;IAC/C;IAEA,IAAI,OAAO,MAAM,GAAG,KAAK,OAAO,KAAK,CAAC,GAAG,OAAO,UAAU,MAAM,IAAI,CAAC,QAAQ;QAC3E,yBAAyB;QACzB,IAAI,MAAM,MAAM,CAAC,OAAO,KAAK;YAC3B,2BAA2B;YAC3B,MAAM,OAAO,MAAM,KAAK,CAAC,GAAG,OAAO,CAAC,MAAM;YAC1C,OAAO,SAAS,KAAK,MAAM,CAAC,GAAG,WAAW,KAAK,KAAK,KAAK,CAAC;QAC5D,OAAO;YACL,6BAA6B;YAC7B,MAAM,OAAO,MAAM,KAAK,CAAC;YAEzB,IAAI,CAAC,KAAK,IAAI,CAAC,OAAO;gBACpB,IAAI,SAAS,KAAK,OAAO,CAAC,KAAK;gBAE/B,IAAI,OAAO,MAAM,CAAC,OAAO,KAAK;oBAC5B,SAAS,MAAM;gBACjB;gBAEA,QAAQ,SAAS;YACnB;QACF;QAEA,OAAO,qKAAA,CAAA,cAAW;IACpB;IAEA,OAAO,IAAI,KAAK,MAAM;AACxB;AAEA;;;CAGC,GACD,SAAS,MAAM,EAAE;IACf,OAAO,MAAM,GAAG,WAAW;AAC7B;AAEA;;;CAGC,GACD,SAAS,UAAU,EAAE;IACnB,OAAO,GAAG,MAAM,CAAC,GAAG,WAAW;AACjC","ignoreList":[0]}},
    {"offset": {"line": 24478, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 24484, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/property-information/lib/hast-to-react.js"],"sourcesContent":["/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;CAQC;;;AACM,MAAM,cAAc;IACzB,SAAS;IACT,UAAU;IACV,QAAQ;IACR,iBAAiB;IACjB,kBAAkB;IAClB,eAAe;IACf,gBAAgB;IAChB,kBAAkB;IAClB,QAAQ;IACR,cAAc;IACd,cAAc;IACd,WAAW;IACX,WAAW;IACX,WAAW;IACX,YAAY;IACZ,WAAW;IACX,YAAY;AACd","ignoreList":[0]}},
    {"offset": {"line": 24514, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 24520, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/space-separated-tokens/index.js"],"sourcesContent":["/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n"],"names":[],"mappings":"AAAA;;;;;;;CAOC;;;;AACM,SAAS,MAAM,KAAK;IACzB,MAAM,QAAQ,OAAO,SAAS,IAAI,IAAI;IACtC,OAAO,QAAQ,MAAM,KAAK,CAAC,mBAAmB,EAAE;AAClD;AAUO,SAAS,UAAU,MAAM;IAC9B,OAAO,OAAO,IAAI,CAAC,KAAK,IAAI;AAC9B","ignoreList":[0]}},
    {"offset": {"line": 24538, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 24544, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/comma-separated-tokens/index.js"],"sourcesContent":["/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n"],"names":[],"mappings":"AAAA;;;;;;;CAOC,GAED;;;CAGC,GAED;;;;;;;CAOC;;;;AACM,SAAS,MAAM,KAAK;IACzB,0BAA0B,GAC1B,MAAM,SAAS,EAAE;IACjB,MAAM,QAAQ,OAAO,SAAS;IAC9B,IAAI,QAAQ,MAAM,OAAO,CAAC;IAC1B,IAAI,QAAQ;IACZ,oBAAoB,GACpB,IAAI,MAAM;IAEV,MAAO,CAAC,IAAK;QACX,IAAI,UAAU,CAAC,GAAG;YAChB,QAAQ,MAAM,MAAM;YACpB,MAAM;QACR;QAEA,MAAM,QAAQ,MAAM,KAAK,CAAC,OAAO,OAAO,IAAI;QAE5C,IAAI,SAAS,CAAC,KAAK;YACjB,OAAO,IAAI,CAAC;QACd;QAEA,QAAQ,QAAQ;QAChB,QAAQ,MAAM,OAAO,CAAC,KAAK;IAC7B;IAEA,OAAO;AACT;AAYO,SAAS,UAAU,MAAM,EAAE,OAAO;IACvC,MAAM,WAAW,WAAW,CAAC;IAE7B,uCAAuC;IACvC,MAAM,QAAQ,MAAM,CAAC,OAAO,MAAM,GAAG,EAAE,KAAK,KAAK;WAAI;QAAQ;KAAG,GAAG;IAEnE,OAAO,MACJ,IAAI,CACH,CAAC,SAAS,QAAQ,GAAG,MAAM,EAAE,IAC3B,MACA,CAAC,SAAS,OAAO,KAAK,QAAQ,KAAK,GAAG,GAEzC,IAAI;AACT","ignoreList":[0]}},
    {"offset": {"line": 24594, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 24600, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/estree-util-attach-comments/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('estree').Comment} Comment\n * @typedef {import('estree').Node} Nodes\n */\n\n/**\n * @typedef Fields\n *   Fields.\n * @property {boolean} leading\n *   Whether it’s leading.\n * @property {boolean} trailing\n *   Whether it’s trailing.\n *\n * @typedef State\n *   Info passed around.\n * @property {Array<Comment>} comments\n *   Comments.\n * @property {number} index\n *   Index of comment.\n */\n\nconst own = {}.hasOwnProperty\n\n/** @type {Array<Comment>} */\nconst emptyComments = []\n\n/**\n * Attach semistandard estree comment nodes to the tree.\n *\n * This mutates the given `tree`.\n * It takes `comments`, walks the tree, and adds comments as close as possible\n * to where they originated.\n *\n * Comment nodes are given two boolean fields: `leading` (`true` for\n * `/* a *\\/ b`) and `trailing` (`true` for `a /* b *\\/`).\n * Both fields are `false` for dangling comments: `[/* a *\\/]`.\n * This is what `recast` uses too, and is somewhat similar to Babel, which is\n * not estree but instead uses `leadingComments`, `trailingComments`, and\n * `innerComments` arrays on nodes.\n *\n * The algorithm checks any node: even recent (or future) proposals or\n * nonstandard syntax such as JSX, because it ducktypes to find nodes instead\n * of having a list of visitor keys.\n *\n * The algorithm supports `loc` fields (line/column), `range` fields (offsets),\n * and direct `start` / `end` fields.\n *\n * @template {Nodes} Tree\n *   Node type.\n * @param {Tree} tree\n *   Tree to attach to.\n * @param {Array<Comment> | null | undefined} [comments]\n *   List of comments (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport function attachComments(tree, comments) {\n  const list = comments ? [...comments].sort(compare) : emptyComments\n  if (list.length > 0) walk(tree, {comments: list, index: 0})\n}\n\n/**\n * Attach semistandard estree comment nodes to the tree.\n *\n * @param {Nodes} node\n *   Node.\n * @param {State} state\n *   Info passed around.\n * @returns {undefined}\n *   Nothing.\n */\nfunction walk(node, state) {\n  // Done, we can quit.\n  if (state.index === state.comments.length) {\n    return\n  }\n\n  /** @type {Array<Nodes>} */\n  const children = []\n  /** @type {Array<Comment>} */\n  const comments = []\n  /** @type {string} */\n  let key\n\n  // Find all children of `node`\n  for (key in node) {\n    if (own.call(node, key)) {\n      /** @type {Array<Nodes> | Nodes} */\n      // @ts-expect-error: indexable.\n      const value = node[key]\n\n      // Ignore comments.\n      if (value && typeof value === 'object' && key !== 'comments') {\n        if (Array.isArray(value)) {\n          let index = -1\n\n          while (++index < value.length) {\n            if (value[index] && typeof value[index].type === 'string') {\n              children.push(value[index])\n            }\n          }\n        } else if (typeof value.type === 'string') {\n          children.push(value)\n        }\n      }\n    }\n  }\n\n  // Sort the children.\n  children.sort(compare)\n\n  // Initial comments.\n  comments.push(...slice(state, node, false, {leading: true, trailing: false}))\n\n  let index = -1\n\n  while (++index < children.length) {\n    walk(children[index], state)\n  }\n\n  // Dangling or trailing comments.\n  comments.push(\n    ...slice(state, node, true, {\n      leading: false,\n      trailing: children.length > 0\n    })\n  )\n\n  if (comments.length > 0) {\n    // @ts-expect-error, yes, because they’re nonstandard.\n    node.comments = comments\n  }\n}\n\n/**\n * @param {State} state\n *   Info passed around.\n * @param {Nodes} node\n *   Node.\n * @param {boolean} compareEnd\n *   Whether to compare on the end (default is on start).\n * @param {Fields} fields\n *   Fields.\n * @returns {Array<Comment>}\n *   Slice from `state.comments`.\n */\nfunction slice(state, node, compareEnd, fields) {\n  /** @type {Array<Comment>} */\n  const result = []\n\n  while (\n    state.comments[state.index] &&\n    compare(state.comments[state.index], node, compareEnd) < 1\n  ) {\n    result.push(Object.assign({}, state.comments[state.index++], fields))\n  }\n\n  return result\n}\n\n/**\n * Sort two nodes (or comments).\n *\n * @param {Comment | Nodes} left\n *   A node.\n * @param {Comment | Nodes} right\n *   The other node.\n * @param {boolean | undefined} [compareEnd=false]\n *   Compare on `end` of `right`, default is to compare on `start` (default:\n *   `false`).\n * @returns {number}\n *   Sorting.\n */\nfunction compare(left, right, compareEnd) {\n  const field = compareEnd ? 'end' : 'start'\n\n  // Offsets.\n  if (left.range && right.range) {\n    return left.range[0] - right.range[compareEnd ? 1 : 0]\n  }\n\n  // Points.\n  if (left.loc && left.loc.start && right.loc && right.loc[field]) {\n    return (\n      left.loc.start.line - right.loc[field].line ||\n      left.loc.start.column - right.loc[field].column\n    )\n  }\n\n  // Just `start` (and `end`) on nodes.\n  // Default in most parsers.\n  if ('start' in left && field in right) {\n    // @ts-expect-error Added by Acorn\n    return left.start - right[field]\n  }\n\n  return Number.NaN\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 24737, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 24743, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/hast-util-whitespace/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n"],"names":[],"mappings":"AAAA;;CAEC,GAED,8BAA8B;AAC9B,yDAAyD;;;;AACzD,MAAM,KAAK;AAaJ,SAAS,WAAW,KAAK;IAC9B,OAAO,OAAO,UAAU,WACpB,MAAM,IAAI,KAAK,SACb,MAAM,MAAM,KAAK,IACjB,QACF,MAAM;AACZ;AAEA;;;CAGC,GACD,SAAS,MAAM,KAAK;IAClB,OAAO,MAAM,OAAO,CAAC,IAAI,QAAQ;AACnC","ignoreList":[0]}},
    {"offset": {"line": 24760, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 24766, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/rehype-recma/lib/index.js"],"sourcesContent":["/**\n * @import {Root} from 'hast'\n * @import {Program} from 'estree'\n * @import {Options} from 'rehype-recma'\n */\n\nimport {toEstree} from 'hast-util-to-estree'\n\n/**\n * Plugin to transform HTML (hast) to JS (estree).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport default function rehypeRecma(options) {\n  /**\n   * @param {Root} tree\n   *   Tree (hast).\n   * @returns {Program}\n   *   Program (esast).\n   */\n  return function (tree) {\n    return toEstree(tree, options)\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;AAED;;AAUe,SAAS,YAAY,OAAO;IACzC;;;;;GAKC,GACD,OAAO,SAAU,IAAI;QACnB,OAAO,CAAA,GAAA,wJAAA,CAAA,WAAQ,AAAD,EAAE,MAAM;IACxB;AACF","ignoreList":[0]}},
    {"offset": {"line": 24785, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 24791, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/estree-util-scope/lib/index.js"],"sourcesContent":["/**\n * @import {Node, Pattern} from 'estree'\n * @import {Scope, Visitors} from './types.js'\n */\n\nimport {ok as assert} from 'devlop'\n\n/**\n * Create state to track what’s defined.\n *\n * @returns {Visitors}\n *   State.\n */\nexport function createVisitors() {\n  /** @type {[topLevel: Scope, ...rest: Array<Scope>]} */\n  const scopes = [{block: false, defined: []}]\n\n  return {enter, exit, scopes}\n\n  /**\n   * @param {Node} node\n   *   Node.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function enter(node) {\n    // On arrow functions, create scope, add parameters.\n    if (node.type === 'ArrowFunctionExpression') {\n      scopes.push({block: false, defined: []})\n\n      for (const parameter of node.params) {\n        definePattern(parameter, false)\n      }\n    }\n    // On block statements, create scope.\n    // Not sure why `periscopic` only does `Block`/`For`/`ForIn`/`ForOf`.\n    // I added `DoWhile`/`While` here just to be sure.\n    else if (\n      node.type === 'BlockStatement' ||\n      node.type === 'DoWhileStatement' ||\n      node.type === 'ForInStatement' ||\n      node.type === 'ForOfStatement' ||\n      node.type === 'ForStatement' ||\n      node.type === 'WhileStatement'\n    ) {\n      scopes.push({block: true, defined: []})\n    }\n\n    // On catch clauses, create scope, add param.\n    else if (node.type === 'CatchClause') {\n      scopes.push({block: true, defined: []})\n      if (node.param) definePattern(node.param, true)\n    }\n\n    // Add identifier of class declaration.\n    else if (node.type === 'ClassDeclaration') {\n      defineIdentifier(node.id.name, false)\n    }\n\n    // On function declarations, add name, create scope, add parameters.\n    else if (node.type === 'FunctionDeclaration') {\n      defineIdentifier(node.id.name, false)\n      scopes.push({block: false, defined: []})\n\n      for (const parameter of node.params) {\n        definePattern(parameter, false)\n      }\n    }\n\n    // On function expressions, add name, create scope, add parameters.\n    else if (node.type === 'FunctionExpression') {\n      if (node.id) defineIdentifier(node.id.name, false)\n      scopes.push({block: false, defined: []})\n\n      for (const parameter of node.params) {\n        definePattern(parameter, false)\n      }\n    }\n\n    // Add specifiers of import declarations.\n    else if (node.type === 'ImportDeclaration') {\n      for (const specifier of node.specifiers) {\n        defineIdentifier(specifier.local.name, false)\n      }\n    }\n\n    // Add patterns of variable declarations.\n    else if (node.type === 'VariableDeclaration') {\n      for (const declaration of node.declarations) {\n        definePattern(declaration.id, node.kind !== 'var')\n      }\n    }\n  }\n\n  /**\n   * @param {Node} node\n   *   Node.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function exit(node) {\n    if (\n      node.type === 'ArrowFunctionExpression' ||\n      node.type === 'FunctionDeclaration' ||\n      node.type === 'FunctionExpression'\n    ) {\n      const scope = scopes.pop()\n      assert(scope, 'expected scope')\n      assert(!scope.block, 'expected non-block')\n    } else if (\n      node.type === 'BlockStatement' ||\n      node.type === 'CatchClause' ||\n      node.type === 'DoWhileStatement' ||\n      node.type === 'ForInStatement' ||\n      node.type === 'ForOfStatement' ||\n      node.type === 'ForStatement' ||\n      node.type === 'WhileStatement'\n    ) {\n      const scope = scopes.pop()\n      assert(scope, 'expected scope')\n      assert(scope.block, 'expected block')\n    }\n  }\n\n  /**\n   * Define an identifier in a scope.\n   *\n   * @param {string} id\n   * @param {boolean} block\n   * @returns {undefined}\n   */\n  function defineIdentifier(id, block) {\n    let index = scopes.length\n    /** @type {Scope | undefined} */\n    let scope\n\n    while (index--) {\n      scope = scopes[index]\n\n      if (block || !scope.block) {\n        break\n      }\n    }\n\n    assert(scope)\n    scope.defined.push(id)\n  }\n\n  /**\n   * Define a pattern in a scope.\n   *\n   * @param {Pattern} pattern\n   * @param {boolean} block\n   */\n  function definePattern(pattern, block) {\n    // `[, x]`\n    if (pattern.type === 'ArrayPattern') {\n      for (const element of pattern.elements) {\n        if (element) {\n          definePattern(element, block)\n        }\n      }\n    }\n\n    // `{x=y}`\n    else if (pattern.type === 'AssignmentPattern') {\n      definePattern(pattern.left, block)\n    }\n\n    // `x`\n    else if (pattern.type === 'Identifier') {\n      defineIdentifier(pattern.name, block)\n    }\n\n    // `{x}`\n    else if (pattern.type === 'ObjectPattern') {\n      for (const property of pattern.properties) {\n        // `{key}`, `{key = value}`, `{key: value}`\n        if (property.type === 'Property') {\n          definePattern(property.value, block)\n        }\n        // `{...x}`\n        else {\n          assert(property.type === 'RestElement')\n          definePattern(property, block)\n        }\n      }\n    }\n\n    // `...x`\n    else {\n      assert(pattern.type === 'RestElement')\n      definePattern(pattern.argument, block)\n    }\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 24935, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 24941, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/estree-util-build-jsx/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('estree-jsx').Expression} Expression\n * @typedef {import('estree-jsx').Identifier} Identifier\n * @typedef {import('estree-jsx').ImportSpecifier} ImportSpecifier\n * @typedef {import('estree-jsx').JSXAttribute} JSXAttribute\n * @typedef {import('estree-jsx').JSXIdentifier} JSXIdentifier\n * @typedef {import('estree-jsx').JSXMemberExpression} JSXMemberExpression\n * @typedef {import('estree-jsx').JSXNamespacedName} JSXNamespacedName\n * @typedef {import('estree-jsx').Literal} Literal\n * @typedef {import('estree-jsx').MemberExpression} MemberExpression\n * @typedef {import('estree-jsx').Node} Node\n * @typedef {import('estree-jsx').ObjectExpression} ObjectExpression\n * @typedef {import('estree-jsx').Property} Property\n * @typedef {import('estree-jsx').SpreadElement} SpreadElement\n *\n * @typedef {'automatic' | 'classic'} Runtime\n *   How to transform JSX.\n *\n * @typedef Options\n *   Configuration.\n *\n *   > 👉 **Note**: you can also configure `runtime`, `importSource`, `pragma`,\n *   > and `pragmaFrag` from within files through comments.\n * @property {Runtime | null | undefined} [runtime='classic']\n *   Choose the runtime (default: `'classic'`).\n *\n *   Comment form: `@jsxRuntime theRuntime`.\n * @property {string | null | undefined} [importSource='react']\n *   Place to import `jsx`, `jsxs`, `jsxDEV`, and `Fragment` from, when the\n *   effective runtime is automatic (default: `'react'`).\n *\n *   Comment form: `@jsxImportSource theSource`.\n *\n *   > 👉 **Note**: `/jsx-runtime` or `/jsx-dev-runtime` is appended to this\n *   > provided source.\n *   > In CJS, that can resolve to a file (as in `theSource/jsx-runtime.js`),\n *   > but for ESM an export map needs to be set up to point to files:\n *   >\n *   > ```js\n *   > // …\n *   > \"exports\": {\n *   >   // …\n *   >   \"./jsx-runtime\": \"./path/to/jsx-runtime.js\",\n *   >   \"./jsx-dev-runtime\": \"./path/to/jsx-runtime.js\"\n *   >   // …\n *   > ```\n * @property {string | null | undefined} [pragma='React.createElement']\n *   Identifier or member expression to call when the effective runtime is\n *   classic (default: `'React.createElement'`).\n *\n *   Comment form: `@jsx identifier`.\n * @property {string | null | undefined} [pragmaFrag='React.Fragment']\n *   Identifier or member expression to use as a symbol for fragments when the\n *   effective runtime is classic (default: `'React.Fragment'`).\n *\n *   Comment form: `@jsxFrag identifier`.\n * @property {boolean | null | undefined} [development=false]\n *   When in the automatic runtime, whether to import\n *   `theSource/jsx-dev-runtime.js`, use `jsxDEV`, and pass location info when\n *   available (default: `false`).\n *\n *   This helps debugging but adds a lot of code that you don’t want in\n *   production.\n * @property {string | null | undefined} [filePath]\n *   File path to the original source file (optional).\n *\n *   Passed in location info to `jsxDEV` when using the automatic runtime with\n *   `development: true`.\n *\n * @typedef Annotations\n *   State where info from comments is gathered.\n * @property {string | undefined} [jsx]\n *   JSX identifier (`pragma`).\n * @property {string | undefined} [jsxFrag]\n *   JSX identifier of fragment (`pragmaFrag`).\n * @property {string | undefined} [jsxImportSource]\n *   Where to import an automatic JSX runtime from.\n * @property {Runtime | undefined} [jsxRuntime]\n *   Runtime.\n *\n * @typedef Imports\n *   State of used identifiers from the automatic runtime.\n * @property {boolean | undefined} [fragment]\n *   Symbol of `Fragment`.\n * @property {boolean | undefined} [jsx]\n *   Symbol of `jsx`.\n * @property {boolean | undefined} [jsxs]\n *   Symbol of `jsxs`.\n * @property {boolean | undefined} [jsxDEV]\n *   Symbol of `jsxDEV`.\n */\n\nimport {ok as assert} from 'devlop'\nimport {name as isIdentifierName} from 'estree-util-is-identifier-name'\nimport {walk} from 'estree-walker'\n\nconst regex = /@(jsx|jsxFrag|jsxImportSource|jsxRuntime)\\s+(\\S+)/g\n\n/**\n * Turn JSX in `tree` into function calls: `<x />` -> `h('x')`!\n *\n * ###### Algorithm\n *\n * In almost all cases, this utility is the same as the Babel plugin, except that\n * they work on slightly different syntax trees.\n *\n * Some differences:\n *\n * *   no pure annotations things\n * *   `this` is not a component: `<this>` -> `h('this')`, not `h(this)`\n * *   namespaces are supported: `<a:b c:d>` -> `h('a:b', {'c:d': true})`,\n *     which throws by default in Babel or can be turned on with `throwIfNamespace`\n * *   no `useSpread`, `useBuiltIns`, or `filter` options\n *\n * @param {Node} tree\n *   Tree to transform (typically `Program`).\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport function buildJsx(tree, options) {\n  const config = options || {}\n  let automatic = config.runtime === 'automatic'\n  /** @type {Annotations} */\n  const annotations = {}\n  /** @type {Imports} */\n  const imports = {}\n\n  walk(tree, {\n    enter(node) {\n      if (node.type === 'Program') {\n        const comments = node.comments || []\n        let index = -1\n\n        while (++index < comments.length) {\n          regex.lastIndex = 0\n\n          let match = regex.exec(comments[index].value)\n\n          while (match) {\n            // @ts-expect-error: `match[1]` is always a key, `match[2]` when\n            // runtime is checked later.\n            annotations[match[1]] = match[2]\n            match = regex.exec(comments[index].value)\n          }\n        }\n\n        if (annotations.jsxRuntime) {\n          if (annotations.jsxRuntime === 'automatic') {\n            automatic = true\n\n            if (annotations.jsx) {\n              throw new Error('Unexpected `@jsx` pragma w/ automatic runtime')\n            }\n\n            if (annotations.jsxFrag) {\n              throw new Error(\n                'Unexpected `@jsxFrag` pragma w/ automatic runtime'\n              )\n            }\n          } else if (annotations.jsxRuntime === 'classic') {\n            automatic = false\n\n            if (annotations.jsxImportSource) {\n              throw new Error(\n                'Unexpected `@jsxImportSource` w/ classic runtime'\n              )\n            }\n          } else {\n            throw new Error(\n              'Unexpected `jsxRuntime` `' +\n                annotations.jsxRuntime +\n                '`, expected `automatic` or `classic`'\n            )\n          }\n        }\n      }\n    },\n    // eslint-disable-next-line complexity\n    leave(node) {\n      if (node.type === 'Program') {\n        /** @type {Array<ImportSpecifier>} */\n        const specifiers = []\n\n        if (imports.fragment) {\n          specifiers.push({\n            type: 'ImportSpecifier',\n            imported: {type: 'Identifier', name: 'Fragment'},\n            local: {type: 'Identifier', name: '_Fragment'}\n          })\n        }\n\n        if (imports.jsx) {\n          specifiers.push({\n            type: 'ImportSpecifier',\n            imported: {type: 'Identifier', name: 'jsx'},\n            local: {type: 'Identifier', name: '_jsx'}\n          })\n        }\n\n        if (imports.jsxs) {\n          specifiers.push({\n            type: 'ImportSpecifier',\n            imported: {type: 'Identifier', name: 'jsxs'},\n            local: {type: 'Identifier', name: '_jsxs'}\n          })\n        }\n\n        if (imports.jsxDEV) {\n          specifiers.push({\n            type: 'ImportSpecifier',\n            imported: {type: 'Identifier', name: 'jsxDEV'},\n            local: {type: 'Identifier', name: '_jsxDEV'}\n          })\n        }\n\n        if (specifiers.length > 0) {\n          let injectIndex = 0\n\n          while (injectIndex < node.body.length) {\n            const child = node.body[injectIndex]\n\n            if ('directive' in child && child.directive) {\n              injectIndex++\n            } else {\n              break\n            }\n          }\n\n          node.body.splice(injectIndex, 0, {\n            type: 'ImportDeclaration',\n            specifiers,\n            source: {\n              type: 'Literal',\n              value:\n                (annotations.jsxImportSource ||\n                  config.importSource ||\n                  'react') +\n                (config.development ? '/jsx-dev-runtime' : '/jsx-runtime')\n            }\n          })\n        }\n      }\n\n      if (node.type !== 'JSXElement' && node.type !== 'JSXFragment') {\n        return\n      }\n\n      /** @type {Array<Expression>} */\n      const children = []\n      let index = -1\n\n      // Figure out `children`.\n      while (++index < node.children.length) {\n        const child = node.children[index]\n\n        if (child.type === 'JSXExpressionContainer') {\n          // Ignore empty expressions.\n          if (child.expression.type !== 'JSXEmptyExpression') {\n            children.push(child.expression)\n          }\n        } else if (child.type === 'JSXText') {\n          const value = child.value\n            // Replace tabs w/ spaces.\n            .replace(/\\t/g, ' ')\n            // Use line feeds, drop spaces around them.\n            .replace(/ *(\\r?\\n|\\r) */g, '\\n')\n            // Collapse multiple line feeds.\n            .replace(/\\n+/g, '\\n')\n            // Drop final line feeds.\n            .replace(/\\n+$/, '')\n            // Drop first line feeds.\n            .replace(/^\\n+/, '')\n            // Replace line feeds with spaces.\n            .replace(/\\n/g, ' ')\n\n          // Ignore collapsible text.\n          if (value) {\n            /** @type {Node} */\n            const text = {type: 'Literal', value}\n            create(child, text)\n            children.push(text)\n          }\n        } else {\n          assert(\n            child.type !== 'JSXElement' &&\n              child.type !== 'JSXFragment' &&\n              child.type !== 'JSXSpreadChild'\n          )\n          children.push(child)\n        }\n      }\n\n      /** @type {Identifier | Literal | MemberExpression} */\n      let name\n      /** @type {Array<Property | SpreadElement>} */\n      const fields = []\n      /** @type {Array<Expression>} */\n      let parameters = []\n      /** @type {Expression | undefined} */\n      let key\n\n      // Do the stuff needed for elements.\n      if (node.type === 'JSXElement') {\n        name = toIdentifier(node.openingElement.name)\n\n        // If the name could be an identifier, but start with a lowercase letter,\n        // it’s not a component.\n        if (name.type === 'Identifier' && /^[a-z]/.test(name.name)) {\n          /** @type {Node} */\n          const next = {type: 'Literal', value: name.name}\n          create(name, next)\n          name = next\n        }\n\n        /** @type {boolean | undefined} */\n        let spread\n        const attributes = node.openingElement.attributes\n        let index = -1\n\n        // Place props in the right order, because we might have duplicates\n        // in them and what’s spread in.\n        while (++index < attributes.length) {\n          const attribute = attributes[index]\n\n          if (attribute.type === 'JSXSpreadAttribute') {\n            if (attribute.argument.type === 'ObjectExpression') {\n              fields.push(...attribute.argument.properties)\n            } else {\n              fields.push({type: 'SpreadElement', argument: attribute.argument})\n            }\n\n            spread = true\n          } else {\n            const prop = toProperty(attribute)\n\n            if (\n              automatic &&\n              prop.key.type === 'Identifier' &&\n              prop.key.name === 'key'\n            ) {\n              if (spread) {\n                throw new Error(\n                  'Expected `key` to come before any spread expressions'\n                )\n              }\n\n              const value = prop.value\n\n              assert(\n                value.type !== 'AssignmentPattern' &&\n                  value.type !== 'ArrayPattern' &&\n                  value.type !== 'ObjectPattern' &&\n                  value.type !== 'RestElement'\n              )\n\n              key = value\n            } else {\n              fields.push(prop)\n            }\n          }\n        }\n      }\n      // …and fragments.\n      else if (automatic) {\n        imports.fragment = true\n        name = {type: 'Identifier', name: '_Fragment'}\n      } else {\n        name = toMemberExpression(\n          annotations.jsxFrag || config.pragmaFrag || 'React.Fragment'\n        )\n      }\n\n      if (automatic) {\n        if (children.length > 0) {\n          fields.push({\n            type: 'Property',\n            key: {type: 'Identifier', name: 'children'},\n            value:\n              children.length > 1\n                ? {type: 'ArrayExpression', elements: children}\n                : children[0],\n            kind: 'init',\n            method: false,\n            shorthand: false,\n            computed: false\n          })\n        }\n      } else {\n        parameters = children\n      }\n\n      /** @type {Identifier | Literal | MemberExpression} */\n      let callee\n\n      if (automatic) {\n        parameters.push({type: 'ObjectExpression', properties: fields})\n\n        if (key) {\n          parameters.push(key)\n        } else if (config.development) {\n          parameters.push({type: 'Identifier', name: 'undefined'})\n        }\n\n        const isStaticChildren = children.length > 1\n\n        if (config.development) {\n          imports.jsxDEV = true\n          callee = {\n            type: 'Identifier',\n            name: '_jsxDEV'\n          }\n          parameters.push({type: 'Literal', value: isStaticChildren})\n\n          /** @type {ObjectExpression} */\n          const source = {\n            type: 'ObjectExpression',\n            properties: [\n              {\n                type: 'Property',\n                method: false,\n                shorthand: false,\n                computed: false,\n                kind: 'init',\n                key: {type: 'Identifier', name: 'fileName'},\n                value: {\n                  type: 'Literal',\n                  value: config.filePath || '<source.js>'\n                }\n              }\n            ]\n          }\n\n          if (node.loc) {\n            source.properties.push(\n              {\n                type: 'Property',\n                method: false,\n                shorthand: false,\n                computed: false,\n                kind: 'init',\n                key: {type: 'Identifier', name: 'lineNumber'},\n                value: {type: 'Literal', value: node.loc.start.line}\n              },\n              {\n                type: 'Property',\n                method: false,\n                shorthand: false,\n                computed: false,\n                kind: 'init',\n                key: {type: 'Identifier', name: 'columnNumber'},\n                value: {type: 'Literal', value: node.loc.start.column + 1}\n              }\n            )\n          }\n\n          parameters.push(source, {type: 'ThisExpression'})\n        } else if (isStaticChildren) {\n          imports.jsxs = true\n          callee = {type: 'Identifier', name: '_jsxs'}\n        } else {\n          imports.jsx = true\n          callee = {type: 'Identifier', name: '_jsx'}\n        }\n      }\n      // Classic.\n      else {\n        if (fields.length > 0) {\n          parameters.unshift({type: 'ObjectExpression', properties: fields})\n        } else if (parameters.length > 0) {\n          parameters.unshift({type: 'Literal', value: null})\n        }\n\n        callee = toMemberExpression(\n          annotations.jsx || config.pragma || 'React.createElement'\n        )\n      }\n\n      parameters.unshift(name)\n      /** @type {Node} */\n      const call = {\n        type: 'CallExpression',\n        callee,\n        arguments: parameters,\n        optional: false\n      }\n      create(node, call)\n      this.replace(call)\n    }\n  })\n}\n\n/**\n * Turn a JSX attribute into a JavaScript property.\n *\n * @param {JSXAttribute} node\n *   JSX attribute.\n * @returns {Property}\n *   JS property.\n */\nfunction toProperty(node) {\n  /** @type {Expression} */\n  let value\n\n  if (node.value) {\n    if (node.value.type === 'JSXExpressionContainer') {\n      const valueExpression = node.value.expression\n      assert(\n        valueExpression.type !== 'JSXEmptyExpression',\n        '`JSXEmptyExpression` is not allowed in props.'\n      )\n      value = valueExpression\n    }\n    // Literal or call expression.\n    else {\n      const nodeValue = node.value\n      assert(\n        nodeValue.type !== 'JSXElement' && nodeValue.type !== 'JSXFragment',\n        'JSX{Element,Fragment} are already compiled to `CallExpression`'\n      )\n      value = nodeValue\n      delete value.raw\n    }\n  }\n  // Boolean prop.\n  else {\n    value = {type: 'Literal', value: true}\n  }\n\n  /** @type {Property} */\n  const replacement = {\n    type: 'Property',\n    key: toIdentifier(node.name),\n    value,\n    kind: 'init',\n    method: false,\n    shorthand: false,\n    computed: false\n  }\n  create(node, replacement)\n  return replacement\n}\n\n/**\n * Turn a JSX identifier into a normal JS identifier.\n *\n * @param {JSXIdentifier | JSXMemberExpression | JSXNamespacedName} node\n *   JSX identifier.\n * @returns {Identifier | Literal | MemberExpression}\n *   JS identifier.\n */\nfunction toIdentifier(node) {\n  /** @type {Identifier | Literal | MemberExpression} */\n  let replace\n\n  if (node.type === 'JSXMemberExpression') {\n    // `property` is always a `JSXIdentifier`, but it could be something that\n    // isn’t an ES identifier name.\n    const id = toIdentifier(node.property)\n    replace = {\n      type: 'MemberExpression',\n      object: toIdentifier(node.object),\n      property: id,\n      computed: id.type === 'Literal',\n      optional: false\n    }\n  } else if (node.type === 'JSXNamespacedName') {\n    replace = {\n      type: 'Literal',\n      value: node.namespace.name + ':' + node.name.name\n    }\n  }\n  // Must be `JSXIdentifier`.\n  else {\n    replace = isIdentifierName(node.name)\n      ? {type: 'Identifier', name: node.name}\n      : {type: 'Literal', value: node.name}\n  }\n\n  create(node, replace)\n  return replace\n}\n\n/**\n * Turn a dotted string into a member expression.\n *\n * @param {string} id\n *   Identifiers.\n * @returns {Identifier | Literal | MemberExpression}\n *   Expression.\n */\nfunction toMemberExpression(id) {\n  const identifiers = id.split('.')\n  let index = -1\n  /** @type {Identifier | Literal | MemberExpression | undefined} */\n  let result\n\n  while (++index < identifiers.length) {\n    /** @type {Identifier | Literal} */\n    const prop = isIdentifierName(identifiers[index])\n      ? {type: 'Identifier', name: identifiers[index]}\n      : {type: 'Literal', value: identifiers[index]}\n    result = result\n      ? {\n          type: 'MemberExpression',\n          object: result,\n          property: prop,\n          computed: Boolean(index && prop.type === 'Literal'),\n          optional: false\n        }\n      : prop\n  }\n\n  assert(result, 'always a result')\n  return result\n}\n\n/**\n * Inherit some fields from `from` into `to`.\n *\n * @param {Node} from\n *   Node to inherit from.\n * @param {Node} to\n *   Node to add to.\n * @returns {undefined}\n *   Nothing.\n */\nfunction create(from, to) {\n  const fields = ['start', 'end', 'loc', 'range', 'comments']\n  let index = -1\n\n  while (++index < fields.length) {\n    const field = fields[index]\n    if (field in from) {\n      // @ts-expect-error: indexable.\n      to[field] = from[field]\n    }\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 25519, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 25525, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/recma-build-jsx/lib/index.js"],"sourcesContent":["/**\n * @import {Program} from 'estree'\n * @import {Options} from 'recma-build-jsx'\n * @import {VFile} from 'vfile'\n */\n\nimport {buildJsx} from 'estree-util-build-jsx'\n\n/**\n * Plugin to build JSX.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport default function recmaJsx(options) {\n  /**\n   * @param {Program} tree\n   *   Tree.\n   * @param {VFile} file\n   *   File.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  return function (tree, file) {\n    buildJsx(tree, {filePath: file.history[0], ...options})\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;AAED;;AAUe,SAAS,SAAS,OAAO;IACtC;;;;;;;GAOC,GACD,OAAO,SAAU,IAAI,EAAE,IAAI;QACzB,CAAA,GAAA,0JAAA,CAAA,WAAQ,AAAD,EAAE,MAAM;YAAC,UAAU,KAAK,OAAO,CAAC,EAAE;YAAE,GAAG,OAAO;QAAA;IACvD;AACF","ignoreList":[0]}},
    {"offset": {"line": 25549, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 25555, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/estree-util-to-js/lib/jsx.js"],"sourcesContent":["/**\n * @typedef {import('estree-jsx').JSXAttribute} JsxAttribute\n * @typedef {import('estree-jsx').JSXClosingElement} JsxClosingElement\n * @typedef {import('estree-jsx').JSXClosingFragment} JsxClosingFragment\n * @typedef {import('estree-jsx').JSXElement} JsxElement\n * @typedef {import('estree-jsx').JSXExpressionContainer} JsxExpressionContainer\n * @typedef {import('estree-jsx').JSXFragment} JsxFragment\n * @typedef {import('estree-jsx').JSXIdentifier} JsxIdentifier\n * @typedef {import('estree-jsx').JSXMemberExpression} JsxMemberExpression\n * @typedef {import('estree-jsx').JSXNamespacedName} JsxNamespacedName\n * @typedef {import('estree-jsx').JSXOpeningElement} JsxOpeningElement\n * @typedef {import('estree-jsx').JSXOpeningFragment} JsxOpeningFragment\n * @typedef {import('estree-jsx').JSXSpreadAttribute} JsxSpreadAttribute\n * @typedef {import('estree-jsx').JSXText} JsxText\n *\n * @typedef {import('./index.js').Generator} Generator\n * @typedef {import('./index.js').State} State\n */\n\nexport const jsx = {\n  JSXAttribute: jsxAttribute,\n  JSXClosingElement: jsxClosingElement,\n  JSXClosingFragment: jsxClosingFragment,\n  JSXElement: jsxElement,\n  JSXEmptyExpression: jsxEmptyExpression,\n  JSXExpressionContainer: jsxExpressionContainer,\n  JSXFragment: jsxFragment,\n  JSXIdentifier: jsxIdentifier,\n  JSXMemberExpression: jsxMemberExpression,\n  JSXNamespacedName: jsxNamespacedName,\n  JSXOpeningElement: jsxOpeningElement,\n  JSXOpeningFragment: jsxOpeningFragment,\n  JSXSpreadAttribute: jsxSpreadAttribute,\n  JSXText: jsxText\n}\n\n/**\n * `attr`\n * `attr=\"something\"`\n * `attr={1}`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JsxAttribute} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {undefined}\n *   Nothing.\n */\nfunction jsxAttribute(node, state) {\n  this[node.name.type](node.name, state)\n\n  if (node.value !== null && node.value !== undefined) {\n    state.write('=')\n\n    // Encode double quotes in attribute values.\n    if (node.value.type === 'Literal') {\n      state.write(\n        '\"' + encodeJsx(String(node.value.value)).replace(/\"/g, '&quot;') + '\"',\n        node\n      )\n    } else {\n      this[node.value.type](node.value, state)\n    }\n  }\n}\n\n/**\n * `</div>`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JsxClosingElement} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {undefined}\n *   Nothing.\n */\nfunction jsxClosingElement(node, state) {\n  state.write('</')\n  this[node.name.type](node.name, state)\n  state.write('>')\n}\n\n/**\n * `</>`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JsxClosingFragment} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {undefined}\n *   Nothing.\n */\nfunction jsxClosingFragment(node, state) {\n  state.write('</>', node)\n}\n\n/**\n * `<div />`\n * `<div></div>`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JsxElement} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {undefined}\n *   Nothing.\n */\nfunction jsxElement(node, state) {\n  let index = -1\n\n  this[node.openingElement.type](node.openingElement, state)\n\n  if (node.children) {\n    while (++index < node.children.length) {\n      const child = node.children[index]\n\n      // Supported in types but not by Acorn.\n      /* c8 ignore next 3 */\n      if (child.type === 'JSXSpreadChild') {\n        throw new Error('JSX spread children are not supported')\n      }\n\n      this[child.type](child, state)\n    }\n  }\n\n  if (node.closingElement) {\n    this[node.closingElement.type](node.closingElement, state)\n  }\n}\n\n/**\n * `{}` (always in a `JSXExpressionContainer`, which does the curlies)\n *\n * @this {Generator}\n *   `astring` generator.\n * @returns {undefined}\n *   Nothing.\n */\nfunction jsxEmptyExpression() {}\n\n/**\n * `{expression}`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JsxExpressionContainer} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {undefined}\n *   Nothing.\n */\nfunction jsxExpressionContainer(node, state) {\n  state.write('{')\n  this[node.expression.type](node.expression, state)\n  state.write('}')\n}\n\n/**\n * `<></>`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JsxFragment} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {undefined}\n *   Nothing.\n */\nfunction jsxFragment(node, state) {\n  let index = -1\n\n  this[node.openingFragment.type](node.openingFragment, state)\n\n  if (node.children) {\n    while (++index < node.children.length) {\n      const child = node.children[index]\n\n      // Supported in types but not by Acorn.\n      /* c8 ignore next 3 */\n      if (child.type === 'JSXSpreadChild') {\n        throw new Error('JSX spread children are not supported')\n      }\n\n      this[child.type](child, state)\n    }\n  }\n\n  this[node.closingFragment.type](node.closingFragment, state)\n}\n\n/**\n * `div`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JsxIdentifier} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {undefined}\n *   Nothing.\n */\nfunction jsxIdentifier(node, state) {\n  state.write(node.name, node)\n}\n\n/**\n * `member.expression`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JsxMemberExpression} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {undefined}\n *   Nothing.\n */\nfunction jsxMemberExpression(node, state) {\n  this[node.object.type](node.object, state)\n  state.write('.')\n  this[node.property.type](node.property, state)\n}\n\n/**\n * `ns:name`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JsxNamespacedName} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {undefined}\n *   Nothing.\n */\nfunction jsxNamespacedName(node, state) {\n  this[node.namespace.type](node.namespace, state)\n  state.write(':')\n  this[node.name.type](node.name, state)\n}\n\n/**\n * `<div>`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JsxOpeningElement} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {undefined}\n *   Nothing.\n */\nfunction jsxOpeningElement(node, state) {\n  let index = -1\n\n  state.write('<')\n  this[node.name.type](node.name, state)\n\n  if (node.attributes) {\n    while (++index < node.attributes.length) {\n      state.write(' ')\n      this[node.attributes[index].type](node.attributes[index], state)\n    }\n  }\n\n  state.write(node.selfClosing ? ' />' : '>')\n}\n\n/**\n * `<>`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JsxOpeningFragment} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {undefined}\n *   Nothing.\n */\nfunction jsxOpeningFragment(node, state) {\n  state.write('<>', node)\n}\n\n/**\n * `{...argument}`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JsxSpreadAttribute} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {undefined}\n *   Nothing.\n */\nfunction jsxSpreadAttribute(node, state) {\n  state.write('{')\n  // eslint-disable-next-line new-cap\n  this.SpreadElement(node, state)\n  state.write('}')\n}\n\n/**\n * `!`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JsxText} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {undefined}\n *   Nothing.\n */\nfunction jsxText(node, state) {\n  state.write(encodeJsx(node.value).replace(/[<>{}]/g, replaceJsxChar), node)\n}\n\n/**\n * Make sure that character references don’t pop up.\n *\n * For example, the text `&copy;` should stay that way, and not turn into `©`.\n * We could encode all `&` (easy but verbose) or look for actual valid\n * references (complex but cleanest output).\n * Looking for the 2nd character gives us a middle ground.\n * The `#` is for (decimal and hexadecimal) numeric references, the letters\n * are for the named references.\n *\n * @param {string} value\n *   Value to encode.\n * @returns {string}\n *   Encoded value.\n */\nfunction encodeJsx(value) {\n  return value.replace(/&(?=[#a-z])/gi, '&amp;')\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction replaceJsxChar($0) {\n  return $0 === '<'\n    ? '&lt;'\n    : $0 === '>'\n    ? '&gt;'\n    : $0 === '{'\n    ? '&#123;'\n    : '&#125;'\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 25862, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 25868, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/estree-util-to-js/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('astring').State} State\n * @typedef {import('estree-jsx').Node} Nodes\n * @typedef {import('estree-jsx').Program} Program\n * @typedef {typeof import('source-map').SourceMapGenerator} SourceMapGenerator\n * @typedef {import('source-map').RawSourceMap} Map\n */\n\n/**\n * @typedef {Record<Nodes['type'], Handler>} Generator\n *\n * @callback Handler\n *  Handle a particular node.\n * @param {Generator} this\n *   `astring` generator.\n * @param {any} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {undefined}\n *   Nothing.\n *\n * @typedef {Partial<import('astring').Generator>} Handlers\n */\n\n/**\n * @typedef {OptionsWithMaybeMapGenerator} Options\n *   Configuration.\n *\n * @typedef OptionsFieldsBase\n *   Base shared option fields.\n * @property {Handlers | null | undefined} [handlers]\n *   Object mapping node types to functions handling the corresponding nodes.\n *\n * @typedef OptionsFieldsWithoutSourceMapGenerator\n *   Extra option fields where there’s definitely no source map generator.\n * @property {null | undefined} [SourceMapGenerator]\n *   Generate a source map by passing a `SourceMapGenerator` from `source-map`\n *   in; this works if there is positional info on nodes.\n * @property {null | undefined} [filePath]\n *   Path to input file; only used in source map.\n *\n * @typedef OptionsFieldsWithSourceMapGenerator\n *   Extra option fields where there’s definitely a source map generator.\n * @property {SourceMapGenerator} SourceMapGenerator\n *   Generate a source map by passing a `SourceMapGenerator` from `source-map`\n *   in; this works if there is positional info on nodes.\n * @property {string | null | undefined} [filePath]\n *   Path to input file; only used in source map.\n *\n * @typedef OptionsFieldsMaybeSourceMapGenerator\n *   Extra option fields where there may or may not be a source map generator.\n * @property {SourceMapGenerator | null | undefined} [SourceMapGenerator]\n *   Generate a source map by passing a `SourceMapGenerator` from `source-map`\n *   in; this works if there is positional info on nodes.\n * @property {string | null | undefined} [filePath]\n *   Path to input file; only used in source map.\n *\n * @typedef {OptionsFieldsBase & OptionsFieldsWithoutSourceMapGenerator} OptionsWithoutSourceMapGenerator\n *   Options where there’s definitely no source map generator.\n * @typedef {OptionsFieldsBase & OptionsFieldsWithSourceMapGenerator} OptionsWithSourceMapGenerator\n *   Options where there’s definitely a source map generator.\n * @typedef {OptionsFieldsBase & OptionsFieldsMaybeSourceMapGenerator} OptionsWithMaybeMapGenerator\n *   Options where there may or may not be a source map generator.\n *\n * @typedef {ResultWithMaybeSourceMapGenerator} Result\n *   Result.\n *\n * @typedef ResultFieldsBase\n *   Base shared result fields.\n * @property {string} value\n *   Serialized JavaScript.\n *\n * @typedef ResultFieldsWithoutSourceMapGenerator\n *   Extra result fields where there’s definitely no source map generator.\n * @property {undefined} map\n *   Source map as (parsed) JSON, if `SourceMapGenerator` is passed.\n *\n * @typedef ResultFieldsWithSourceMapGenerator\n *   Extra result fields where there’s definitely a source map generator.\n * @property {Map} map\n *   Source map as (parsed) JSON, if `SourceMapGenerator` is not passed.\n *\n * @typedef ResultFieldsMaybeSourceMapGenerator\n *   Extra result fields where there may or may not be a source map generator.\n * @property {Map | undefined} map\n *   Source map as (parsed) JSON, if `SourceMapGenerator` might be passed.\n *\n * @typedef {ResultFieldsBase & ResultFieldsWithoutSourceMapGenerator} ResultWithoutSourceMapGenerator\n *   Result where there’s definitely no source map generator.\n * @typedef {ResultFieldsBase & ResultFieldsWithSourceMapGenerator} ResultWithSourceMapGenerator\n *   Result where there’s definitely a source map generator.\n * @typedef {ResultFieldsBase & ResultFieldsMaybeSourceMapGenerator} ResultWithMaybeSourceMapGenerator\n *   Result where there may or may not be a source map generator.\n */\n\nimport {GENERATOR, generate} from 'astring'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Serialize an estree as JavaScript.\n *\n * @overload\n * @param {Program} tree\n * @param {OptionsWithSourceMapGenerator} options\n * @returns {ResultWithSourceMapGenerator}\n *\n * @overload\n * @param {Program} tree\n * @param {OptionsWithMaybeMapGenerator} options\n * @returns {ResultWithMaybeSourceMapGenerator}\n *\n * @overload\n * @param {Program} tree\n * @param {OptionsWithoutSourceMapGenerator | null | undefined} [options]\n * @returns {ResultWithoutSourceMapGenerator}\n *\n * @param {Program} tree\n *   Estree (esast).\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Result}\n *   Result, optionally with source map.\n */\nexport function toJs(tree, options) {\n  const {SourceMapGenerator, filePath, handlers} = options || emptyOptions\n  const sourceMap = SourceMapGenerator\n    ? new SourceMapGenerator({file: filePath || '<unknown>.js'})\n    : undefined\n\n  const value = generate(\n    tree,\n    // @ts-expect-error: `sourceMap` can be undefined, `astring` types are buggy.\n    {\n      comments: true,\n      generator: {...GENERATOR, ...handlers},\n      sourceMap: sourceMap || undefined\n    }\n  )\n  const map = sourceMap ? sourceMap.toJSON() : undefined\n\n  return {value, map}\n}\n"],"names":[],"mappings":"AAAA;;;;;;CAMC,GAED;;;;;;;;;;;;;;;CAeC,GAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAqEC;;;AAED;;AAEA,oBAAoB,GACpB,MAAM,eAAe,CAAC;AA2Bf,SAAS,KAAK,IAAI,EAAE,OAAO;IAChC,MAAM,EAAC,kBAAkB,EAAE,QAAQ,EAAE,QAAQ,EAAC,GAAG,WAAW;IAC5D,MAAM,YAAY,qBACd,IAAI,mBAAmB;QAAC,MAAM,YAAY;IAAc,KACxD;IAEJ,MAAM,QAAQ,CAAA,GAAA,uIAAA,CAAA,WAAQ,AAAD,EACnB,MACA,6EAA6E;IAC7E;QACE,UAAU;QACV,WAAW;YAAC,GAAG,uIAAA,CAAA,YAAS;YAAE,GAAG,QAAQ;QAAA;QACrC,WAAW,aAAa;IAC1B;IAEF,MAAM,MAAM,YAAY,UAAU,MAAM,KAAK;IAE7C,OAAO;QAAC;QAAO;IAAG;AACpB","ignoreList":[0]}},
    {"offset": {"line": 25984, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 25990, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/recma-jsx/lib/index.js"],"sourcesContent":["/**\n * @import {} from 'recma-parse'\n * @import {} from 'recma-stringify'\n * @import {Processor} from 'unified'\n */\n\nimport jsxPlugin from 'acorn-jsx'\nimport {jsx as jsxHandlers} from 'estree-util-to-js'\n\n/**\n * Plugin to add support for parsing and serializing JSX.\n *\n * @this {Processor}\n *   Processor.\n * @returns {undefined}\n *   Nothing.\n */\nexport default function recmaJsx() {\n  const data = this.data()\n  const settings = data.settings || (data.settings = {})\n  const handlers = settings.handlers || (settings.handlers = {})\n  const plugins = settings.plugins || (settings.plugins = [])\n\n  // No useful options yet.\n  plugins.push(jsxPlugin())\n  Object.assign(handlers, jsxHandlers)\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;AAED;AACA;;;AAUe,SAAS;IACtB,MAAM,OAAO,IAAI,CAAC,IAAI;IACtB,MAAM,WAAW,KAAK,QAAQ,IAAI,CAAC,KAAK,QAAQ,GAAG,CAAC,CAAC;IACrD,MAAM,WAAW,SAAS,QAAQ,IAAI,CAAC,SAAS,QAAQ,GAAG,CAAC,CAAC;IAC7D,MAAM,UAAU,SAAS,OAAO,IAAI,CAAC,SAAS,OAAO,GAAG,EAAE;IAE1D,yBAAyB;IACzB,QAAQ,IAAI,CAAC,CAAA,GAAA,iIAAA,CAAA,UAAS,AAAD;IACrB,OAAO,MAAM,CAAC,UAAU,oJAAA,CAAA,MAAW;AACrC","ignoreList":[0]}},
    {"offset": {"line": 26010, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26016, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/astring/dist/astring.mjs"],"sourcesContent":["// Astring is a tiny and fast JavaScript code generator from an ESTree-compliant AST.\n//\n// Astring was written by David Bonnet and released under an MIT license.\n//\n// The Git repository for Astring is available at:\n// https://github.com/davidbonnet/astring.git\n//\n// Please use the GitHub bug tracker to report issues:\n// https://github.com/davidbonnet/astring/issues\n\nconst { stringify } = JSON\n\n/* c8 ignore if */\nif (!String.prototype.repeat) {\n  /* c8 ignore next */\n  throw new Error(\n    'String.prototype.repeat is undefined, see https://github.com/davidbonnet/astring#installation',\n  )\n}\n\n/* c8 ignore if */\nif (!String.prototype.endsWith) {\n  /* c8 ignore next */\n  throw new Error(\n    'String.prototype.endsWith is undefined, see https://github.com/davidbonnet/astring#installation',\n  )\n}\n\nconst OPERATOR_PRECEDENCE = {\n  '||': 2,\n  '??': 3,\n  '&&': 4,\n  '|': 5,\n  '^': 6,\n  '&': 7,\n  '==': 8,\n  '!=': 8,\n  '===': 8,\n  '!==': 8,\n  '<': 9,\n  '>': 9,\n  '<=': 9,\n  '>=': 9,\n  in: 9,\n  instanceof: 9,\n  '<<': 10,\n  '>>': 10,\n  '>>>': 10,\n  '+': 11,\n  '-': 11,\n  '*': 12,\n  '%': 12,\n  '/': 12,\n  '**': 13,\n}\n\n// Enables parenthesis regardless of precedence\nexport const NEEDS_PARENTHESES = 17\n\nexport const EXPRESSIONS_PRECEDENCE = {\n  // Definitions\n  ArrayExpression: 20,\n  TaggedTemplateExpression: 20,\n  ThisExpression: 20,\n  Identifier: 20,\n  PrivateIdentifier: 20,\n  Literal: 18,\n  TemplateLiteral: 20,\n  Super: 20,\n  SequenceExpression: 20,\n  // Operations\n  MemberExpression: 19,\n  ChainExpression: 19,\n  CallExpression: 19,\n  NewExpression: 19,\n  // Other definitions\n  ArrowFunctionExpression: NEEDS_PARENTHESES,\n  ClassExpression: NEEDS_PARENTHESES,\n  FunctionExpression: NEEDS_PARENTHESES,\n  ObjectExpression: NEEDS_PARENTHESES,\n  // Other operations\n  UpdateExpression: 16,\n  UnaryExpression: 15,\n  AwaitExpression: 15,\n  BinaryExpression: 14,\n  LogicalExpression: 13,\n  ConditionalExpression: 4,\n  AssignmentExpression: 3,\n  YieldExpression: 2,\n  RestElement: 1,\n}\n\nfunction formatSequence(state, nodes) {\n  /*\n  Writes into `state` a sequence of `nodes`.\n  */\n  const { generator } = state\n  state.write('(')\n  if (nodes != null && nodes.length > 0) {\n    generator[nodes[0].type](nodes[0], state)\n    const { length } = nodes\n    for (let i = 1; i < length; i++) {\n      const param = nodes[i]\n      state.write(', ')\n      generator[param.type](param, state)\n    }\n  }\n  state.write(')')\n}\n\nfunction expressionNeedsParenthesis(state, node, parentNode, isRightHand) {\n  const nodePrecedence = state.expressionsPrecedence[node.type]\n  if (nodePrecedence === NEEDS_PARENTHESES) {\n    return true\n  }\n  const parentNodePrecedence = state.expressionsPrecedence[parentNode.type]\n  if (nodePrecedence !== parentNodePrecedence) {\n    // Different node types\n    return (\n      (!isRightHand &&\n        nodePrecedence === 15 &&\n        parentNodePrecedence === 14 &&\n        parentNode.operator === '**') ||\n      nodePrecedence < parentNodePrecedence\n    )\n  }\n  if (nodePrecedence !== 13 && nodePrecedence !== 14) {\n    // Not a `LogicalExpression` or `BinaryExpression`\n    return false\n  }\n  if (node.operator === '**' && parentNode.operator === '**') {\n    // Exponentiation operator has right-to-left associativity\n    return !isRightHand\n  }\n  if (\n    nodePrecedence === 13 &&\n    parentNodePrecedence === 13 &&\n    (node.operator === '??' || parentNode.operator === '??')\n  ) {\n    // Nullish coalescing and boolean operators cannot be combined\n    return true\n  }\n  if (isRightHand) {\n    // Parenthesis are used if both operators have the same precedence\n    return (\n      OPERATOR_PRECEDENCE[node.operator] <=\n      OPERATOR_PRECEDENCE[parentNode.operator]\n    )\n  }\n  return (\n    OPERATOR_PRECEDENCE[node.operator] <\n    OPERATOR_PRECEDENCE[parentNode.operator]\n  )\n}\n\nfunction formatExpression(state, node, parentNode, isRightHand) {\n  /*\n  Writes into `state` the provided `node`, adding parenthesis around if the provided `parentNode` needs it. If `node` is a right-hand argument, the provided `isRightHand` parameter should be `true`.\n  */\n  const { generator } = state\n  if (expressionNeedsParenthesis(state, node, parentNode, isRightHand)) {\n    state.write('(')\n    generator[node.type](node, state)\n    state.write(')')\n  } else {\n    generator[node.type](node, state)\n  }\n}\n\nfunction reindent(state, text, indent, lineEnd) {\n  /*\n  Writes into `state` the `text` string reindented with the provided `indent`.\n  */\n  const lines = text.split('\\n')\n  const end = lines.length - 1\n  state.write(lines[0].trim())\n  if (end > 0) {\n    state.write(lineEnd)\n    for (let i = 1; i < end; i++) {\n      state.write(indent + lines[i].trim() + lineEnd)\n    }\n    state.write(indent + lines[end].trim())\n  }\n}\n\nfunction formatComments(state, comments, indent, lineEnd) {\n  /*\n  Writes into `state` the provided list of `comments`, with the given `indent` and `lineEnd` strings.\n  Line comments will end with `\"\\n\"` regardless of the value of `lineEnd`.\n  Expects to start on a new unindented line.\n  */\n  const { length } = comments\n  for (let i = 0; i < length; i++) {\n    const comment = comments[i]\n    state.write(indent)\n    if (comment.type[0] === 'L') {\n      // Line comment\n      state.write('// ' + comment.value.trim() + '\\n', comment)\n    } else {\n      // Block comment\n      state.write('/*')\n      reindent(state, comment.value, indent, lineEnd)\n      state.write('*/' + lineEnd)\n    }\n  }\n}\n\nfunction hasCallExpression(node) {\n  /*\n  Returns `true` if the provided `node` contains a call expression and `false` otherwise.\n  */\n  let currentNode = node\n  while (currentNode != null) {\n    const { type } = currentNode\n    if (type[0] === 'C' && type[1] === 'a') {\n      // Is CallExpression\n      return true\n    } else if (type[0] === 'M' && type[1] === 'e' && type[2] === 'm') {\n      // Is MemberExpression\n      currentNode = currentNode.object\n    } else {\n      return false\n    }\n  }\n}\n\nfunction formatVariableDeclaration(state, node) {\n  /*\n  Writes into `state` a variable declaration.\n  */\n  const { generator } = state\n  const { declarations } = node\n  state.write(node.kind + ' ')\n  const { length } = declarations\n  if (length > 0) {\n    generator.VariableDeclarator(declarations[0], state)\n    for (let i = 1; i < length; i++) {\n      state.write(', ')\n      generator.VariableDeclarator(declarations[i], state)\n    }\n  }\n}\n\nlet ForInStatement,\n  FunctionDeclaration,\n  RestElement,\n  BinaryExpression,\n  ArrayExpression,\n  BlockStatement\n\nexport const GENERATOR = {\n  /*\n  Default generator.\n  */\n  Program(node, state) {\n    const indent = state.indent.repeat(state.indentLevel)\n    const { lineEnd, writeComments } = state\n    if (writeComments && node.comments != null) {\n      formatComments(state, node.comments, indent, lineEnd)\n    }\n    const statements = node.body\n    const { length } = statements\n    for (let i = 0; i < length; i++) {\n      const statement = statements[i]\n      if (writeComments && statement.comments != null) {\n        formatComments(state, statement.comments, indent, lineEnd)\n      }\n      state.write(indent)\n      this[statement.type](statement, state)\n      state.write(lineEnd)\n    }\n    if (writeComments && node.trailingComments != null) {\n      formatComments(state, node.trailingComments, indent, lineEnd)\n    }\n  },\n  BlockStatement: (BlockStatement = function (node, state) {\n    const indent = state.indent.repeat(state.indentLevel++)\n    const { lineEnd, writeComments } = state\n    const statementIndent = indent + state.indent\n    state.write('{')\n    const statements = node.body\n    if (statements != null && statements.length > 0) {\n      state.write(lineEnd)\n      if (writeComments && node.comments != null) {\n        formatComments(state, node.comments, statementIndent, lineEnd)\n      }\n      const { length } = statements\n      for (let i = 0; i < length; i++) {\n        const statement = statements[i]\n        if (writeComments && statement.comments != null) {\n          formatComments(state, statement.comments, statementIndent, lineEnd)\n        }\n        state.write(statementIndent)\n        this[statement.type](statement, state)\n        state.write(lineEnd)\n      }\n      state.write(indent)\n    } else {\n      if (writeComments && node.comments != null) {\n        state.write(lineEnd)\n        formatComments(state, node.comments, statementIndent, lineEnd)\n        state.write(indent)\n      }\n    }\n    if (writeComments && node.trailingComments != null) {\n      formatComments(state, node.trailingComments, statementIndent, lineEnd)\n    }\n    state.write('}')\n    state.indentLevel--\n  }),\n  ClassBody: BlockStatement,\n  StaticBlock(node, state) {\n    state.write('static ')\n    this.BlockStatement(node, state)\n  },\n  EmptyStatement(node, state) {\n    state.write(';')\n  },\n  ExpressionStatement(node, state) {\n    const precedence = state.expressionsPrecedence[node.expression.type]\n    if (\n      precedence === NEEDS_PARENTHESES ||\n      (precedence === 3 && node.expression.left.type[0] === 'O')\n    ) {\n      // Should always have parentheses or is an AssignmentExpression to an ObjectPattern\n      state.write('(')\n      this[node.expression.type](node.expression, state)\n      state.write(')')\n    } else {\n      this[node.expression.type](node.expression, state)\n    }\n    state.write(';')\n  },\n  IfStatement(node, state) {\n    state.write('if (')\n    this[node.test.type](node.test, state)\n    state.write(') ')\n    this[node.consequent.type](node.consequent, state)\n    if (node.alternate != null) {\n      state.write(' else ')\n      this[node.alternate.type](node.alternate, state)\n    }\n  },\n  LabeledStatement(node, state) {\n    this[node.label.type](node.label, state)\n    state.write(': ')\n    this[node.body.type](node.body, state)\n  },\n  BreakStatement(node, state) {\n    state.write('break')\n    if (node.label != null) {\n      state.write(' ')\n      this[node.label.type](node.label, state)\n    }\n    state.write(';')\n  },\n  ContinueStatement(node, state) {\n    state.write('continue')\n    if (node.label != null) {\n      state.write(' ')\n      this[node.label.type](node.label, state)\n    }\n    state.write(';')\n  },\n  WithStatement(node, state) {\n    state.write('with (')\n    this[node.object.type](node.object, state)\n    state.write(') ')\n    this[node.body.type](node.body, state)\n  },\n  SwitchStatement(node, state) {\n    const indent = state.indent.repeat(state.indentLevel++)\n    const { lineEnd, writeComments } = state\n    state.indentLevel++\n    const caseIndent = indent + state.indent\n    const statementIndent = caseIndent + state.indent\n    state.write('switch (')\n    this[node.discriminant.type](node.discriminant, state)\n    state.write(') {' + lineEnd)\n    const { cases: occurences } = node\n    const { length: occurencesCount } = occurences\n    for (let i = 0; i < occurencesCount; i++) {\n      const occurence = occurences[i]\n      if (writeComments && occurence.comments != null) {\n        formatComments(state, occurence.comments, caseIndent, lineEnd)\n      }\n      if (occurence.test) {\n        state.write(caseIndent + 'case ')\n        this[occurence.test.type](occurence.test, state)\n        state.write(':' + lineEnd)\n      } else {\n        state.write(caseIndent + 'default:' + lineEnd)\n      }\n      const { consequent } = occurence\n      const { length: consequentCount } = consequent\n      for (let i = 0; i < consequentCount; i++) {\n        const statement = consequent[i]\n        if (writeComments && statement.comments != null) {\n          formatComments(state, statement.comments, statementIndent, lineEnd)\n        }\n        state.write(statementIndent)\n        this[statement.type](statement, state)\n        state.write(lineEnd)\n      }\n    }\n    state.indentLevel -= 2\n    state.write(indent + '}')\n  },\n  ReturnStatement(node, state) {\n    state.write('return')\n    if (node.argument) {\n      state.write(' ')\n      this[node.argument.type](node.argument, state)\n    }\n    state.write(';')\n  },\n  ThrowStatement(node, state) {\n    state.write('throw ')\n    this[node.argument.type](node.argument, state)\n    state.write(';')\n  },\n  TryStatement(node, state) {\n    state.write('try ')\n    this[node.block.type](node.block, state)\n    if (node.handler) {\n      const { handler } = node\n      if (handler.param == null) {\n        state.write(' catch ')\n      } else {\n        state.write(' catch (')\n        this[handler.param.type](handler.param, state)\n        state.write(') ')\n      }\n      this[handler.body.type](handler.body, state)\n    }\n    if (node.finalizer) {\n      state.write(' finally ')\n      this[node.finalizer.type](node.finalizer, state)\n    }\n  },\n  WhileStatement(node, state) {\n    state.write('while (')\n    this[node.test.type](node.test, state)\n    state.write(') ')\n    this[node.body.type](node.body, state)\n  },\n  DoWhileStatement(node, state) {\n    state.write('do ')\n    this[node.body.type](node.body, state)\n    state.write(' while (')\n    this[node.test.type](node.test, state)\n    state.write(');')\n  },\n  ForStatement(node, state) {\n    state.write('for (')\n    if (node.init != null) {\n      const { init } = node\n      if (init.type[0] === 'V') {\n        formatVariableDeclaration(state, init)\n      } else {\n        this[init.type](init, state)\n      }\n    }\n    state.write('; ')\n    if (node.test) {\n      this[node.test.type](node.test, state)\n    }\n    state.write('; ')\n    if (node.update) {\n      this[node.update.type](node.update, state)\n    }\n    state.write(') ')\n    this[node.body.type](node.body, state)\n  },\n  ForInStatement: (ForInStatement = function (node, state) {\n    state.write(`for ${node.await ? 'await ' : ''}(`)\n    const { left } = node\n    if (left.type[0] === 'V') {\n      formatVariableDeclaration(state, left)\n    } else {\n      this[left.type](left, state)\n    }\n    // Identifying whether node.type is `ForInStatement` or `ForOfStatement`\n    state.write(node.type[3] === 'I' ? ' in ' : ' of ')\n    this[node.right.type](node.right, state)\n    state.write(') ')\n    this[node.body.type](node.body, state)\n  }),\n  ForOfStatement: ForInStatement,\n  DebuggerStatement(node, state) {\n    state.write('debugger;', node)\n  },\n  FunctionDeclaration: (FunctionDeclaration = function (node, state) {\n    state.write(\n      (node.async ? 'async ' : '') +\n        (node.generator ? 'function* ' : 'function ') +\n        (node.id ? node.id.name : ''),\n      node,\n    )\n    formatSequence(state, node.params)\n    state.write(' ')\n    this[node.body.type](node.body, state)\n  }),\n  FunctionExpression: FunctionDeclaration,\n  VariableDeclaration(node, state) {\n    formatVariableDeclaration(state, node)\n    state.write(';')\n  },\n  VariableDeclarator(node, state) {\n    this[node.id.type](node.id, state)\n    if (node.init != null) {\n      state.write(' = ')\n      this[node.init.type](node.init, state)\n    }\n  },\n  ClassDeclaration(node, state) {\n    state.write('class ' + (node.id ? `${node.id.name} ` : ''), node)\n    if (node.superClass) {\n      state.write('extends ')\n      const { superClass } = node\n      const { type } = superClass\n      const precedence = state.expressionsPrecedence[type]\n      if (\n        (type[0] !== 'C' || type[1] !== 'l' || type[5] !== 'E') &&\n        (precedence === NEEDS_PARENTHESES ||\n          precedence < state.expressionsPrecedence.ClassExpression)\n      ) {\n        // Not a ClassExpression that needs parentheses\n        state.write('(')\n        this[node.superClass.type](superClass, state)\n        state.write(')')\n      } else {\n        this[superClass.type](superClass, state)\n      }\n      state.write(' ')\n    }\n    this.ClassBody(node.body, state)\n  },\n  ImportDeclaration(node, state) {\n    state.write('import ')\n    const { specifiers, attributes } = node\n    const { length } = specifiers\n    // TODO: Once babili is fixed, put this after condition\n    // https://github.com/babel/babili/issues/430\n    let i = 0\n    if (length > 0) {\n      for (; i < length; ) {\n        if (i > 0) {\n          state.write(', ')\n        }\n        const specifier = specifiers[i]\n        const type = specifier.type[6]\n        if (type === 'D') {\n          // ImportDefaultSpecifier\n          state.write(specifier.local.name, specifier)\n          i++\n        } else if (type === 'N') {\n          // ImportNamespaceSpecifier\n          state.write('* as ' + specifier.local.name, specifier)\n          i++\n        } else {\n          // ImportSpecifier\n          break\n        }\n      }\n      if (i < length) {\n        state.write('{')\n        for (;;) {\n          const specifier = specifiers[i]\n          const { name } = specifier.imported\n          state.write(name, specifier)\n          if (name !== specifier.local.name) {\n            state.write(' as ' + specifier.local.name)\n          }\n          if (++i < length) {\n            state.write(', ')\n          } else {\n            break\n          }\n        }\n        state.write('}')\n      }\n      state.write(' from ')\n    }\n    this.Literal(node.source, state)\n\n    if (attributes && attributes.length > 0) {\n      state.write(' with { ')\n      for (let i = 0; i < attributes.length; i++) {\n        this.ImportAttribute(attributes[i], state)\n        if (i < attributes.length - 1) state.write(', ')\n      }\n\n      state.write(' }')\n    }\n    state.write(';')\n  },\n  ImportAttribute(node, state) {\n    this.Identifier(node.key, state)\n    state.write(': ')\n    this.Literal(node.value, state)\n  },\n  ImportExpression(node, state) {\n    state.write('import(')\n    this[node.source.type](node.source, state)\n    state.write(')')\n  },\n  ExportDefaultDeclaration(node, state) {\n    state.write('export default ')\n    this[node.declaration.type](node.declaration, state)\n    if (\n      state.expressionsPrecedence[node.declaration.type] != null &&\n      node.declaration.type[0] !== 'F'\n    ) {\n      // All expression nodes except `FunctionExpression`\n      state.write(';')\n    }\n  },\n  ExportNamedDeclaration(node, state) {\n    state.write('export ')\n    if (node.declaration) {\n      this[node.declaration.type](node.declaration, state)\n    } else {\n      state.write('{')\n      const { specifiers } = node,\n        { length } = specifiers\n      if (length > 0) {\n        for (let i = 0; ; ) {\n          const specifier = specifiers[i]\n          const { name } = specifier.local\n          state.write(name, specifier)\n          if (name !== specifier.exported.name) {\n            state.write(' as ' + specifier.exported.name)\n          }\n          if (++i < length) {\n            state.write(', ')\n          } else {\n            break\n          }\n        }\n      }\n      state.write('}')\n      if (node.source) {\n        state.write(' from ')\n        this.Literal(node.source, state)\n      }\n\n      if (node.attributes && node.attributes.length > 0) {\n        state.write(' with { ')\n        for (let i = 0; i < node.attributes.length; i++) {\n          this.ImportAttribute(node.attributes[i], state)\n          if (i < node.attributes.length - 1) state.write(', ')\n        }\n\n        state.write(' }')\n      }\n\n      state.write(';')\n    }\n  },\n  ExportAllDeclaration(node, state) {\n    if (node.exported != null) {\n      state.write('export * as ' + node.exported.name + ' from ')\n    } else {\n      state.write('export * from ')\n    }\n    this.Literal(node.source, state)\n\n    if (node.attributes && node.attributes.length > 0) {\n      state.write(' with { ')\n      for (let i = 0; i < node.attributes.length; i++) {\n        this.ImportAttribute(node.attributes[i], state)\n        if (i < node.attributes.length - 1) state.write(', ')\n      }\n\n      state.write(' }')\n    }\n\n    state.write(';')\n  },\n  MethodDefinition(node, state) {\n    if (node.static) {\n      state.write('static ')\n    }\n    const kind = node.kind[0]\n    if (kind === 'g' || kind === 's') {\n      // Getter or setter\n      state.write(node.kind + ' ')\n    }\n    if (node.value.async) {\n      state.write('async ')\n    }\n    if (node.value.generator) {\n      state.write('*')\n    }\n    if (node.computed) {\n      state.write('[')\n      this[node.key.type](node.key, state)\n      state.write(']')\n    } else {\n      this[node.key.type](node.key, state)\n    }\n    formatSequence(state, node.value.params)\n    state.write(' ')\n    this[node.value.body.type](node.value.body, state)\n  },\n  ClassExpression(node, state) {\n    this.ClassDeclaration(node, state)\n  },\n  ArrowFunctionExpression(node, state) {\n    state.write(node.async ? 'async ' : '', node)\n    const { params } = node\n    if (params != null) {\n      // Omit parenthesis if only one named parameter\n      if (params.length === 1 && params[0].type[0] === 'I') {\n        // If params[0].type[0] starts with 'I', it can't be `ImportDeclaration` nor `IfStatement` and thus is `Identifier`\n        state.write(params[0].name, params[0])\n      } else {\n        formatSequence(state, node.params)\n      }\n    }\n    state.write(' => ')\n    if (node.body.type[0] === 'O') {\n      // Body is an object expression\n      state.write('(')\n      this.ObjectExpression(node.body, state)\n      state.write(')')\n    } else {\n      this[node.body.type](node.body, state)\n    }\n  },\n  ThisExpression(node, state) {\n    state.write('this', node)\n  },\n  Super(node, state) {\n    state.write('super', node)\n  },\n  RestElement: (RestElement = function (node, state) {\n    state.write('...')\n    this[node.argument.type](node.argument, state)\n  }),\n  SpreadElement: RestElement,\n  YieldExpression(node, state) {\n    state.write(node.delegate ? 'yield*' : 'yield')\n    if (node.argument) {\n      state.write(' ')\n      this[node.argument.type](node.argument, state)\n    }\n  },\n  AwaitExpression(node, state) {\n    state.write('await ', node)\n    formatExpression(state, node.argument, node)\n  },\n  TemplateLiteral(node, state) {\n    const { quasis, expressions } = node\n    state.write('`')\n    const { length } = expressions\n    for (let i = 0; i < length; i++) {\n      const expression = expressions[i]\n      const quasi = quasis[i]\n      state.write(quasi.value.raw, quasi)\n      state.write('${')\n      this[expression.type](expression, state)\n      state.write('}')\n    }\n    const quasi = quasis[quasis.length - 1]\n    state.write(quasi.value.raw, quasi)\n    state.write('`')\n  },\n  TemplateElement(node, state) {\n    state.write(node.value.raw, node)\n  },\n  TaggedTemplateExpression(node, state) {\n    formatExpression(state, node.tag, node)\n    this[node.quasi.type](node.quasi, state)\n  },\n  ArrayExpression: (ArrayExpression = function (node, state) {\n    state.write('[')\n    if (node.elements.length > 0) {\n      const { elements } = node,\n        { length } = elements\n      for (let i = 0; ; ) {\n        const element = elements[i]\n        if (element != null) {\n          this[element.type](element, state)\n        }\n        if (++i < length) {\n          state.write(', ')\n        } else {\n          if (element == null) {\n            state.write(', ')\n          }\n          break\n        }\n      }\n    }\n    state.write(']')\n  }),\n  ArrayPattern: ArrayExpression,\n  ObjectExpression(node, state) {\n    const indent = state.indent.repeat(state.indentLevel++)\n    const { lineEnd, writeComments } = state\n    const propertyIndent = indent + state.indent\n    state.write('{')\n    if (node.properties.length > 0) {\n      state.write(lineEnd)\n      if (writeComments && node.comments != null) {\n        formatComments(state, node.comments, propertyIndent, lineEnd)\n      }\n      const comma = ',' + lineEnd\n      const { properties } = node,\n        { length } = properties\n      for (let i = 0; ; ) {\n        const property = properties[i]\n        if (writeComments && property.comments != null) {\n          formatComments(state, property.comments, propertyIndent, lineEnd)\n        }\n        state.write(propertyIndent)\n        this[property.type](property, state)\n        if (++i < length) {\n          state.write(comma)\n        } else {\n          break\n        }\n      }\n      state.write(lineEnd)\n      if (writeComments && node.trailingComments != null) {\n        formatComments(state, node.trailingComments, propertyIndent, lineEnd)\n      }\n      state.write(indent + '}')\n    } else if (writeComments) {\n      if (node.comments != null) {\n        state.write(lineEnd)\n        formatComments(state, node.comments, propertyIndent, lineEnd)\n        if (node.trailingComments != null) {\n          formatComments(state, node.trailingComments, propertyIndent, lineEnd)\n        }\n        state.write(indent + '}')\n      } else if (node.trailingComments != null) {\n        state.write(lineEnd)\n        formatComments(state, node.trailingComments, propertyIndent, lineEnd)\n        state.write(indent + '}')\n      } else {\n        state.write('}')\n      }\n    } else {\n      state.write('}')\n    }\n    state.indentLevel--\n  },\n  Property(node, state) {\n    if (node.method || node.kind[0] !== 'i') {\n      // Either a method or of kind `set` or `get` (not `init`)\n      this.MethodDefinition(node, state)\n    } else {\n      if (!node.shorthand) {\n        if (node.computed) {\n          state.write('[')\n          this[node.key.type](node.key, state)\n          state.write(']')\n        } else {\n          this[node.key.type](node.key, state)\n        }\n        state.write(': ')\n      }\n      this[node.value.type](node.value, state)\n    }\n  },\n  PropertyDefinition(node, state) {\n    if (node.static) {\n      state.write('static ')\n    }\n    if (node.computed) {\n      state.write('[')\n    }\n    this[node.key.type](node.key, state)\n    if (node.computed) {\n      state.write(']')\n    }\n    if (node.value == null) {\n      if (node.key.type[0] !== 'F') {\n        state.write(';')\n      }\n      return\n    }\n    state.write(' = ')\n    this[node.value.type](node.value, state)\n    state.write(';')\n  },\n  ObjectPattern(node, state) {\n    state.write('{')\n    if (node.properties.length > 0) {\n      const { properties } = node,\n        { length } = properties\n      for (let i = 0; ; ) {\n        this[properties[i].type](properties[i], state)\n        if (++i < length) {\n          state.write(', ')\n        } else {\n          break\n        }\n      }\n    }\n    state.write('}')\n  },\n  SequenceExpression(node, state) {\n    formatSequence(state, node.expressions)\n  },\n  UnaryExpression(node, state) {\n    if (node.prefix) {\n      const {\n        operator,\n        argument,\n        argument: { type },\n      } = node\n      state.write(operator)\n      const needsParentheses = expressionNeedsParenthesis(state, argument, node)\n      if (\n        !needsParentheses &&\n        (operator.length > 1 ||\n          (type[0] === 'U' &&\n            (type[1] === 'n' || type[1] === 'p') &&\n            argument.prefix &&\n            argument.operator[0] === operator &&\n            (operator === '+' || operator === '-')))\n      ) {\n        // Large operator or argument is UnaryExpression or UpdateExpression node\n        state.write(' ')\n      }\n      if (needsParentheses) {\n        state.write(operator.length > 1 ? ' (' : '(')\n        this[type](argument, state)\n        state.write(')')\n      } else {\n        this[type](argument, state)\n      }\n    } else {\n      // FIXME: This case never occurs\n      this[node.argument.type](node.argument, state)\n      state.write(node.operator)\n    }\n  },\n  UpdateExpression(node, state) {\n    // Always applied to identifiers or members, no parenthesis check needed\n    if (node.prefix) {\n      state.write(node.operator)\n      this[node.argument.type](node.argument, state)\n    } else {\n      this[node.argument.type](node.argument, state)\n      state.write(node.operator)\n    }\n  },\n  AssignmentExpression(node, state) {\n    this[node.left.type](node.left, state)\n    state.write(' ' + node.operator + ' ')\n    this[node.right.type](node.right, state)\n  },\n  AssignmentPattern(node, state) {\n    this[node.left.type](node.left, state)\n    state.write(' = ')\n    this[node.right.type](node.right, state)\n  },\n  BinaryExpression: (BinaryExpression = function (node, state) {\n    const isIn = node.operator === 'in'\n    if (isIn) {\n      // Avoids confusion in `for` loops initializers\n      state.write('(')\n    }\n    formatExpression(state, node.left, node, false)\n    state.write(' ' + node.operator + ' ')\n    formatExpression(state, node.right, node, true)\n    if (isIn) {\n      state.write(')')\n    }\n  }),\n  LogicalExpression: BinaryExpression,\n  ConditionalExpression(node, state) {\n    const { test } = node\n    const precedence = state.expressionsPrecedence[test.type]\n    if (\n      precedence === NEEDS_PARENTHESES ||\n      precedence <= state.expressionsPrecedence.ConditionalExpression\n    ) {\n      state.write('(')\n      this[test.type](test, state)\n      state.write(')')\n    } else {\n      this[test.type](test, state)\n    }\n    state.write(' ? ')\n    this[node.consequent.type](node.consequent, state)\n    state.write(' : ')\n    this[node.alternate.type](node.alternate, state)\n  },\n  NewExpression(node, state) {\n    state.write('new ')\n    const precedence = state.expressionsPrecedence[node.callee.type]\n    if (\n      precedence === NEEDS_PARENTHESES ||\n      precedence < state.expressionsPrecedence.CallExpression ||\n      hasCallExpression(node.callee)\n    ) {\n      state.write('(')\n      this[node.callee.type](node.callee, state)\n      state.write(')')\n    } else {\n      this[node.callee.type](node.callee, state)\n    }\n    formatSequence(state, node['arguments'])\n  },\n  CallExpression(node, state) {\n    const precedence = state.expressionsPrecedence[node.callee.type]\n    if (\n      precedence === NEEDS_PARENTHESES ||\n      precedence < state.expressionsPrecedence.CallExpression\n    ) {\n      state.write('(')\n      this[node.callee.type](node.callee, state)\n      state.write(')')\n    } else {\n      this[node.callee.type](node.callee, state)\n    }\n    if (node.optional) {\n      state.write('?.')\n    }\n    formatSequence(state, node['arguments'])\n  },\n  ChainExpression(node, state) {\n    this[node.expression.type](node.expression, state)\n  },\n  MemberExpression(node, state) {\n    const precedence = state.expressionsPrecedence[node.object.type]\n    if (\n      precedence === NEEDS_PARENTHESES ||\n      precedence < state.expressionsPrecedence.MemberExpression\n    ) {\n      state.write('(')\n      this[node.object.type](node.object, state)\n      state.write(')')\n    } else {\n      this[node.object.type](node.object, state)\n    }\n    if (node.computed) {\n      if (node.optional) {\n        state.write('?.')\n      }\n      state.write('[')\n      this[node.property.type](node.property, state)\n      state.write(']')\n    } else {\n      if (node.optional) {\n        state.write('?.')\n      } else {\n        state.write('.')\n      }\n      this[node.property.type](node.property, state)\n    }\n  },\n  MetaProperty(node, state) {\n    state.write(node.meta.name + '.' + node.property.name, node)\n  },\n  Identifier(node, state) {\n    state.write(node.name, node)\n  },\n  PrivateIdentifier(node, state) {\n    state.write(`#${node.name}`, node)\n  },\n  Literal(node, state) {\n    if (node.raw != null) {\n      // Non-standard property\n      state.write(node.raw, node)\n    } else if (node.regex != null) {\n      this.RegExpLiteral(node, state)\n    } else if (node.bigint != null) {\n      state.write(node.bigint + 'n', node)\n    } else {\n      state.write(stringify(node.value), node)\n    }\n  },\n  RegExpLiteral(node, state) {\n    const { regex } = node\n    state.write(`/${regex.pattern}/${regex.flags}`, node)\n  },\n}\n\nconst EMPTY_OBJECT = {}\n\n/*\nDEPRECATED: Alternate export of `GENERATOR`.\n*/\nexport const baseGenerator = GENERATOR\n\nclass State {\n  constructor(options) {\n    const setup = options == null ? EMPTY_OBJECT : options\n    this.output = ''\n    // Functional options\n    if (setup.output != null) {\n      this.output = setup.output\n      this.write = this.writeToStream\n    } else {\n      this.output = ''\n    }\n    this.generator = setup.generator != null ? setup.generator : GENERATOR\n    this.expressionsPrecedence =\n      setup.expressionsPrecedence != null\n        ? setup.expressionsPrecedence\n        : EXPRESSIONS_PRECEDENCE\n    // Formating setup\n    this.indent = setup.indent != null ? setup.indent : '  '\n    this.lineEnd = setup.lineEnd != null ? setup.lineEnd : '\\n'\n    this.indentLevel =\n      setup.startingIndentLevel != null ? setup.startingIndentLevel : 0\n    this.writeComments = setup.comments ? setup.comments : false\n    // Source map\n    if (setup.sourceMap != null) {\n      this.write =\n        setup.output == null ? this.writeAndMap : this.writeToStreamAndMap\n      this.sourceMap = setup.sourceMap\n      this.line = 1\n      this.column = 0\n      this.lineEndSize = this.lineEnd.split('\\n').length - 1\n      this.mapping = {\n        original: null,\n        // Uses the entire state to avoid generating ephemeral objects\n        generated: this,\n        name: undefined,\n        source: setup.sourceMap.file || setup.sourceMap._file,\n      }\n    }\n  }\n\n  write(code) {\n    this.output += code\n  }\n\n  writeToStream(code) {\n    this.output.write(code)\n  }\n\n  writeAndMap(code, node) {\n    this.output += code\n    this.map(code, node)\n  }\n\n  writeToStreamAndMap(code, node) {\n    this.output.write(code)\n    this.map(code, node)\n  }\n\n  map(code, node) {\n    if (node != null) {\n      const { type } = node\n      if (type[0] === 'L' && type[2] === 'n') {\n        // LineComment\n        this.column = 0\n        this.line++\n        return\n      }\n      if (node.loc != null) {\n        const { mapping } = this\n        mapping.original = node.loc.start\n        mapping.name = node.name\n        this.sourceMap.addMapping(mapping)\n      }\n      if (\n        (type[0] === 'T' && type[8] === 'E') ||\n        (type[0] === 'L' && type[1] === 'i' && typeof node.value === 'string')\n      ) {\n        // TemplateElement or Literal string node\n        const { length } = code\n        let { column, line } = this\n        for (let i = 0; i < length; i++) {\n          if (code[i] === '\\n') {\n            column = 0\n            line++\n          } else {\n            column++\n          }\n        }\n        this.column = column\n        this.line = line\n        return\n      }\n    }\n    const { length } = code\n    const { lineEnd } = this\n    if (length > 0) {\n      if (\n        this.lineEndSize > 0 &&\n        (lineEnd.length === 1\n          ? code[length - 1] === lineEnd\n          : code.endsWith(lineEnd))\n      ) {\n        this.line += this.lineEndSize\n        this.column = 0\n      } else {\n        this.column += length\n      }\n    }\n  }\n\n  toString() {\n    return this.output\n  }\n}\n\nexport function generate(node, options) {\n  /*\n  Returns a string representing the rendered code of the provided AST `node`.\n  The `options` are:\n\n  - `indent`: string to use for indentation (defaults to `␣␣`)\n  - `lineEnd`: string to use for line endings (defaults to `\\n`)\n  - `startingIndentLevel`: indent level to start from (defaults to `0`)\n  - `comments`: generate comments if `true` (defaults to `false`)\n  - `output`: output stream to write the rendered code to (defaults to `null`)\n  - `generator`: custom code generator (defaults to `GENERATOR`)\n  - `expressionsPrecedence`: custom map of node types and their precedence level (defaults to `EXPRESSIONS_PRECEDENCE`)\n  */\n  const state = new State(options)\n  // Travel through the AST node and generate the code\n  state.generator[node.type](node, state)\n  return state.output\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 27116, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 27122, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/recma-stringify/lib/index.js"],"sourcesContent":["/**\n * @import {Program} from 'estree'\n * @import {Options} from 'recma-stringify'\n * @import {Processor} from 'unified'\n * @import {VFile} from 'vfile'\n */\n\nimport {toJs} from 'estree-util-to-js'\n\n/**\n * Plugin to add support for serializing as JavaScript.\n *\n * @this {Processor<undefined, undefined, undefined, Program, string>}\n *   Processor instance.\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function recmaStringify(options) {\n  const self = this\n\n  this.compiler = compiler\n\n  /**\n   * @param {Program} tree\n   *   Tree.\n   * @param {VFile} file\n   *   File.\n   * @returns {string}\n   *   JavaScript.\n   */\n  function compiler(tree, file) {\n    const settings = {...self.data('settings'), ...options}\n    const result = toJs(tree, {\n      SourceMapGenerator: settings.SourceMapGenerator,\n      filePath: file.path || 'unknown.js',\n      handlers: settings.handlers\n    })\n\n    file.map = result.map\n\n    return result.value\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;AAED;;AAYe,SAAS,eAAe,OAAO;IAC5C,MAAM,OAAO,IAAI;IAEjB,IAAI,CAAC,QAAQ,GAAG;IAEhB;;;;;;;GAOC,GACD,SAAS,SAAS,IAAI,EAAE,IAAI;QAC1B,MAAM,WAAW;YAAC,GAAG,KAAK,IAAI,CAAC,WAAW;YAAE,GAAG,OAAO;QAAA;QACtD,MAAM,SAAS,CAAA,GAAA,sJAAA,CAAA,OAAI,AAAD,EAAE,MAAM;YACxB,oBAAoB,SAAS,kBAAkB;YAC/C,UAAU,KAAK,IAAI,IAAI;YACvB,UAAU,SAAS,QAAQ;QAC7B;QAEA,KAAK,GAAG,GAAG,OAAO,GAAG;QAErB,OAAO,OAAO,KAAK;IACrB;AACF","ignoreList":[0]}},
    {"offset": {"line": 27156, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 27162, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/nextra/node_modules/%40theguild/remark-mermaid/dist/index.js"],"sourcesContent":["import { visit } from \"unist-util-visit\";\nconst COMPONENT_NAME = \"Mermaid\";\nconst MERMAID_IMPORT_AST = {\n  type: \"mdxjsEsm\",\n  data: {\n    estree: {\n      body: [\n        {\n          type: \"ImportDeclaration\",\n          specifiers: [\n            {\n              type: \"ImportSpecifier\",\n              imported: { type: \"Identifier\", name: COMPONENT_NAME },\n              local: { type: \"Identifier\", name: COMPONENT_NAME }\n            }\n          ],\n          source: { type: \"Literal\", value: \"@theguild/remark-mermaid/mermaid\" }\n        }\n      ]\n    }\n  }\n};\nconst remarkMermaid = () => (ast, _file, done) => {\n  const codeblocks = [];\n  visit(ast, { type: \"code\", lang: \"mermaid\" }, (node, index, parent) => {\n    codeblocks.push([node, index, parent]);\n  });\n  if (codeblocks.length !== 0) {\n    for (const [node, index, parent] of codeblocks) {\n      parent.children.splice(index, 1, {\n        type: \"mdxJsxFlowElement\",\n        name: COMPONENT_NAME,\n        attributes: [\n          {\n            type: \"mdxJsxAttribute\",\n            name: \"chart\",\n            value: node.value.replaceAll(\"\\n\", \"\\\\n\")\n          }\n        ]\n      });\n    }\n    ast.children.unshift(MERMAID_IMPORT_AST);\n  }\n  done();\n};\nexport {\n  remarkMermaid\n};\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,iBAAiB;AACvB,MAAM,qBAAqB;IACzB,MAAM;IACN,MAAM;QACJ,QAAQ;YACN,MAAM;gBACJ;oBACE,MAAM;oBACN,YAAY;wBACV;4BACE,MAAM;4BACN,UAAU;gCAAE,MAAM;gCAAc,MAAM;4BAAe;4BACrD,OAAO;gCAAE,MAAM;gCAAc,MAAM;4BAAe;wBACpD;qBACD;oBACD,QAAQ;wBAAE,MAAM;wBAAW,OAAO;oBAAmC;gBACvE;aACD;QACH;IACF;AACF;AACA,MAAM,gBAAgB,IAAM,CAAC,KAAK,OAAO;QACvC,MAAM,aAAa,EAAE;QACrB,CAAA,GAAA,kKAAA,CAAA,QAAK,AAAD,EAAE,KAAK;YAAE,MAAM;YAAQ,MAAM;QAAU,GAAG,CAAC,MAAM,OAAO;YAC1D,WAAW,IAAI,CAAC;gBAAC;gBAAM;gBAAO;aAAO;QACvC;QACA,IAAI,WAAW,MAAM,KAAK,GAAG;YAC3B,KAAK,MAAM,CAAC,MAAM,OAAO,OAAO,IAAI,WAAY;gBAC9C,OAAO,QAAQ,CAAC,MAAM,CAAC,OAAO,GAAG;oBAC/B,MAAM;oBACN,MAAM;oBACN,YAAY;wBACV;4BACE,MAAM;4BACN,MAAM;4BACN,OAAO,KAAK,KAAK,CAAC,UAAU,CAAC,MAAM;wBACrC;qBACD;gBACH;YACF;YACA,IAAI,QAAQ,CAAC,OAAO,CAAC;QACvB;QACA;IACF","ignoreList":[0]}},
    {"offset": {"line": 27228, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 27234, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/nextra/dist/server/remark-plugins/remark-remove-imports.js"],"sourcesContent":["import { remove } from \"unist-util-remove\";\nconst transformer = (ast) => {\n  remove(\n    ast,\n    (node) => node.type === \"mdxjsEsm\" && // @ts-expect-error -- fixme\n    node.data.estree.body[0].type === \"ImportDeclaration\"\n  );\n};\nconst remarkRemoveImports = () => transformer;\nexport {\n  remarkRemoveImports\n};\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,cAAc,CAAC;IACnB,CAAA,GAAA,mJAAA,CAAA,SAAM,AAAD,EACH,KACA,CAAC,OAAS,KAAK,IAAI,KAAK,cAAc,4BAA4B;QAClE,KAAK,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,KAAK;AAEtC;AACA,MAAM,sBAAsB,IAAM","ignoreList":[0]}},
    {"offset": {"line": 27245, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 27251, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/nextra/dist/server/remark-plugins/remark-headings.js"],"sourcesContent":["import Slugger from \"github-slugger\";\nimport { visit } from \"unist-util-visit\";\nimport { visitChildren } from \"unist-util-visit-children\";\nimport { MARKDOWN_EXTENSION_RE } from \"../constants.js\";\nimport { createAstObject } from \"../utils.js\";\nconst getFlattenedValue = (node) => node.children.map(\n  (child) => \"children\" in child ? getFlattenedValue(child) : \"value\" in child ? child.value : \"\"\n).join(\"\");\nconst remarkHeadings = ({ exportName = \"toc\", isRemoteContent }) => {\n  const headings = [];\n  const slugger = new Slugger();\n  return (ast, file) => {\n    const PartialComponentToHeadingsName = /* @__PURE__ */ Object.create(null);\n    visit(\n      ast,\n      [\n        \"heading\",\n        // push partial component's `toc` export name to headings list\n        \"mdxJsxFlowElement\",\n        // verify .md/.mdx exports and attach named `toc` export\n        \"mdxjsEsm\"\n      ],\n      (node, index, parent) => {\n        if (node.type === \"heading\") {\n          if (node.depth === 1) {\n            return;\n          }\n          node.data ||= {};\n          const headingProps = node.data.hProperties ||= {};\n          const value = getFlattenedValue(node);\n          const id = slugger.slug(headingProps.id || value);\n          headingProps.id = id;\n          headings.push({ depth: node.depth, value, id });\n          return;\n        }\n        const isTab = node.type === \"mdxJsxFlowElement\" && node.name === \"Tabs.Tab\";\n        if (isTab) {\n          const itemsAttr = parent && parent.type === \"mdxJsxFlowElement\" && parent.name === \"Tabs\" && parent.attributes.find(\n            (attr) => attr.type === \"mdxJsxAttribute\" && attr.name === \"items\"\n          );\n          if (!itemsAttr) return;\n          const tabName = itemsAttr.value.data.estree.body[0].expression.elements.map(\n            (el) => el.value\n          )[index];\n          const id = slugger.slug(tabName);\n          node.children.unshift({\n            type: \"mdxJsxFlowElement\",\n            name: \"h3\",\n            data: { _mdxExplicitJsx: true },\n            children: [{ type: \"text\", value: tabName }],\n            attributes: [\n              { type: \"mdxJsxAttribute\", name: \"id\", value: id },\n              {\n                type: \"mdxJsxAttribute\",\n                name: \"style\",\n                value: {\n                  type: \"mdxJsxAttributeValueExpression\",\n                  value: \"\",\n                  data: {\n                    estree: {\n                      type: \"Program\",\n                      sourceType: \"module\",\n                      comments: [],\n                      body: [\n                        {\n                          type: \"ExpressionStatement\",\n                          expression: createAstObject({\n                            visibility: \"hidden\",\n                            width: 0,\n                            height: 0\n                          })\n                        }\n                      ]\n                    }\n                  }\n                }\n              }\n            ]\n          });\n        }\n        const isDetails = node.type === \"mdxJsxFlowElement\" && node.name === \"details\";\n        if (isDetails) {\n          const visitor = visitChildren((node2) => {\n            const isSummary = node2.type === \"mdxJsxTextElement\" && node2.name === \"summary\";\n            if (isSummary) {\n              const value = getFlattenedValue(node2);\n              const id = slugger.slug(value);\n              node2.attributes.push({\n                type: \"mdxJsxAttribute\",\n                name: \"id\",\n                value: id\n              });\n            } else if (\"children\" in node2) {\n              visitor(node2);\n            }\n          });\n          visitor(node);\n        }\n        if (isRemoteContent) {\n        } else if (node.type === \"mdxjsEsm\") {\n          for (const child of node.data.estree.body) {\n            if (child.type !== \"ImportDeclaration\") continue;\n            const importPath = child.source.value;\n            const isMdxImport = MARKDOWN_EXTENSION_RE.test(importPath);\n            if (!isMdxImport) continue;\n            const componentName = child.specifiers.find(\n              (o) => o.type === \"ImportDefaultSpecifier\"\n            )?.local.name;\n            if (!componentName) continue;\n            const { length } = Object.keys(PartialComponentToHeadingsName);\n            const exportAsName = `${exportName}${length}`;\n            PartialComponentToHeadingsName[componentName] = exportAsName;\n            child.specifiers.push({\n              type: \"ImportSpecifier\",\n              imported: { type: \"Identifier\", name: exportName },\n              local: { type: \"Identifier\", name: exportAsName }\n            });\n          }\n        } else {\n          const headingsName = PartialComponentToHeadingsName[node.name];\n          if (headingsName) {\n            headings.push(headingsName);\n          }\n        }\n      }\n    );\n    file.data.toc = headings;\n  };\n};\nexport {\n  getFlattenedValue,\n  remarkHeadings\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 27398, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 27404, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/nextra/dist/server/remark-plugins/remark-mdx-title.js"],"sourcesContent":["import path from \"path\";\nimport { EXIT, visit } from \"unist-util-visit\";\nimport { pageTitleFromFilename } from \"../utils.js\";\nimport { getFlattenedValue } from \"./remark-headings.js\";\nfunction getFrontMatterASTObject(node) {\n  const [n] = node.data.estree.body;\n  return n.declaration.declarations[0].init.properties;\n}\nfunction isExportNode(node, varName) {\n  if (node.type !== \"mdxjsEsm\") return false;\n  const n = node.data.estree.body[0];\n  if (n.type !== \"ExportNamedDeclaration\") return false;\n  const name = n.declaration?.declarations?.[0].id.name;\n  if (!name) return false;\n  return name === varName;\n}\nconst transformer = (ast, file) => {\n  let title = \"\";\n  const frontMatterNode = ast.children.find(\n    (node) => isExportNode(node, \"metadata\")\n  );\n  for (const { key, value } of getFrontMatterASTObject(frontMatterNode)) {\n    if (key.type === \"Literal\" && key.value === \"title\") {\n      title = value.value;\n      break;\n    }\n    if (key.type === \"Identifier\" && key.name === \"title\") {\n      title = value.value;\n      break;\n    }\n  }\n  if (!title) {\n    visit(ast, { type: \"heading\", depth: 1 }, (node) => {\n      title = getFlattenedValue(node);\n      return EXIT;\n    });\n    if (!title) {\n      const [filePath] = file.history;\n      if (filePath) {\n        title = pageTitleFromFilename(path.parse(filePath).name);\n      }\n    }\n    if (title) {\n      file.data.title = title;\n    }\n  }\n};\nconst remarkMdxTitle = () => transformer;\nexport {\n  getFrontMatterASTObject,\n  isExportNode,\n  remarkMdxTitle\n};\n"],"names":[],"mappings":";;;;;AAAA;AACA;AAEA;AAFA;AACA;;;;;AAEA,SAAS,wBAAwB,IAAI;IACnC,MAAM,CAAC,EAAE,GAAG,KAAK,IAAI,CAAC,MAAM,CAAC,IAAI;IACjC,OAAO,EAAE,WAAW,CAAC,YAAY,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU;AACtD;AACA,SAAS,aAAa,IAAI,EAAE,OAAO;IACjC,IAAI,KAAK,IAAI,KAAK,YAAY,OAAO;IACrC,MAAM,IAAI,KAAK,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;IAClC,IAAI,EAAE,IAAI,KAAK,0BAA0B,OAAO;IAChD,MAAM,OAAO,EAAE,WAAW,EAAE,cAAc,CAAC,EAAE,CAAC,GAAG;IACjD,IAAI,CAAC,MAAM,OAAO;IAClB,OAAO,SAAS;AAClB;AACA,MAAM,cAAc,CAAC,KAAK;IACxB,IAAI,QAAQ;IACZ,MAAM,kBAAkB,IAAI,QAAQ,CAAC,IAAI,CACvC,CAAC,OAAS,aAAa,MAAM;IAE/B,KAAK,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,wBAAwB,iBAAkB;QACrE,IAAI,IAAI,IAAI,KAAK,aAAa,IAAI,KAAK,KAAK,SAAS;YACnD,QAAQ,MAAM,KAAK;YACnB;QACF;QACA,IAAI,IAAI,IAAI,KAAK,gBAAgB,IAAI,IAAI,KAAK,SAAS;YACrD,QAAQ,MAAM,KAAK;YACnB;QACF;IACF;IACA,IAAI,CAAC,OAAO;QACV,CAAA,GAAA,kKAAA,CAAA,QAAK,AAAD,EAAE,KAAK;YAAE,MAAM;YAAW,OAAO;QAAE,GAAG,CAAC;YACzC,QAAQ,CAAA,GAAA,+KAAA,CAAA,oBAAiB,AAAD,EAAE;YAC1B,OAAO,6JAAA,CAAA,OAAI;QACb;QACA,IAAI,CAAC,OAAO;YACV,MAAM,CAAC,SAAS,GAAG,KAAK,OAAO;YAC/B,IAAI,UAAU;gBACZ,QAAQ,CAAA,GAAA,6IAAA,CAAA,wBAAqB,AAAD,EAAE,mKAAA,CAAA,UAAI,CAAC,KAAK,CAAC,UAAU,IAAI;YACzD;QACF;QACA,IAAI,OAAO;YACT,KAAK,IAAI,CAAC,KAAK,GAAG;QACpB;IACF;AACF;AACA,MAAM,iBAAiB,IAAM","ignoreList":[0]}},
    {"offset": {"line": 27464, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 27470, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/nextra/dist/server/remark-plugins/remark-mdx-frontmatter.js"],"sourcesContent":["import { valueToEstree } from \"estree-util-value-to-estree\";\nimport { parse as parseYaml } from \"yaml\";\nimport { createAstExportConst } from \"../utils.js\";\nimport { isExportNode } from \"./remark-mdx-title.js\";\nfunction createNode(data) {\n  return {\n    type: \"mdxjsEsm\",\n    data: {\n      estree: {\n        body: [createAstExportConst(\"metadata\", valueToEstree(data))]\n      }\n    }\n  };\n}\nconst transformer = (ast) => {\n  const yamlNodeIndex = ast.children.findIndex((node) => node.type === \"yaml\");\n  const esmNodeIndex = ast.children.findIndex(\n    (node) => isExportNode(node, \"metadata\")\n  );\n  const hasYaml = yamlNodeIndex !== -1;\n  const hasEsm = esmNodeIndex !== -1;\n  if (hasYaml) {\n    if (hasEsm) {\n      throw new Error(\n        \"Both YAML front matter and `metadata` aren't supported. Keep only 1.\"\n      );\n    }\n    const node = ast.children[yamlNodeIndex];\n    ast.children[yamlNodeIndex] = createNode(parseYaml(node.value) ?? {});\n  } else if (!hasEsm) {\n    ast.children.unshift(createNode({}));\n  }\n};\nconst remarkMdxFrontMatter = () => transformer;\nexport {\n  remarkMdxFrontMatter\n};\n"],"names":[],"mappings":";;;AAAA;AACA;AAEA;AAFA;AACA;;;;;AAEA,SAAS,WAAW,IAAI;IACtB,OAAO;QACL,MAAM;QACN,MAAM;YACJ,QAAQ;gBACN,MAAM;oBAAC,CAAA,GAAA,6IAAA,CAAA,uBAAoB,AAAD,EAAE,YAAY,CAAA,GAAA,sMAAA,CAAA,gBAAa,AAAD,EAAE;iBAAO;YAC/D;QACF;IACF;AACF;AACA,MAAM,cAAc,CAAC;IACnB,MAAM,gBAAgB,IAAI,QAAQ,CAAC,SAAS,CAAC,CAAC,OAAS,KAAK,IAAI,KAAK;IACrE,MAAM,eAAe,IAAI,QAAQ,CAAC,SAAS,CACzC,CAAC,OAAS,CAAA,GAAA,mLAAA,CAAA,eAAY,AAAD,EAAE,MAAM;IAE/B,MAAM,UAAU,kBAAkB,CAAC;IACnC,MAAM,SAAS,iBAAiB,CAAC;IACjC,IAAI,SAAS;QACX,IAAI,QAAQ;YACV,MAAM,IAAI,MACR;QAEJ;QACA,MAAM,OAAO,IAAI,QAAQ,CAAC,cAAc;QACxC,IAAI,QAAQ,CAAC,cAAc,GAAG,WAAW,CAAA,GAAA,oJAAA,CAAA,QAAS,AAAD,EAAE,KAAK,KAAK,KAAK,CAAC;IACrE,OAAO,IAAI,CAAC,QAAQ;QAClB,IAAI,QAAQ,CAAC,OAAO,CAAC,WAAW,CAAC;IACnC;AACF;AACA,MAAM,uBAAuB,IAAM","ignoreList":[0]}},
    {"offset": {"line": 27511, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 27517, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/nextra/dist/server/remark-plugins/remark-custom-heading-id.js"],"sourcesContent":["import { visit } from \"unist-util-visit\";\nconst transformer = (ast) => {\n  visit(ast, \"heading\", (node) => {\n    const lastChild = node.children.at(-1);\n    if (!lastChild || lastChild.type !== \"text\") return;\n    const heading = lastChild.value;\n    const matched = heading.match(/\\s*\\[#([^]+?)]\\s*$/);\n    if (!matched) return;\n    node.data ||= {};\n    const headingProps = node.data.hProperties ||= {};\n    headingProps.id = matched[1];\n    lastChild.value = heading.slice(0, matched.index);\n  });\n};\nconst remarkCustomHeadingId = () => transformer;\nexport {\n  remarkCustomHeadingId\n};\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,cAAc,CAAC;IACnB,CAAA,GAAA,kKAAA,CAAA,QAAK,AAAD,EAAE,KAAK,WAAW,CAAC;QACrB,MAAM,YAAY,KAAK,QAAQ,CAAC,EAAE,CAAC,CAAC;QACpC,IAAI,CAAC,aAAa,UAAU,IAAI,KAAK,QAAQ;QAC7C,MAAM,UAAU,UAAU,KAAK;QAC/B,MAAM,UAAU,QAAQ,KAAK,CAAC;QAC9B,IAAI,CAAC,SAAS;QACd,KAAK,IAAI,KAAK,CAAC;QACf,MAAM,eAAe,KAAK,IAAI,CAAC,WAAW,KAAK,CAAC;QAChD,aAAa,EAAE,GAAG,OAAO,CAAC,EAAE;QAC5B,UAAU,KAAK,GAAG,QAAQ,KAAK,CAAC,GAAG,QAAQ,KAAK;IAClD;AACF;AACA,MAAM,wBAAwB,IAAM","ignoreList":[0]}},
    {"offset": {"line": 27537, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 27543, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/nextra/dist/server/remark-plugins/remark-assign-frontmatter.js"],"sourcesContent":["import path from \"path\";\nimport { valueToEstree } from \"estree-util-value-to-estree\";\nimport slash from \"slash\";\nimport { CWD } from \"../constants.js\";\nimport { getFrontMatterASTObject, isExportNode } from \"./remark-mdx-title.js\";\nconst remarkAssignFrontMatter = ({ lastCommitTime }) => (ast, file) => {\n  const frontMatterNode = ast.children.find(\n    (node) => isExportNode(node, \"metadata\")\n  );\n  const frontMatter = getFrontMatterASTObject(frontMatterNode);\n  const [filePath] = file.history;\n  const { readingTime, title } = file.data;\n  const { properties } = valueToEstree({\n    ...title && { title },\n    // File path can be undefined (e.g. dynamic mdx without filePath provided to processor)\n    ...filePath && { filePath: slash(path.relative(CWD, filePath)) },\n    ...readingTime && { readingTime },\n    ...lastCommitTime && { timestamp: lastCommitTime }\n  });\n  frontMatter.push(...properties);\n};\nexport {\n  remarkAssignFrontMatter\n};\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AAEA;AADA;;;;;;AAEA,MAAM,0BAA0B,CAAC,EAAE,cAAc,EAAE,GAAK,CAAC,KAAK;QAC5D,MAAM,kBAAkB,IAAI,QAAQ,CAAC,IAAI,CACvC,CAAC,OAAS,CAAA,GAAA,mLAAA,CAAA,eAAY,AAAD,EAAE,MAAM;QAE/B,MAAM,cAAc,CAAA,GAAA,mLAAA,CAAA,0BAAuB,AAAD,EAAE;QAC5C,MAAM,CAAC,SAAS,GAAG,KAAK,OAAO;QAC/B,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,GAAG,KAAK,IAAI;QACxC,MAAM,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,sMAAA,CAAA,gBAAa,AAAD,EAAE;YACnC,GAAG,SAAS;gBAAE;YAAM,CAAC;YACrB,uFAAuF;YACvF,GAAG,YAAY;gBAAE,UAAU,CAAA,GAAA,0HAAA,CAAA,UAAK,AAAD,EAAE,mKAAA,CAAA,UAAI,CAAC,QAAQ,CAAC,iJAAA,CAAA,MAAG,EAAE;YAAW,CAAC;YAChE,GAAG,eAAe;gBAAE;YAAY,CAAC;YACjC,GAAG,kBAAkB;gBAAE,WAAW;YAAe,CAAC;QACpD;QACA,YAAY,IAAI,IAAI;IACtB","ignoreList":[0]}},
    {"offset": {"line": 27579, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 27585, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/nextra/dist/server/remark-plugins/remark-mdx-disable-explicit-jsx.js"],"sourcesContent":["import { visit } from \"unist-util-visit\";\nconst remarkMdxDisableExplicitJsx = ({ whiteList }) => (ast) => {\n  const test = whiteList.map((name) => ({ name }));\n  visit(ast, test, (node) => {\n    delete node.data._mdxExplicitJsx;\n  });\n};\nexport {\n  remarkMdxDisableExplicitJsx\n};\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,8BAA8B,CAAC,EAAE,SAAS,EAAE,GAAK,CAAC;QACtD,MAAM,OAAO,UAAU,GAAG,CAAC,CAAC,OAAS,CAAC;gBAAE;YAAK,CAAC;QAC9C,CAAA,GAAA,kKAAA,CAAA,QAAK,AAAD,EAAE,KAAK,MAAM,CAAC;YAChB,OAAO,KAAK,IAAI,CAAC,eAAe;QAClC;IACF","ignoreList":[0]}},
    {"offset": {"line": 27599, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 27605, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/nextra/dist/server/remark-plugins/remark-static-image.js"],"sourcesContent":["import path from \"path\";\nimport { visit } from \"unist-util-visit\";\nimport { EXTERNAL_URL_RE } from \"../constants.js\";\nconst VALID_BLUR_EXT = [\".jpeg\", \".png\", \".webp\", \".avif\", \".jpg\"];\nconst VARIABLE_PREFIX = \"__img\";\nconst transformer = (ast) => {\n  const definitionNodes = [];\n  const imageImports = /* @__PURE__ */ new Set();\n  const imageNodes = [];\n  visit(ast, \"definition\", (node) => {\n    definitionNodes.push(node);\n  });\n  visit(ast, [\"image\", \"imageReference\"], (_node) => {\n    const node = _node;\n    let url = decodeURI(\n      node.type === \"image\" ? node.url : definitionNodes.find(\n        (definition) => definition.identifier === node.identifier\n      )?.url ?? \"\"\n    );\n    if (!url) {\n      return;\n    }\n    if (EXTERNAL_URL_RE.test(url)) {\n      return;\n    }\n    if (url.startsWith(\"/\")) {\n      url = path.posix.join(\"private-next-root-dir\", \"public\", url);\n    }\n    imageImports.add(url);\n    node.url = url;\n    imageNodes.push(node);\n  });\n  const imageUrls = [...imageImports];\n  for (const node of imageNodes) {\n    const { url } = node;\n    const imageIndex = imageUrls.indexOf(url);\n    const variableName = `${VARIABLE_PREFIX}${imageIndex}`;\n    const hasBlur = VALID_BLUR_EXT.some((ext) => url.endsWith(ext));\n    Object.assign(node, {\n      type: \"mdxJsxFlowElement\",\n      name: \"img\",\n      attributes: [\n        // do not render empty alt in html markup\n        node.alt && {\n          type: \"mdxJsxAttribute\",\n          name: \"alt\",\n          value: node.alt\n        },\n        hasBlur && {\n          type: \"mdxJsxAttribute\",\n          name: \"placeholder\",\n          value: \"blur\"\n        },\n        {\n          type: \"mdxJsxAttribute\",\n          name: \"src\",\n          value: {\n            type: \"mdxJsxAttributeValueExpression\",\n            value: variableName,\n            data: {\n              estree: {\n                body: [\n                  {\n                    type: \"ExpressionStatement\",\n                    expression: { type: \"Identifier\", name: variableName }\n                  }\n                ]\n              }\n            }\n          }\n        }\n      ].filter((v) => !!v)\n    });\n  }\n  if (imageUrls.length) {\n    ast.children.unshift(\n      ...imageUrls.map(\n        (imageUrl, index) => ({\n          type: \"mdxjsEsm\",\n          data: {\n            estree: {\n              body: [\n                {\n                  type: \"ImportDeclaration\",\n                  source: { type: \"Literal\", value: imageUrl },\n                  specifiers: [\n                    {\n                      type: \"ImportDefaultSpecifier\",\n                      local: {\n                        type: \"Identifier\",\n                        name: `${VARIABLE_PREFIX}${index}`\n                      }\n                    }\n                  ]\n                }\n              ]\n            }\n          }\n        })\n      )\n    );\n  }\n};\nconst remarkStaticImage = () => transformer;\nexport {\n  remarkStaticImage\n};\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AACA,MAAM,iBAAiB;IAAC;IAAS;IAAQ;IAAS;IAAS;CAAO;AAClE,MAAM,kBAAkB;AACxB,MAAM,cAAc,CAAC;IACnB,MAAM,kBAAkB,EAAE;IAC1B,MAAM,eAAe,aAAa,GAAG,IAAI;IACzC,MAAM,aAAa,EAAE;IACrB,CAAA,GAAA,kKAAA,CAAA,QAAK,AAAD,EAAE,KAAK,cAAc,CAAC;QACxB,gBAAgB,IAAI,CAAC;IACvB;IACA,CAAA,GAAA,kKAAA,CAAA,QAAK,AAAD,EAAE,KAAK;QAAC;QAAS;KAAiB,EAAE,CAAC;QACvC,MAAM,OAAO;QACb,IAAI,MAAM,UACR,KAAK,IAAI,KAAK,UAAU,KAAK,GAAG,GAAG,gBAAgB,IAAI,CACrD,CAAC,aAAe,WAAW,UAAU,KAAK,KAAK,UAAU,GACxD,OAAO;QAEZ,IAAI,CAAC,KAAK;YACR;QACF;QACA,IAAI,iJAAA,CAAA,kBAAe,CAAC,IAAI,CAAC,MAAM;YAC7B;QACF;QACA,IAAI,IAAI,UAAU,CAAC,MAAM;YACvB,MAAM,mKAAA,CAAA,UAAI,CAAC,KAAK,CAAC,IAAI,CAAC,yBAAyB,UAAU;QAC3D;QACA,aAAa,GAAG,CAAC;QACjB,KAAK,GAAG,GAAG;QACX,WAAW,IAAI,CAAC;IAClB;IACA,MAAM,YAAY;WAAI;KAAa;IACnC,KAAK,MAAM,QAAQ,WAAY;QAC7B,MAAM,EAAE,GAAG,EAAE,GAAG;QAChB,MAAM,aAAa,UAAU,OAAO,CAAC;QACrC,MAAM,eAAe,GAAG,kBAAkB,YAAY;QACtD,MAAM,UAAU,eAAe,IAAI,CAAC,CAAC,MAAQ,IAAI,QAAQ,CAAC;QAC1D,OAAO,MAAM,CAAC,MAAM;YAClB,MAAM;YACN,MAAM;YACN,YAAY;gBACV,yCAAyC;gBACzC,KAAK,GAAG,IAAI;oBACV,MAAM;oBACN,MAAM;oBACN,OAAO,KAAK,GAAG;gBACjB;gBACA,WAAW;oBACT,MAAM;oBACN,MAAM;oBACN,OAAO;gBACT;gBACA;oBACE,MAAM;oBACN,MAAM;oBACN,OAAO;wBACL,MAAM;wBACN,OAAO;wBACP,MAAM;4BACJ,QAAQ;gCACN,MAAM;oCACJ;wCACE,MAAM;wCACN,YAAY;4CAAE,MAAM;4CAAc,MAAM;wCAAa;oCACvD;iCACD;4BACH;wBACF;oBACF;gBACF;aACD,CAAC,MAAM,CAAC,CAAC,IAAM,CAAC,CAAC;QACpB;IACF;IACA,IAAI,UAAU,MAAM,EAAE;QACpB,IAAI,QAAQ,CAAC,OAAO,IACf,UAAU,GAAG,CACd,CAAC,UAAU,QAAU,CAAC;gBACpB,MAAM;gBACN,MAAM;oBACJ,QAAQ;wBACN,MAAM;4BACJ;gCACE,MAAM;gCACN,QAAQ;oCAAE,MAAM;oCAAW,OAAO;gCAAS;gCAC3C,YAAY;oCACV;wCACE,MAAM;wCACN,OAAO;4CACL,MAAM;4CACN,MAAM,GAAG,kBAAkB,OAAO;wCACpC;oCACF;iCACD;4BACH;yBACD;oBACH;gBACF;YACF,CAAC;IAGP;AACF;AACA,MAAM,oBAAoB,IAAM","ignoreList":[0]}},
    {"offset": {"line": 27725, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 27731, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/nextra/dist/server/remark-plugins/remark-link-rewrite.js"],"sourcesContent":["import { visit } from \"unist-util-visit\";\nimport { EXTERNAL_URL_RE } from \"../constants.js\";\nconst remarkLinkRewrite = ({ pattern, replace, excludeExternalLinks }) => (ast) => {\n  visit(ast, \"link\", (node) => {\n    if (!(excludeExternalLinks && EXTERNAL_URL_RE.test(node.url))) {\n      node.url = node.url.replace(pattern, replace);\n    }\n  });\n};\nexport {\n  remarkLinkRewrite\n};\n"],"names":[],"mappings":";;;AAAA;AACA;;;AACA,MAAM,oBAAoB,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,oBAAoB,EAAE,GAAK,CAAC;QACzE,CAAA,GAAA,kKAAA,CAAA,QAAK,AAAD,EAAE,KAAK,QAAQ,CAAC;YAClB,IAAI,CAAC,CAAC,wBAAwB,iJAAA,CAAA,kBAAe,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG;gBAC7D,KAAK,GAAG,GAAG,KAAK,GAAG,CAAC,OAAO,CAAC,SAAS;YACvC;QACF;IACF","ignoreList":[0]}},
    {"offset": {"line": 27746, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 27752, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/nextra/dist/server/rehype-plugins/rehype.js"],"sourcesContent":["import { bundledLanguages, createHighlighter } from \"shiki\";\nimport { SKIP, visit } from \"unist-util-visit\";\nconst CODE_BLOCK_FILENAME_RE = /filename=\"([^\"]+)\"/;\nconst DEFAULT_REHYPE_PRETTY_CODE_OPTIONS = {\n  keepBackground: false,\n  grid: false,\n  onVisitLine(node) {\n    if (node.children.length === 0) {\n      node.children.push({ type: \"text\", value: \" \" });\n    }\n    delete node.properties[\"data-line\"];\n  },\n  theme: {\n    light: \"github-light\",\n    dark: \"github-dark\"\n  },\n  defaultLang: {\n    block: \"plaintext\"\n  },\n  filterMetaString: (meta) => meta.replace(CODE_BLOCK_FILENAME_RE, \"\"),\n  getHighlighter(opts) {\n    const langs = Object.keys(bundledLanguages).filter((l) => l !== \"mermaid\");\n    return createHighlighter({\n      ...opts,\n      // Without `getHighlighter` option ```mdx lang isn't highlighted\n      langs\n    });\n  }\n};\nconst rehypeParseCodeMeta = ({ defaultShowCopyCode }) => (ast) => {\n  visit(ast, { tagName: \"pre\" }, (node) => {\n    const [codeEl] = node.children;\n    const { meta = \"\" } = codeEl.data || {};\n    node.__filename = meta.match(CODE_BLOCK_FILENAME_RE)?.[1];\n    node.properties[\"data-filename\"] = node.__filename;\n    node.__hasWordWrap = !meta.includes(\"word-wrap=false\");\n    if (node.__hasWordWrap) {\n      node.properties[\"data-word-wrap\"] = \"\";\n    }\n    node.__hasCopyCode = meta ? defaultShowCopyCode && !/( |^)copy=false($| )/.test(meta) || /( |^)copy($| )/.test(meta) : defaultShowCopyCode;\n    if (node.__hasCopyCode) {\n      node.properties[\"data-copy\"] = \"\";\n    }\n  });\n};\nconst rehypeAttachCodeMeta = ({ search }) => {\n  const parseCodeblocks = typeof search === \"object\" ? search.codeblocks : search;\n  return (ast) => {\n    visit(\n      ast,\n      [{ tagName: \"figure\" }, { tagName: \"span\" }],\n      (node) => {\n        const isRehypePrettyCode = \"data-rehype-pretty-code-figure\" in node.properties;\n        if (!isRehypePrettyCode) return;\n        const preEl = Object.assign(node, node.children[0]);\n        delete preEl.properties[\"data-theme\"];\n        if (preEl.tagName === \"pre\") {\n          const codeEl = preEl.children[0];\n          delete codeEl.properties[\"data-theme\"];\n          delete codeEl.properties[\"data-language\"];\n          if (preEl.__hasWordWrap) {\n            preEl.properties[\"data-word-wrap\"] = \"\";\n          }\n          if (preEl.__filename) {\n            preEl.properties[\"data-filename\"] = preEl.__filename;\n          }\n          if (preEl.__hasCopyCode) {\n            preEl.properties[\"data-copy\"] = \"\";\n          }\n          if (!parseCodeblocks) {\n            preEl.properties[\"data-pagefind-ignore\"] = \"all\";\n          }\n          return SKIP;\n        }\n        delete node.children[0].properties.className;\n      }\n    );\n  };\n};\nexport {\n  DEFAULT_REHYPE_PRETTY_CODE_OPTIONS,\n  rehypeAttachCodeMeta,\n  rehypeParseCodeMeta\n};\n"],"names":[],"mappings":";;;;;AAAA;AAAA;AACA;AAAA;;;AACA,MAAM,yBAAyB;AAC/B,MAAM,qCAAqC;IACzC,gBAAgB;IAChB,MAAM;IACN,aAAY,IAAI;QACd,IAAI,KAAK,QAAQ,CAAC,MAAM,KAAK,GAAG;YAC9B,KAAK,QAAQ,CAAC,IAAI,CAAC;gBAAE,MAAM;gBAAQ,OAAO;YAAI;QAChD;QACA,OAAO,KAAK,UAAU,CAAC,YAAY;IACrC;IACA,OAAO;QACL,OAAO;QACP,MAAM;IACR;IACA,aAAa;QACX,OAAO;IACT;IACA,kBAAkB,CAAC,OAAS,KAAK,OAAO,CAAC,wBAAwB;IACjE,gBAAe,IAAI;QACjB,MAAM,QAAQ,OAAO,IAAI,CAAC,6JAAA,CAAA,mBAAgB,EAAE,MAAM,CAAC,CAAC,IAAM,MAAM;QAChE,OAAO,CAAA,GAAA,sLAAA,CAAA,oBAAiB,AAAD,EAAE;YACvB,GAAG,IAAI;YACP,gEAAgE;YAChE;QACF;IACF;AACF;AACA,MAAM,sBAAsB,CAAC,EAAE,mBAAmB,EAAE,GAAK,CAAC;QACxD,CAAA,GAAA,kKAAA,CAAA,QAAK,AAAD,EAAE,KAAK;YAAE,SAAS;QAAM,GAAG,CAAC;YAC9B,MAAM,CAAC,OAAO,GAAG,KAAK,QAAQ;YAC9B,MAAM,EAAE,OAAO,EAAE,EAAE,GAAG,OAAO,IAAI,IAAI,CAAC;YACtC,KAAK,UAAU,GAAG,KAAK,KAAK,CAAC,yBAAyB,CAAC,EAAE;YACzD,KAAK,UAAU,CAAC,gBAAgB,GAAG,KAAK,UAAU;YAClD,KAAK,aAAa,GAAG,CAAC,KAAK,QAAQ,CAAC;YACpC,IAAI,KAAK,aAAa,EAAE;gBACtB,KAAK,UAAU,CAAC,iBAAiB,GAAG;YACtC;YACA,KAAK,aAAa,GAAG,OAAO,uBAAuB,CAAC,uBAAuB,IAAI,CAAC,SAAS,iBAAiB,IAAI,CAAC,QAAQ;YACvH,IAAI,KAAK,aAAa,EAAE;gBACtB,KAAK,UAAU,CAAC,YAAY,GAAG;YACjC;QACF;IACF;AACA,MAAM,uBAAuB,CAAC,EAAE,MAAM,EAAE;IACtC,MAAM,kBAAkB,OAAO,WAAW,WAAW,OAAO,UAAU,GAAG;IACzE,OAAO,CAAC;QACN,CAAA,GAAA,kKAAA,CAAA,QAAK,AAAD,EACF,KACA;YAAC;gBAAE,SAAS;YAAS;YAAG;gBAAE,SAAS;YAAO;SAAE,EAC5C,CAAC;YACC,MAAM,qBAAqB,oCAAoC,KAAK,UAAU;YAC9E,IAAI,CAAC,oBAAoB;YACzB,MAAM,QAAQ,OAAO,MAAM,CAAC,MAAM,KAAK,QAAQ,CAAC,EAAE;YAClD,OAAO,MAAM,UAAU,CAAC,aAAa;YACrC,IAAI,MAAM,OAAO,KAAK,OAAO;gBAC3B,MAAM,SAAS,MAAM,QAAQ,CAAC,EAAE;gBAChC,OAAO,OAAO,UAAU,CAAC,aAAa;gBACtC,OAAO,OAAO,UAAU,CAAC,gBAAgB;gBACzC,IAAI,MAAM,aAAa,EAAE;oBACvB,MAAM,UAAU,CAAC,iBAAiB,GAAG;gBACvC;gBACA,IAAI,MAAM,UAAU,EAAE;oBACpB,MAAM,UAAU,CAAC,gBAAgB,GAAG,MAAM,UAAU;gBACtD;gBACA,IAAI,MAAM,aAAa,EAAE;oBACvB,MAAM,UAAU,CAAC,YAAY,GAAG;gBAClC;gBACA,IAAI,CAAC,iBAAiB;oBACpB,MAAM,UAAU,CAAC,uBAAuB,GAAG;gBAC7C;gBACA,OAAO,6JAAA,CAAA,OAAI;YACb;YACA,OAAO,KAAK,QAAQ,CAAC,EAAE,CAAC,UAAU,CAAC,SAAS;QAC9C;IAEJ;AACF","ignoreList":[0]}},
    {"offset": {"line": 27849, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 27855, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/nextra/dist/server/rehype-plugins/rehype-better-react-mathjax.js"],"sourcesContent":["import { valueToEstree } from \"estree-util-value-to-estree\";\nimport { visit } from \"unist-util-visit\";\nconst MATHJAX_IMPORTS = {\n  type: \"mdxjsEsm\",\n  data: {\n    estree: {\n      body: [\n        {\n          type: \"ImportDeclaration\",\n          source: { type: \"Literal\", value: \"nextra/components\" },\n          specifiers: [\"MathJax\", \"MathJaxContext\"].map((name) => ({\n            type: \"ImportSpecifier\",\n            imported: { type: \"Identifier\", name },\n            local: { type: \"Identifier\", name }\n          }))\n        }\n      ]\n    }\n  }\n};\nfunction wrapInMathJaxContext(children, { config, src }) {\n  const attributes = [];\n  if (src) {\n    attributes.push({ type: \"mdxJsxAttribute\", name: \"src\", value: src });\n  }\n  if (config && Object.keys(config).length) {\n    attributes.push({\n      type: \"mdxJsxAttribute\",\n      name: \"config\",\n      value: {\n        type: \"mdxJsxAttributeValueExpression\",\n        value: \"\",\n        data: {\n          estree: {\n            type: \"Program\",\n            sourceType: \"module\",\n            body: [\n              { type: \"ExpressionStatement\", expression: valueToEstree(config) }\n            ]\n          }\n        }\n      }\n    });\n  }\n  return {\n    type: \"mdxJsxFlowElement\",\n    name: \"MathJaxContext\",\n    attributes,\n    children\n  };\n}\nfunction wrapInBraces(source, mathInline, options) {\n  const { inlineMath, displayMath } = options.config?.tex || {};\n  const inlineBraces = inlineMath?.[0] || [String.raw`\\(`, String.raw`\\)`];\n  const displayBraces = displayMath?.[0] || [String.raw`\\[`, String.raw`\\]`];\n  const [before, after] = mathInline ? inlineBraces : displayBraces;\n  return `${before}${source}${after}`;\n}\nconst rehypeBetterReactMathjax = (options = {}, isRemoteContent) => (ast) => {\n  let hasMathJax = false;\n  visit(ast, { tagName: \"code\" }, (node, _index, parent) => {\n    const classes = Array.isArray(node.properties.className) ? node.properties.className : [];\n    const hasMathLanguage = classes.includes(\"language-math\");\n    if (!hasMathLanguage) return;\n    const isInlineMath = classes.includes(\"math-inline\");\n    const [{ value }] = node.children;\n    const bracketedValue = wrapInBraces(value, isInlineMath, options);\n    const mathJaxNode = {\n      type: \"element\",\n      tagName: \"MathJax\",\n      children: [{ type: \"text\", value: bracketedValue }],\n      properties: isInlineMath ? { inline: true } : {}\n    };\n    Object.assign(isInlineMath ? node : parent, mathJaxNode);\n    hasMathJax = true;\n  });\n  if (!hasMathJax) return;\n  const mdxjsEsmNodes = [];\n  const rest = [];\n  for (const child of ast.children) {\n    if (child.type === \"mdxjsEsm\") {\n      mdxjsEsmNodes.push(child);\n    } else {\n      rest.push(child);\n    }\n  }\n  ast.children = [\n    ...mdxjsEsmNodes,\n    ...isRemoteContent ? [] : [MATHJAX_IMPORTS],\n    // Wrap everything in a `<MathJaxContext>` component.\n    wrapInMathJaxContext(rest, options)\n  ];\n};\nexport {\n  rehypeBetterReactMathjax\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 27990, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 27996, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/nextra/dist/server/rehype-plugins/rehype-twoslash-popup.js"],"sourcesContent":["import { EXIT, visit } from \"unist-util-visit\";\nconst TWOSLASH_POPUP_IMPORT_AST = {\n  type: \"mdxjsEsm\",\n  data: {\n    estree: {\n      body: [\n        {\n          type: \"ImportDeclaration\",\n          source: { type: \"Literal\", value: \"nextra/components\" },\n          specifiers: [\n            {\n              type: \"ImportSpecifier\",\n              imported: { type: \"Identifier\", name: \"Popup\" },\n              local: { type: \"Identifier\", name: \"Popup\" }\n            }\n          ]\n        }\n      ]\n    }\n  }\n};\nconst transformer = (ast) => {\n  visit(\n    ast,\n    [\n      { tagName: \"popup\" },\n      { tagName: \"popupbutton\" },\n      { tagName: \"popuppanel\" }\n    ],\n    (node) => {\n      const n = node;\n      const tagName = {\n        popup: \"Popup\",\n        popupbutton: \"Popup.Button\",\n        popuppanel: \"Popup.Panel\"\n      }[n.tagName];\n      n.tagName = tagName;\n    }\n  );\n  visit(ast, { tagName: \"code\" }, (node) => {\n    if (node.data?.meta === \"twoslash\") {\n      ast.children.unshift(TWOSLASH_POPUP_IMPORT_AST);\n      return EXIT;\n    }\n  });\n};\nconst rehypeTwoslashPopup = () => transformer;\nexport {\n  rehypeTwoslashPopup\n};\n"],"names":[],"mappings":";;;AAAA;AAAA;;AACA,MAAM,4BAA4B;IAChC,MAAM;IACN,MAAM;QACJ,QAAQ;YACN,MAAM;gBACJ;oBACE,MAAM;oBACN,QAAQ;wBAAE,MAAM;wBAAW,OAAO;oBAAoB;oBACtD,YAAY;wBACV;4BACE,MAAM;4BACN,UAAU;gCAAE,MAAM;gCAAc,MAAM;4BAAQ;4BAC9C,OAAO;gCAAE,MAAM;gCAAc,MAAM;4BAAQ;wBAC7C;qBACD;gBACH;aACD;QACH;IACF;AACF;AACA,MAAM,cAAc,CAAC;IACnB,CAAA,GAAA,kKAAA,CAAA,QAAK,AAAD,EACF,KACA;QACE;YAAE,SAAS;QAAQ;QACnB;YAAE,SAAS;QAAc;QACzB;YAAE,SAAS;QAAa;KACzB,EACD,CAAC;QACC,MAAM,IAAI;QACV,MAAM,UAAU;YACd,OAAO;YACP,aAAa;YACb,YAAY;QACd,CAAC,CAAC,EAAE,OAAO,CAAC;QACZ,EAAE,OAAO,GAAG;IACd;IAEF,CAAA,GAAA,kKAAA,CAAA,QAAK,AAAD,EAAE,KAAK;QAAE,SAAS;IAAO,GAAG,CAAC;QAC/B,IAAI,KAAK,IAAI,EAAE,SAAS,YAAY;YAClC,IAAI,QAAQ,CAAC,OAAO,CAAC;YACrB,OAAO,6JAAA,CAAA,OAAI;QACb;IACF;AACF;AACA,MAAM,sBAAsB,IAAM","ignoreList":[0]}},
    {"offset": {"line": 28062, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 28068, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/nextra/dist/server/rehype-plugins/rehype-extract-toc-content.js"],"sourcesContent":["import { toEstree } from \"hast-util-to-estree\";\nimport { SKIP, visit } from \"unist-util-visit\";\nimport { createAstExportConst, createAstObject } from \"../utils.js\";\nconst TOC_HEADING_RE = /^h[2-6]$/;\nconst transformer = (ast, file) => {\n  const TocMap = {};\n  visit(ast, \"element\", (node, _index, parent) => {\n    if (!TOC_HEADING_RE.test(node.tagName)) return;\n    if (parent && \"properties\" in parent && parent.properties.dataFootnotes) {\n      return SKIP;\n    }\n    const { id } = node.properties;\n    TocMap[id] = node;\n  });\n  const hasPartialMDX = file.data.toc.some(\n    (name) => typeof name === \"string\"\n  );\n  const elements = file.data.toc.map((name, index) => {\n    if (typeof name === \"string\") {\n      return {\n        type: \"SpreadElement\",\n        argument: { type: \"Identifier\", name }\n      };\n    }\n    const node = TocMap[name.id];\n    const isTextOnly = node.children.every((child) => child.type === \"text\");\n    const result = isTextOnly ? node.children.map((n) => n.value).join(\"\") : (\n      // @ts-expect-error -- fixme\n      Object.assign(toEstree(node).body[0].expression, {\n        type: \"JSXFragment\",\n        openingFragment: { type: \"JSXOpeningFragment\" },\n        closingFragment: { type: \"JSXClosingFragment\" }\n      })\n    );\n    if (!hasPartialMDX) {\n      Object.assign(node, {\n        type: \"mdxJsxFlowElement\",\n        name: node.tagName,\n        attributes: [\n          {\n            type: \"mdxJsxAttribute\",\n            name: \"id\",\n            value: createComputedKey(\n              \"mdxJsxAttributeValueExpression\",\n              index,\n              \"id\"\n            )\n          }\n        ],\n        children: [createComputedKey(\"mdxFlowExpression\", index, \"value\")]\n      });\n    }\n    return createAstObject({\n      value: result,\n      id: node.properties.id,\n      depth: Number(node.tagName[1])\n    });\n  });\n  ast.children.push({\n    type: \"mdxjsEsm\",\n    data: {\n      estree: {\n        body: [\n          {\n            // TOC links must be inside a function, in our case inside useTOC, so\n            // mdx components will be injected for `<a>` or `<code>` tags inside headings\n            type: \"FunctionDeclaration\",\n            id: { type: \"Identifier\", name: \"useTOC\" },\n            params: [{ type: \"Identifier\", name: \"props\" }],\n            body: {\n              type: \"BlockStatement\",\n              body: [\n                {\n                  type: \"ReturnStatement\",\n                  argument: { type: \"ArrayExpression\", elements }\n                }\n              ]\n            }\n          },\n          createAstExportConst(\"toc\", {\n            type: \"CallExpression\",\n            callee: { type: \"Identifier\", name: \"useTOC\" },\n            // https://github.com/shuding/nextra/issues/3979\n            arguments: [{ type: \"ObjectExpression\", properties: [] }],\n            optional: false\n          })\n        ]\n      }\n    }\n  });\n};\nfunction createComputedKey(type, index, key) {\n  return {\n    type,\n    data: {\n      estree: {\n        body: [\n          {\n            type: \"ExpressionStatement\",\n            expression: {\n              type: \"MemberExpression\",\n              property: { type: \"Identifier\", name: key },\n              object: {\n                type: \"MemberExpression\",\n                object: { type: \"Identifier\", name: \"toc\" },\n                property: { type: \"Literal\", value: index },\n                computed: true\n              }\n            }\n          }\n        ]\n      }\n    }\n  };\n}\nconst rehypeExtractTocContent = () => transformer;\nexport {\n  rehypeExtractTocContent\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 28221, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 28227, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/nextra/dist/server/recma-plugins/recma-rewrite.js"],"sourcesContent":["import { DEFAULT_PROPERTY_PROPS } from \"../constants.js\";\nvar Mdx = /* @__PURE__ */ ((Mdx2) => {\n  Mdx2[\"Wrapper\"] = \"MDXContent\";\n  Mdx2[\"Content\"] = \"_createMdxContent\";\n  return Mdx2;\n})(Mdx || {});\nconst recmaRewrite = ({ isPageImport, isRemoteContent }) => (ast) => {\n  const hasMdxLayout = ast.body.some(\n    (node) => node.type === \"VariableDeclaration\" && node.kind === \"const\" && node.declarations[0].id.type === \"Identifier\" && node.declarations[0].id.name === \"MDXLayout\"\n  );\n  if (isRemoteContent) {\n    if (hasMdxLayout) {\n      return;\n    }\n    ast.body = ast.body.filter(\n      (node) => node.type !== \"FunctionDeclaration\" || node.id.name !== \"MDXContent\" /* Wrapper */\n    );\n    const returnStatement = ast.body.find(\n      (node) => node.type === \"ReturnStatement\"\n    );\n    const { properties } = returnStatement.argument;\n    for (const node of properties) {\n      if (node.type === \"Property\" && node.key.type === \"Identifier\" && node.key.name === \"default\" && node.value.type === \"Identifier\" && node.value.name === \"MDXContent\" /* Wrapper */) {\n        node.value.name = \"_createMdxContent\" /* Content */;\n        break;\n      }\n    }\n    return;\n  }\n  const defaultExport = ast.body.find(\n    (node) => node.type === \"ExportDefaultDeclaration\"\n  );\n  if (hasMdxLayout) {\n    Object.assign(defaultExport, defaultExport.declaration);\n    ast.body.unshift(HOC_IMPORT_AST);\n    ast.body.push({\n      type: \"ExportDefaultDeclaration\",\n      declaration: createHocCallAst(\"MDXContent\" /* Wrapper */)\n    });\n    return;\n  }\n  if (isPageImport) {\n    ast.body.unshift(HOC_IMPORT_AST);\n    defaultExport.declaration = createHocCallAst(\"_createMdxContent\" /* Content */);\n    return;\n  }\n  defaultExport.declaration = {\n    type: \"Identifier\",\n    name: \"_createMdxContent\" /* Content */\n  };\n};\nconst HOC_IMPORT_AST = {\n  type: \"ImportDeclaration\",\n  source: { type: \"Literal\", value: \"nextra/setup-page\" },\n  specifiers: [\n    {\n      type: \"ImportSpecifier\",\n      imported: { type: \"Identifier\", name: \"HOC_MDXWrapper\" },\n      local: { type: \"Identifier\", name: \"HOC_MDXWrapper\" }\n    }\n  ]\n};\nfunction createHocCallAst(componentName) {\n  return {\n    type: \"CallExpression\",\n    callee: { type: \"Identifier\", name: \"HOC_MDXWrapper\" },\n    optional: false,\n    arguments: [\n      { type: \"Identifier\", name: componentName },\n      {\n        type: \"ObjectExpression\",\n        properties: [\n          {\n            ...DEFAULT_PROPERTY_PROPS,\n            shorthand: true,\n            key: { type: \"Identifier\", name: \"metadata\" },\n            value: { type: \"Identifier\", name: \"metadata\" }\n          },\n          {\n            ...DEFAULT_PROPERTY_PROPS,\n            shorthand: true,\n            key: { type: \"Identifier\", name: \"toc\" },\n            value: { type: \"Identifier\", name: \"toc\" }\n          }\n        ]\n      }\n    ]\n  };\n}\nexport {\n  recmaRewrite\n};\n"],"names":[],"mappings":";;;AAAA;;AACA,IAAI,MAAM,aAAa,GAAG,CAAC,CAAC;IAC1B,IAAI,CAAC,UAAU,GAAG;IAClB,IAAI,CAAC,UAAU,GAAG;IAClB,OAAO;AACT,CAAC,EAAE,OAAO,CAAC;AACX,MAAM,eAAe,CAAC,EAAE,YAAY,EAAE,eAAe,EAAE,GAAK,CAAC;QAC3D,MAAM,eAAe,IAAI,IAAI,CAAC,IAAI,CAChC,CAAC,OAAS,KAAK,IAAI,KAAK,yBAAyB,KAAK,IAAI,KAAK,WAAW,KAAK,YAAY,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,KAAK,gBAAgB,KAAK,YAAY,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,KAAK;QAE9J,IAAI,iBAAiB;YACnB,IAAI,cAAc;gBAChB;YACF;YACA,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,MAAM,CACxB,CAAC,OAAS,KAAK,IAAI,KAAK,yBAAyB,KAAK,EAAE,CAAC,IAAI,KAAK,aAAa,WAAW;YAE5F,MAAM,kBAAkB,IAAI,IAAI,CAAC,IAAI,CACnC,CAAC,OAAS,KAAK,IAAI,KAAK;YAE1B,MAAM,EAAE,UAAU,EAAE,GAAG,gBAAgB,QAAQ;YAC/C,KAAK,MAAM,QAAQ,WAAY;gBAC7B,IAAI,KAAK,IAAI,KAAK,cAAc,KAAK,GAAG,CAAC,IAAI,KAAK,gBAAgB,KAAK,GAAG,CAAC,IAAI,KAAK,aAAa,KAAK,KAAK,CAAC,IAAI,KAAK,gBAAgB,KAAK,KAAK,CAAC,IAAI,KAAK,aAAa,WAAW,KAAI;oBACnL,KAAK,KAAK,CAAC,IAAI,GAAG,oBAAoB,WAAW;oBACjD;gBACF;YACF;YACA;QACF;QACA,MAAM,gBAAgB,IAAI,IAAI,CAAC,IAAI,CACjC,CAAC,OAAS,KAAK,IAAI,KAAK;QAE1B,IAAI,cAAc;YAChB,OAAO,MAAM,CAAC,eAAe,cAAc,WAAW;YACtD,IAAI,IAAI,CAAC,OAAO,CAAC;YACjB,IAAI,IAAI,CAAC,IAAI,CAAC;gBACZ,MAAM;gBACN,aAAa,iBAAiB,aAAa,WAAW;YACxD;YACA;QACF;QACA,IAAI,cAAc;YAChB,IAAI,IAAI,CAAC,OAAO,CAAC;YACjB,cAAc,WAAW,GAAG,iBAAiB,oBAAoB,WAAW;YAC5E;QACF;QACA,cAAc,WAAW,GAAG;YAC1B,MAAM;YACN,MAAM,oBAAoB,WAAW;QACvC;IACF;AACA,MAAM,iBAAiB;IACrB,MAAM;IACN,QAAQ;QAAE,MAAM;QAAW,OAAO;IAAoB;IACtD,YAAY;QACV;YACE,MAAM;YACN,UAAU;gBAAE,MAAM;gBAAc,MAAM;YAAiB;YACvD,OAAO;gBAAE,MAAM;gBAAc,MAAM;YAAiB;QACtD;KACD;AACH;AACA,SAAS,iBAAiB,aAAa;IACrC,OAAO;QACL,MAAM;QACN,QAAQ;YAAE,MAAM;YAAc,MAAM;QAAiB;QACrD,UAAU;QACV,WAAW;YACT;gBAAE,MAAM;gBAAc,MAAM;YAAc;YAC1C;gBACE,MAAM;gBACN,YAAY;oBACV;wBACE,GAAG,iJAAA,CAAA,yBAAsB;wBACzB,WAAW;wBACX,KAAK;4BAAE,MAAM;4BAAc,MAAM;wBAAW;wBAC5C,OAAO;4BAAE,MAAM;4BAAc,MAAM;wBAAW;oBAChD;oBACA;wBACE,GAAG,iJAAA,CAAA,yBAAsB;wBACzB,WAAW;wBACX,KAAK;4BAAE,MAAM;4BAAc,MAAM;wBAAM;wBACvC,OAAO;4BAAE,MAAM;4BAAc,MAAM;wBAAM;oBAC3C;iBACD;YACH;SACD;IACH;AACF","ignoreList":[0]}},
    {"offset": {"line": 28340, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 28346, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/nextra/dist/server/compile.js"],"sourcesContent":["import { createProcessor } from \"@mdx-js/mdx\";\nimport { remarkMermaid } from \"@theguild/remark-mermaid\";\nimport { remarkNpm2Yarn } from \"@theguild/remark-npm2yarn\";\nimport rehypeKatex from \"rehype-katex\";\nimport rehypePrettyCode from \"rehype-pretty-code\";\nimport rehypeRaw from \"rehype-raw\";\nimport remarkFrontmatter from \"remark-frontmatter\";\nimport remarkGfm from \"remark-gfm\";\nimport remarkMath from \"remark-math\";\nimport remarkReadingTime from \"remark-reading-time\";\nimport remarkSmartypants from \"remark-smartypants\";\nimport { MARKDOWN_URL_EXTENSION_RE } from \"./constants.js\";\nimport { recmaRewrite } from \"./recma-plugins/index.js\";\nimport {\n  DEFAULT_REHYPE_PRETTY_CODE_OPTIONS,\n  rehypeAttachCodeMeta,\n  rehypeBetterReactMathjax,\n  rehypeExtractTocContent,\n  rehypeParseCodeMeta,\n  rehypeTwoslashPopup\n} from \"./rehype-plugins/index.js\";\nimport {\n  remarkAssignFrontMatter,\n  remarkCustomHeadingId,\n  remarkHeadings,\n  remarkLinkRewrite,\n  remarkMdxDisableExplicitJsx,\n  remarkMdxFrontMatter,\n  remarkMdxTitle,\n  remarkRemoveImports,\n  remarkStaticImage\n} from \"./remark-plugins/index.js\";\nconst cachedCompilerForFormat = /* @__PURE__ */ Object.create(null);\nasync function compileMdx(source, {\n  staticImage,\n  search,\n  readingTime,\n  latex,\n  codeHighlight,\n  defaultShowCopyCode,\n  mdxOptions = {},\n  filePath = \"\",\n  useCachedCompiler,\n  isPageImport = false,\n  whiteListTagsStyling = [],\n  lastCommitTime\n} = {}) {\n  const {\n    jsx = false,\n    format: _format = \"mdx\",\n    outputFormat = \"function-body\",\n    remarkPlugins,\n    rehypePlugins,\n    recmaPlugins,\n    rehypePrettyCodeOptions,\n    providerImportSource = \"next-mdx-import-source-file\"\n  } = mdxOptions;\n  const format = _format === \"detect\" ? filePath.endsWith(\".mdx\") ? \"mdx\" : \"md\" : _format;\n  const fileCompatible = filePath ? { value: source, path: filePath } : source;\n  const isRemoteContent = outputFormat === \"function-body\";\n  const compiler = !useCachedCompiler || isRemoteContent ? createCompiler() : cachedCompilerForFormat[`${format}:${isPageImport}`] ||= createCompiler();\n  const processor = compiler();\n  try {\n    const vFile = await processor.process(fileCompatible);\n    const rawJs = vFile.value.replaceAll(\"__esModule\", String.raw`_\\_esModule`);\n    return rawJs;\n  } catch (error) {\n    console.error(`[nextra] Error compiling ${filePath}.`);\n    throw error;\n  }\n  function createCompiler() {\n    return createProcessor({\n      jsx,\n      format,\n      outputFormat,\n      providerImportSource,\n      // Fix TypeError: _jsx is not a function for remote content\n      development: process.env.NODE_ENV === \"development\",\n      remarkPlugins: [\n        ...remarkPlugins || [],\n        remarkMermaid,\n        // should be before remarkRemoveImports because contains `import { Mermaid } from ...`\n        [\n          remarkNpm2Yarn,\n          // should be before remarkRemoveImports because contains `import { Tabs as $Tabs, Tab as $Tab } from ...`\n          {\n            packageName: \"nextra/components\",\n            tabNamesProp: \"items\",\n            storageKey: \"selectedPackageManager\"\n          }\n        ],\n        isRemoteContent && remarkRemoveImports,\n        remarkFrontmatter,\n        // parse and attach yaml node\n        remarkMdxFrontMatter,\n        readingTime && remarkReadingTime,\n        // before mdx title\n        remarkCustomHeadingId,\n        remarkMdxTitle,\n        [remarkAssignFrontMatter, { lastCommitTime }],\n        remarkGfm,\n        format !== \"md\" && [\n          remarkMdxDisableExplicitJsx,\n          // Replace the <summary> and <details> with customized components\n          { whiteList: [\"details\", \"summary\", ...whiteListTagsStyling] }\n        ],\n        [remarkHeadings, { isRemoteContent }],\n        staticImage && remarkStaticImage,\n        latex && remarkMath,\n        // Remove the markdown file extension from links\n        [\n          remarkLinkRewrite,\n          {\n            pattern: MARKDOWN_URL_EXTENSION_RE,\n            replace: \"\",\n            excludeExternalLinks: true\n          }\n        ],\n        remarkSmartypants\n      ].filter((v) => !!v),\n      rehypePlugins: [\n        ...rehypePlugins || [],\n        format === \"md\" && [\n          // To render `<details>` and `<summary>` correctly\n          rehypeRaw,\n          // fix Error: Cannot compile `mdxjsEsm` node for npm2yarn and mermaid\n          {\n            passThrough: [\"mdxjsEsm\", \"mdxJsxFlowElement\", \"mdxTextExpression\"]\n          }\n        ],\n        [rehypeParseCodeMeta, { defaultShowCopyCode }],\n        // Should be before `rehypePrettyCode`\n        latex && (typeof latex === \"object\" ? latex.renderer === \"mathjax\" ? [rehypeBetterReactMathjax, latex.options, isRemoteContent] : [rehypeKatex, latex.options] : rehypeKatex),\n        ...codeHighlight === false ? [] : [\n          [\n            rehypePrettyCode,\n            {\n              ...DEFAULT_REHYPE_PRETTY_CODE_OPTIONS,\n              ...rehypePrettyCodeOptions\n            }\n          ],\n          rehypeTwoslashPopup,\n          [rehypeAttachCodeMeta, { search }]\n        ],\n        rehypeExtractTocContent\n      ].filter((v) => !!v),\n      recmaPlugins: [\n        ...recmaPlugins || [],\n        [recmaRewrite, { isPageImport, isRemoteContent }]\n      ]\n    });\n  }\n}\nexport {\n  compileMdx\n};\n"],"names":[],"mappings":";;;AASA;AACA;AAVA;AA6EmB;AA5EnB;AACA;AAmBA;AAfA;AAeA;AAAA;AAAA;AAAA;AAdA;AAcA;AAAA;AAAA;AAbA;AAaA;AAVA;AANA;AAQA;AAVA;AAUA;AATA;AASA;AAAA;AADA;;;;;;;;;;;;;;;;AAoBA,MAAM,0BAA0B,aAAa,GAAG,OAAO,MAAM,CAAC;AAC9D,eAAe,WAAW,MAAM,EAAE,EAChC,WAAW,EACX,MAAM,EACN,WAAW,EACX,KAAK,EACL,aAAa,EACb,mBAAmB,EACnB,aAAa,CAAC,CAAC,EACf,WAAW,EAAE,EACb,iBAAiB,EACjB,eAAe,KAAK,EACpB,uBAAuB,EAAE,EACzB,cAAc,EACf,GAAG,CAAC,CAAC;IACJ,MAAM,EACJ,MAAM,KAAK,EACX,QAAQ,UAAU,KAAK,EACvB,eAAe,eAAe,EAC9B,aAAa,EACb,aAAa,EACb,YAAY,EACZ,uBAAuB,EACvB,uBAAuB,6BAA6B,EACrD,GAAG;IACJ,MAAM,SAAS,YAAY,WAAW,SAAS,QAAQ,CAAC,UAAU,QAAQ,OAAO;IACjF,MAAM,iBAAiB,WAAW;QAAE,OAAO;QAAQ,MAAM;IAAS,IAAI;IACtE,MAAM,kBAAkB,iBAAiB;IACzC,MAAM,WAAW,CAAC,qBAAqB,kBAAkB,mBAAmB,uBAAuB,CAAC,GAAG,OAAO,CAAC,EAAE,cAAc,CAAC,KAAK;IACrI,MAAM,YAAY;IAClB,IAAI;QACF,MAAM,QAAQ,MAAM,UAAU,OAAO,CAAC;QACtC,MAAM,QAAQ,MAAM,KAAK,CAAC,UAAU,CAAC,cAAc,OAAO,GAAG,CAAC,WAAW,CAAC;QAC1E,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,CAAC,yBAAyB,EAAE,SAAS,CAAC,CAAC;QACrD,MAAM;IACR;IACA,SAAS;QACP,OAAO,CAAA,GAAA,6IAAA,CAAA,kBAAe,AAAD,EAAE;YACrB;YACA;YACA;YACA;YACA,2DAA2D;YAC3D,aAAa,oDAAyB;YACtC,eAAe;mBACV,iBAAiB,EAAE;gBACtB,sLAAA,CAAA,gBAAa;gBACb,sFAAsF;gBACtF;oBACE,8JAAA,CAAA,iBAAc;oBACd,yGAAyG;oBACzG;wBACE,aAAa;wBACb,cAAc;wBACd,YAAY;oBACd;iBACD;gBACD,mBAAmB,wLAAA,CAAA,sBAAmB;gBACtC,iJAAA,CAAA,UAAiB;gBACjB,6BAA6B;gBAC7B,yLAAA,CAAA,uBAAoB;gBACpB,eAAe,8IAAA,CAAA,UAAiB;gBAChC,mBAAmB;gBACnB,8LAAA,CAAA,wBAAqB;gBACrB,mLAAA,CAAA,iBAAc;gBACd;oBAAC,4LAAA,CAAA,0BAAuB;oBAAE;wBAAE;oBAAe;iBAAE;gBAC7C,yIAAA,CAAA,UAAS;gBACT,WAAW,QAAQ;oBACjB,wMAAA,CAAA,8BAA2B;oBAC3B,iEAAiE;oBACjE;wBAAE,WAAW;4BAAC;4BAAW;+BAAc;yBAAqB;oBAAC;iBAC9D;gBACD;oBAAC,+KAAA,CAAA,iBAAc;oBAAE;wBAAE;oBAAgB;iBAAE;gBACrC,eAAe,sLAAA,CAAA,oBAAiB;gBAChC,SAAS,0IAAA,CAAA,UAAU;gBACnB,gDAAgD;gBAChD;oBACE,sLAAA,CAAA,oBAAiB;oBACjB;wBACE,SAAS,iJAAA,CAAA,4BAAyB;wBAClC,SAAS;wBACT,sBAAsB;oBACxB;iBACD;gBACD,mJAAA,CAAA,UAAiB;aAClB,CAAC,MAAM,CAAC,CAAC,IAAM,CAAC,CAAC;YAClB,eAAe;mBACV,iBAAiB,EAAE;gBACtB,WAAW,QAAQ;oBACjB,kDAAkD;oBAClD,yIAAA,CAAA,UAAS;oBACT,qEAAqE;oBACrE;wBACE,aAAa;4BAAC;4BAAY;4BAAqB;yBAAoB;oBACrE;iBACD;gBACD;oBAAC,mKAAA,CAAA,sBAAmB;oBAAE;wBAAE;oBAAoB;iBAAE;gBAC9C,sCAAsC;gBACtC,SAAS,CAAC,OAAO,UAAU,WAAW,MAAM,QAAQ,KAAK,YAAY;oBAAC,iMAAA,CAAA,2BAAwB;oBAAE,MAAM,OAAO;oBAAE;iBAAgB,GAAG;oBAAC,2IAAA,CAAA,UAAW;oBAAE,MAAM,OAAO;iBAAC,GAAG,2IAAA,CAAA,UAAW;mBACzK,kBAAkB,QAAQ,EAAE,GAAG;oBAChC;wBACE,qJAAA,CAAA,UAAgB;wBAChB;4BACE,GAAG,mKAAA,CAAA,qCAAkC;4BACrC,GAAG,uBAAuB;wBAC5B;qBACD;oBACD,wLAAA,CAAA,sBAAmB;oBACnB;wBAAC,mKAAA,CAAA,uBAAoB;wBAAE;4BAAE;wBAAO;qBAAE;iBACnC;gBACD,gMAAA,CAAA,0BAAuB;aACxB,CAAC,MAAM,CAAC,CAAC,IAAM,CAAC,CAAC;YAClB,cAAc;mBACT,gBAAgB,EAAE;gBACrB;oBAAC,4KAAA,CAAA,eAAY;oBAAE;wBAAE;wBAAc;oBAAgB;iBAAE;aAClD;QACH;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 28537, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 28543, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/%40theguild/remark-npm2yarn/dist/constants.js"],"sourcesContent":["const PACKAGE_MANAGERS = [\"npm\", \"pnpm\", \"yarn\", \"bun\"];\nconst KEY_VALUE_REGEX = /\\w+=\"(.*?)\"/g;\nconst CHARS_REGEX = /\\/(.*?)\\/((#[a-z])|([\\d-,])+)?/g;\nconst LINES_REGEX = /\\{(.*?)}/g;\nconst META_PLACEHOLDER = \"npm2yarn\";\nfunction cleanMetadataParam(metadata, param) {\n  const regex = new RegExp(\n    `${KEY_VALUE_REGEX.source}|${CHARS_REGEX.source}|${LINES_REGEX.source}|${param}`,\n    \"g\"\n  );\n  return metadata.replace(regex, (matched) => matched === param ? \"\" : matched);\n}\nexport {\n  CHARS_REGEX,\n  KEY_VALUE_REGEX,\n  LINES_REGEX,\n  META_PLACEHOLDER,\n  PACKAGE_MANAGERS,\n  cleanMetadataParam\n};\n"],"names":[],"mappings":";;;;;;;;AAAA,MAAM,mBAAmB;IAAC;IAAO;IAAQ;IAAQ;CAAM;AACvD,MAAM,kBAAkB;AACxB,MAAM,cAAc;AACpB,MAAM,cAAc;AACpB,MAAM,mBAAmB;AACzB,SAAS,mBAAmB,QAAQ,EAAE,KAAK;IACzC,MAAM,QAAQ,IAAI,OAChB,GAAG,gBAAgB,MAAM,CAAC,CAAC,EAAE,YAAY,MAAM,CAAC,CAAC,EAAE,YAAY,MAAM,CAAC,CAAC,EAAE,OAAO,EAChF;IAEF,OAAO,SAAS,OAAO,CAAC,OAAO,CAAC,UAAY,YAAY,QAAQ,KAAK;AACvE","ignoreList":[0]}},
    {"offset": {"line": 28566, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 28572, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/%40theguild/remark-npm2yarn/dist/plugin.js"],"sourcesContent":["import convert from \"npm-to-yarn\";\nimport { visit } from \"unist-util-visit\";\nimport {\n  cleanMetadataParam,\n  META_PLACEHOLDER,\n  PACKAGE_MANAGERS\n} from \"./constants.js\";\nconst TABS_NAME = \"$Tabs\";\nfunction getTabAST(node, packageManager, newMetadata) {\n  return {\n    type: \"mdxJsxFlowElement\",\n    name: `${TABS_NAME}.Tab`,\n    children: [\n      {\n        type: node.type,\n        lang: node.lang,\n        // Replace `npm2yarn` metadata keyword, so it will be not picked by inserted code-blocks\n        meta: newMetadata,\n        value: convert(node.value, packageManager)\n      }\n    ]\n  };\n}\nconst remarkNpm2Yarn = (opts) => {\n  if (!opts?.packageName) throw new Error(\"remarkNpm2Yarn: `packageName` option is required\");\n  if (!opts?.tabNamesProp) throw new Error(\"remarkNpm2Yarn: `tabNamesProp` option is required\");\n  if (!opts?.storageKey) throw new Error(\"remarkNpm2Yarn: `storageKey` option is required\");\n  const IMPORT_AST = {\n    type: \"mdxjsEsm\",\n    data: {\n      estree: {\n        body: [\n          {\n            type: \"ImportDeclaration\",\n            source: { type: \"Literal\", value: opts.packageName },\n            specifiers: [\n              {\n                type: \"ImportSpecifier\",\n                imported: { type: \"Identifier\", name: \"Tabs\" },\n                local: { type: \"Identifier\", name: TABS_NAME }\n              }\n            ]\n          }\n        ]\n      }\n    }\n  };\n  const TABS_AST = {\n    type: \"mdxJsxFlowElement\",\n    name: TABS_NAME,\n    attributes: [\n      {\n        type: \"mdxJsxAttribute\",\n        name: opts.tabNamesProp,\n        value: {\n          type: \"mdxJsxAttributeValueExpression\",\n          data: {\n            estree: {\n              body: [\n                {\n                  type: \"ExpressionStatement\",\n                  expression: {\n                    type: \"ArrayExpression\",\n                    elements: PACKAGE_MANAGERS.map((value) => ({ type: \"Literal\", value }))\n                  }\n                }\n              ]\n            }\n          }\n        }\n      },\n      {\n        type: \"mdxJsxAttribute\",\n        name: \"storageKey\",\n        value: opts.storageKey\n      }\n    ]\n  };\n  return (ast, _file, done) => {\n    let isImported = false;\n    visit(ast, \"code\", (node, index, parent) => {\n      const newMetadata = node.meta ? cleanMetadataParam(node.meta, META_PLACEHOLDER) : \"\";\n      if (!node.meta || node.meta === newMetadata) return;\n      if (!node.value.startsWith(\"npm\") && !node.value.startsWith(\"npx\")) {\n        throw new Error(\n          `\\`npm-to-yarn\\` package can convert only npm or npx commands to all package managers. Found: ${node.value}`\n        );\n      }\n      parent.children[index] = {\n        ...TABS_AST,\n        children: PACKAGE_MANAGERS.map((value) => getTabAST(node, value, newMetadata))\n      };\n      if (isImported) return;\n      ast.children.unshift(IMPORT_AST);\n      isImported = true;\n    });\n    done();\n  };\n};\nexport {\n  remarkNpm2Yarn\n};\n"],"names":[],"mappings":";;;AAEA;AADA;AADA;;;;AAOA,MAAM,YAAY;AAClB,SAAS,UAAU,IAAI,EAAE,cAAc,EAAE,WAAW;IAClD,OAAO;QACL,MAAM;QACN,MAAM,GAAG,UAAU,IAAI,CAAC;QACxB,UAAU;YACR;gBACE,MAAM,KAAK,IAAI;gBACf,MAAM,KAAK,IAAI;gBACf,wFAAwF;gBACxF,MAAM;gBACN,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,KAAK,KAAK,EAAE;YAC7B;SACD;IACH;AACF;AACA,MAAM,iBAAiB,CAAC;IACtB,IAAI,CAAC,MAAM,aAAa,MAAM,IAAI,MAAM;IACxC,IAAI,CAAC,MAAM,cAAc,MAAM,IAAI,MAAM;IACzC,IAAI,CAAC,MAAM,YAAY,MAAM,IAAI,MAAM;IACvC,MAAM,aAAa;QACjB,MAAM;QACN,MAAM;YACJ,QAAQ;gBACN,MAAM;oBACJ;wBACE,MAAM;wBACN,QAAQ;4BAAE,MAAM;4BAAW,OAAO,KAAK,WAAW;wBAAC;wBACnD,YAAY;4BACV;gCACE,MAAM;gCACN,UAAU;oCAAE,MAAM;oCAAc,MAAM;gCAAO;gCAC7C,OAAO;oCAAE,MAAM;oCAAc,MAAM;gCAAU;4BAC/C;yBACD;oBACH;iBACD;YACH;QACF;IACF;IACA,MAAM,WAAW;QACf,MAAM;QACN,MAAM;QACN,YAAY;YACV;gBACE,MAAM;gBACN,MAAM,KAAK,YAAY;gBACvB,OAAO;oBACL,MAAM;oBACN,MAAM;wBACJ,QAAQ;4BACN,MAAM;gCACJ;oCACE,MAAM;oCACN,YAAY;wCACV,MAAM;wCACN,UAAU,iKAAA,CAAA,mBAAgB,CAAC,GAAG,CAAC,CAAC,QAAU,CAAC;gDAAE,MAAM;gDAAW;4CAAM,CAAC;oCACvE;gCACF;6BACD;wBACH;oBACF;gBACF;YACF;YACA;gBACE,MAAM;gBACN,MAAM;gBACN,OAAO,KAAK,UAAU;YACxB;SACD;IACH;IACA,OAAO,CAAC,KAAK,OAAO;QAClB,IAAI,aAAa;QACjB,CAAA,GAAA,kKAAA,CAAA,QAAK,AAAD,EAAE,KAAK,QAAQ,CAAC,MAAM,OAAO;YAC/B,MAAM,cAAc,KAAK,IAAI,GAAG,CAAA,GAAA,iKAAA,CAAA,qBAAkB,AAAD,EAAE,KAAK,IAAI,EAAE,iKAAA,CAAA,mBAAgB,IAAI;YAClF,IAAI,CAAC,KAAK,IAAI,IAAI,KAAK,IAAI,KAAK,aAAa;YAC7C,IAAI,CAAC,KAAK,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK,KAAK,CAAC,UAAU,CAAC,QAAQ;gBAClE,MAAM,IAAI,MACR,CAAC,6FAA6F,EAAE,KAAK,KAAK,EAAE;YAEhH;YACA,OAAO,QAAQ,CAAC,MAAM,GAAG;gBACvB,GAAG,QAAQ;gBACX,UAAU,iKAAA,CAAA,mBAAgB,CAAC,GAAG,CAAC,CAAC,QAAU,UAAU,MAAM,OAAO;YACnE;YACA,IAAI,YAAY;YAChB,IAAI,QAAQ,CAAC,OAAO,CAAC;YACrB,aAAa;QACf;QACA;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 28684, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 28690, "column": 0}, "map": {"version":3,"file":"npm-to-yarn.mjs","sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/npm-to-yarn/src/utils.ts","file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/npm-to-yarn/src/command.ts","file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/npm-to-yarn/src/yarnToNpm.ts","file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/npm-to-yarn/src/npmToYarn.ts","file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/npm-to-yarn/src/npmToPnpm.ts","file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/npm-to-yarn/src/npmToBun.ts","file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/npm-to-yarn/src/index.ts"],"sourcesContent":["export const unchangedCLICommands = [\n  'test',\n  'login',\n  'logout',\n  'link',\n  'unlink',\n  'publish',\n  'cache',\n  'start',\n  'stop',\n  'test'\n]\n\nexport const yarnCLICommands = [\n  'init',\n  'run',\n  'add',\n  'audit',\n  'autoclean',\n  'bin',\n  'check',\n  'config',\n  'create',\n  'dedupe',\n  'generate-lock-entry',\n  'global',\n  'help',\n  'import',\n  'info',\n  'install',\n  'licenses',\n  'list',\n  'lockfile',\n  'outdated',\n  'owner',\n  'pack',\n  'policies',\n  'prune',\n  'remove',\n  'self-update',\n  'tag',\n  'team',\n  'upgrade',\n  'upgrade-interactive',\n  'version',\n  'versions',\n  'why',\n  'workspace',\n  'workspaces'\n]\n\nexport const npmCLICommands = [\n  'init',\n  'run',\n  'access',\n  'adduser',\n  'audit',\n  'bin',\n  'bugs',\n  'build',\n  'bundle',\n  'ci',\n  'completion',\n  'config',\n  'dedupe',\n  'deprecate',\n  'dist-tag',\n  'docs',\n  'doctor',\n  'edit',\n  'explore',\n  'exec',\n  'fund',\n  'help-search',\n  'help',\n  'hook',\n  'install-ci-test',\n  'install-test',\n  'install',\n  'ls',\n  'list',\n  'npm',\n  'org',\n  'outdated',\n  'owner',\n  'pack',\n  'ping',\n  'prefix',\n  'profile',\n  'prune',\n  'rebuild',\n  'repo',\n  'restart',\n  'root',\n  'run-script',\n  'search',\n  'shrinkwrap',\n  'star',\n  'stars',\n  'start',\n  'stop',\n  'team',\n  'token',\n  'uninstall',\n  'unpublish',\n  'update',\n  'version',\n  'view',\n  'whoami'\n]\n\nexport const executorCommands = {\n  npm: 'npx',\n  yarn: 'yarn dlx',\n  pnpm: 'pnpm dlx',\n  bun: 'bun x'\n}\n","export function parse (command: string) {\n  const args: string[] = []\n  let lastQuote: string | false = false\n  let escaped = false\n  let part = ''\n  for (let i = 0; i < command.length; ++i) {\n    const char = command.charAt(i)\n    if (char === '\\\\') {\n      part += char\n      escaped = true\n    } else {\n      if (char === ' ' && !lastQuote) {\n        args.push(part)\n        part = ''\n      } else if (!escaped && (char === '\"' || char === \"'\")) {\n        part += char\n        if (char === lastQuote) {\n          lastQuote = false\n        } else if (!lastQuote) {\n          lastQuote = char\n        }\n      } else {\n        part += char\n      }\n      escaped = false\n    }\n  }\n  args.push(part)\n  return args\n}\n","import { unchangedCLICommands, yarnCLICommands } from './utils'\nimport { parse } from './command'\n\nfunction convertAddRemoveArgs (args: string[]) {\n  return args.map(item => {\n    switch (item) {\n      case '--no-lockfile':\n        return '--no-package-lock'\n      case '--production':\n        return '--save-prod'\n      case '--dev':\n        return '--save-dev'\n      case '--optional':\n        return '--save-optional'\n      case '--exact':\n        return '--save-exact'\n      default:\n        return item\n    }\n  })\n}\n\nconst yarnToNpmTable = {\n  add (args: string[]) {\n    if (args.length === 2 && args[1] === '--force') {\n      return ['rebuild']\n    }\n    args[0] = 'install'\n    return convertAddRemoveArgs(args)\n  },\n  remove (args: string[]) {\n    args[0] = 'uninstall'\n    return convertAddRemoveArgs(args)\n  },\n  version (args: string[]) {\n    return args.map(item => {\n      switch (item) {\n        case '--major':\n          return 'major'\n        case '--minor':\n          return 'minor'\n        case '--patch':\n          return 'patch'\n        default:\n          return item\n      }\n    })\n  },\n  install: 'install',\n  list (args: string[]) {\n    args[0] = 'ls'\n    const patternIndex = args.findIndex(item => item === '--pattern')\n    if (patternIndex >= 0 && args[patternIndex + 1]) {\n      const packages = args[patternIndex + 1].replace(/[\"']([^\"']+)[\"']/, '$1').split('|')\n      args.splice(patternIndex, 2, packages.join(' '))\n    }\n    return args\n  },\n  init: 'init',\n  create: 'init',\n  outdated: 'outdated',\n  run: 'run',\n  global (args: string[]) {\n    switch (args[1]) {\n      case 'add':\n        args.shift()\n        args = yarnToNpmTable.add(args)\n        args.push('--global')\n        return args\n      case 'remove':\n        args.shift()\n        args = yarnToNpmTable.remove(args)\n        args.push('--global')\n        return args\n      case 'list':\n        args.shift()\n        args = yarnToNpmTable.list(args)\n        args.push('--global')\n        return args\n      // case 'bin':\n      // case 'upgrade':\n      default:\n        args.push(\"\\n# couldn't auto-convert command\")\n        return args\n    }\n  },\n  pack (args: string[]) {\n    return args.map(item => {\n      if (item === '--filename') {\n        return '--pack-destination'\n      }\n      return item\n    })\n  }\n}\n\nexport function yarnToNPM (_m: string, command: string): string {\n  command = (command || '').trim()\n  if (command === '') {\n    return 'npm install'\n  }\n  let args = parse(command)\n  const firstCommand = (/\\w+/.exec(command) || [''])[0]\n\n  if (unchangedCLICommands.includes(args[0])) {\n    return 'npm ' + command\n  } else if (args[0] in yarnToNpmTable) {\n    const converter = yarnToNpmTable[args[0] as keyof typeof yarnToNpmTable]\n\n    if (typeof converter === 'function') {\n      args = converter(args)\n    } else {\n      args[0] = converter\n    }\n\n    return 'npm ' + args.filter(Boolean).join(' ')\n  } else if (!yarnCLICommands.includes(firstCommand)) {\n    // i.e., yarn grunt -> npm run grunt\n    return 'npm run ' + command\n  } else {\n    return 'npm ' + command + \"\\n# couldn't auto-convert command\"\n  }\n}\n","import { unchangedCLICommands, yarnCLICommands } from './utils'\nimport { parse } from './command'\n\nfunction convertInstallArgs (args: string[]) {\n  if (args.includes('--global') || args.includes('-g')) {\n    args.unshift('global')\n  }\n\n  return args.map(item => {\n    switch (item) {\n      case '--save-dev':\n      case '-D':\n        return '--dev'\n      case '--save-prod':\n      case '-P':\n        return '--production'\n      case '--no-package-lock':\n        return '--no-lockfile'\n      case '--save-optional':\n      case '-O':\n        return '--optional'\n      case '--save-exact':\n      case '-E':\n        return '--exact'\n      case '--save':\n      case '-S':\n      case '--global':\n      case '-g':\n        return ''\n      default:\n        return item\n    }\n  })\n}\n\nconst npmToYarnTable = {\n  install (args: string[]) {\n    if (args.length === 1) {\n      return ['install']\n    }\n    args[0] = 'add'\n\n    return convertInstallArgs(args)\n  },\n  i (args: string[]) {\n    return npmToYarnTable.install(args)\n  },\n  uninstall (args: string[]) {\n    args[0] = 'remove'\n\n    return convertInstallArgs(args)\n  },\n  un (args: string[]) {\n    return npmToYarnTable.uninstall(args)\n  },\n  remove (args: string[]) {\n    return npmToYarnTable.uninstall(args)\n  },\n  r (args: string[]) {\n    return npmToYarnTable.uninstall(args)\n  },\n  rm (args: string[]) {\n    return npmToYarnTable.uninstall(args)\n  },\n  version (args: string[]) {\n    return args.map(item => {\n      switch (item) {\n        case 'major':\n          return '--major'\n        case 'minor':\n          return '--minor'\n        case 'patch':\n          return '--patch'\n        default:\n          return item\n      }\n    })\n  },\n  rb (args: string[]) {\n    return npmToYarnTable.rebuild(args)\n  },\n  rebuild (args: string[]) {\n    args[0] = 'add'\n    args.push('--force')\n    return args\n  },\n  run (args: string[]) {\n    if (args[1] && !unchangedCLICommands.includes(args[1]) && !yarnCLICommands.includes(args[1])) {\n      args.splice(0, 1)\n    }\n    return args\n  },\n  exec (args: string[]) {\n    args[0] = 'run'\n    return npmToYarnTable.run(args)\n  },\n  ls (args: string[]) {\n    args[0] = 'list'\n\n    let ended = false\n    const packages = args.filter((item, id) => {\n      if (id > 0 && !ended) {\n        ended = item.startsWith('-')\n        return !ended\n      }\n      return false\n    })\n    if (packages.length > 0) {\n      args.splice(1, packages.length, '--pattern', '\"' + packages.join('|') + '\"')\n    }\n    return args\n  },\n  list (args: string[]) {\n    return npmToYarnTable.ls(args)\n  },\n  init (args: string[]) {\n    if (args[1] && !args[1].startsWith('-')) {\n      args[0] = 'create'\n      const m = args[1].match(/(.+)@latest/)\n      if (m) {\n        args[1] = m[1]\n      }\n    }\n    return args.filter(item => item !== '--scope')\n  },\n  create (args: string[]) {\n    return npmToYarnTable.init(args)\n  },\n  ln: 'link',\n  t: 'test',\n  tst: 'test',\n  outdated: 'outdated',\n  pack (args: string[]) {\n    return args.map(item => {\n      if (item.startsWith('--pack-destination')) {\n        return item.replace(/^--pack-destination[\\s=]/, '--filename ')\n      }\n      return item\n    })\n  }\n}\n\nexport function npmToYarn (_m: string, command: string): string {\n  let args = parse((command || '').trim())\n\n  const index = args.findIndex(a => a === '--')\n  if (index >= 0) {\n    args.splice(index, 1)\n  }\n\n  if (unchangedCLICommands.includes(args[0])) {\n    return 'yarn ' + args.filter(Boolean).join(' ')\n  } else if (args[0] in npmToYarnTable) {\n    const converter = npmToYarnTable[args[0] as keyof typeof npmToYarnTable]\n\n    if (typeof converter === 'function') {\n      args = converter(args)\n    } else {\n      args[0] = converter\n    }\n\n    return 'yarn ' + args.filter(Boolean).join(' ')\n  } else {\n    return 'npm ' + command + \"\\n# couldn't auto-convert command\"\n  }\n}\n","import { parse } from './command'\n\nfunction convertPnpmInstallArgs (args: string[]) {\n  return args.map(item => {\n    switch (item) {\n      case '--save':\n      case '-S':\n        return ''\n      case '--no-package-lock':\n        return '--frozen-lockfile'\n      // case '--save-dev':\n      // case '-D':\n      // case '--save-prod':\n      // case '-P':\n      // case '--save-optional':\n      // case '-O':\n      // case '--save-exact':\n      // case '-E':\n      // case '--global':\n      // case '-g':\n      default:\n        return item\n    }\n  })\n}\n\nfunction convertFilterArg (args: string[]) {\n  if (args.length > 1) {\n    const filter = args.filter((item, index) => index !== 0 && !item.startsWith('-'))\n    if (filter.length > 0) {\n      args = args.filter((item, index) => index === 0 || item.startsWith('-'))\n      args.push('--filter')\n      args.push(filter.join(' '))\n    }\n  }\n\n  return args\n}\n\nconst npmToPnpmTable = {\n  // ------------------------------\n  install (args: string[]) {\n    if (args.length > 1 && args.filter(item => !item.startsWith('-')).length > 1) {\n      args[0] = 'add'\n    }\n    return convertPnpmInstallArgs(args)\n  },\n  i (args: string[]) {\n    return npmToPnpmTable.install(args)\n  },\n  // ------------------------------\n  uninstall (args: string[]) {\n    args[0] = 'remove'\n\n    return convertPnpmInstallArgs(args)\n  },\n  un (args: string[]) {\n    return npmToPnpmTable.uninstall(args)\n  },\n  remove (args: string[]) {\n    return npmToPnpmTable.uninstall(args)\n  },\n  r (args: string[]) {\n    return npmToPnpmTable.uninstall(args)\n  },\n  rm (args: string[]) {\n    return npmToPnpmTable.uninstall(args)\n  },\n  // ------------------------------\n  rb (args: string[]) {\n    return npmToPnpmTable.rebuild(args)\n  },\n  rebuild (args: string[]) {\n    args[0] = 'rebuild'\n    return convertFilterArg(args)\n  },\n  run: 'run',\n  exec: 'exec',\n  ls (args: string[]) {\n    return npmToPnpmTable.list(args)\n  },\n  list (args: string[]) {\n    return args.map(item => {\n      if (item.startsWith('--depth=')) {\n        return `--depth ${item.split('=')[1]}`\n      }\n      switch (item) {\n        case '--production':\n          return '--prod'\n        case '--development':\n          return '--dev'\n        default:\n          return item\n      }\n    })\n  },\n  init (args: string[]) {\n    if (args[1] && !args[1].startsWith('-')) {\n      args[0] = 'create'\n      const m = args[1].match(/(.+)@latest/)\n      if (m) {\n        args[1] = m[1]\n      }\n    }\n    return args.filter(item => item !== '--scope')\n  },\n  create (args: string[]) {\n    return npmToPnpmTable.init(args)\n  },\n  ln: 'link',\n  t: 'test',\n  test: 'test',\n  tst: 'test',\n  start: 'start',\n  link: 'link',\n  unlink (args: string[]) {\n    return convertFilterArg(args)\n  },\n  outdated: 'outdated',\n  pack: (args: string[]) => {\n    return args.map(item => {\n      if (item.startsWith('--pack-destination')) {\n        return item.replace(/^--pack-destination[\\s=]/, '--pack-destination ')\n      }\n      return item\n    })\n  }\n}\n\nexport function npmToPnpm (_m: string, command: string): string {\n  let args = parse((command || '').trim())\n\n  const index = args.findIndex(a => a === '--')\n  if (index >= 0) {\n    args.splice(index, 1)\n  }\n\n  if (args[0] in npmToPnpmTable) {\n    const converter = npmToPnpmTable[args[0] as keyof typeof npmToPnpmTable]\n\n    if (typeof converter === 'function') {\n      args = converter(args)\n    } else {\n      args[0] = converter\n    }\n\n    return 'pnpm ' + args.filter(Boolean).join(' ')\n  } else {\n    return 'npm ' + command + \"\\n# couldn't auto-convert command\"\n  }\n}\n","import { parse } from './command'\n\nfunction convertInstallArgs (args: string[]) {\n  // bun uses -g and --global flags\n  // bun mostly conforms to Yarn's CLI\n  return args.map(item => {\n    switch (item) {\n      case '--save-dev':\n      case '--development':\n      case '-D':\n        return '--dev'\n      case '--save-prod':\n      case '-P':\n        return '--production'\n      case '--no-package-lock':\n        return '--no-save'\n      case '--save-optional':\n      case '-O':\n        return '--optional'\n      case '--save-exact':\n      case '-E':\n        return '--exact'\n      case '--save':\n      case '-S':\n        // this is default in bun\n        return ''\n      case '--global':\n      case '-g':\n        return '--global'\n      default:\n        return item\n    }\n  })\n}\n\nexport const bunCLICommands = [\n  'init',\n  'run',\n  'add',\n  'pm',\n  'help',\n  'install',\n  'remove',\n  'upgrade',\n  'version'\n] as const\ntype bunCLICommands = typeof bunCLICommands[number]\n\nexport function npmToBun (_m: string, command: string): string {\n  let args = parse((command || '').trim())\n\n  const index = args.findIndex(a => a === '--')\n  if (index >= 0) {\n    args.splice(index, 1)\n  }\n\n  let cmd = 'bun'\n  switch (args[0]) {\n    case 'install':\n    case 'i':\n      if (args.length === 1) {\n        args = ['install']\n      } else {\n        args[0] = 'add'\n      }\n      args = convertInstallArgs(args)\n      break\n    case 'uninstall':\n    case 'un':\n    case 'remove':\n    case 'r':\n    case 'rm':\n      args[0] = 'remove'\n      args = convertInstallArgs(args)\n      break\n    case 'cache':\n      if (args[1] === 'clean') {\n        args = ['pm', 'cache', 'rm'].concat(args.slice(2))\n      } else {\n        cmd = 'npm'\n      }\n      break\n    case 'rebuild':\n    case 'rb':\n      args[0] = 'add'\n      args.push('--force')\n      break\n    case 'run':\n      break\n    case 'list':\n    case 'ls':\n      // 'npm ls' => 'bun pm ls'\n      args = convertInstallArgs(args)\n      args[0] = 'ls'\n      args.unshift('pm')\n      break\n    case 'init':\n    case 'create':\n      if (args[1]) {\n        if (args[1].startsWith('@')) {\n          cmd = 'bunx'\n\n          args[1] = args[1].replace('/', '/create-')\n          args = args.slice(1)\n        } else if (!args[1].startsWith('-')) {\n          cmd = 'bunx'\n          args[1] = `create-${args[1].replace('@latest', '')}`\n          args = args.slice(1)\n        } else {\n          args[0] = 'init'\n        }\n      }\n      break\n\n    case 'link':\n    case 'ln':\n      args = convertInstallArgs(args)\n      args[0] = 'link'\n      break\n    case 'stop':\n    case 'start':\n    case 'unlink':\n      break\n    case 'test':\n    case 't':\n    case 'tst':\n      args[0] = 'test'\n      args.unshift('run')\n      break\n    case 'exec':\n      cmd = 'bunx'\n      args.splice(0, 1)\n      break\n    default:\n      // null == keep `npm` command\n      cmd = 'npm'\n      break\n  }\n\n  const filtered = args.filter(Boolean).filter(arg => arg !== '--')\n  return `${cmd} ${filtered.join(' ')}${\n    cmd === 'npm' ? \"\\n# couldn't auto-convert command\" : ''\n  }`.replace('=', ' ')\n}\n","import { yarnToNPM } from './yarnToNpm'\nimport { npmToYarn } from './npmToYarn'\nimport { npmToPnpm } from './npmToPnpm'\nimport { npmToBun } from './npmToBun'\n\nimport { executorCommands } from './utils'\n\n/**\n * Converts between npm and yarn command\n */\nexport default function convert (str: string, to: 'npm' | 'yarn' | 'pnpm' | 'bun'): string {\n  if (\n    str.includes('npx') ||\n    str.includes('yarn dlx') ||\n    str.includes('pnpm dlx') ||\n    str.includes('bun x')\n  ) {\n    const executor = str.includes('npx')\n      ? 'npx'\n      : str.includes('yarn dlx')\n      ? 'yarn dlx'\n      : str.includes('pnpm dlx')\n      ? 'pnpm dlx'\n      : 'bun x'\n    return str.replace(executor, executorCommands[to])\n  } else if (to === 'npm') {\n    return str.replace(/yarn(?: +([^&\\n\\r]*))?/gm, yarnToNPM)\n  } else if (to === 'pnpm') {\n    return str.replace(/npm(?: +([^&\\n\\r]*))?/gm, npmToPnpm)\n  } else if (to === 'bun') {\n    return str.replace(/npm(?: +([^&\\n\\r]*))?/gm, npmToBun)\n  } else {\n    return str.replace(/npm(?: +([^&\\n\\r]*))?/gm, npmToYarn)\n  }\n}\n"],"names":["convertInstallArgs"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6]}},
    {"offset": {"line": 29357, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 29363, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/unist-util-remove/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [cascade=true]\n *   Whether to drop parent nodes if they had children, but all their children\n *   were filtered out (default: `true`).\n */\n\nimport {convert} from 'unist-util-is'\n\n/**\n * Change the given `tree` by removing all nodes that pass `test`.\n *\n * `tree` itself is never tested.\n * The tree is walked in preorder (NLR), visiting the node itself, then its\n * head, etc.\n *\n * @overload\n * @param {Node} node\n * @param {Test} [test]\n * @returns {undefined}\n *\n * @overload\n * @param {Node} node\n * @param {Options | null | undefined} options\n * @param {Test} [test]\n * @returns {undefined}\n *\n * @param {Node} tree\n *   Tree to change.\n * @param {Options | Test} options\n *   Configuration (optional).\n * @param {Test} [test]\n *   `unist-util-is` compatible test.\n * @returns {undefined}\n *   Nothing.\n */\nexport function remove(tree, options, test) {\n  const is = convert(test || options)\n  let cascade = true\n\n  if (\n    options &&\n    typeof options === 'object' &&\n    'cascade' in options &&\n    typeof options.cascade === 'boolean'\n  ) {\n    cascade = options.cascade\n  }\n\n  preorder(tree)\n\n  /**\n   * Check and remove nodes recursively in preorder.\n   * For each composite node, modify its children array in-place.\n   *\n   * @param {Node} node\n   * @param {number | undefined} [index]\n   * @param {Parent | undefined} [parent]\n   * @returns {boolean}\n   */\n  function preorder(node, index, parent) {\n    if (node !== tree && is(node, index, parent)) {\n      return false\n    }\n\n    if ('children' in node && Array.isArray(node.children)) {\n      const nodeAsParent = /** @type {Parent} */ (node)\n      const children = nodeAsParent.children\n      let oldChildIndex = -1\n      let newChildIndex = 0\n\n      if (children.length > 0) {\n        // Move all living children to the beginning of the children array.\n        while (++oldChildIndex < children.length) {\n          if (preorder(children[oldChildIndex], oldChildIndex, nodeAsParent)) {\n            children[newChildIndex++] = children[oldChildIndex]\n          }\n        }\n\n        // Cascade delete.\n        if (node !== tree && cascade && !newChildIndex) {\n          return false\n        }\n\n        // Drop other nodes.\n        children.length = newChildIndex\n      }\n    }\n\n    return true\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC,GAED;;;;;;CAMC;;;AAED;;AA6BO,SAAS,OAAO,IAAI,EAAE,OAAO,EAAE,IAAI;IACxC,MAAM,KAAK,CAAA,GAAA,+IAAA,CAAA,UAAO,AAAD,EAAE,QAAQ;IAC3B,IAAI,UAAU;IAEd,IACE,WACA,OAAO,YAAY,YACnB,aAAa,WACb,OAAO,QAAQ,OAAO,KAAK,WAC3B;QACA,UAAU,QAAQ,OAAO;IAC3B;IAEA,SAAS;IAET;;;;;;;;GAQC,GACD,SAAS,SAAS,IAAI,EAAE,KAAK,EAAE,MAAM;QACnC,IAAI,SAAS,QAAQ,GAAG,MAAM,OAAO,SAAS;YAC5C,OAAO;QACT;QAEA,IAAI,cAAc,QAAQ,MAAM,OAAO,CAAC,KAAK,QAAQ,GAAG;YACtD,MAAM,eAAsC;YAC5C,MAAM,WAAW,aAAa,QAAQ;YACtC,IAAI,gBAAgB,CAAC;YACrB,IAAI,gBAAgB;YAEpB,IAAI,SAAS,MAAM,GAAG,GAAG;gBACvB,mEAAmE;gBACnE,MAAO,EAAE,gBAAgB,SAAS,MAAM,CAAE;oBACxC,IAAI,SAAS,QAAQ,CAAC,cAAc,EAAE,eAAe,eAAe;wBAClE,QAAQ,CAAC,gBAAgB,GAAG,QAAQ,CAAC,cAAc;oBACrD;gBACF;gBAEA,kBAAkB;gBAClB,IAAI,SAAS,QAAQ,WAAW,CAAC,eAAe;oBAC9C,OAAO;gBACT;gBAEA,oBAAoB;gBACpB,SAAS,MAAM,GAAG;YACpB;QACF;QAEA,OAAO;IACT;AACF","ignoreList":[0]}},
    {"offset": {"line": 29420, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 29425, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/format/format.js"],"sourcesContent":["//\n// format - printf-like string formatting for JavaScript\n// github.com/samsonjs/format\n// @_sjs\n//\n// Copyright 2010 - 2013 Sami Samhuri <sami@samhuri.net>\n//\n// MIT License\n// http://sjs.mit-license.org\n//\n\n;(function() {\n\n  //// Export the API\n  var namespace;\n\n  // CommonJS / Node module\n  if (typeof module !== 'undefined') {\n    namespace = module.exports = format;\n  }\n\n  // Browsers and other environments\n  else {\n    // Get the global object. Works in ES3, ES5, and ES5 strict mode.\n    namespace = (function(){ return this || (1,eval)('this') }());\n  }\n\n  namespace.format = format;\n  namespace.vsprintf = vsprintf;\n\n  if (typeof console !== 'undefined' && typeof console.log === 'function') {\n    namespace.printf = printf;\n  }\n\n  function printf(/* ... */) {\n    console.log(format.apply(null, arguments));\n  }\n\n  function vsprintf(fmt, replacements) {\n    return format.apply(null, [fmt].concat(replacements));\n  }\n\n  function format(fmt) {\n    var argIndex = 1 // skip initial format argument\n      , args = [].slice.call(arguments)\n      , i = 0\n      , n = fmt.length\n      , result = ''\n      , c\n      , escaped = false\n      , arg\n      , tmp\n      , leadingZero = false\n      , precision\n      , nextArg = function() { return args[argIndex++]; }\n      , slurpNumber = function() {\n          var digits = '';\n          while (/\\d/.test(fmt[i])) {\n            digits += fmt[i++];\n            c = fmt[i];\n          }\n          return digits.length > 0 ? parseInt(digits) : null;\n        }\n      ;\n    for (; i < n; ++i) {\n      c = fmt[i];\n      if (escaped) {\n        escaped = false;\n        if (c == '.') {\n          leadingZero = false;\n          c = fmt[++i];\n        }\n        else if (c == '0' && fmt[i + 1] == '.') {\n          leadingZero = true;\n          i += 2;\n          c = fmt[i];\n        }\n        else {\n          leadingZero = true;\n        }\n        precision = slurpNumber();\n        switch (c) {\n        case 'b': // number in binary\n          result += parseInt(nextArg(), 10).toString(2);\n          break;\n        case 'c': // character\n          arg = nextArg();\n          if (typeof arg === 'string' || arg instanceof String)\n            result += arg;\n          else\n            result += String.fromCharCode(parseInt(arg, 10));\n          break;\n        case 'd': // number in decimal\n          result += parseInt(nextArg(), 10);\n          break;\n        case 'f': // floating point number\n          tmp = String(parseFloat(nextArg()).toFixed(precision || 6));\n          result += leadingZero ? tmp : tmp.replace(/^0/, '');\n          break;\n        case 'j': // JSON\n          result += JSON.stringify(nextArg());\n          break;\n        case 'o': // number in octal\n          result += '0' + parseInt(nextArg(), 10).toString(8);\n          break;\n        case 's': // string\n          result += nextArg();\n          break;\n        case 'x': // lowercase hexadecimal\n          result += '0x' + parseInt(nextArg(), 10).toString(16);\n          break;\n        case 'X': // uppercase hexadecimal\n          result += '0x' + parseInt(nextArg(), 10).toString(16).toUpperCase();\n          break;\n        default:\n          result += c;\n          break;\n        }\n      } else if (c === '%') {\n        escaped = true;\n      } else {\n        result += c;\n      }\n    }\n    return result;\n  }\n\n}());\n"],"names":[],"mappings":"AAAA,EAAE;AACF,wDAAwD;AACxD,6BAA6B;AAC7B,QAAQ;AACR,EAAE;AACF,wDAAwD;AACxD,EAAE;AACF,cAAc;AACd,6BAA6B;AAC7B,EAAE;;AAEA,CAAA;IAEA,mBAAmB;IACnB,IAAI;IAEJ,yBAAyB;IACzB,wCAAmC;QACjC,YAAY,OAAO,OAAO,GAAG;IAC/B,OAGK;;IAGL;IAEA,UAAU,MAAM,GAAG;IACnB,UAAU,QAAQ,GAAG;IAErB,IAAI,OAAO,YAAY,eAAe,OAAO,QAAQ,GAAG,KAAK,YAAY;QACvE,UAAU,MAAM,GAAG;IACrB;IAEA,SAAS;QACP,QAAQ,GAAG,CAAC,OAAO,KAAK,CAAC,MAAM;IACjC;IAEA,SAAS,SAAS,GAAG,EAAE,YAAY;QACjC,OAAO,OAAO,KAAK,CAAC,MAAM;YAAC;SAAI,CAAC,MAAM,CAAC;IACzC;IAEA,SAAS,OAAO,GAAG;QACjB,IAAI,WAAW,EAAE,+BAA+B;UAC5C,OAAO,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,YACrB,IAAI,GACJ,IAAI,IAAI,MAAM,EACd,SAAS,IACT,GACA,UAAU,OACV,KACA,KACA,cAAc,OACd,WACA,UAAU;YAAa,OAAO,IAAI,CAAC,WAAW;QAAE,GAChD,cAAc;YACZ,IAAI,SAAS;YACb,MAAO,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAG;gBACxB,UAAU,GAAG,CAAC,IAAI;gBAClB,IAAI,GAAG,CAAC,EAAE;YACZ;YACA,OAAO,OAAO,MAAM,GAAG,IAAI,SAAS,UAAU;QAChD;QAEJ,MAAO,IAAI,GAAG,EAAE,EAAG;YACjB,IAAI,GAAG,CAAC,EAAE;YACV,IAAI,SAAS;gBACX,UAAU;gBACV,IAAI,KAAK,KAAK;oBACZ,cAAc;oBACd,IAAI,GAAG,CAAC,EAAE,EAAE;gBACd,OACK,IAAI,KAAK,OAAO,GAAG,CAAC,IAAI,EAAE,IAAI,KAAK;oBACtC,cAAc;oBACd,KAAK;oBACL,IAAI,GAAG,CAAC,EAAE;gBACZ,OACK;oBACH,cAAc;gBAChB;gBACA,YAAY;gBACZ,OAAQ;oBACR,KAAK;wBACH,UAAU,SAAS,WAAW,IAAI,QAAQ,CAAC;wBAC3C;oBACF,KAAK;wBACH,MAAM;wBACN,IAAI,OAAO,QAAQ,YAAY,eAAe,QAC5C,UAAU;6BAEV,UAAU,OAAO,YAAY,CAAC,SAAS,KAAK;wBAC9C;oBACF,KAAK;wBACH,UAAU,SAAS,WAAW;wBAC9B;oBACF,KAAK;wBACH,MAAM,OAAO,WAAW,WAAW,OAAO,CAAC,aAAa;wBACxD,UAAU,cAAc,MAAM,IAAI,OAAO,CAAC,MAAM;wBAChD;oBACF,KAAK;wBACH,UAAU,KAAK,SAAS,CAAC;wBACzB;oBACF,KAAK;wBACH,UAAU,MAAM,SAAS,WAAW,IAAI,QAAQ,CAAC;wBACjD;oBACF,KAAK;wBACH,UAAU;wBACV;oBACF,KAAK;wBACH,UAAU,OAAO,SAAS,WAAW,IAAI,QAAQ,CAAC;wBAClD;oBACF,KAAK;wBACH,UAAU,OAAO,SAAS,WAAW,IAAI,QAAQ,CAAC,IAAI,WAAW;wBACjE;oBACF;wBACE,UAAU;wBACV;gBACF;YACF,OAAO,IAAI,MAAM,KAAK;gBACpB,UAAU;YACZ,OAAO;gBACL,UAAU;YACZ;QACF;QACA,OAAO;IACT;AAEF,CAAA","ignoreList":[0]}},
    {"offset": {"line": 29529, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 29535, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/fault/index.js"],"sourcesContent":["// @ts-expect-error\nimport formatter from 'format'\n\nexport const fault = Object.assign(create(Error), {\n  eval: create(EvalError),\n  range: create(RangeError),\n  reference: create(ReferenceError),\n  syntax: create(SyntaxError),\n  type: create(TypeError),\n  uri: create(URIError)\n})\n\n/**\n * Create a new `EConstructor`, with the formatted `format` as a first argument.\n *\n * @template {Error} Fault\n * @template {new (reason: string) => Fault} Class\n * @param {Class} Constructor\n */\nexport function create(Constructor) {\n  /** @type {string} */\n  // @ts-expect-error\n  FormattedError.displayName = Constructor.displayName || Constructor.name\n\n  return FormattedError\n\n  /**\n   * Create an error with a printf-like formatted message.\n   *\n   * @param {string|null} [format]\n   *   Template string.\n   * @param {...unknown} values\n   *   Values to render in `format`.\n   * @returns {Fault}\n   */\n  function FormattedError(format, ...values) {\n    /** @type {string} */\n    const reason = format ? formatter(format, ...values) : format\n    return new Constructor(reason)\n  }\n}\n"],"names":[],"mappings":"AAAA,mBAAmB;;;;;AACnB;;AAEO,MAAM,QAAQ,OAAO,MAAM,CAAC,OAAO,QAAQ;IAChD,MAAM,OAAO;IACb,OAAO,OAAO;IACd,WAAW,OAAO;IAClB,QAAQ,OAAO;IACf,MAAM,OAAO;IACb,KAAK,OAAO;AACd;AASO,SAAS,OAAO,WAAW;IAChC,mBAAmB,GACnB,mBAAmB;IACnB,eAAe,WAAW,GAAG,YAAY,WAAW,IAAI,YAAY,IAAI;IAExE,OAAO;;IAEP;;;;;;;;GAQC,GACD,SAAS,eAAe,MAAM,EAAE,GAAG,MAAM;QACvC,mBAAmB,GACnB,MAAM,SAAS,SAAS,CAAA,GAAA,4HAAA,CAAA,UAAS,AAAD,EAAE,WAAW,UAAU;QACvD,OAAO,IAAI,YAAY;IACzB;AACF","ignoreList":[0]}},
    {"offset": {"line": 29568, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 29574, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-extension-frontmatter/dev/lib/to-matters.js"],"sourcesContent":["/**\n * @typedef {'toml' | 'yaml'} Preset\n *   Known name of a frontmatter style.\n *\n * @typedef Info\n *   Sequence.\n *\n *   Depending on how this structure is used, it reflects a marker or a fence.\n * @property {string} close\n *   Closing.\n * @property {string} open\n *   Opening.\n *\n * @typedef MatterProps\n *   Fields describing a kind of matter.\n * @property {string} type\n *   Node type to tokenize as.\n * @property {boolean | null | undefined} [anywhere=false]\n *   Whether matter can be found anywhere in the document, normally, only matter\n *   at the start of the document is recognized.\n *\n *   > 👉 **Note**: using this is a terrible idea.\n *   > It’s called frontmatter, not matter-in-the-middle or so.\n *   > This makes your markdown less portable.\n *\n * @typedef MarkerProps\n *   Marker configuration.\n * @property {Info | string} marker\n *   Character repeated 3 times, used as complete fences.\n *\n *   For example the character `'-'` will result in `'---'` being used as the\n *   fence\n *   Pass `open` and `close` to specify different characters for opening and\n *   closing fences.\n * @property {never} [fence]\n *   If `marker` is set, `fence` must not be set.\n *\n * @typedef FenceProps\n *   Fence configuration.\n * @property {Info | string} fence\n *   Complete fences.\n *\n *   This can be used when fences contain different characters or lengths\n *   other than 3.\n *   Pass `open` and `close` to interface to specify different characters for opening and\n *   closing fences.\n * @property {never} [marker]\n *   If `fence` is set, `marker` must not be set.\n *\n * @typedef {(MatterProps & FenceProps) | (MatterProps & MarkerProps)} Matter\n *   Fields describing a kind of matter.\n *\n *   > 👉 **Note**: using `anywhere` is a terrible idea.\n *   > It’s called frontmatter, not matter-in-the-middle or so.\n *   > This makes your markdown less portable.\n *\n *   > 👉 **Note**: `marker` and `fence` are mutually exclusive.\n *   > If `marker` is set, `fence` must not be set, and vice versa.\n *\n * @typedef {Matter | Preset | Array<Matter | Preset>} Options\n *   Configuration.\n */\n\nimport {fault} from 'fault'\n\nconst own = {}.hasOwnProperty\nconst markers = {yaml: '-', toml: '+'}\n\n/**\n * Simplify options by normalizing them to an array of matters.\n *\n * @param {Options | null | undefined} [options='yaml']\n *   Configuration (default: `'yaml'`).\n * @returns {Array<Matter>}\n *   List of matters.\n */\nexport function toMatters(options) {\n  /** @type {Array<Matter>} */\n  const result = []\n  let index = -1\n\n  /** @type {Array<Matter | Preset>} */\n  const presetsOrMatters = Array.isArray(options)\n    ? options\n    : options\n    ? [options]\n    : ['yaml']\n\n  while (++index < presetsOrMatters.length) {\n    result[index] = matter(presetsOrMatters[index])\n  }\n\n  return result\n}\n\n/**\n * Simplify an option.\n *\n * @param {Matter | Preset} option\n *   Configuration.\n * @returns {Matter}\n *   Matter.\n */\nfunction matter(option) {\n  let result = option\n\n  if (typeof result === 'string') {\n    if (!own.call(markers, result)) {\n      throw fault('Missing matter definition for `%s`', result)\n    }\n\n    result = {type: result, marker: markers[result]}\n  } else if (typeof result !== 'object') {\n    throw fault('Expected matter to be an object, not `%j`', result)\n  }\n\n  if (!own.call(result, 'type')) {\n    throw fault('Missing `type` in matter `%j`', result)\n  }\n\n  if (!own.call(result, 'fence') && !own.call(result, 'marker')) {\n    throw fault('Missing `marker` or `fence` in matter `%j`', result)\n  }\n\n  return result\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA6DC;;;AAED;;AAEA,MAAM,MAAM,CAAC,EAAE,cAAc;AAC7B,MAAM,UAAU;IAAC,MAAM;IAAK,MAAM;AAAG;AAU9B,SAAS,UAAU,OAAO;IAC/B,0BAA0B,GAC1B,MAAM,SAAS,EAAE;IACjB,IAAI,QAAQ,CAAC;IAEb,mCAAmC,GACnC,MAAM,mBAAmB,MAAM,OAAO,CAAC,WACnC,UACA,UACA;QAAC;KAAQ,GACT;QAAC;KAAO;IAEZ,MAAO,EAAE,QAAQ,iBAAiB,MAAM,CAAE;QACxC,MAAM,CAAC,MAAM,GAAG,OAAO,gBAAgB,CAAC,MAAM;IAChD;IAEA,OAAO;AACT;AAEA;;;;;;;CAOC,GACD,SAAS,OAAO,MAAM;IACpB,IAAI,SAAS;IAEb,IAAI,OAAO,WAAW,UAAU;QAC9B,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,SAAS;YAC9B,MAAM,CAAA,GAAA,0HAAA,CAAA,QAAK,AAAD,EAAE,sCAAsC;QACpD;QAEA,SAAS;YAAC,MAAM;YAAQ,QAAQ,OAAO,CAAC,OAAO;QAAA;IACjD,OAAO,IAAI,OAAO,WAAW,UAAU;QACrC,MAAM,CAAA,GAAA,0HAAA,CAAA,QAAK,AAAD,EAAE,6CAA6C;IAC3D;IAEA,IAAI,CAAC,IAAI,IAAI,CAAC,QAAQ,SAAS;QAC7B,MAAM,CAAA,GAAA,0HAAA,CAAA,QAAK,AAAD,EAAE,iCAAiC;IAC/C;IAEA,IAAI,CAAC,IAAI,IAAI,CAAC,QAAQ,YAAY,CAAC,IAAI,IAAI,CAAC,QAAQ,WAAW;QAC7D,MAAM,CAAA,GAAA,0HAAA,CAAA,QAAK,AAAD,EAAE,8CAA8C;IAC5D;IAEA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 29686, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 29692, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-extension-frontmatter/dev/lib/syntax.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n *\n * @typedef {import('./to-matters.js').Info} Info\n * @typedef {import('./to-matters.js').Matter} Matter\n * @typedef {import('./to-matters.js').Options} Options\n */\n\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\nimport {codes, types} from 'micromark-util-symbol'\nimport {toMatters} from './to-matters.js'\n\n/**\n * Create an extension for `micromark` to enable frontmatter syntax.\n *\n * @param {Options | null | undefined} [options='yaml']\n *   Configuration (default: `'yaml'`).\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable frontmatter syntax.\n */\nexport function frontmatter(options) {\n  const matters = toMatters(options)\n  /** @type {ConstructRecord} */\n  const flow = {}\n  let index = -1\n\n  while (++index < matters.length) {\n    const matter = matters[index]\n    const code = fence(matter, 'open').charCodeAt(0)\n    const construct = createConstruct(matter)\n    const existing = flow[code]\n\n    if (Array.isArray(existing)) {\n      existing.push(construct)\n    } else {\n      // Never a single object, always an array.\n      flow[code] = [construct]\n    }\n  }\n\n  return {flow}\n}\n\n/**\n * @param {Matter} matter\n * @returns {Construct}\n */\nfunction createConstruct(matter) {\n  const anywhere = matter.anywhere\n  const frontmatterType = /** @type {TokenType} */ (matter.type)\n  const fenceType = /** @type {TokenType} */ (frontmatterType + 'Fence')\n  const sequenceType = /** @type {TokenType} */ (fenceType + 'Sequence')\n  const valueType = /** @type {TokenType} */ (frontmatterType + 'Value')\n  const closingFenceConstruct = {tokenize: tokenizeClosingFence, partial: true}\n\n  /**\n   * Fence to look for.\n   *\n   * @type {string}\n   */\n  let buffer\n  let bufferIndex = 0\n\n  return {tokenize: tokenizeFrontmatter, concrete: true}\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeFrontmatter(effects, ok, nok) {\n    const self = this\n\n    return start\n\n    /**\n     * Start of frontmatter.\n     *\n     * ```markdown\n     * > | ---\n     *     ^\n     *   | title: \"Venus\"\n     *   | ---\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      const position = self.now()\n\n      if (\n        // Indent not allowed.\n        position.column === 1 &&\n        // Normally, only allowed in first line.\n        (position.line === 1 || anywhere)\n      ) {\n        buffer = fence(matter, 'open')\n        bufferIndex = 0\n\n        if (code === buffer.charCodeAt(bufferIndex)) {\n          effects.enter(frontmatterType)\n          effects.enter(fenceType)\n          effects.enter(sequenceType)\n          return openSequence(code)\n        }\n      }\n\n      return nok(code)\n    }\n\n    /**\n     * In open sequence.\n     *\n     * ```markdown\n     * > | ---\n     *     ^\n     *   | title: \"Venus\"\n     *   | ---\n     * ```\n     *\n     * @type {State}\n     */\n    function openSequence(code) {\n      if (bufferIndex === buffer.length) {\n        effects.exit(sequenceType)\n\n        if (markdownSpace(code)) {\n          effects.enter(types.whitespace)\n          return openSequenceWhitespace(code)\n        }\n\n        return openAfter(code)\n      }\n\n      if (code === buffer.charCodeAt(bufferIndex++)) {\n        effects.consume(code)\n        return openSequence\n      }\n\n      return nok(code)\n    }\n\n    /**\n     * In whitespace after open sequence.\n     *\n     * ```markdown\n     * > | ---␠\n     *        ^\n     *   | title: \"Venus\"\n     *   | ---\n     * ```\n     *\n     * @type {State}\n     */\n    function openSequenceWhitespace(code) {\n      if (markdownSpace(code)) {\n        effects.consume(code)\n        return openSequenceWhitespace\n      }\n\n      effects.exit(types.whitespace)\n      return openAfter(code)\n    }\n\n    /**\n     * After open sequence.\n     *\n     * ```markdown\n     * > | ---\n     *        ^\n     *   | title: \"Venus\"\n     *   | ---\n     * ```\n     *\n     * @type {State}\n     */\n    function openAfter(code) {\n      if (markdownLineEnding(code)) {\n        effects.exit(fenceType)\n        effects.enter(types.lineEnding)\n        effects.consume(code)\n        effects.exit(types.lineEnding)\n        // Get ready for closing fence.\n        buffer = fence(matter, 'close')\n        bufferIndex = 0\n        return effects.attempt(closingFenceConstruct, after, contentStart)\n      }\n\n      // EOF is not okay.\n      return nok(code)\n    }\n\n    /**\n     * Start of content chunk.\n     *\n     * ```markdown\n     *   | ---\n     * > | title: \"Venus\"\n     *     ^\n     *   | ---\n     * ```\n     *\n     * @type {State}\n     */\n    function contentStart(code) {\n      if (code === codes.eof || markdownLineEnding(code)) {\n        return contentEnd(code)\n      }\n\n      effects.enter(valueType)\n      return contentInside(code)\n    }\n\n    /**\n     * In content chunk.\n     *\n     * ```markdown\n     *   | ---\n     * > | title: \"Venus\"\n     *     ^\n     *   | ---\n     * ```\n     *\n     * @type {State}\n     */\n    function contentInside(code) {\n      if (code === codes.eof || markdownLineEnding(code)) {\n        effects.exit(valueType)\n        return contentEnd(code)\n      }\n\n      effects.consume(code)\n      return contentInside\n    }\n\n    /**\n     * End of content chunk.\n     *\n     * ```markdown\n     *   | ---\n     * > | title: \"Venus\"\n     *                   ^\n     *   | ---\n     * ```\n     *\n     * @type {State}\n     */\n    function contentEnd(code) {\n      // Require a closing fence.\n      if (code === codes.eof) {\n        return nok(code)\n      }\n\n      // Can only be an eol.\n      effects.enter(types.lineEnding)\n      effects.consume(code)\n      effects.exit(types.lineEnding)\n      return effects.attempt(closingFenceConstruct, after, contentStart)\n    }\n\n    /**\n     * After frontmatter.\n     *\n     * ```markdown\n     *   | ---\n     *   | title: \"Venus\"\n     * > | ---\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function after(code) {\n      // `code` must be eol/eof.\n      effects.exit(frontmatterType)\n      return ok(code)\n    }\n  }\n\n  /** @type {Tokenizer} */\n  function tokenizeClosingFence(effects, ok, nok) {\n    let bufferIndex = 0\n\n    return closeStart\n\n    /**\n     * Start of close sequence.\n     *\n     * ```markdown\n     *   | ---\n     *   | title: \"Venus\"\n     * > | ---\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function closeStart(code) {\n      if (code === buffer.charCodeAt(bufferIndex)) {\n        effects.enter(fenceType)\n        effects.enter(sequenceType)\n        return closeSequence(code)\n      }\n\n      return nok(code)\n    }\n\n    /**\n     * In close sequence.\n     *\n     * ```markdown\n     *   | ---\n     *   | title: \"Venus\"\n     * > | ---\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function closeSequence(code) {\n      if (bufferIndex === buffer.length) {\n        effects.exit(sequenceType)\n\n        if (markdownSpace(code)) {\n          effects.enter(types.whitespace)\n          return closeSequenceWhitespace(code)\n        }\n\n        return closeAfter(code)\n      }\n\n      if (code === buffer.charCodeAt(bufferIndex++)) {\n        effects.consume(code)\n        return closeSequence\n      }\n\n      return nok(code)\n    }\n\n    /**\n     * In whitespace after close sequence.\n     *\n     * ```markdown\n     * > | ---\n     *   | title: \"Venus\"\n     *   | ---␠\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function closeSequenceWhitespace(code) {\n      if (markdownSpace(code)) {\n        effects.consume(code)\n        return closeSequenceWhitespace\n      }\n\n      effects.exit(types.whitespace)\n      return closeAfter(code)\n    }\n\n    /**\n     * After close sequence.\n     *\n     * ```markdown\n     *   | ---\n     *   | title: \"Venus\"\n     * > | ---\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function closeAfter(code) {\n      if (code === codes.eof || markdownLineEnding(code)) {\n        effects.exit(fenceType)\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n\n/**\n * @param {Matter} matter\n * @param {'close' | 'open'} prop\n * @returns {string}\n */\nfunction fence(matter, prop) {\n  return matter.marker\n    ? pick(matter.marker, prop).repeat(3)\n    : // @ts-expect-error: They’re mutually exclusive.\n      pick(matter.fence, prop)\n}\n\n/**\n * @param {Info | string} schema\n * @param {'close' | 'open'} prop\n * @returns {string}\n */\nfunction pick(schema, prop) {\n  return typeof schema === 'string' ? schema : schema[prop]\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 30042, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 30048, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/escape-string-regexp/index.js"],"sourcesContent":["export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n"],"names":[],"mappings":";;;AAAe,SAAS,mBAAmB,MAAM;IAChD,IAAI,OAAO,WAAW,UAAU;QAC/B,MAAM,IAAI,UAAU;IACrB;IAEA,kFAAkF;IAClF,6JAA6J;IAC7J,OAAO,OACL,OAAO,CAAC,uBAAuB,QAC/B,OAAO,CAAC,MAAM;AACjB","ignoreList":[0]}},
    {"offset": {"line": 30059, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 30065, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-frontmatter/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('mdast').Literal} Literal\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('micromark-extension-frontmatter').Info} Info\n * @typedef {import('micromark-extension-frontmatter').Matter} Matter\n * @typedef {import('micromark-extension-frontmatter').Options} Options\n */\n\nimport {ok as assert} from 'devlop'\nimport {toMatters} from 'micromark-extension-frontmatter'\nimport escapeStringRegexp from 'escape-string-regexp'\n\n/**\n * Create an extension for `mdast-util-from-markdown`.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function frontmatterFromMarkdown(options) {\n  const matters = toMatters(options)\n  /** @type {FromMarkdownExtension['enter']} */\n  const enter = {}\n  /** @type {FromMarkdownExtension['exit']} */\n  const exit = {}\n  let index = -1\n\n  while (++index < matters.length) {\n    const matter = matters[index]\n    enter[matter.type] = opener(matter)\n    exit[matter.type] = close\n    exit[matter.type + 'Value'] = value\n  }\n\n  return {enter, exit}\n}\n\n/**\n * @param {Matter} matter\n * @returns {FromMarkdownHandle} enter\n */\nfunction opener(matter) {\n  return open\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function open(token) {\n    // @ts-expect-error: custom.\n    this.enter({type: matter.type, value: ''}, token)\n    this.buffer()\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction close(token) {\n  const data = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert('value' in node)\n  this.exit(token)\n  // Remove the initial and final eol.\n  node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction value(token) {\n  this.config.enter.data.call(this, token)\n  this.config.exit.data.call(this, token)\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown`.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function frontmatterToMarkdown(options) {\n  /** @type {ToMarkdownExtension['unsafe']} */\n  const unsafe = []\n  /** @type {ToMarkdownExtension['handlers']} */\n  const handlers = {}\n  const matters = toMatters(options)\n  let index = -1\n\n  while (++index < matters.length) {\n    const matter = matters[index]\n\n    // @ts-expect-error: this can add custom frontmatter nodes.\n    // Typing those is the responsibility of the end user.\n    handlers[matter.type] = handler(matter)\n\n    const open = fence(matter, 'open')\n\n    unsafe.push({\n      atBreak: true,\n      character: open.charAt(0),\n      after: escapeStringRegexp(open.charAt(1))\n    })\n  }\n\n  return {unsafe, handlers}\n}\n\n/**\n * Create a handle that can serialize a frontmatter node as markdown.\n *\n * @param {Matter} matter\n *   Structure.\n * @returns {(node: Literal) => string} enter\n *   Handler.\n */\nfunction handler(matter) {\n  const open = fence(matter, 'open')\n  const close = fence(matter, 'close')\n\n  return handle\n\n  /**\n   * Serialize a frontmatter node as markdown.\n   *\n   * @param {Literal} node\n   *   Node to serialize.\n   * @returns {string}\n   *   Serialized node.\n   */\n  function handle(node) {\n    return open + (node.value ? '\\n' + node.value : '') + '\\n' + close\n  }\n}\n\n/**\n * Get an `open` or `close` fence.\n *\n * @param {Matter} matter\n *   Structure.\n * @param {'close' | 'open'} prop\n *   Field to get.\n * @returns {string}\n *   Fence.\n */\nfunction fence(matter, prop) {\n  return matter.marker\n    ? pick(matter.marker, prop).repeat(3)\n    : // @ts-expect-error: They’re mutually exclusive.\n      pick(matter.fence, prop)\n}\n\n/**\n * Take `open` or `close` fields when schema is an info object, or use the\n * given value when it is a string.\n *\n * @param {Info | string} schema\n *   Info object or value.\n * @param {'close' | 'open'} prop\n *   Field to get.\n * @returns {string}\n *   Thing to use for the opening or closing.\n */\nfunction pick(schema, prop) {\n  return typeof schema === 'string' ? schema : schema[prop]\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;CAWC;;;;AAID;AADA;AADA;;;;AAYO,SAAS,wBAAwB,OAAO;IAC7C,MAAM,UAAU,CAAA,GAAA,gLAAA,CAAA,YAAS,AAAD,EAAE;IAC1B,2CAA2C,GAC3C,MAAM,QAAQ,CAAC;IACf,0CAA0C,GAC1C,MAAM,OAAO,CAAC;IACd,IAAI,QAAQ,CAAC;IAEb,MAAO,EAAE,QAAQ,QAAQ,MAAM,CAAE;QAC/B,MAAM,SAAS,OAAO,CAAC,MAAM;QAC7B,KAAK,CAAC,OAAO,IAAI,CAAC,GAAG,OAAO;QAC5B,IAAI,CAAC,OAAO,IAAI,CAAC,GAAG;QACpB,IAAI,CAAC,OAAO,IAAI,GAAG,QAAQ,GAAG;IAChC;IAEA,OAAO;QAAC;QAAO;IAAI;AACrB;AAEA;;;CAGC,GACD,SAAS,OAAO,MAAM;IACpB,OAAO;;IAEP;;;GAGC,GACD,SAAS,KAAK,KAAK;QACjB,4BAA4B;QAC5B,IAAI,CAAC,KAAK,CAAC;YAAC,MAAM,OAAO,IAAI;YAAE,OAAO;QAAE,GAAG;QAC3C,IAAI,CAAC,MAAM;IACb;AACF;AAEA;;;CAGC,GACD,SAAS,MAAM,KAAK;IAClB,MAAM,OAAO,IAAI,CAAC,MAAM;IACxB,MAAM,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE;IAC9C,CAAA,GAAA,wIAAA,CAAA,KAAM,AAAD,EAAE,WAAW;IAClB,IAAI,CAAC,IAAI,CAAC;IACV,oCAAoC;IACpC,KAAK,KAAK,GAAG,KAAK,OAAO,CAAC,4BAA4B;AACxD;AAEA;;;CAGC,GACD,SAAS,MAAM,KAAK;IAClB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;IAClC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;AACnC;AAUO,SAAS,sBAAsB,OAAO;IAC3C,0CAA0C,GAC1C,MAAM,SAAS,EAAE;IACjB,4CAA4C,GAC5C,MAAM,WAAW,CAAC;IAClB,MAAM,UAAU,CAAA,GAAA,gLAAA,CAAA,YAAS,AAAD,EAAE;IAC1B,IAAI,QAAQ,CAAC;IAEb,MAAO,EAAE,QAAQ,QAAQ,MAAM,CAAE;QAC/B,MAAM,SAAS,OAAO,CAAC,MAAM;QAE7B,2DAA2D;QAC3D,sDAAsD;QACtD,QAAQ,CAAC,OAAO,IAAI,CAAC,GAAG,QAAQ;QAEhC,MAAM,OAAO,MAAM,QAAQ;QAE3B,OAAO,IAAI,CAAC;YACV,SAAS;YACT,WAAW,KAAK,MAAM,CAAC;YACvB,OAAO,CAAA,GAAA,+IAAA,CAAA,UAAkB,AAAD,EAAE,KAAK,MAAM,CAAC;QACxC;IACF;IAEA,OAAO;QAAC;QAAQ;IAAQ;AAC1B;AAEA;;;;;;;CAOC,GACD,SAAS,QAAQ,MAAM;IACrB,MAAM,OAAO,MAAM,QAAQ;IAC3B,MAAM,QAAQ,MAAM,QAAQ;IAE5B,OAAO;;IAEP;;;;;;;GAOC,GACD,SAAS,OAAO,IAAI;QAClB,OAAO,OAAO,CAAC,KAAK,KAAK,GAAG,OAAO,KAAK,KAAK,GAAG,EAAE,IAAI,OAAO;IAC/D;AACF;AAEA;;;;;;;;;CASC,GACD,SAAS,MAAM,MAAM,EAAE,IAAI;IACzB,OAAO,OAAO,MAAM,GAChB,KAAK,OAAO,MAAM,EAAE,MAAM,MAAM,CAAC,KAEjC,KAAK,OAAO,KAAK,EAAE;AACzB;AAEA;;;;;;;;;;CAUC,GACD,SAAS,KAAK,MAAM,EAAE,IAAI;IACxB,OAAO,OAAO,WAAW,WAAW,SAAS,MAAM,CAAC,KAAK;AAC3D","ignoreList":[0]}},
    {"offset": {"line": 30208, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 30214, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/remark-frontmatter/lib/index.js"],"sourcesContent":["/// <reference types=\"remark-parse\" />\n/// <reference types=\"remark-stringify\" />\n\n/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-frontmatter').Options} Options\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\nimport {\n  frontmatterFromMarkdown,\n  frontmatterToMarkdown\n} from 'mdast-util-frontmatter'\nimport {frontmatter} from 'micromark-extension-frontmatter'\n\n/** @type {Options} */\nconst emptyOptions = 'yaml'\n\n/**\n * Add support for frontmatter.\n *\n * ###### Notes\n *\n * Doesn’t parse the data inside them: create your own plugin to do that.\n *\n * @param {Options | null | undefined} [options='yaml']\n *   Configuration (default: `'yaml'`).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkFrontmatter(options) {\n  // @ts-expect-error: TS is wrong about `this`.\n  // eslint-disable-next-line unicorn/no-this-assignment\n  const self = /** @type {Processor} */ (this)\n  const settings = options || emptyOptions\n  const data = self.data()\n\n  const micromarkExtensions =\n    data.micromarkExtensions || (data.micromarkExtensions = [])\n  const fromMarkdownExtensions =\n    data.fromMarkdownExtensions || (data.fromMarkdownExtensions = [])\n  const toMarkdownExtensions =\n    data.toMarkdownExtensions || (data.toMarkdownExtensions = [])\n\n  micromarkExtensions.push(frontmatter(settings))\n  fromMarkdownExtensions.push(frontmatterFromMarkdown(settings))\n  toMarkdownExtensions.push(frontmatterToMarkdown(settings))\n}\n"],"names":[],"mappings":"AAAA,sCAAsC;AACtC,0CAA0C;AAE1C;;;;CAIC;;;AAMD;AAJA;;;AAMA,oBAAoB,GACpB,MAAM,eAAe;AAcN,SAAS,kBAAkB,OAAO;IAC/C,8CAA8C;IAC9C,sDAAsD;IACtD,MAAM,OAAiC,IAAI;IAC3C,MAAM,WAAW,WAAW;IAC5B,MAAM,OAAO,KAAK,IAAI;IAEtB,MAAM,sBACJ,KAAK,mBAAmB,IAAI,CAAC,KAAK,mBAAmB,GAAG,EAAE;IAC5D,MAAM,yBACJ,KAAK,sBAAsB,IAAI,CAAC,KAAK,sBAAsB,GAAG,EAAE;IAClE,MAAM,uBACJ,KAAK,oBAAoB,IAAI,CAAC,KAAK,oBAAoB,GAAG,EAAE;IAE9D,oBAAoB,IAAI,CAAC,CAAA,GAAA,yKAAA,CAAA,cAAW,AAAD,EAAE;IACrC,uBAAuB,IAAI,CAAC,CAAA,GAAA,wJAAA,CAAA,0BAAuB,AAAD,EAAE;IACpD,qBAAqB,IAAI,CAAC,CAAA,GAAA,wJAAA,CAAA,wBAAqB,AAAD,EAAE;AAClD","ignoreList":[0]}},
    {"offset": {"line": 30241, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 30247, "column": 0}, "map": {"version":3,"file":"estree-util-value-to-estree.js","sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/estree-util-value-to-estree/src/estree-util-value-to-estree.ts"],"sourcesContent":["import { type Temporal as LocalTemporal } from '@js-temporal/polyfill'\nimport {\n  type ArrayExpression,\n  type Expression,\n  type Identifier,\n  type ObjectExpression,\n  type Pattern,\n  type Property,\n  type SimpleLiteral\n} from 'estree'\n\n/**\n * Create an ESTree identifier node for a given name.\n *\n * @param name\n *   The name of the identifier.\n * @returns\n *   The identifier node.\n */\nfunction identifier(name: string): Identifier {\n  return { type: 'Identifier', name }\n}\n\n/**\n * Create an ESTree literal node for a given value.\n *\n * @param value\n *   The value for which to create a literal.\n * @returns\n *   The literal node.\n */\nfunction literal(value: SimpleLiteral['value']): SimpleLiteral {\n  return { type: 'Literal', value }\n}\n\n/**\n * Create an ESTree call expression on an object member.\n *\n * @param object\n *   The object to call the method on.\n * @param name\n *   The name of the method to call.\n * @param args\n *   Arguments to pass to the function call\n * @returns\n *   The call expression node.\n */\nfunction methodCall(object: Expression, name: string, args: Expression[]): Expression {\n  return {\n    type: 'CallExpression',\n    optional: false,\n    callee: {\n      type: 'MemberExpression',\n      computed: false,\n      optional: false,\n      object,\n      property: identifier(name)\n    },\n    arguments: args\n  }\n}\n\n/**\n * Turn a number or bigint into an ESTree expression. This handles positive and negative numbers and\n * bigints as well as special numbers.\n *\n * @param number\n *   The value to turn into an ESTree expression.\n * @returns\n *   An expression that represents the given value.\n */\nfunction processNumber(number: bigint | number): Expression {\n  if (number < 0 || Object.is(number, -0)) {\n    return {\n      type: 'UnaryExpression',\n      operator: '-',\n      prefix: true,\n      argument: processNumber(-number)\n    }\n  }\n\n  if (typeof number === 'bigint') {\n    return { type: 'Literal', bigint: String(number) }\n  }\n\n  if (number === Number.POSITIVE_INFINITY || Number.isNaN(number)) {\n    return identifier(String(number))\n  }\n\n  return literal(number)\n}\n\n/**\n * Process an array of numbers. This is a shortcut for iterables whose constructor takes an array of\n * numbers as input.\n *\n * @param numbers\n *   The numbers to add to the array expression.\n * @returns\n *   An ESTree array expression whose elements match the input numbers.\n */\nfunction processNumberArray(numbers: Iterable<bigint | number>): Expression {\n  const elements: Expression[] = []\n\n  for (const value of numbers) {\n    elements.push(processNumber(value))\n  }\n\n  return { type: 'ArrayExpression', elements }\n}\n\n/**\n * Check whether a value can be constructed from its string representation.\n *\n * @param value\n *   The value to check\n * @returns\n *   Whether or not the value can be constructed from its string representation.\n */\nfunction isStringReconstructable(value: unknown): value is URL | URLSearchParams {\n  return value instanceof URL || value instanceof URLSearchParams\n}\n\n/**\n * Check whether a value can be constructed from its `valueOf()` result.\n *\n * @param value\n *   The value to check\n * @returns\n *   Whether or not the value can be constructed from its `valueOf()` result.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isValueReconstructable(value: unknown): value is Boolean | Date | Number | String {\n  return (\n    value instanceof Boolean ||\n    value instanceof Date ||\n    value instanceof Number ||\n    value instanceof String\n  )\n}\n\nconst wellKnownSymbols = new Map<symbol, string>()\nfor (const name of Reflect.ownKeys(Symbol) as (keyof typeof Symbol)[]) {\n  const value = Symbol[name]\n  if (typeof value === 'symbol') {\n    wellKnownSymbols.set(value, name)\n  }\n}\n\n/**\n * Check whether a value is a typed array.\n *\n * @param value\n *   The value to check\n * @returns\n *   Whether or not the value is a typed array.\n */\nfunction isTypedArray(\n  value: unknown\n): value is\n  | BigInt64Array\n  | BigUint64Array\n  | Float32Array\n  | Float64Array\n  | Int8Array\n  | Int16Array\n  | Int32Array\n  | Uint8Array\n  | Uint8ClampedArray\n  | Uint16Array\n  | Uint32Array {\n  return (\n    value instanceof BigInt64Array ||\n    value instanceof BigUint64Array ||\n    value instanceof Float32Array ||\n    value instanceof Float64Array ||\n    value instanceof Int8Array ||\n    value instanceof Int16Array ||\n    value instanceof Int32Array ||\n    value instanceof Uint8Array ||\n    value instanceof Uint8ClampedArray ||\n    value instanceof Uint16Array ||\n    value instanceof Uint32Array\n  )\n}\n\ninterface Context {\n  /**\n   * The assignment expression of the variable.\n   */\n  assignment?: Expression\n\n  /**\n   * The number of references to this value.\n   */\n  count: number\n\n  /**\n   * The variable name used to reference the value.\n   */\n  name?: string\n\n  /**\n   * Whether or not this value recursively references itself.\n   */\n  recursive: boolean\n\n  /**\n   * A set of values that reference the value in this context.\n   */\n  referencedBy: Set<unknown>\n\n  /**\n   * The value this context belongs to.\n   */\n  value: unknown\n}\n\n/**\n * Compare two value contexts for sorting them based on reference count.\n *\n * @param a\n *   The first context to compare.\n * @param b\n *   The second context to compare.\n * @returns\n *   The count of context a minus the count of context b.\n */\nfunction compareContexts(a: Context, b: Context): number {\n  const aReferencedByB = a.referencedBy.has(b.value)\n  const bReferencedByA = b.referencedBy.has(a.value)\n\n  if (aReferencedByB) {\n    if (bReferencedByA) {\n      return a.count - b.count\n    }\n    return -1\n  }\n  if (bReferencedByA) {\n    return 1\n  }\n\n  return a.count - b.count\n}\n\nexport interface Options {\n  /**\n   * If true, treat objects that have a prototype as plain objects.\n   *\n   * @default false\n   */\n  instanceAsObject?: boolean\n\n  /**\n   * If true, preserve references to the same object found within the input. This also allows to\n   * serialize recursive structures. If needed, the resulting expression will be an iife.\n   *\n   * @default false\n   */\n  preserveReferences?: boolean\n}\n\n/**\n * Replace the assigned right hand expression with the new expression.\n *\n * If there is no assignment expression, the original expression is returned. Otherwise the\n * assignment is modified and returned,\n *\n * @param expression\n *   The expression to use for the assignment.\n * @param assignment\n *   The existing assignmentexpression\n * @returns\n *   The new expression.\n */\nfunction replaceAssignment(expression: Expression, assignment: Expression | undefined): Expression {\n  if (!assignment || assignment.type !== 'AssignmentExpression') {\n    return expression\n  }\n\n  let node = assignment\n  while (node.right.type === 'AssignmentExpression') {\n    node = node.right\n  }\n  node.right = expression\n  return assignment\n}\n\n/**\n * Create an ESTree epxression to represent a symbol. Global and well-known symbols are supported.\n *\n * @param symbol\n *   THe symbol to represent.\n * @returns\n *   An ESTree expression to represent the symbol.\n */\nfunction symbolToEstree(symbol: symbol): Expression {\n  const name = wellKnownSymbols.get(symbol)\n  if (name) {\n    return {\n      type: 'MemberExpression',\n      computed: false,\n      optional: false,\n      object: identifier('Symbol'),\n      property: identifier(name)\n    }\n  }\n\n  if (symbol.description && symbol === Symbol.for(symbol.description)) {\n    return methodCall(identifier('Symbol'), 'for', [literal(symbol.description)])\n  }\n\n  throw new TypeError(`Only global symbols are supported, got: ${String(symbol)}`, {\n    cause: symbol\n  })\n}\n\n/**\n * Create an ESTree property from a key and a value expression.\n *\n * @param key\n *   The property key value\n * @param value\n *   The property value as an ESTree expression.\n * @returns\n *   The ESTree properry node.\n */\nfunction property(key: string | symbol, value: Expression): Property {\n  const computed = typeof key !== 'string'\n\n  return {\n    type: 'Property',\n    method: false,\n    shorthand: false,\n    computed,\n    kind: 'init',\n    key: computed ? symbolToEstree(key) : literal(key),\n    value\n  }\n}\n\n/**\n * Convert a Temporal value to a constructor call.\n *\n * @param name\n *   The name of the constructor.\n * @param values\n *   The numeric values to pass to the constructor.\n * @param calendar\n *   The calendar name to pass to the constructor.\n * @param defaultReferenceValue\n *   The default reference value of the temporal object.\n * @param referenceValue\n *   The reference value of the temporal object.\n * @returns\n *   An ESTree expression which represents the constructor call.\n */\nfunction temporalConstructor(\n  name: string,\n  values: (bigint | number | string)[],\n  calendar: LocalTemporal.CalendarProtocol | string = 'iso8601',\n  defaultReferenceValue?: number,\n  referenceValue?: number\n): Expression {\n  if (calendar && typeof calendar !== 'string') {\n    throw new Error(`Unsupported calendar: ${calendar}`, { cause: calendar })\n  }\n\n  const args: Expression[] = []\n\n  if (\n    referenceValue != null &&\n    (calendar !== 'iso8601' || referenceValue !== defaultReferenceValue)\n  ) {\n    args.push(literal(referenceValue))\n  }\n\n  if (calendar !== 'iso8601' || args.length !== 0) {\n    args.unshift(literal(calendar))\n  }\n\n  for (let index = values.length - 1; index >= 0; index -= 1) {\n    const value = values[index]\n    if ((value !== 0 && value !== 0n) || args.length !== 0) {\n      args.unshift(typeof value === 'string' ? literal(value) : processNumber(value))\n    }\n  }\n\n  return {\n    type: 'NewExpression',\n    callee: {\n      type: 'MemberExpression',\n      computed: false,\n      optional: false,\n      object: identifier('Temporal'),\n      property: identifier(name)\n    },\n    arguments: args\n  }\n}\n\n/**\n * Convert a value to an ESTree node.\n *\n * @param value\n *   The value to convert.\n * @param options\n *   Additional options to configure the output.\n * @returns\n *   The ESTree node.\n */\nexport function valueToEstree(value: unknown, options: Options = {}): Expression {\n  const stack: unknown[] = []\n  const collectedContexts = new Map<unknown, Context>()\n  const namedContexts: Context[] = []\n\n  /**\n   * Analyze a value and collect all reference contexts.\n   *\n   * @param val\n   *   The value to analyze.\n   */\n  function analyze(val: unknown): undefined {\n    if (typeof val === 'function') {\n      throw new TypeError(`Unsupported value: ${val}`, { cause: val })\n    }\n\n    if (typeof val !== 'object') {\n      return\n    }\n\n    if (val == null) {\n      return\n    }\n\n    const context = collectedContexts.get(val)\n    if (context) {\n      if (options.preserveReferences) {\n        context.count += 1\n      }\n      for (const ancestor of stack) {\n        context.referencedBy.add(ancestor)\n      }\n      if (stack.includes(val)) {\n        if (!options.preserveReferences) {\n          throw new Error(`Found circular reference: ${val}`, { cause: val })\n        }\n        const parent = stack.at(-1)!\n        const parentContext = collectedContexts.get(parent)!\n        parentContext.recursive = true\n        context.recursive = true\n      }\n      return\n    }\n\n    collectedContexts.set(val, {\n      count: 1,\n      recursive: false,\n      referencedBy: new Set(stack),\n      value: val\n    })\n\n    if (isTypedArray(val)) {\n      return\n    }\n\n    if (isStringReconstructable(val)) {\n      return\n    }\n\n    if (isValueReconstructable(val)) {\n      return\n    }\n\n    if (value instanceof RegExp) {\n      return\n    }\n\n    if (\n      typeof Temporal !== 'undefined' &&\n      (value instanceof Temporal.Duration ||\n        value instanceof Temporal.Instant ||\n        value instanceof Temporal.PlainDate ||\n        value instanceof Temporal.PlainDateTime ||\n        value instanceof Temporal.PlainYearMonth ||\n        value instanceof Temporal.PlainMonthDay ||\n        value instanceof Temporal.PlainTime ||\n        value instanceof Temporal.ZonedDateTime)\n    ) {\n      return\n    }\n\n    stack.push(val)\n    if (val instanceof Map) {\n      for (const pair of val) {\n        analyze(pair[0])\n        analyze(pair[1])\n      }\n    } else if (Array.isArray(val) || val instanceof Set) {\n      for (const entry of val) {\n        analyze(entry)\n      }\n    } else {\n      const proto = Object.getPrototypeOf(val)\n      if (proto != null && proto !== Object.prototype && !options.instanceAsObject) {\n        throw new TypeError(`Unsupported value: ${val}`, { cause: val })\n      }\n\n      for (const key of Reflect.ownKeys(val)) {\n        analyze((val as Record<string | symbol, unknown>)[key])\n      }\n    }\n    stack.pop()\n  }\n\n  /**\n   * Recursively generate the ESTree expression needed to reconstruct the value.\n   *\n   * @param val\n   *   The value to process.\n   * @param isDeclaration\n   *   Whether or not this is for a variable declaration.\n   * @returns\n   *   The ESTree expression to reconstruct the value.\n   */\n  function generate(val: unknown, isDeclaration?: boolean): Expression {\n    if (val === undefined) {\n      return identifier(String(val))\n    }\n\n    if (val == null || typeof val === 'string' || typeof val === 'boolean') {\n      return literal(val)\n    }\n\n    if (typeof val === 'bigint' || typeof val === 'number') {\n      return processNumber(val)\n    }\n\n    if (typeof val === 'symbol') {\n      return symbolToEstree(val)\n    }\n\n    const context = collectedContexts.get(val)\n    if (!isDeclaration && context?.name) {\n      return identifier(context.name)\n    }\n\n    if (isValueReconstructable(val)) {\n      return {\n        type: 'NewExpression',\n        callee: identifier(val.constructor.name),\n        arguments: [generate(val.valueOf())]\n      }\n    }\n\n    if (val instanceof RegExp) {\n      return {\n        type: 'Literal',\n        regex: { pattern: val.source, flags: val.flags }\n      }\n    }\n\n    if (typeof Buffer !== 'undefined' && Buffer.isBuffer(val)) {\n      return methodCall(identifier('Buffer'), 'from', [processNumberArray(val)])\n    }\n\n    if (isTypedArray(val)) {\n      return {\n        type: 'NewExpression',\n        callee: identifier(val.constructor.name),\n        arguments: [processNumberArray(val)]\n      }\n    }\n\n    if (isStringReconstructable(val)) {\n      return {\n        type: 'NewExpression',\n        callee: identifier(val.constructor.name),\n        arguments: [literal(String(val))]\n      }\n    }\n\n    if (typeof Temporal !== 'undefined') {\n      if (val instanceof Temporal.Duration) {\n        return temporalConstructor('Duration', [\n          val.years,\n          val.months,\n          val.weeks,\n          val.days,\n          val.hours,\n          val.minutes,\n          val.seconds,\n          val.milliseconds,\n          val.microseconds,\n          val.nanoseconds\n        ])\n      }\n\n      if (val instanceof Temporal.Instant) {\n        return temporalConstructor('Instant', [val.epochNanoseconds])\n      }\n\n      if (val instanceof Temporal.PlainDate) {\n        const iso = val.getISOFields()\n        return temporalConstructor(\n          'PlainDate',\n          [iso.isoYear, iso.isoMonth, iso.isoDay],\n          iso.calendar\n        )\n      }\n\n      if (val instanceof Temporal.PlainDateTime) {\n        const iso = val.getISOFields()\n        return temporalConstructor(\n          'PlainDateTime',\n          [\n            iso.isoYear,\n            iso.isoMonth,\n            iso.isoDay,\n            iso.isoHour,\n            iso.isoMinute,\n            iso.isoSecond,\n            iso.isoMillisecond,\n            iso.isoMicrosecond,\n            iso.isoNanosecond\n          ],\n          iso.calendar\n        )\n      }\n\n      if (val instanceof Temporal.PlainMonthDay) {\n        const iso = val.getISOFields()\n        return temporalConstructor(\n          'PlainMonthDay',\n          [iso.isoMonth, iso.isoDay],\n          iso.calendar,\n          1972,\n          iso.isoYear\n        )\n      }\n\n      if (val instanceof Temporal.PlainTime) {\n        const iso = val.getISOFields()\n        return temporalConstructor('PlainTime', [\n          iso.isoHour,\n          iso.isoMinute,\n          iso.isoSecond,\n          iso.isoMillisecond,\n          iso.isoMicrosecond,\n          iso.isoNanosecond\n        ])\n      }\n\n      if (val instanceof Temporal.PlainYearMonth) {\n        const iso = val.getISOFields()\n        return temporalConstructor(\n          'PlainYearMonth',\n          [iso.isoYear, iso.isoMonth],\n          iso.calendar,\n          1,\n          iso.isoDay\n        )\n      }\n\n      if (val instanceof Temporal.ZonedDateTime) {\n        const iso = val.getISOFields()\n        return temporalConstructor(\n          'ZonedDateTime',\n          [val.epochNanoseconds, val.timeZoneId],\n          iso.calendar\n        )\n      }\n    }\n\n    if (Array.isArray(val)) {\n      const elements: (Expression | null)[] = Array.from({ length: val.length })\n      let trimmable: number | undefined\n\n      for (let index = 0; index < val.length; index += 1) {\n        if (!(index in val)) {\n          elements[index] = null\n          trimmable = undefined\n          continue\n        }\n\n        const child = val[index]\n        const childContext = collectedContexts.get(child)\n        if (\n          context &&\n          childContext &&\n          namedContexts.indexOf(childContext) >= namedContexts.indexOf(context)\n        ) {\n          elements[index] = null\n          trimmable ||= index\n          childContext.assignment = {\n            type: 'AssignmentExpression',\n            operator: '=',\n            left: {\n              type: 'MemberExpression',\n              computed: true,\n              optional: false,\n              object: identifier(context.name!),\n              property: literal(index)\n            },\n            right: childContext.assignment || identifier(childContext.name!)\n          }\n        } else {\n          elements[index] = generate(child)\n          trimmable = undefined\n        }\n      }\n\n      if (trimmable != null) {\n        elements.splice(trimmable)\n      }\n\n      return {\n        type: 'ArrayExpression',\n        elements\n      }\n    }\n\n    if (val instanceof Set) {\n      const elements: Expression[] = []\n      let finalizer: Expression | undefined\n\n      for (const child of val) {\n        if (finalizer) {\n          finalizer = methodCall(finalizer, 'add', [generate(child)])\n        } else {\n          const childContext = collectedContexts.get(child)\n          if (\n            context &&\n            childContext &&\n            namedContexts.indexOf(childContext) >= namedContexts.indexOf(context)\n          ) {\n            finalizer = methodCall(identifier(context.name!), 'add', [generate(child)])\n          } else {\n            elements.push(generate(child))\n          }\n        }\n      }\n\n      if (context && finalizer) {\n        context.assignment = replaceAssignment(finalizer, context.assignment)\n      }\n\n      return {\n        type: 'NewExpression',\n        callee: identifier('Set'),\n        arguments: elements.length ? [{ type: 'ArrayExpression', elements }] : []\n      }\n    }\n\n    if (val instanceof Map) {\n      const elements: ArrayExpression[] = []\n      let finalizer: Expression | undefined\n\n      for (const [key, item] of val) {\n        if (finalizer) {\n          finalizer = methodCall(finalizer, 'set', [generate(key), generate(item)])\n        } else {\n          const keyContext = collectedContexts.get(key)\n          const itemContext = collectedContexts.get(item)\n\n          if (\n            context &&\n            ((keyContext && namedContexts.indexOf(keyContext) >= namedContexts.indexOf(context)) ||\n              (itemContext && namedContexts.indexOf(itemContext) >= namedContexts.indexOf(context)))\n          ) {\n            finalizer = methodCall(identifier(context.name!), 'set', [\n              generate(key),\n              generate(item)\n            ])\n          } else {\n            elements.push({\n              type: 'ArrayExpression',\n              elements: [generate(key), generate(item)]\n            })\n          }\n        }\n      }\n\n      if (context && finalizer) {\n        context.assignment = replaceAssignment(finalizer, context.assignment)\n      }\n\n      return {\n        type: 'NewExpression',\n        callee: identifier('Map'),\n        arguments: elements.length ? [{ type: 'ArrayExpression', elements }] : []\n      }\n    }\n\n    const properties: Property[] = []\n    if (Object.getPrototypeOf(val) == null) {\n      properties.push(property('__proto__', literal(null)))\n    }\n\n    const object = val as Record<string | symbol, unknown>\n    const propertyDescriptors: Property[] = []\n    for (const key of Reflect.ownKeys(val)) {\n      // TODO [>=4] Throw an error for getters.\n      const child = object[key]\n      const { configurable, enumerable, writable } = Object.getOwnPropertyDescriptor(val, key)!\n      const childContext = collectedContexts.get(child)\n      if (!configurable || !enumerable || !writable) {\n        const propertyDescriptor = [property('value', generate(child))]\n        if (configurable) {\n          propertyDescriptor.push(property('configurable', literal(true)))\n        }\n        if (enumerable) {\n          propertyDescriptor.push(property('enumerable', literal(true)))\n        }\n        if (writable) {\n          propertyDescriptor.push(property('writable', literal(true)))\n        }\n        propertyDescriptors.push(\n          property(key, {\n            type: 'ObjectExpression',\n            properties: propertyDescriptor\n          })\n        )\n      } else if (\n        context &&\n        childContext &&\n        namedContexts.indexOf(childContext) >= namedContexts.indexOf(context)\n      ) {\n        childContext.assignment = {\n          type: 'AssignmentExpression',\n          operator: '=',\n          left: {\n            type: 'MemberExpression',\n            computed: true,\n            optional: false,\n            object: identifier(context.name!),\n            property: generate(key)\n          },\n          right: childContext.assignment || generate(child)\n        }\n      } else {\n        properties.push(property(key, generate(child)))\n      }\n    }\n\n    const objectExpression: ObjectExpression = {\n      type: 'ObjectExpression',\n      properties\n    }\n\n    if (propertyDescriptors.length) {\n      if (!context) {\n        return methodCall(identifier('Object'), 'defineProperties', [\n          objectExpression,\n          {\n            type: 'ObjectExpression',\n            properties: propertyDescriptors\n          }\n        ])\n      }\n\n      context.assignment = replaceAssignment(\n        methodCall(identifier('Object'), 'defineProperties', [\n          identifier(context.name!),\n          {\n            type: 'ObjectExpression',\n            properties: propertyDescriptors\n          }\n        ]),\n        context.assignment\n      )\n    }\n\n    return objectExpression\n  }\n\n  analyze(value)\n\n  for (const [val, context] of collectedContexts) {\n    if (context.recursive || context.count > 1) {\n      // Assign reused or recursive references to a variable.\n      context.name = `$${namedContexts.length}`\n      namedContexts.push(context)\n    } else {\n      // Otherwise don’t treat it as a reference.\n      collectedContexts.delete(val)\n    }\n  }\n\n  if (!namedContexts.length) {\n    return generate(value)\n  }\n\n  const params = namedContexts.sort(compareContexts).map<Pattern>((context) => ({\n    type: 'AssignmentPattern',\n    left: identifier(context.name!),\n    right: generate(context.value, true)\n  }))\n\n  const rootContext = collectedContexts.get(value)\n  const finalizers: Expression[] = []\n  for (const context of collectedContexts.values()) {\n    if (context !== rootContext && context.assignment) {\n      finalizers.push(context.assignment)\n    }\n  }\n  finalizers.push(\n    rootContext ? rootContext.assignment || identifier(rootContext.name!) : generate(value)\n  )\n\n  return {\n    type: 'CallExpression',\n    optional: false,\n    arguments: [],\n    callee: {\n      type: 'ArrowFunctionExpression',\n      expression: false,\n      params,\n      body: {\n        type: 'SequenceExpression',\n        expressions: finalizers\n      }\n    }\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 30981, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 30987, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/github-slugger/regex.js"],"sourcesContent":["// This module is generated by `script/`.\n/* eslint-disable no-control-regex, no-misleading-character-class, no-useless-escape */\nexport const regex = /[\\0-\\x1F!-,\\.\\/:-@\\[-\\^`\\{-\\xA9\\xAB-\\xB4\\xB6-\\xB9\\xBB-\\xBF\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0378\\u0379\\u037E\\u0380-\\u0385\\u0387\\u038B\\u038D\\u03A2\\u03F6\\u0482\\u0530\\u0557\\u0558\\u055A-\\u055F\\u0589-\\u0590\\u05BE\\u05C0\\u05C3\\u05C6\\u05C8-\\u05CF\\u05EB-\\u05EE\\u05F3-\\u060F\\u061B-\\u061F\\u066A-\\u066D\\u06D4\\u06DD\\u06DE\\u06E9\\u06FD\\u06FE\\u0700-\\u070F\\u074B\\u074C\\u07B2-\\u07BF\\u07F6-\\u07F9\\u07FB\\u07FC\\u07FE\\u07FF\\u082E-\\u083F\\u085C-\\u085F\\u086B-\\u089F\\u08B5\\u08C8-\\u08D2\\u08E2\\u0964\\u0965\\u0970\\u0984\\u098D\\u098E\\u0991\\u0992\\u09A9\\u09B1\\u09B3-\\u09B5\\u09BA\\u09BB\\u09C5\\u09C6\\u09C9\\u09CA\\u09CF-\\u09D6\\u09D8-\\u09DB\\u09DE\\u09E4\\u09E5\\u09F2-\\u09FB\\u09FD\\u09FF\\u0A00\\u0A04\\u0A0B-\\u0A0E\\u0A11\\u0A12\\u0A29\\u0A31\\u0A34\\u0A37\\u0A3A\\u0A3B\\u0A3D\\u0A43-\\u0A46\\u0A49\\u0A4A\\u0A4E-\\u0A50\\u0A52-\\u0A58\\u0A5D\\u0A5F-\\u0A65\\u0A76-\\u0A80\\u0A84\\u0A8E\\u0A92\\u0AA9\\u0AB1\\u0AB4\\u0ABA\\u0ABB\\u0AC6\\u0ACA\\u0ACE\\u0ACF\\u0AD1-\\u0ADF\\u0AE4\\u0AE5\\u0AF0-\\u0AF8\\u0B00\\u0B04\\u0B0D\\u0B0E\\u0B11\\u0B12\\u0B29\\u0B31\\u0B34\\u0B3A\\u0B3B\\u0B45\\u0B46\\u0B49\\u0B4A\\u0B4E-\\u0B54\\u0B58-\\u0B5B\\u0B5E\\u0B64\\u0B65\\u0B70\\u0B72-\\u0B81\\u0B84\\u0B8B-\\u0B8D\\u0B91\\u0B96-\\u0B98\\u0B9B\\u0B9D\\u0BA0-\\u0BA2\\u0BA5-\\u0BA7\\u0BAB-\\u0BAD\\u0BBA-\\u0BBD\\u0BC3-\\u0BC5\\u0BC9\\u0BCE\\u0BCF\\u0BD1-\\u0BD6\\u0BD8-\\u0BE5\\u0BF0-\\u0BFF\\u0C0D\\u0C11\\u0C29\\u0C3A-\\u0C3C\\u0C45\\u0C49\\u0C4E-\\u0C54\\u0C57\\u0C5B-\\u0C5F\\u0C64\\u0C65\\u0C70-\\u0C7F\\u0C84\\u0C8D\\u0C91\\u0CA9\\u0CB4\\u0CBA\\u0CBB\\u0CC5\\u0CC9\\u0CCE-\\u0CD4\\u0CD7-\\u0CDD\\u0CDF\\u0CE4\\u0CE5\\u0CF0\\u0CF3-\\u0CFF\\u0D0D\\u0D11\\u0D45\\u0D49\\u0D4F-\\u0D53\\u0D58-\\u0D5E\\u0D64\\u0D65\\u0D70-\\u0D79\\u0D80\\u0D84\\u0D97-\\u0D99\\u0DB2\\u0DBC\\u0DBE\\u0DBF\\u0DC7-\\u0DC9\\u0DCB-\\u0DCE\\u0DD5\\u0DD7\\u0DE0-\\u0DE5\\u0DF0\\u0DF1\\u0DF4-\\u0E00\\u0E3B-\\u0E3F\\u0E4F\\u0E5A-\\u0E80\\u0E83\\u0E85\\u0E8B\\u0EA4\\u0EA6\\u0EBE\\u0EBF\\u0EC5\\u0EC7\\u0ECE\\u0ECF\\u0EDA\\u0EDB\\u0EE0-\\u0EFF\\u0F01-\\u0F17\\u0F1A-\\u0F1F\\u0F2A-\\u0F34\\u0F36\\u0F38\\u0F3A-\\u0F3D\\u0F48\\u0F6D-\\u0F70\\u0F85\\u0F98\\u0FBD-\\u0FC5\\u0FC7-\\u0FFF\\u104A-\\u104F\\u109E\\u109F\\u10C6\\u10C8-\\u10CC\\u10CE\\u10CF\\u10FB\\u1249\\u124E\\u124F\\u1257\\u1259\\u125E\\u125F\\u1289\\u128E\\u128F\\u12B1\\u12B6\\u12B7\\u12BF\\u12C1\\u12C6\\u12C7\\u12D7\\u1311\\u1316\\u1317\\u135B\\u135C\\u1360-\\u137F\\u1390-\\u139F\\u13F6\\u13F7\\u13FE-\\u1400\\u166D\\u166E\\u1680\\u169B-\\u169F\\u16EB-\\u16ED\\u16F9-\\u16FF\\u170D\\u1715-\\u171F\\u1735-\\u173F\\u1754-\\u175F\\u176D\\u1771\\u1774-\\u177F\\u17D4-\\u17D6\\u17D8-\\u17DB\\u17DE\\u17DF\\u17EA-\\u180A\\u180E\\u180F\\u181A-\\u181F\\u1879-\\u187F\\u18AB-\\u18AF\\u18F6-\\u18FF\\u191F\\u192C-\\u192F\\u193C-\\u1945\\u196E\\u196F\\u1975-\\u197F\\u19AC-\\u19AF\\u19CA-\\u19CF\\u19DA-\\u19FF\\u1A1C-\\u1A1F\\u1A5F\\u1A7D\\u1A7E\\u1A8A-\\u1A8F\\u1A9A-\\u1AA6\\u1AA8-\\u1AAF\\u1AC1-\\u1AFF\\u1B4C-\\u1B4F\\u1B5A-\\u1B6A\\u1B74-\\u1B7F\\u1BF4-\\u1BFF\\u1C38-\\u1C3F\\u1C4A-\\u1C4C\\u1C7E\\u1C7F\\u1C89-\\u1C8F\\u1CBB\\u1CBC\\u1CC0-\\u1CCF\\u1CD3\\u1CFB-\\u1CFF\\u1DFA\\u1F16\\u1F17\\u1F1E\\u1F1F\\u1F46\\u1F47\\u1F4E\\u1F4F\\u1F58\\u1F5A\\u1F5C\\u1F5E\\u1F7E\\u1F7F\\u1FB5\\u1FBD\\u1FBF-\\u1FC1\\u1FC5\\u1FCD-\\u1FCF\\u1FD4\\u1FD5\\u1FDC-\\u1FDF\\u1FED-\\u1FF1\\u1FF5\\u1FFD-\\u203E\\u2041-\\u2053\\u2055-\\u2070\\u2072-\\u207E\\u2080-\\u208F\\u209D-\\u20CF\\u20F1-\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F-\\u215F\\u2189-\\u24B5\\u24EA-\\u2BFF\\u2C2F\\u2C5F\\u2CE5-\\u2CEA\\u2CF4-\\u2CFF\\u2D26\\u2D28-\\u2D2C\\u2D2E\\u2D2F\\u2D68-\\u2D6E\\u2D70-\\u2D7E\\u2D97-\\u2D9F\\u2DA7\\u2DAF\\u2DB7\\u2DBF\\u2DC7\\u2DCF\\u2DD7\\u2DDF\\u2E00-\\u2E2E\\u2E30-\\u3004\\u3008-\\u3020\\u3030\\u3036\\u3037\\u303D-\\u3040\\u3097\\u3098\\u309B\\u309C\\u30A0\\u30FB\\u3100-\\u3104\\u3130\\u318F-\\u319F\\u31C0-\\u31EF\\u3200-\\u33FF\\u4DC0-\\u4DFF\\u9FFD-\\u9FFF\\uA48D-\\uA4CF\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA62C-\\uA63F\\uA673\\uA67E\\uA6F2-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA7C0\\uA7C1\\uA7CB-\\uA7F4\\uA828-\\uA82B\\uA82D-\\uA83F\\uA874-\\uA87F\\uA8C6-\\uA8CF\\uA8DA-\\uA8DF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA954-\\uA95F\\uA97D-\\uA97F\\uA9C1-\\uA9CE\\uA9DA-\\uA9DF\\uA9FF\\uAA37-\\uAA3F\\uAA4E\\uAA4F\\uAA5A-\\uAA5F\\uAA77-\\uAA79\\uAAC3-\\uAADA\\uAADE\\uAADF\\uAAF0\\uAAF1\\uAAF7-\\uAB00\\uAB07\\uAB08\\uAB0F\\uAB10\\uAB17-\\uAB1F\\uAB27\\uAB2F\\uAB5B\\uAB6A-\\uAB6F\\uABEB\\uABEE\\uABEF\\uABFA-\\uABFF\\uD7A4-\\uD7AF\\uD7C7-\\uD7CA\\uD7FC-\\uD7FF\\uE000-\\uF8FF\\uFA6E\\uFA6F\\uFADA-\\uFAFF\\uFB07-\\uFB12\\uFB18-\\uFB1C\\uFB29\\uFB37\\uFB3D\\uFB3F\\uFB42\\uFB45\\uFBB2-\\uFBD2\\uFD3E-\\uFD4F\\uFD90\\uFD91\\uFDC8-\\uFDEF\\uFDFC-\\uFDFF\\uFE10-\\uFE1F\\uFE30-\\uFE32\\uFE35-\\uFE4C\\uFE50-\\uFE6F\\uFE75\\uFEFD-\\uFF0F\\uFF1A-\\uFF20\\uFF3B-\\uFF3E\\uFF40\\uFF5B-\\uFF65\\uFFBF-\\uFFC1\\uFFC8\\uFFC9\\uFFD0\\uFFD1\\uFFD8\\uFFD9\\uFFDD-\\uFFFF]|\\uD800[\\uDC0C\\uDC27\\uDC3B\\uDC3E\\uDC4E\\uDC4F\\uDC5E-\\uDC7F\\uDCFB-\\uDD3F\\uDD75-\\uDDFC\\uDDFE-\\uDE7F\\uDE9D-\\uDE9F\\uDED1-\\uDEDF\\uDEE1-\\uDEFF\\uDF20-\\uDF2C\\uDF4B-\\uDF4F\\uDF7B-\\uDF7F\\uDF9E\\uDF9F\\uDFC4-\\uDFC7\\uDFD0\\uDFD6-\\uDFFF]|\\uD801[\\uDC9E\\uDC9F\\uDCAA-\\uDCAF\\uDCD4-\\uDCD7\\uDCFC-\\uDCFF\\uDD28-\\uDD2F\\uDD64-\\uDDFF\\uDF37-\\uDF3F\\uDF56-\\uDF5F\\uDF68-\\uDFFF]|\\uD802[\\uDC06\\uDC07\\uDC09\\uDC36\\uDC39-\\uDC3B\\uDC3D\\uDC3E\\uDC56-\\uDC5F\\uDC77-\\uDC7F\\uDC9F-\\uDCDF\\uDCF3\\uDCF6-\\uDCFF\\uDD16-\\uDD1F\\uDD3A-\\uDD7F\\uDDB8-\\uDDBD\\uDDC0-\\uDDFF\\uDE04\\uDE07-\\uDE0B\\uDE14\\uDE18\\uDE36\\uDE37\\uDE3B-\\uDE3E\\uDE40-\\uDE5F\\uDE7D-\\uDE7F\\uDE9D-\\uDEBF\\uDEC8\\uDEE7-\\uDEFF\\uDF36-\\uDF3F\\uDF56-\\uDF5F\\uDF73-\\uDF7F\\uDF92-\\uDFFF]|\\uD803[\\uDC49-\\uDC7F\\uDCB3-\\uDCBF\\uDCF3-\\uDCFF\\uDD28-\\uDD2F\\uDD3A-\\uDE7F\\uDEAA\\uDEAD-\\uDEAF\\uDEB2-\\uDEFF\\uDF1D-\\uDF26\\uDF28-\\uDF2F\\uDF51-\\uDFAF\\uDFC5-\\uDFDF\\uDFF7-\\uDFFF]|\\uD804[\\uDC47-\\uDC65\\uDC70-\\uDC7E\\uDCBB-\\uDCCF\\uDCE9-\\uDCEF\\uDCFA-\\uDCFF\\uDD35\\uDD40-\\uDD43\\uDD48-\\uDD4F\\uDD74\\uDD75\\uDD77-\\uDD7F\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDFF\\uDE12\\uDE38-\\uDE3D\\uDE3F-\\uDE7F\\uDE87\\uDE89\\uDE8E\\uDE9E\\uDEA9-\\uDEAF\\uDEEB-\\uDEEF\\uDEFA-\\uDEFF\\uDF04\\uDF0D\\uDF0E\\uDF11\\uDF12\\uDF29\\uDF31\\uDF34\\uDF3A\\uDF45\\uDF46\\uDF49\\uDF4A\\uDF4E\\uDF4F\\uDF51-\\uDF56\\uDF58-\\uDF5C\\uDF64\\uDF65\\uDF6D-\\uDF6F\\uDF75-\\uDFFF]|\\uD805[\\uDC4B-\\uDC4F\\uDC5A-\\uDC5D\\uDC62-\\uDC7F\\uDCC6\\uDCC8-\\uDCCF\\uDCDA-\\uDD7F\\uDDB6\\uDDB7\\uDDC1-\\uDDD7\\uDDDE-\\uDDFF\\uDE41-\\uDE43\\uDE45-\\uDE4F\\uDE5A-\\uDE7F\\uDEB9-\\uDEBF\\uDECA-\\uDEFF\\uDF1B\\uDF1C\\uDF2C-\\uDF2F\\uDF3A-\\uDFFF]|\\uD806[\\uDC3B-\\uDC9F\\uDCEA-\\uDCFE\\uDD07\\uDD08\\uDD0A\\uDD0B\\uDD14\\uDD17\\uDD36\\uDD39\\uDD3A\\uDD44-\\uDD4F\\uDD5A-\\uDD9F\\uDDA8\\uDDA9\\uDDD8\\uDDD9\\uDDE2\\uDDE5-\\uDDFF\\uDE3F-\\uDE46\\uDE48-\\uDE4F\\uDE9A-\\uDE9C\\uDE9E-\\uDEBF\\uDEF9-\\uDFFF]|\\uD807[\\uDC09\\uDC37\\uDC41-\\uDC4F\\uDC5A-\\uDC71\\uDC90\\uDC91\\uDCA8\\uDCB7-\\uDCFF\\uDD07\\uDD0A\\uDD37-\\uDD39\\uDD3B\\uDD3E\\uDD48-\\uDD4F\\uDD5A-\\uDD5F\\uDD66\\uDD69\\uDD8F\\uDD92\\uDD99-\\uDD9F\\uDDAA-\\uDEDF\\uDEF7-\\uDFAF\\uDFB1-\\uDFFF]|\\uD808[\\uDF9A-\\uDFFF]|\\uD809[\\uDC6F-\\uDC7F\\uDD44-\\uDFFF]|[\\uD80A\\uD80B\\uD80E-\\uD810\\uD812-\\uD819\\uD824-\\uD82B\\uD82D\\uD82E\\uD830-\\uD833\\uD837\\uD839\\uD83D\\uD83F\\uD87B-\\uD87D\\uD87F\\uD885-\\uDB3F\\uDB41-\\uDBFF][\\uDC00-\\uDFFF]|\\uD80D[\\uDC2F-\\uDFFF]|\\uD811[\\uDE47-\\uDFFF]|\\uD81A[\\uDE39-\\uDE3F\\uDE5F\\uDE6A-\\uDECF\\uDEEE\\uDEEF\\uDEF5-\\uDEFF\\uDF37-\\uDF3F\\uDF44-\\uDF4F\\uDF5A-\\uDF62\\uDF78-\\uDF7C\\uDF90-\\uDFFF]|\\uD81B[\\uDC00-\\uDE3F\\uDE80-\\uDEFF\\uDF4B-\\uDF4E\\uDF88-\\uDF8E\\uDFA0-\\uDFDF\\uDFE2\\uDFE5-\\uDFEF\\uDFF2-\\uDFFF]|\\uD821[\\uDFF8-\\uDFFF]|\\uD823[\\uDCD6-\\uDCFF\\uDD09-\\uDFFF]|\\uD82C[\\uDD1F-\\uDD4F\\uDD53-\\uDD63\\uDD68-\\uDD6F\\uDEFC-\\uDFFF]|\\uD82F[\\uDC6B-\\uDC6F\\uDC7D-\\uDC7F\\uDC89-\\uDC8F\\uDC9A-\\uDC9C\\uDC9F-\\uDFFF]|\\uD834[\\uDC00-\\uDD64\\uDD6A-\\uDD6C\\uDD73-\\uDD7A\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDE41\\uDE45-\\uDFFF]|\\uD835[\\uDC55\\uDC9D\\uDCA0\\uDCA1\\uDCA3\\uDCA4\\uDCA7\\uDCA8\\uDCAD\\uDCBA\\uDCBC\\uDCC4\\uDD06\\uDD0B\\uDD0C\\uDD15\\uDD1D\\uDD3A\\uDD3F\\uDD45\\uDD47-\\uDD49\\uDD51\\uDEA6\\uDEA7\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3\\uDFCC\\uDFCD]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85-\\uDE9A\\uDEA0\\uDEB0-\\uDFFF]|\\uD838[\\uDC07\\uDC19\\uDC1A\\uDC22\\uDC25\\uDC2B-\\uDCFF\\uDD2D-\\uDD2F\\uDD3E\\uDD3F\\uDD4A-\\uDD4D\\uDD4F-\\uDEBF\\uDEFA-\\uDFFF]|\\uD83A[\\uDCC5-\\uDCCF\\uDCD7-\\uDCFF\\uDD4C-\\uDD4F\\uDD5A-\\uDFFF]|\\uD83B[\\uDC00-\\uDDFF\\uDE04\\uDE20\\uDE23\\uDE25\\uDE26\\uDE28\\uDE33\\uDE38\\uDE3A\\uDE3C-\\uDE41\\uDE43-\\uDE46\\uDE48\\uDE4A\\uDE4C\\uDE50\\uDE53\\uDE55\\uDE56\\uDE58\\uDE5A\\uDE5C\\uDE5E\\uDE60\\uDE63\\uDE65\\uDE66\\uDE6B\\uDE73\\uDE78\\uDE7D\\uDE7F\\uDE8A\\uDE9C-\\uDEA0\\uDEA4\\uDEAA\\uDEBC-\\uDFFF]|\\uD83C[\\uDC00-\\uDD2F\\uDD4A-\\uDD4F\\uDD6A-\\uDD6F\\uDD8A-\\uDFFF]|\\uD83E[\\uDC00-\\uDFEF\\uDFFA-\\uDFFF]|\\uD869[\\uDEDE-\\uDEFF]|\\uD86D[\\uDF35-\\uDF3F]|\\uD86E[\\uDC1E\\uDC1F]|\\uD873[\\uDEA2-\\uDEAF]|\\uD87A[\\uDFE1-\\uDFFF]|\\uD87E[\\uDE1E-\\uDFFF]|\\uD884[\\uDF4B-\\uDFFF]|\\uDB40[\\uDC00-\\uDCFF\\uDDF0-\\uDFFF]/g\n"],"names":[],"mappings":"AAAA,yCAAyC;AACzC,qFAAqF;;;AAC9E,MAAM,QAAQ","ignoreList":[0]}},
    {"offset": {"line": 30992, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 30998, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/github-slugger/index.js"],"sourcesContent":["import { regex } from './regex.js'\n\nconst own = Object.hasOwnProperty\n\n/**\n * Slugger.\n */\nexport default class BananaSlug {\n  /**\n   * Create a new slug class.\n   */\n  constructor () {\n    /** @type {Record<string, number>} */\n    // eslint-disable-next-line no-unused-expressions\n    this.occurrences\n\n    this.reset()\n  }\n\n  /**\n   * Generate a unique slug.\n  *\n  * Tracks previously generated slugs: repeated calls with the same value\n  * will result in different slugs.\n  * Use the `slug` function to get same slugs.\n   *\n   * @param  {string} value\n   *   String of text to slugify\n   * @param  {boolean} [maintainCase=false]\n   *   Keep the current case, otherwise make all lowercase\n   * @return {string}\n   *   A unique slug string\n   */\n  slug (value, maintainCase) {\n    const self = this\n    let result = slug(value, maintainCase === true)\n    const originalSlug = result\n\n    while (own.call(self.occurrences, result)) {\n      self.occurrences[originalSlug]++\n      result = originalSlug + '-' + self.occurrences[originalSlug]\n    }\n\n    self.occurrences[result] = 0\n\n    return result\n  }\n\n  /**\n   * Reset - Forget all previous slugs\n   *\n   * @return void\n   */\n  reset () {\n    this.occurrences = Object.create(null)\n  }\n}\n\n/**\n * Generate a slug.\n *\n * Does not track previously generated slugs: repeated calls with the same value\n * will result in the exact same slug.\n * Use the `GithubSlugger` class to get unique slugs.\n *\n * @param  {string} value\n *   String of text to slugify\n * @param  {boolean} [maintainCase=false]\n *   Keep the current case, otherwise make all lowercase\n * @return {string}\n *   A unique slug string\n */\nexport function slug (value, maintainCase) {\n  if (typeof value !== 'string') return ''\n  if (!maintainCase) value = value.toLowerCase()\n  return value.replace(regex, '').replace(/ /g, '-')\n}\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,MAAM,OAAO,cAAc;AAKlB,MAAM;IACnB;;GAEC,GACD,aAAe;QACb,mCAAmC,GACnC,iDAAiD;QACjD,IAAI,CAAC,WAAW;QAEhB,IAAI,CAAC,KAAK;IACZ;IAEA;;;;;;;;;;;;;GAaC,GACD,KAAM,KAAK,EAAE,YAAY,EAAE;QACzB,MAAM,OAAO,IAAI;QACjB,IAAI,SAAS,KAAK,OAAO,iBAAiB;QAC1C,MAAM,eAAe;QAErB,MAAO,IAAI,IAAI,CAAC,KAAK,WAAW,EAAE,QAAS;YACzC,KAAK,WAAW,CAAC,aAAa;YAC9B,SAAS,eAAe,MAAM,KAAK,WAAW,CAAC,aAAa;QAC9D;QAEA,KAAK,WAAW,CAAC,OAAO,GAAG;QAE3B,OAAO;IACT;IAEA;;;;GAIC,GACD,QAAS;QACP,IAAI,CAAC,WAAW,GAAG,OAAO,MAAM,CAAC;IACnC;AACF;AAgBO,SAAS,KAAM,KAAK,EAAE,YAAY;IACvC,IAAI,OAAO,UAAU,UAAU,OAAO;IACtC,IAAI,CAAC,cAAc,QAAQ,MAAM,WAAW;IAC5C,OAAO,MAAM,OAAO,CAAC,sIAAA,CAAA,QAAK,EAAE,IAAI,OAAO,CAAC,MAAM;AAChD","ignoreList":[0]}},
    {"offset": {"line": 31050, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 31056, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/slash/index.js"],"sourcesContent":["export default function slash(path) {\n\tconst isExtendedLengthPath = path.startsWith('\\\\\\\\?\\\\');\n\n\tif (isExtendedLengthPath) {\n\t\treturn path;\n\t}\n\n\treturn path.replace(/\\\\/g, '/');\n}\n"],"names":[],"mappings":";;;AAAe,SAAS,MAAM,IAAI;IACjC,MAAM,uBAAuB,KAAK,UAAU,CAAC;IAE7C,IAAI,sBAAsB;QACzB,OAAO;IACR;IAEA,OAAO,KAAK,OAAO,CAAC,OAAO;AAC5B","ignoreList":[0]}},
    {"offset": {"line": 31066, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 31072, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-extension-gfm-autolink-literal/dev/lib/syntax.js"],"sourcesContent":["/**\n * @import {Code, ConstructRecord, Event, Extension, Previous, State, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiControl,\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol'\n\nconst wwwPrefix = {tokenize: tokenizeWwwPrefix, partial: true}\nconst domain = {tokenize: tokenizeDomain, partial: true}\nconst path = {tokenize: tokenizePath, partial: true}\nconst trail = {tokenize: tokenizeTrail, partial: true}\nconst emailDomainDotTrail = {\n  tokenize: tokenizeEmailDomainDotTrail,\n  partial: true\n}\n\nconst wwwAutolink = {\n  name: 'wwwAutolink',\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n}\n\nconst protocolAutolink = {\n  name: 'protocolAutolink',\n  tokenize: tokenizeProtocolAutolink,\n  previous: previousProtocol\n}\n\nconst emailAutolink = {\n  name: 'emailAutolink',\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n}\n\n/** @type {ConstructRecord} */\nconst text = {}\n\n/**\n * Create an extension for `micromark` to support GitHub autolink literal\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   autolink literal syntax.\n */\nexport function gfmAutolinkLiteral() {\n  return {text}\n}\n\n/** @type {Code} */\nlet code = codes.digit0\n\n// Add alphanumerics.\nwhile (code < codes.leftCurlyBrace) {\n  text[code] = emailAutolink\n  code++\n  if (code === codes.colon) code = codes.uppercaseA\n  else if (code === codes.leftSquareBracket) code = codes.lowercaseA\n}\n\ntext[codes.plusSign] = emailAutolink\ntext[codes.dash] = emailAutolink\ntext[codes.dot] = emailAutolink\ntext[codes.underscore] = emailAutolink\ntext[codes.uppercaseH] = [emailAutolink, protocolAutolink]\ntext[codes.lowercaseH] = [emailAutolink, protocolAutolink]\ntext[codes.uppercaseW] = [emailAutolink, wwwAutolink]\ntext[codes.lowercaseW] = [emailAutolink, wwwAutolink]\n\n// To do: perform email autolink literals on events, afterwards.\n// That’s where `markdown-rs` and `cmark-gfm` perform it.\n// It should look for `@`, then for atext backwards, and then for a label\n// forwards.\n// To do: `mailto:`, `xmpp:` protocol as prefix.\n\n/**\n * Email autolink literal.\n *\n * ```markdown\n * > | a contact@example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this\n  /** @type {boolean | undefined} */\n  let dot\n  /** @type {boolean} */\n  let data\n\n  return start\n\n  /**\n   * Start of email autolink literal.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (\n      !gfmAtext(code) ||\n      !previousEmail.call(self, self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkEmail')\n    return atext(code)\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code)\n      return atext\n    }\n\n    if (code === codes.atSign) {\n      effects.consume(code)\n      return emailDomain\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In email domain.\n   *\n   * The reference code is a bit overly complex as it handles the `@`, of which\n   * there may be just one.\n   * Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L318>\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomain(code) {\n    // Dot followed by alphanumerical (not `-` or `_`).\n    if (code === codes.dot) {\n      return effects.check(\n        emailDomainDotTrail,\n        emailDomainAfter,\n        emailDomainDot\n      )(code)\n    }\n\n    // Alphanumerical, `-`, and `_`.\n    if (\n      code === codes.dash ||\n      code === codes.underscore ||\n      asciiAlphanumeric(code)\n    ) {\n      data = true\n      effects.consume(code)\n      return emailDomain\n    }\n\n    // To do: `/` if xmpp.\n\n    // Note: normally we’d truncate trailing punctuation from the link.\n    // However, email autolink literals cannot contain any of those markers,\n    // except for `.`, but that can only occur if it isn’t trailing.\n    // So we can ignore truncating!\n    return emailDomainAfter(code)\n  }\n\n  /**\n   * In email domain, on dot that is not a trail.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainDot(code) {\n    effects.consume(code)\n    dot = true\n    return emailDomain\n  }\n\n  /**\n   * After email domain.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainAfter(code) {\n    // Domain must not be empty, must include a dot, and must end in alphabetical.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L332>.\n    if (data && dot && asciiAlpha(self.previous)) {\n      effects.exit('literalAutolinkEmail')\n      effects.exit('literalAutolink')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\n/**\n * `www` autolink literal.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this\n\n  return wwwStart\n\n  /**\n   * Start of www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwStart(code) {\n    if (\n      (code !== codes.uppercaseW && code !== codes.lowercaseW) ||\n      !previousWww.call(self, self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkWww')\n    // Note: we *check*, so we can discard the `www.` we parsed.\n    // If it worked, we consider it as a part of the domain.\n    return effects.check(\n      wwwPrefix,\n      effects.attempt(domain, effects.attempt(path, wwwAfter), nok),\n      nok\n    )(code)\n  }\n\n  /**\n   * After a www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwAfter(code) {\n    effects.exit('literalAutolinkWww')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n\n/**\n * Protocol autolink literal.\n *\n * ```markdown\n * > | a https://example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeProtocolAutolink(effects, ok, nok) {\n  const self = this\n  let buffer = ''\n  let seen = false\n\n  return protocolStart\n\n  /**\n   * Start of protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolStart(code) {\n    if (\n      (code === codes.uppercaseH || code === codes.lowercaseH) &&\n      previousProtocol.call(self, self.previous) &&\n      !previousUnbalanced(self.events)\n    ) {\n      effects.enter('literalAutolink')\n      effects.enter('literalAutolinkHttp')\n      buffer += String.fromCodePoint(code)\n      effects.consume(code)\n      return protocolPrefixInside\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In protocol.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolPrefixInside(code) {\n    // `5` is size of `https`\n    if (asciiAlpha(code) && buffer.length < 5) {\n      // @ts-expect-error: definitely number.\n      buffer += String.fromCodePoint(code)\n      effects.consume(code)\n      return protocolPrefixInside\n    }\n\n    if (code === codes.colon) {\n      const protocol = buffer.toLowerCase()\n\n      if (protocol === 'http' || protocol === 'https') {\n        effects.consume(code)\n        return protocolSlashesInside\n      }\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In slashes.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *           ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolSlashesInside(code) {\n    if (code === codes.slash) {\n      effects.consume(code)\n\n      if (seen) {\n        return afterProtocol\n      }\n\n      seen = true\n      return protocolSlashesInside\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After protocol, before domain.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterProtocol(code) {\n    // To do: this is different from `markdown-rs`:\n    // https://github.com/wooorm/markdown-rs/blob/b3a921c761309ae00a51fe348d8a43adbc54b518/src/construct/gfm_autolink_literal.rs#L172-L182\n    return code === codes.eof ||\n      asciiControl(code) ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)\n      ? nok(code)\n      : effects.attempt(domain, effects.attempt(path, protocolAfter), nok)(code)\n  }\n\n  /**\n   * After a protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *                              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolAfter(code) {\n    effects.exit('literalAutolinkHttp')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n\n/**\n * `www` prefix.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwPrefix(effects, ok, nok) {\n  let size = 0\n\n  return wwwPrefixInside\n\n  /**\n   * In www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *     ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixInside(code) {\n    if ((code === codes.uppercaseW || code === codes.lowercaseW) && size < 3) {\n      size++\n      effects.consume(code)\n      return wwwPrefixInside\n    }\n\n    if (code === codes.dot && size === 3) {\n      effects.consume(code)\n      return wwwPrefixAfter\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixAfter(code) {\n    // If there is *anything*, we can link.\n    return code === codes.eof ? nok(code) : ok(code)\n  }\n}\n\n/**\n * Domain.\n *\n * ```markdown\n * > | a https://example.org b\n *               ^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean | undefined} */\n  let underscoreInLastSegment\n  /** @type {boolean | undefined} */\n  let underscoreInLastLastSegment\n  /** @type {boolean | undefined} */\n  let seen\n\n  return domainInside\n\n  /**\n   * In domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *             ^^^^^^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainInside(code) {\n    // Check whether this marker, which is a trailing punctuation\n    // marker, optionally followed by more trailing markers, and then\n    // followed by an end.\n    if (code === codes.dot || code === codes.underscore) {\n      return effects.check(trail, domainAfter, domainAtPunctuation)(code)\n    }\n\n    // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L12>.\n    if (\n      code === codes.eof ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code) ||\n      (code !== codes.dash && unicodePunctuation(code))\n    ) {\n      return domainAfter(code)\n    }\n\n    seen = true\n    effects.consume(code)\n    return domainInside\n  }\n\n  /**\n   * In domain, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainAtPunctuation(code) {\n    // There is an underscore in the last segment of the domain\n    if (code === codes.underscore) {\n      underscoreInLastSegment = true\n    }\n    // Otherwise, it’s a `.`: save the last segment underscore in the\n    // penultimate segment slot.\n    else {\n      underscoreInLastLastSegment = underscoreInLastSegment\n      underscoreInLastSegment = undefined\n    }\n\n    effects.consume(code)\n    return domainInside\n  }\n\n  /**\n   * After domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^\n   * ```\n   *\n   * @type {State} */\n  function domainAfter(code) {\n    // Note: that’s GH says a dot is needed, but it’s not true:\n    // <https://github.com/github/cmark-gfm/issues/279>\n    if (underscoreInLastLastSegment || underscoreInLastSegment || !seen) {\n      return nok(code)\n    }\n\n    return ok(code)\n  }\n}\n\n/**\n * Path.\n *\n * ```markdown\n * > | a https://example.org/stuff b\n *                          ^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePath(effects, ok) {\n  let sizeOpen = 0\n  let sizeClose = 0\n\n  return pathInside\n\n  /**\n   * In path.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathInside(code) {\n    if (code === codes.leftParenthesis) {\n      sizeOpen++\n      effects.consume(code)\n      return pathInside\n    }\n\n    // To do: `markdown-rs` also needs this.\n    // If this is a paren, and there are less closings than openings,\n    // we don’t check for a trail.\n    if (code === codes.rightParenthesis && sizeClose < sizeOpen) {\n      return pathAtPunctuation(code)\n    }\n\n    // Check whether this trailing punctuation marker is optionally\n    // followed by more trailing markers, and then followed\n    // by an end.\n    if (\n      code === codes.exclamationMark ||\n      code === codes.quotationMark ||\n      code === codes.ampersand ||\n      code === codes.apostrophe ||\n      code === codes.rightParenthesis ||\n      code === codes.asterisk ||\n      code === codes.comma ||\n      code === codes.dot ||\n      code === codes.colon ||\n      code === codes.semicolon ||\n      code === codes.lessThan ||\n      code === codes.questionMark ||\n      code === codes.rightSquareBracket ||\n      code === codes.underscore ||\n      code === codes.tilde\n    ) {\n      return effects.check(trail, ok, pathAtPunctuation)(code)\n    }\n\n    if (\n      code === codes.eof ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n\n    effects.consume(code)\n    return pathInside\n  }\n\n  /**\n   * In path, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com/a\"b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathAtPunctuation(code) {\n    // Count closing parens.\n    if (code === codes.rightParenthesis) {\n      sizeClose++\n    }\n\n    effects.consume(code)\n    return pathInside\n  }\n}\n\n/**\n * Trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the entire trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | https://example.com\").\n *                        ^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTrail(effects, ok, nok) {\n  return trail\n\n  /**\n   * In trail of domain or path.\n   *\n   * ```markdown\n   * > | https://example.com\").\n   *                        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trail(code) {\n    // Regular trailing punctuation.\n    if (\n      code === codes.exclamationMark ||\n      code === codes.quotationMark ||\n      code === codes.apostrophe ||\n      code === codes.rightParenthesis ||\n      code === codes.asterisk ||\n      code === codes.comma ||\n      code === codes.dot ||\n      code === codes.colon ||\n      code === codes.semicolon ||\n      code === codes.questionMark ||\n      code === codes.underscore ||\n      code === codes.tilde\n    ) {\n      effects.consume(code)\n      return trail\n    }\n\n    // `&` followed by one or more alphabeticals and then a `;`, is\n    // as a whole considered as trailing punctuation.\n    // In all other cases, it is considered as continuation of the URL.\n    if (code === codes.ampersand) {\n      effects.consume(code)\n      return trailCharacterReferenceStart\n    }\n\n    // Needed because we allow literals after `[`, as we fix:\n    // <https://github.com/github/cmark-gfm/issues/278>.\n    // Check that it is not followed by `(` or `[`.\n    if (code === codes.rightSquareBracket) {\n      effects.consume(code)\n      return trailBracketAfter\n    }\n\n    if (\n      // `<` is an end.\n      code === codes.lessThan ||\n      // So is whitespace.\n      code === codes.eof ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In trail, after `]`.\n   *\n   * > 👉 **Note**: this deviates from `cmark-gfm` to fix a bug.\n   * > See end of <https://github.com/github/cmark-gfm/issues/278> for more.\n   *\n   * ```markdown\n   * > | https://example.com](\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailBracketAfter(code) {\n    // Whitespace or something that could start a resource or reference is the end.\n    // Switch back to trail otherwise.\n    if (\n      code === codes.eof ||\n      code === codes.leftParenthesis ||\n      code === codes.leftSquareBracket ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n\n    return trail(code)\n  }\n\n  /**\n   * In character-reference like trail, after `&`.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharacterReferenceStart(code) {\n    // When non-alpha, it’s not a trail.\n    return asciiAlpha(code) ? trailCharacterReferenceInside(code) : nok(code)\n  }\n\n  /**\n   * In character-reference like trail.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharacterReferenceInside(code) {\n    // Switch back to trail if this is well-formed.\n    if (code === codes.semicolon) {\n      effects.consume(code)\n      return trail\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return trailCharacterReferenceInside\n    }\n\n    // It’s not a trail.\n    return nok(code)\n  }\n}\n\n/**\n * Dot in email domain trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | contact@example.org.\n *                        ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailDomainDotTrail(effects, ok, nok) {\n  return start\n\n  /**\n   * Dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                    ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Must be dot.\n    effects.consume(code)\n    return after\n  }\n\n  /**\n   * After dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                     ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Not a trail if alphanumeric.\n    return asciiAlphanumeric(code) ? nok(code) : ok(code)\n  }\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L156>.\n *\n * @type {Previous}\n */\nfunction previousWww(code) {\n  return (\n    code === codes.eof ||\n    code === codes.leftParenthesis ||\n    code === codes.asterisk ||\n    code === codes.underscore ||\n    code === codes.leftSquareBracket ||\n    code === codes.rightSquareBracket ||\n    code === codes.tilde ||\n    markdownLineEndingOrSpace(code)\n  )\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L214>.\n *\n * @type {Previous}\n */\nfunction previousProtocol(code) {\n  return !asciiAlpha(code)\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previousEmail(code) {\n  // Do not allow a slash “inside” atext.\n  // The reference code is a bit weird, but that’s what it results in.\n  // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L307>.\n  // Other than slash, every preceding character is allowed.\n  return !(code === codes.slash || gfmAtext(code))\n}\n\n/**\n * @param {Code} code\n * @returns {boolean}\n */\nfunction gfmAtext(code) {\n  return (\n    code === codes.plusSign ||\n    code === codes.dash ||\n    code === codes.dot ||\n    code === codes.underscore ||\n    asciiAlphanumeric(code)\n  )\n}\n\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\nfunction previousUnbalanced(events) {\n  let index = events.length\n  let result = false\n\n  while (index--) {\n    const token = events[index][1]\n\n    if (\n      (token.type === 'labelLink' || token.type === 'labelImage') &&\n      !token._balanced\n    ) {\n      result = true\n      break\n    }\n\n    // If we’ve seen this token, and it was marked as not having any unbalanced\n    // bracket before it, we can exit.\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false\n      break\n    }\n  }\n\n  if (events.length > 0 && !result) {\n    // Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true\n  }\n\n  return result\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 31840, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 31846, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-extension-gfm-autolink-literal/dev/lib/html.js"],"sourcesContent":["/**\n * @import {CompileContext, Handle, HtmlExtension, Token} from 'micromark-util-types'\n */\n\nimport {sanitizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Create an HTML extension for `micromark` to support GitHub autolink literal\n * when serializing to HTML.\n *\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GitHub autolink literal when serializing to HTML.\n */\nexport function gfmAutolinkLiteralHtml() {\n  return {\n    exit: {literalAutolinkEmail, literalAutolinkHttp, literalAutolinkWww}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {Handle}\n */\nfunction literalAutolinkWww(token) {\n  anchorFromToken.call(this, token, 'http://')\n}\n\n/**\n * @this {CompileContext}\n * @type {Handle}\n */\nfunction literalAutolinkEmail(token) {\n  anchorFromToken.call(this, token, 'mailto:')\n}\n\n/**\n * @this {CompileContext}\n * @type {Handle}\n */\nfunction literalAutolinkHttp(token) {\n  anchorFromToken.call(this, token)\n}\n\n/**\n * @this CompileContext\n * @param {Token} token\n * @param {string | null | undefined} [protocol]\n * @returns {undefined}\n */\nfunction anchorFromToken(token, protocol) {\n  const url = this.sliceSerialize(token)\n  this.tag('<a href=\"' + sanitizeUri((protocol || '') + url) + '\">')\n  this.raw(this.encode(url))\n  this.tag('</a>')\n}\n"],"names":[],"mappings":"AAAA;;CAEC;;;AAED;;AAUO,SAAS;IACd,OAAO;QACL,MAAM;YAAC;YAAsB;YAAqB;QAAkB;IACtE;AACF;AAEA;;;CAGC,GACD,SAAS,mBAAmB,KAAK;IAC/B,gBAAgB,IAAI,CAAC,IAAI,EAAE,OAAO;AACpC;AAEA;;;CAGC,GACD,SAAS,qBAAqB,KAAK;IACjC,gBAAgB,IAAI,CAAC,IAAI,EAAE,OAAO;AACpC;AAEA;;;CAGC,GACD,SAAS,oBAAoB,KAAK;IAChC,gBAAgB,IAAI,CAAC,IAAI,EAAE;AAC7B;AAEA;;;;;CAKC,GACD,SAAS,gBAAgB,KAAK,EAAE,QAAQ;IACtC,MAAM,MAAM,IAAI,CAAC,cAAc,CAAC;IAChC,IAAI,CAAC,GAAG,CAAC,cAAc,CAAA,GAAA,gKAAA,CAAA,cAAW,AAAD,EAAE,CAAC,YAAY,EAAE,IAAI,OAAO;IAC7D,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;IACrB,IAAI,CAAC,GAAG,CAAC;AACX","ignoreList":[0]}},
    {"offset": {"line": 31891, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 31897, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-extension-gfm-footnote/dev/lib/syntax.js"],"sourcesContent":["/**\n * @import {Event, Exiter, Extension, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {blankLine} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\nconst indent = {tokenize: tokenizeIndent, partial: true}\n\n// To do: micromark should support a `_hiddenGfmFootnoteSupport`, which only\n// affects label start (image).\n// That will let us drop `tokenizePotentialGfmFootnote*`.\n// It currently has a `_hiddenFootnoteSupport`, which affects that and more.\n// That can be removed when `micromark-extension-footnote` is archived.\n\n/**\n * Create an extension for `micromark` to enable GFM footnote syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to\n *   enable GFM footnote syntax.\n */\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [codes.leftSquareBracket]: {\n        name: 'gfmFootnoteDefinition',\n        tokenize: tokenizeDefinitionStart,\n        continuation: {tokenize: tokenizeDefinitionContinuation},\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [codes.leftSquareBracket]: {\n        name: 'gfmFootnoteCall',\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [codes.rightSquareBracket]: {\n        name: 'gfmPotentialFootnoteCall',\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  }\n}\n\n// To do: remove after micromark update.\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {Token} */\n  let labelStart\n\n  // Find an opening.\n  while (index--) {\n    const token = self.events[index][1]\n\n    if (token.type === types.labelImage) {\n      labelStart = token\n      break\n    }\n\n    // Exit if we’ve walked far enough.\n    if (\n      token.type === 'gfmFootnoteCall' ||\n      token.type === types.labelLink ||\n      token.type === types.label ||\n      token.type === types.image ||\n      token.type === types.link\n    ) {\n      break\n    }\n  }\n\n  return start\n\n  /**\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.rightSquareBracket, 'expected `]`')\n\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code)\n    }\n\n    const id = normalizeIdentifier(\n      self.sliceSerialize({start: labelStart.end, end: self.now()})\n    )\n\n    if (id.codePointAt(0) !== codes.caret || !defined.includes(id.slice(1))) {\n      return nok(code)\n    }\n\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return ok(code)\n  }\n}\n\n// To do: remove after micromark update.\n/** @type {Resolver} */\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length\n  /** @type {Token | undefined} */\n  let labelStart\n\n  // Find an opening.\n  while (index--) {\n    if (\n      events[index][1].type === types.labelImage &&\n      events[index][0] === 'enter'\n    ) {\n      labelStart = events[index][1]\n      break\n    }\n  }\n\n  assert(labelStart, 'expected `labelStart` to resolve')\n\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = types.data\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker'\n\n  // The whole (without `!`):\n  /** @type {Token} */\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  // The `^` marker\n  /** @type {Token} */\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  }\n  // Increment the end 1 character.\n  marker.end.column++\n  marker.end.offset++\n  marker.end._bufferIndex++\n  /** @type {Token} */\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  }\n  /** @type {Token} */\n  const chunk = {\n    type: types.chunkString,\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  }\n\n  /** @type {Array<Event>} */\n  const replacement = [\n    // Take the `labelImageMarker` (now `data`, the `!`)\n    events[index + 1],\n    events[index + 2],\n    ['enter', call, context],\n    // The `[`\n    events[index + 3],\n    events[index + 4],\n    // The `^`.\n    ['enter', marker, context],\n    ['exit', marker, context],\n    // Everything in between.\n    ['enter', string, context],\n    ['enter', chunk, context],\n    ['exit', chunk, context],\n    ['exit', string, context],\n    // The ending (`]`, properly parsed and labelled).\n    events[events.length - 2],\n    events[events.length - 1],\n    ['exit', call, context]\n  ]\n\n  events.splice(index, events.length - index + 1, ...replacement)\n\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  let size = 0\n  /** @type {boolean} */\n  let data\n\n  // Note: the implementation of `markdown-rs` is different, because it houses\n  // core *and* extensions in one project.\n  // Therefore, it can include footnote logic inside `label-end`.\n  // We can’t do that, but luckily, we can parse footnotes in a simpler way than\n  // needed for labels.\n  return start\n\n  /**\n   * Start of footnote label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.leftSquareBracket, 'expected `[`')\n    effects.enter('gfmFootnoteCall')\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return callStart\n  }\n\n  /**\n   * After `[`, at `^`.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callStart(code) {\n    if (code !== codes.caret) return nok(code)\n\n    effects.enter('gfmFootnoteCallMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallMarker')\n    effects.enter('gfmFootnoteCallString')\n    effects.enter('chunkString').contentType = 'string'\n    return callData\n  }\n\n  /**\n   * In label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callData(code) {\n    if (\n      // Too long.\n      size > constants.linkReferenceSizeMax ||\n      // Closing brace with nothing.\n      (code === codes.rightSquareBracket && !data) ||\n      // Space or tab is not supported by GFM for some reason.\n      // `\\n` and `[` not being supported makes sense.\n      code === codes.eof ||\n      code === codes.leftSquareBracket ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return nok(code)\n    }\n\n    if (code === codes.rightSquareBracket) {\n      effects.exit('chunkString')\n      const token = effects.exit('gfmFootnoteCallString')\n\n      if (!defined.includes(normalizeIdentifier(self.sliceSerialize(token)))) {\n        return nok(code)\n      }\n\n      effects.enter('gfmFootnoteCallLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteCallLabelMarker')\n      effects.exit('gfmFootnoteCall')\n      return ok\n    }\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    size++\n    effects.consume(code)\n    return code === codes.backslash ? callEscape : callData\n  }\n\n  /**\n   * On character after escape.\n   *\n   * ```markdown\n   * > | a [^b\\c] d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callEscape(code) {\n    if (\n      code === codes.leftSquareBracket ||\n      code === codes.backslash ||\n      code === codes.rightSquareBracket\n    ) {\n      effects.consume(code)\n      size++\n      return callData\n    }\n\n    return callData(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {string} */\n  let identifier\n  let size = 0\n  /** @type {boolean | undefined} */\n  let data\n\n  return start\n\n  /**\n   * Start of GFM footnote definition.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.leftSquareBracket, 'expected `[`')\n    effects.enter('gfmFootnoteDefinition')._container = true\n    effects.enter('gfmFootnoteDefinitionLabel')\n    effects.enter('gfmFootnoteDefinitionLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteDefinitionLabelMarker')\n    return labelAtMarker\n  }\n\n  /**\n   * In label, at caret.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAtMarker(code) {\n    if (code === codes.caret) {\n      effects.enter('gfmFootnoteDefinitionMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionMarker')\n      effects.enter('gfmFootnoteDefinitionLabelString')\n      effects.enter('chunkString').contentType = 'string'\n      return labelInside\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In label.\n   *\n   * > 👉 **Note**: `cmark-gfm` prevents whitespace from occurring in footnote\n   * > definition labels.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      // Too long.\n      size > constants.linkReferenceSizeMax ||\n      // Closing brace with nothing.\n      (code === codes.rightSquareBracket && !data) ||\n      // Space or tab is not supported by GFM for some reason.\n      // `\\n` and `[` not being supported makes sense.\n      code === codes.eof ||\n      code === codes.leftSquareBracket ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return nok(code)\n    }\n\n    if (code === codes.rightSquareBracket) {\n      effects.exit('chunkString')\n      const token = effects.exit('gfmFootnoteDefinitionLabelString')\n      identifier = normalizeIdentifier(self.sliceSerialize(token))\n      effects.enter('gfmFootnoteDefinitionLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionLabelMarker')\n      effects.exit('gfmFootnoteDefinitionLabel')\n      return labelAfter\n    }\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    size++\n    effects.consume(code)\n    return code === codes.backslash ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * > 👉 **Note**: `cmark-gfm` currently does not support escaped brackets:\n   * > <https://github.com/github/cmark-gfm/issues/240>\n   *\n   * ```markdown\n   * > | [^a\\*b]: c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (\n      code === codes.leftSquareBracket ||\n      code === codes.backslash ||\n      code === codes.rightSquareBracket\n    ) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n\n    return labelInside(code)\n  }\n\n  /**\n   * After definition label.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    if (code === codes.colon) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker')\n\n      if (!defined.includes(identifier)) {\n        defined.push(identifier)\n      }\n\n      // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n      return factorySpace(\n        effects,\n        whitespaceAfter,\n        'gfmFootnoteDefinitionWhitespace'\n      )\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After definition prefix.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function whitespaceAfter(code) {\n    // `markdown-rs` has a wrapping token for the prefix that is closed here.\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  /// Start of footnote definition continuation.\n  ///\n  /// ```markdown\n  ///   | [^a]: b\n  /// > |     c\n  ///     ^\n  /// ```\n  //\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok))\n}\n\n/** @type {Exiter} */\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition')\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'gfmFootnoteDefinitionIndent',\n    constants.tabSize + 1\n  )\n\n  /**\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'gfmFootnoteDefinitionIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === constants.tabSize\n      ? ok(code)\n      : nok(code)\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 32365, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 32371, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-extension-gfm-footnote/dev/lib/html.js"],"sourcesContent":["/**\n * @import {HtmlOptions as Options} from 'micromark-extension-gfm-footnote'\n * @import {HtmlExtension} from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {sanitizeUri} from 'micromark-util-sanitize-uri'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Generate the default label that GitHub uses on backreferences.\n *\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Default label.\n */\nexport function defaultBackLabel(referenceIndex, rereferenceIndex) {\n  return (\n    'Back to reference ' +\n    (referenceIndex + 1) +\n    (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n  )\n}\n\n/**\n * Create an extension for `micromark` to support GFM footnotes when\n * serializing to HTML.\n *\n * @param {Options | null | undefined} [options={}]\n *   Configuration (optional).\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM footnotes when serializing to HTML.\n */\nexport function gfmFootnoteHtml(options) {\n  const config = options || emptyOptions\n  const label = config.label || 'Footnotes'\n  const labelTagName = config.labelTagName || 'h2'\n  const labelAttributes =\n    config.labelAttributes === null || config.labelAttributes === undefined\n      ? 'class=\"sr-only\"'\n      : config.labelAttributes\n  const backLabel = config.backLabel || defaultBackLabel\n  const clobberPrefix =\n    config.clobberPrefix === null || config.clobberPrefix === undefined\n      ? 'user-content-'\n      : config.clobberPrefix\n  return {\n    enter: {\n      gfmFootnoteDefinition() {\n        const stack = this.getData('tightStack')\n        stack.push(false)\n      },\n      gfmFootnoteDefinitionLabelString() {\n        this.buffer()\n      },\n      gfmFootnoteCallString() {\n        this.buffer()\n      }\n    },\n    exit: {\n      gfmFootnoteDefinition() {\n        let definitions = this.getData('gfmFootnoteDefinitions')\n        const footnoteStack = this.getData('gfmFootnoteDefinitionStack')\n        assert(footnoteStack, 'expected `footnoteStack`')\n        const tightStack = this.getData('tightStack')\n        const current = footnoteStack.pop()\n        const value = this.resume()\n\n        assert(current, 'expected to be in a footnote')\n\n        if (!definitions) {\n          this.setData('gfmFootnoteDefinitions', (definitions = {}))\n        }\n\n        if (!own.call(definitions, current)) definitions[current] = value\n\n        tightStack.pop()\n        this.setData('slurpOneLineEnding', true)\n        // “Hack” to prevent a line ending from showing up if we’re in a definition in\n        // an empty list item.\n        this.setData('lastWasTag')\n      },\n      gfmFootnoteDefinitionLabelString(token) {\n        let footnoteStack = this.getData('gfmFootnoteDefinitionStack')\n\n        if (!footnoteStack) {\n          this.setData('gfmFootnoteDefinitionStack', (footnoteStack = []))\n        }\n\n        footnoteStack.push(normalizeIdentifier(this.sliceSerialize(token)))\n        this.resume() // Drop the label.\n        this.buffer() // Get ready for a value.\n      },\n      gfmFootnoteCallString(token) {\n        let calls = this.getData('gfmFootnoteCallOrder')\n        let counts = this.getData('gfmFootnoteCallCounts')\n        const id = normalizeIdentifier(this.sliceSerialize(token))\n        /** @type {number} */\n        let counter\n\n        this.resume()\n\n        if (!calls) this.setData('gfmFootnoteCallOrder', (calls = []))\n        if (!counts) this.setData('gfmFootnoteCallCounts', (counts = {}))\n\n        const index = calls.indexOf(id)\n        const safeId = sanitizeUri(id.toLowerCase())\n\n        if (index === -1) {\n          calls.push(id)\n          counts[id] = 1\n          counter = calls.length\n        } else {\n          counts[id]++\n          counter = index + 1\n        }\n\n        const reuseCounter = counts[id]\n\n        this.tag(\n          '<sup><a href=\"#' +\n            clobberPrefix +\n            'fn-' +\n            safeId +\n            '\" id=\"' +\n            clobberPrefix +\n            'fnref-' +\n            safeId +\n            (reuseCounter > 1 ? '-' + reuseCounter : '') +\n            '\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">' +\n            String(counter) +\n            '</a></sup>'\n        )\n      },\n      null() {\n        const calls = this.getData('gfmFootnoteCallOrder') || []\n        const counts = this.getData('gfmFootnoteCallCounts') || {}\n        const definitions = this.getData('gfmFootnoteDefinitions') || {}\n        let index = -1\n\n        if (calls.length > 0) {\n          this.lineEndingIfNeeded()\n          this.tag(\n            '<section data-footnotes=\"\" class=\"footnotes\"><' +\n              labelTagName +\n              ' id=\"footnote-label\"' +\n              (labelAttributes ? ' ' + labelAttributes : '') +\n              '>'\n          )\n          this.raw(this.encode(label))\n          this.tag('</' + labelTagName + '>')\n          this.lineEndingIfNeeded()\n          this.tag('<ol>')\n        }\n\n        while (++index < calls.length) {\n          // Called definitions are always defined.\n          const id = calls[index]\n          const safeId = sanitizeUri(id.toLowerCase())\n          let referenceIndex = 0\n          /** @type {Array<string>} */\n          const references = []\n\n          while (++referenceIndex <= counts[id]) {\n            references.push(\n              '<a href=\"#' +\n                clobberPrefix +\n                'fnref-' +\n                safeId +\n                (referenceIndex > 1 ? '-' + referenceIndex : '') +\n                '\" data-footnote-backref=\"\" aria-label=\"' +\n                this.encode(\n                  typeof backLabel === 'string'\n                    ? backLabel\n                    : backLabel(index, referenceIndex)\n                ) +\n                '\" class=\"data-footnote-backref\">↩' +\n                (referenceIndex > 1\n                  ? '<sup>' + referenceIndex + '</sup>'\n                  : '') +\n                '</a>'\n            )\n          }\n\n          const reference = references.join(' ')\n          let injected = false\n\n          this.lineEndingIfNeeded()\n          this.tag('<li id=\"' + clobberPrefix + 'fn-' + safeId + '\">')\n          this.lineEndingIfNeeded()\n          this.tag(\n            definitions[id].replace(/<\\/p>(?:\\r?\\n|\\r)?$/, function ($0) {\n              injected = true\n              return ' ' + reference + $0\n            })\n          )\n\n          if (!injected) {\n            this.lineEndingIfNeeded()\n            this.tag(reference)\n          }\n\n          this.lineEndingIfNeeded()\n          this.tag('</li>')\n        }\n\n        if (calls.length > 0) {\n          this.lineEndingIfNeeded()\n          this.tag('</ol>')\n          this.lineEndingIfNeeded()\n          this.tag('</section>')\n        }\n      }\n    }\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 32508, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 32514, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-extension-gfm-strikethrough/dev/lib/syntax.js"],"sourcesContent":["/**\n * @import {Options} from 'micromark-extension-gfm-strikethrough'\n * @import {Event, Extension, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\n/**\n * Create an extension for `micromark` to enable GFM strikethrough syntax.\n *\n * @param {Options | null | undefined} [options={}]\n *   Configuration.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable GFM strikethrough syntax.\n */\nexport function gfmStrikethrough(options) {\n  const options_ = options || {}\n  let single = options_.singleTilde\n  const tokenizer = {\n    name: 'strikethrough',\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n\n  if (single === null || single === undefined) {\n    single = true\n  }\n\n  return {\n    text: {[codes.tilde]: tokenizer},\n    insideSpan: {null: [tokenizer]},\n    attentionMarkers: {null: [codes.tilde]}\n  }\n\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n  function resolveAllStrikethrough(events, context) {\n    let index = -1\n\n    // Walk through all events.\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        let open = index\n\n        // Now walk back to find an opener.\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open &&\n            // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n\n            /** @type {Token} */\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            }\n\n            /** @type {Token} */\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            }\n\n            // Opening.\n            /** @type {Array<Event>} */\n            const nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ]\n\n            const insideSpan = context.parser.constructs.insideSpan.null\n\n            if (insideSpan) {\n              // Between.\n              splice(\n                nextEvents,\n                nextEvents.length,\n                0,\n                resolveAll(insideSpan, events.slice(open + 1, index), context)\n              )\n            }\n\n            // Closing.\n            splice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n\n            splice(events, open - 1, index - open + 3, nextEvents)\n\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = types.data\n      }\n    }\n\n    return events\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous\n    const events = this.events\n    let size = 0\n\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      assert(code === codes.tilde, 'expected `~`')\n\n      if (\n        previous === codes.tilde &&\n        events[events.length - 1][1].type !== types.characterEscape\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n\n    /** @type {State} */\n    function more(code) {\n      const before = classifyCharacter(previous)\n\n      if (code === codes.tilde) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n\n      if (size < 2 && !single) return nok(code)\n      const token = effects.exit('strikethroughSequenceTemporary')\n      const after = classifyCharacter(code)\n      token._open =\n        !after || (after === constants.attentionSideAfter && Boolean(before))\n      token._close =\n        !before || (before === constants.attentionSideAfter && Boolean(after))\n      return ok(code)\n    }\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 32688, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 32694, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-extension-gfm-strikethrough/dev/lib/html.js"],"sourcesContent":["/**\n * @import {HtmlExtension} from 'micromark-util-types'\n */\n\n/**\n * Create an HTML extension for `micromark` to support GFM strikethrough when\n * serializing to HTML.\n *\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions`, to\n *   support GFM strikethrough when serializing to HTML.\n */\nexport function gfmStrikethroughHtml() {\n  return {\n    enter: {\n      strikethrough() {\n        this.tag('<del>')\n      }\n    },\n    exit: {\n      strikethrough() {\n        this.tag('</del>')\n      }\n    }\n  }\n}\n"],"names":[],"mappings":"AAAA;;CAEC,GAED;;;;;;;CAOC;;;AACM,SAAS;IACd,OAAO;QACL,OAAO;YACL;gBACE,IAAI,CAAC,GAAG,CAAC;YACX;QACF;QACA,MAAM;YACJ;gBACE,IAAI,CAAC,GAAG,CAAC;YACX;QACF;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 32720, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 32726, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-extension-gfm-table/dev/lib/edit-map.js"],"sourcesContent":["/**\n * @import {Event} from 'micromark-util-types'\n */\n\n// Port of `edit_map.rs` from `markdown-rs`.\n// This should move to `markdown-js` later.\n\n// Deal with several changes in events, batching them together.\n//\n// Preferably, changes should be kept to a minimum.\n// Sometimes, it’s needed to change the list of events, because parsing can be\n// messy, and it helps to expose a cleaner interface of events to the compiler\n// and other users.\n// It can also help to merge many adjacent similar events.\n// And, in other cases, it’s needed to parse subcontent: pass some events\n// through another tokenizer and inject the result.\n\n/**\n * @typedef {[number, number, Array<Event>]} Change\n * @typedef {[number, number, number]} Jump\n */\n\n/**\n * Tracks a bunch of edits.\n */\nexport class EditMap {\n  /**\n   * Create a new edit map.\n   */\n  constructor() {\n    /**\n     * Record of changes.\n     *\n     * @type {Array<Change>}\n     */\n    this.map = []\n  }\n\n  /**\n   * Create an edit: a remove and/or add at a certain place.\n   *\n   * @param {number} index\n   * @param {number} remove\n   * @param {Array<Event>} add\n   * @returns {undefined}\n   */\n  add(index, remove, add) {\n    addImplementation(this, index, remove, add)\n  }\n\n  // To do: add this when moving to `micromark`.\n  // /**\n  //  * Create an edit: but insert `add` before existing additions.\n  //  *\n  //  * @param {number} index\n  //  * @param {number} remove\n  //  * @param {Array<Event>} add\n  //  * @returns {undefined}\n  //  */\n  // addBefore(index, remove, add) {\n  //   addImplementation(this, index, remove, add, true)\n  // }\n\n  /**\n   * Done, change the events.\n   *\n   * @param {Array<Event>} events\n   * @returns {undefined}\n   */\n  consume(events) {\n    this.map.sort(function (a, b) {\n      return a[0] - b[0]\n    })\n\n    /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n    if (this.map.length === 0) {\n      return\n    }\n\n    // To do: if links are added in events, like they are in `markdown-rs`,\n    // this is needed.\n    // // Calculate jumps: where items in the current list move to.\n    // /** @type {Array<Jump>} */\n    // const jumps = []\n    // let index = 0\n    // let addAcc = 0\n    // let removeAcc = 0\n    // while (index < this.map.length) {\n    //   const [at, remove, add] = this.map[index]\n    //   removeAcc += remove\n    //   addAcc += add.length\n    //   jumps.push([at, removeAcc, addAcc])\n    //   index += 1\n    // }\n    //\n    // . shiftLinks(events, jumps)\n\n    let index = this.map.length\n    /** @type {Array<Array<Event>>} */\n    const vecs = []\n    while (index > 0) {\n      index -= 1\n      vecs.push(\n        events.slice(this.map[index][0] + this.map[index][1]),\n        this.map[index][2]\n      )\n\n      // Truncate rest.\n      events.length = this.map[index][0]\n    }\n\n    vecs.push(events.slice())\n    events.length = 0\n\n    let slice = vecs.pop()\n\n    while (slice) {\n      for (const element of slice) {\n        events.push(element)\n      }\n\n      slice = vecs.pop()\n    }\n\n    // Truncate everything.\n    this.map.length = 0\n  }\n}\n\n/**\n * Create an edit.\n *\n * @param {EditMap} editMap\n * @param {number} at\n * @param {number} remove\n * @param {Array<Event>} add\n * @returns {undefined}\n */\nfunction addImplementation(editMap, at, remove, add) {\n  let index = 0\n\n  /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n  if (remove === 0 && add.length === 0) {\n    return\n  }\n\n  while (index < editMap.map.length) {\n    if (editMap.map[index][0] === at) {\n      editMap.map[index][1] += remove\n\n      // To do: before not used by tables, use when moving to micromark.\n      // if (before) {\n      //   add.push(...editMap.map[index][2])\n      //   editMap.map[index][2] = add\n      // } else {\n      editMap.map[index][2].push(...add)\n      // }\n\n      return\n    }\n\n    index += 1\n  }\n\n  editMap.map.push([at, remove, add])\n}\n\n// /**\n//  * Shift `previous` and `next` links according to `jumps`.\n//  *\n//  * This fixes links in case there are events removed or added between them.\n//  *\n//  * @param {Array<Event>} events\n//  * @param {Array<Jump>} jumps\n//  */\n// function shiftLinks(events, jumps) {\n//   let jumpIndex = 0\n//   let index = 0\n//   let add = 0\n//   let rm = 0\n\n//   while (index < events.length) {\n//     const rmCurr = rm\n\n//     while (jumpIndex < jumps.length && jumps[jumpIndex][0] <= index) {\n//       add = jumps[jumpIndex][2]\n//       rm = jumps[jumpIndex][1]\n//       jumpIndex += 1\n//     }\n\n//     // Ignore items that will be removed.\n//     if (rm > rmCurr) {\n//       index += rm - rmCurr\n//     } else {\n//       // ?\n//       // if let Some(link) = &events[index].link {\n//       //     if let Some(next) = link.next {\n//       //         events[next].link.as_mut().unwrap().previous = Some(index + add - rm);\n//       //         while jumpIndex < jumps.len() && jumps[jumpIndex].0 <= next {\n//       //             add = jumps[jumpIndex].2;\n//       //             rm = jumps[jumpIndex].1;\n//       //             jumpIndex += 1;\n//       //         }\n//       //         events[index].link.as_mut().unwrap().next = Some(next + add - rm);\n//       //         index = next;\n//       //         continue;\n//       //     }\n//       // }\n//       index += 1\n//     }\n//   }\n// }\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 32903, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 32909, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-extension-gfm-table/dev/lib/infer.js"],"sourcesContent":["/**\n * @import {Event} from 'micromark-util-types'\n */\n\n/**\n * @typedef {'center' | 'left' | 'none' | 'right'} Align\n */\n\nimport {ok as assert} from 'devlop'\n\n/**\n * Figure out the alignment of a GFM table.\n *\n * @param {Readonly<Array<Event>>} events\n *   List of events.\n * @param {number} index\n *   Table enter event.\n * @returns {Array<Align>}\n *   List of aligns.\n */\nexport function gfmTableAlign(events, index) {\n  assert(events[index][1].type === 'table', 'expected table')\n  let inDelimiterRow = false\n  /** @type {Array<Align>} */\n  const align = []\n\n  while (index < events.length) {\n    const event = events[index]\n\n    if (inDelimiterRow) {\n      if (event[0] === 'enter') {\n        // Start of alignment value: set a new column.\n        // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n        if (event[1].type === 'tableContent') {\n          align.push(\n            events[index + 1][1].type === 'tableDelimiterMarker'\n              ? 'left'\n              : 'none'\n          )\n        }\n      }\n      // Exits:\n      // End of alignment value: change the column.\n      // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n      else if (event[1].type === 'tableContent') {\n        if (events[index - 1][1].type === 'tableDelimiterMarker') {\n          const alignIndex = align.length - 1\n\n          align[alignIndex] = align[alignIndex] === 'left' ? 'center' : 'right'\n        }\n      }\n      // Done!\n      else if (event[1].type === 'tableDelimiterRow') {\n        break\n      }\n    } else if (event[0] === 'enter' && event[1].type === 'tableDelimiterRow') {\n      inDelimiterRow = true\n    }\n\n    index += 1\n  }\n\n  return align\n}\n"],"names":[],"mappings":"AAAA;;CAEC,GAED;;CAEC;;;AAED;;AAYO,SAAS,cAAc,MAAM,EAAE,KAAK;IACzC,CAAA,GAAA,wIAAA,CAAA,KAAM,AAAD,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,KAAK,SAAS;IAC1C,IAAI,iBAAiB;IACrB,yBAAyB,GACzB,MAAM,QAAQ,EAAE;IAEhB,MAAO,QAAQ,OAAO,MAAM,CAAE;QAC5B,MAAM,QAAQ,MAAM,CAAC,MAAM;QAE3B,IAAI,gBAAgB;YAClB,IAAI,KAAK,CAAC,EAAE,KAAK,SAAS;gBACxB,8CAA8C;gBAC9C,uDAAuD;gBACvD,IAAI,KAAK,CAAC,EAAE,CAAC,IAAI,KAAK,gBAAgB;oBACpC,MAAM,IAAI,CACR,MAAM,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,IAAI,KAAK,yBAC1B,SACA;gBAER;YACF,OAIK,IAAI,KAAK,CAAC,EAAE,CAAC,IAAI,KAAK,gBAAgB;gBACzC,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,IAAI,KAAK,wBAAwB;oBACxD,MAAM,aAAa,MAAM,MAAM,GAAG;oBAElC,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,KAAK,SAAS,WAAW;gBAChE;YACF,OAEK,IAAI,KAAK,CAAC,EAAE,CAAC,IAAI,KAAK,qBAAqB;gBAC9C;YACF;QACF,OAAO,IAAI,KAAK,CAAC,EAAE,KAAK,WAAW,KAAK,CAAC,EAAE,CAAC,IAAI,KAAK,qBAAqB;YACxE,iBAAiB;QACnB;QAEA,SAAS;IACX;IAEA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 32946, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 32952, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-extension-gfm-table/dev/lib/syntax.js"],"sourcesContent":["/**\n * @import {Event, Extension, Point, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\n/**\n * @typedef {[number, number, number, number]} Range\n *   Cell info.\n *\n * @typedef {0 | 1 | 2 | 3} RowKind\n *   Where we are: `1` for head row, `2` for delimiter row, `3` for body row.\n */\n\nimport {ok as assert} from 'devlop'\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {codes, constants, types} from 'micromark-util-symbol'\nimport {EditMap} from './edit-map.js'\nimport {gfmTableAlign} from './infer.js'\n\n/**\n * Create an HTML extension for `micromark` to support GitHub tables syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   table syntax.\n */\nexport function gfmTable() {\n  return {\n    flow: {\n      null: {name: 'table', tokenize: tokenizeTable, resolveAll: resolveTable}\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this\n  let size = 0\n  let sizeB = 0\n  /** @type {boolean | undefined} */\n  let seen\n\n  return start\n\n  /**\n   * Start of a GFM table.\n   *\n   * If there is a valid table row or table head before, then we try to parse\n   * another row.\n   * Otherwise, we try to parse a head.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length - 1\n\n    while (index > -1) {\n      const type = self.events[index][1].type\n      if (\n        type === types.lineEnding ||\n        // Note: markdown-rs uses `whitespace` instead of `linePrefix`\n        type === types.linePrefix\n      )\n        index--\n      else break\n    }\n\n    const tail = index > -1 ? self.events[index][1].type : null\n\n    const next =\n      tail === 'tableHead' || tail === 'tableRow' ? bodyRowStart : headRowBefore\n\n    // Don’t allow lazy body rows.\n    if (next === bodyRowStart && self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    return next(code)\n  }\n\n  /**\n   * Before table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBefore(code) {\n    effects.enter('tableHead')\n    effects.enter('tableRow')\n    return headRowStart(code)\n  }\n\n  /**\n   * Before table head row, after whitespace.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowStart(code) {\n    if (code === codes.verticalBar) {\n      return headRowBreak(code)\n    }\n\n    // To do: micromark-js should let us parse our own whitespace in extensions,\n    // like `markdown-rs`:\n    //\n    // ```js\n    // // 4+ spaces.\n    // if (markdownSpace(code)) {\n    //   return nok(code)\n    // }\n    // ```\n\n    seen = true\n    // Count the first character, that isn’t a pipe, double.\n    sizeB += 1\n    return headRowBreak(code)\n  }\n\n  /**\n   * At break in table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *       ^\n   *         ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBreak(code) {\n    if (code === codes.eof) {\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      // If anything other than one pipe (ignoring whitespace) was used, it’s fine.\n      if (sizeB > 1) {\n        sizeB = 0\n        // To do: check if this works.\n        // Feel free to interrupt:\n        self.interrupt = true\n        effects.exit('tableRow')\n        effects.enter(types.lineEnding)\n        effects.consume(code)\n        effects.exit(types.lineEnding)\n        return headDelimiterStart\n      }\n\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code)\n    }\n\n    if (markdownSpace(code)) {\n      // To do: check if this is fine.\n      // effects.attempt(State::Next(StateName::GfmTableHeadRowBreak), State::Nok)\n      // State::Retry(space_or_tab(tokenizer))\n      return factorySpace(effects, headRowBreak, types.whitespace)(code)\n    }\n\n    sizeB += 1\n\n    if (seen) {\n      seen = false\n      // Header cell count.\n      size += 1\n    }\n\n    if (code === codes.verticalBar) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      // Whether a delimiter was seen.\n      seen = true\n      return headRowBreak\n    }\n\n    // Anything else is cell data.\n    effects.enter(types.data)\n    return headRowData(code)\n  }\n\n  /**\n   * In table head row data.\n   *\n   * ```markdown\n   * > | | a |\n   *       ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowData(code) {\n    if (\n      code === codes.eof ||\n      code === codes.verticalBar ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      effects.exit(types.data)\n      return headRowBreak(code)\n    }\n\n    effects.consume(code)\n    return code === codes.backslash ? headRowEscape : headRowData\n  }\n\n  /**\n   * In table head row escape.\n   *\n   * ```markdown\n   * > | | a\\-b |\n   *         ^\n   *   | | ---- |\n   *   | | c    |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowEscape(code) {\n    if (code === codes.backslash || code === codes.verticalBar) {\n      effects.consume(code)\n      return headRowData\n    }\n\n    return headRowData(code)\n  }\n\n  /**\n   * Before delimiter row.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterStart(code) {\n    // Reset `interrupt`.\n    self.interrupt = false\n\n    // Note: in `markdown-rs`, we need to handle piercing here too.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    effects.enter('tableDelimiterRow')\n    // Track if we’ve seen a `:` or `|`.\n    seen = false\n\n    if (markdownSpace(code)) {\n      assert(self.parser.constructs.disable.null, 'expected `disabled.null`')\n      return factorySpace(\n        effects,\n        headDelimiterBefore,\n        types.linePrefix,\n        self.parser.constructs.disable.null.includes('codeIndented')\n          ? undefined\n          : constants.tabSize\n      )(code)\n    }\n\n    return headDelimiterBefore(code)\n  }\n\n  /**\n   * Before delimiter row, after optional whitespace.\n   *\n   * Reused when a `|` is found later, to parse another cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterBefore(code) {\n    if (code === codes.dash || code === codes.colon) {\n      return headDelimiterValueBefore(code)\n    }\n\n    if (code === codes.verticalBar) {\n      seen = true\n      // If we start with a pipe, we open a cell marker.\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return headDelimiterCellBefore\n    }\n\n    // More whitespace / empty row not allowed at start.\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * After `|`, before delimiter cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellBefore(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        headDelimiterValueBefore,\n        types.whitespace\n      )(code)\n    }\n\n    return headDelimiterValueBefore(code)\n  }\n\n  /**\n   * Before delimiter cell value.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterValueBefore(code) {\n    // Align: left.\n    if (code === codes.colon) {\n      sizeB += 1\n      seen = true\n\n      effects.enter('tableDelimiterMarker')\n      effects.consume(code)\n      effects.exit('tableDelimiterMarker')\n      return headDelimiterLeftAlignmentAfter\n    }\n\n    // Align: none.\n    if (code === codes.dash) {\n      sizeB += 1\n      // To do: seems weird that this *isn’t* left aligned, but that state is used?\n      return headDelimiterLeftAlignmentAfter(code)\n    }\n\n    if (code === codes.eof || markdownLineEnding(code)) {\n      return headDelimiterCellAfter(code)\n    }\n\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * After delimiter cell left alignment marker.\n   *\n   * ```markdown\n   *   | | a  |\n   * > | | :- |\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterLeftAlignmentAfter(code) {\n    if (code === codes.dash) {\n      effects.enter('tableDelimiterFiller')\n      return headDelimiterFiller(code)\n    }\n\n    // Anything else is not ok after the left-align colon.\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * In delimiter cell filler.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterFiller(code) {\n    if (code === codes.dash) {\n      effects.consume(code)\n      return headDelimiterFiller\n    }\n\n    // Align is `center` if it was `left`, `right` otherwise.\n    if (code === codes.colon) {\n      seen = true\n      effects.exit('tableDelimiterFiller')\n      effects.enter('tableDelimiterMarker')\n      effects.consume(code)\n      effects.exit('tableDelimiterMarker')\n      return headDelimiterRightAlignmentAfter\n    }\n\n    effects.exit('tableDelimiterFiller')\n    return headDelimiterRightAlignmentAfter(code)\n  }\n\n  /**\n   * After delimiter cell right alignment marker.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterRightAlignmentAfter(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        headDelimiterCellAfter,\n        types.whitespace\n      )(code)\n    }\n\n    return headDelimiterCellAfter(code)\n  }\n\n  /**\n   * After delimiter cell.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellAfter(code) {\n    if (code === codes.verticalBar) {\n      return headDelimiterBefore(code)\n    }\n\n    if (code === codes.eof || markdownLineEnding(code)) {\n      // Exit when:\n      // * there was no `:` or `|` at all (it’s a thematic break or setext\n      //   underline instead)\n      // * the header cell count is not the delimiter cell count\n      if (!seen || size !== sizeB) {\n        return headDelimiterNok(code)\n      }\n\n      // Note: in markdown-rs`, a reset is needed here.\n      effects.exit('tableDelimiterRow')\n      effects.exit('tableHead')\n      // To do: in `markdown-rs`, resolvers need to be registered manually.\n      // effects.register_resolver(ResolveName::GfmTable)\n      return ok(code)\n    }\n\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * In delimiter row, at a disallowed byte.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | x |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterNok(code) {\n    // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n    return nok(code)\n  }\n\n  /**\n   * Before table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowStart(code) {\n    // Note: in `markdown-rs` we need to manually take care of a prefix,\n    // but in `micromark-js` that is done for us, so if we’re here, we’re\n    // never at whitespace.\n    effects.enter('tableRow')\n    return bodyRowBreak(code)\n  }\n\n  /**\n   * At break in table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   *       ^\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowBreak(code) {\n    if (code === codes.verticalBar) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return bodyRowBreak\n    }\n\n    if (code === codes.eof || markdownLineEnding(code)) {\n      effects.exit('tableRow')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, bodyRowBreak, types.whitespace)(code)\n    }\n\n    // Anything else is cell content.\n    effects.enter(types.data)\n    return bodyRowData(code)\n  }\n\n  /**\n   * In table body row data.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowData(code) {\n    if (\n      code === codes.eof ||\n      code === codes.verticalBar ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      effects.exit(types.data)\n      return bodyRowBreak(code)\n    }\n\n    effects.consume(code)\n    return code === codes.backslash ? bodyRowEscape : bodyRowData\n  }\n\n  /**\n   * In table body row escape.\n   *\n   * ```markdown\n   *   | | a    |\n   *   | | ---- |\n   * > | | b\\-c |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowEscape(code) {\n    if (code === codes.backslash || code === codes.verticalBar) {\n      effects.consume(code)\n      return bodyRowData\n    }\n\n    return bodyRowData(code)\n  }\n}\n\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1\n  let inFirstCellAwaitingPipe = true\n  /** @type {RowKind} */\n  let rowKind = 0\n  /** @type {Range} */\n  let lastCell = [0, 0, 0, 0]\n  /** @type {Range} */\n  let cell = [0, 0, 0, 0]\n  let afterHeadAwaitingFirstBodyRow = false\n  let lastTableEnd = 0\n  /** @type {Token | undefined} */\n  let currentTable\n  /** @type {Token | undefined} */\n  let currentBody\n  /** @type {Token | undefined} */\n  let currentCell\n\n  const map = new EditMap()\n\n  while (++index < events.length) {\n    const event = events[index]\n    const token = event[1]\n\n    if (event[0] === 'enter') {\n      // Start of head.\n      if (token.type === 'tableHead') {\n        afterHeadAwaitingFirstBodyRow = false\n\n        // Inject previous (body end and) table end.\n        if (lastTableEnd !== 0) {\n          assert(currentTable, 'there should be a table opening')\n          flushTableEnd(map, context, lastTableEnd, currentTable, currentBody)\n          currentBody = undefined\n          lastTableEnd = 0\n        }\n\n        // Inject table start.\n        currentTable = {\n          type: 'table',\n          start: Object.assign({}, token.start),\n          // Note: correct end is set later.\n          end: Object.assign({}, token.end)\n        }\n        map.add(index, 0, [['enter', currentTable, context]])\n      } else if (\n        token.type === 'tableRow' ||\n        token.type === 'tableDelimiterRow'\n      ) {\n        inFirstCellAwaitingPipe = true\n        currentCell = undefined\n        lastCell = [0, 0, 0, 0]\n        cell = [0, index + 1, 0, 0]\n\n        // Inject table body start.\n        if (afterHeadAwaitingFirstBodyRow) {\n          afterHeadAwaitingFirstBodyRow = false\n          currentBody = {\n            type: 'tableBody',\n            start: Object.assign({}, token.start),\n            // Note: correct end is set later.\n            end: Object.assign({}, token.end)\n          }\n          map.add(index, 0, [['enter', currentBody, context]])\n        }\n\n        rowKind = token.type === 'tableDelimiterRow' ? 2 : currentBody ? 3 : 1\n      }\n      // Cell data.\n      else if (\n        rowKind &&\n        (token.type === types.data ||\n          token.type === 'tableDelimiterMarker' ||\n          token.type === 'tableDelimiterFiller')\n      ) {\n        inFirstCellAwaitingPipe = false\n\n        // First value in cell.\n        if (cell[2] === 0) {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1]\n            currentCell = flushCell(\n              map,\n              context,\n              lastCell,\n              rowKind,\n              undefined,\n              currentCell\n            )\n            lastCell = [0, 0, 0, 0]\n          }\n\n          cell[2] = index\n        }\n      } else if (token.type === 'tableCellDivider') {\n        if (inFirstCellAwaitingPipe) {\n          inFirstCellAwaitingPipe = false\n        } else {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1]\n            currentCell = flushCell(\n              map,\n              context,\n              lastCell,\n              rowKind,\n              undefined,\n              currentCell\n            )\n          }\n\n          lastCell = cell\n          cell = [lastCell[1], index, 0, 0]\n        }\n      }\n    }\n    // Exit events.\n    else if (token.type === 'tableHead') {\n      afterHeadAwaitingFirstBodyRow = true\n      lastTableEnd = index\n    } else if (\n      token.type === 'tableRow' ||\n      token.type === 'tableDelimiterRow'\n    ) {\n      lastTableEnd = index\n\n      if (lastCell[1] !== 0) {\n        cell[0] = cell[1]\n        currentCell = flushCell(\n          map,\n          context,\n          lastCell,\n          rowKind,\n          index,\n          currentCell\n        )\n      } else if (cell[1] !== 0) {\n        currentCell = flushCell(map, context, cell, rowKind, index, currentCell)\n      }\n\n      rowKind = 0\n    } else if (\n      rowKind &&\n      (token.type === types.data ||\n        token.type === 'tableDelimiterMarker' ||\n        token.type === 'tableDelimiterFiller')\n    ) {\n      cell[3] = index\n    }\n  }\n\n  if (lastTableEnd !== 0) {\n    assert(currentTable, 'expected table opening')\n    flushTableEnd(map, context, lastTableEnd, currentTable, currentBody)\n  }\n\n  map.consume(context.events)\n\n  // To do: move this into `html`, when events are exposed there.\n  // That’s what `markdown-rs` does.\n  // That needs updates to `mdast-util-gfm-table`.\n  index = -1\n  while (++index < context.events.length) {\n    const event = context.events[index]\n    if (event[0] === 'enter' && event[1].type === 'table') {\n      event[1]._align = gfmTableAlign(context.events, index)\n    }\n  }\n\n  return events\n}\n\n/**\n * Generate a cell.\n *\n * @param {EditMap} map\n * @param {Readonly<TokenizeContext>} context\n * @param {Readonly<Range>} range\n * @param {RowKind} rowKind\n * @param {number | undefined} rowEnd\n * @param {Token | undefined} previousCell\n * @returns {Token | undefined}\n */\n// eslint-disable-next-line max-params\nfunction flushCell(map, context, range, rowKind, rowEnd, previousCell) {\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCell' : 'tableCell'\n  const groupName =\n    rowKind === 1\n      ? 'tableHeader'\n      : rowKind === 2\n        ? 'tableDelimiter'\n        : 'tableData'\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCellValue' : 'tableCellText'\n  const valueName = 'tableContent'\n\n  // Insert an exit for the previous cell, if there is one.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //          ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[0] !== 0) {\n    assert(previousCell, 'expected previous cell enter')\n    previousCell.end = Object.assign({}, getPoint(context.events, range[0]))\n    map.add(range[0], 0, [['exit', previousCell, context]])\n  }\n\n  // Insert enter of this cell.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //           ^-- enter\n  //           ^^^^-- this cell\n  // ```\n  const now = getPoint(context.events, range[1])\n  previousCell = {\n    type: groupName,\n    start: Object.assign({}, now),\n    // Note: correct end is set later.\n    end: Object.assign({}, now)\n  }\n  map.add(range[1], 0, [['enter', previousCell, context]])\n\n  // Insert text start at first data start and end at last data end, and\n  // remove events between.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //            ^-- enter\n  //             ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[2] !== 0) {\n    const relatedStart = getPoint(context.events, range[2])\n    const relatedEnd = getPoint(context.events, range[3])\n    /** @type {Token} */\n    const valueToken = {\n      type: valueName,\n      start: Object.assign({}, relatedStart),\n      end: Object.assign({}, relatedEnd)\n    }\n    map.add(range[2], 0, [['enter', valueToken, context]])\n    assert(range[3] !== 0)\n\n    if (rowKind !== 2) {\n      // Fix positional info on remaining events\n      const start = context.events[range[2]]\n      const end = context.events[range[3]]\n      start[1].end = Object.assign({}, end[1].end)\n      start[1].type = types.chunkText\n      start[1].contentType = constants.contentTypeText\n\n      // Remove if needed.\n      if (range[3] > range[2] + 1) {\n        const a = range[2] + 1\n        const b = range[3] - range[2] - 1\n        map.add(a, b, [])\n      }\n    }\n\n    map.add(range[3] + 1, 0, [['exit', valueToken, context]])\n  }\n\n  // Insert an exit for the last cell, if at the row end.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //                    ^-- exit\n  //               ^^^^^^-- this cell (the last one contains two “between” parts)\n  // ```\n  if (rowEnd !== undefined) {\n    previousCell.end = Object.assign({}, getPoint(context.events, rowEnd))\n    map.add(rowEnd, 0, [['exit', previousCell, context]])\n    previousCell = undefined\n  }\n\n  return previousCell\n}\n\n/**\n * Generate table end (and table body end).\n *\n * @param {Readonly<EditMap>} map\n * @param {Readonly<TokenizeContext>} context\n * @param {number} index\n * @param {Token} table\n * @param {Token | undefined} tableBody\n */\n// eslint-disable-next-line max-params\nfunction flushTableEnd(map, context, index, table, tableBody) {\n  /** @type {Array<Event>} */\n  const exits = []\n  const related = getPoint(context.events, index)\n\n  if (tableBody) {\n    tableBody.end = Object.assign({}, related)\n    exits.push(['exit', tableBody, context])\n  }\n\n  table.end = Object.assign({}, related)\n  exits.push(['exit', table, context])\n\n  map.add(index + 1, 0, exits)\n}\n\n/**\n * @param {Readonly<Array<Event>>} events\n * @param {number} index\n * @returns {Readonly<Point>}\n */\nfunction getPoint(events, index) {\n  const event = events[index]\n  const side = event[0] === 'enter' ? 'start' : 'end'\n  return event[1][side]\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 33774, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 33780, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-extension-gfm-table/dev/lib/html.js"],"sourcesContent":["/**\n * @import {HtmlExtension} from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\n\nconst alignment = {\n  none: '',\n  left: ' align=\"left\"',\n  right: ' align=\"right\"',\n  center: ' align=\"center\"'\n}\n\n// To do: micromark@5: use `infer` here, when all events are exposed.\n\n/**\n * Create an HTML extension for `micromark` to support GitHub tables when\n * serializing to HTML.\n *\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GitHub tables when serializing to HTML.\n */\nexport function gfmTableHtml() {\n  return {\n    enter: {\n      table(token) {\n        const tableAlign = token._align\n        assert(tableAlign, 'expected `_align`')\n        this.lineEndingIfNeeded()\n        this.tag('<table>')\n        this.setData('tableAlign', tableAlign)\n      },\n      tableBody() {\n        this.tag('<tbody>')\n      },\n      tableData() {\n        const tableAlign = this.getData('tableAlign')\n        const tableColumn = this.getData('tableColumn')\n        assert(tableAlign, 'expected `tableAlign`')\n        assert(typeof tableColumn === 'number', 'expected `tableColumn`')\n        const align = alignment[tableAlign[tableColumn]]\n\n        if (align === undefined) {\n          // Capture results to ignore them.\n          this.buffer()\n        } else {\n          this.lineEndingIfNeeded()\n          this.tag('<td' + align + '>')\n        }\n      },\n      tableHead() {\n        this.lineEndingIfNeeded()\n        this.tag('<thead>')\n      },\n      tableHeader() {\n        const tableAlign = this.getData('tableAlign')\n        const tableColumn = this.getData('tableColumn')\n        assert(tableAlign, 'expected `tableAlign`')\n        assert(typeof tableColumn === 'number', 'expected `tableColumn`')\n        const align = alignment[tableAlign[tableColumn]]\n        this.lineEndingIfNeeded()\n        this.tag('<th' + align + '>')\n      },\n      tableRow() {\n        this.setData('tableColumn', 0)\n        this.lineEndingIfNeeded()\n        this.tag('<tr>')\n      }\n    },\n    exit: {\n      // Overwrite the default code text data handler to unescape escaped pipes when\n      // they are in tables.\n      codeTextData(token) {\n        let value = this.sliceSerialize(token)\n\n        if (this.getData('tableAlign')) {\n          value = value.replace(/\\\\([\\\\|])/g, replace)\n        }\n\n        this.raw(this.encode(value))\n      },\n      table() {\n        this.setData('tableAlign')\n        // Note: we don’t set `slurpAllLineEndings` anymore, in delimiter rows,\n        // but we do need to reset it to match a funky newline GH generates for\n        // list items combined with tables.\n        this.setData('slurpAllLineEndings')\n        this.lineEndingIfNeeded()\n        this.tag('</table>')\n      },\n      tableBody() {\n        this.lineEndingIfNeeded()\n        this.tag('</tbody>')\n      },\n      tableData() {\n        const tableAlign = this.getData('tableAlign')\n        const tableColumn = this.getData('tableColumn')\n        assert(tableAlign, 'expected `tableAlign`')\n        assert(typeof tableColumn === 'number', 'expected `tableColumn`')\n\n        if (tableColumn in tableAlign) {\n          this.tag('</td>')\n          this.setData('tableColumn', tableColumn + 1)\n        } else {\n          // Stop capturing.\n          this.resume()\n        }\n      },\n      tableHead() {\n        this.lineEndingIfNeeded()\n        this.tag('</thead>')\n      },\n      tableHeader() {\n        const tableColumn = this.getData('tableColumn')\n        assert(typeof tableColumn === 'number', 'expected `tableColumn`')\n        this.tag('</th>')\n        this.setData('tableColumn', tableColumn + 1)\n      },\n      tableRow() {\n        const tableAlign = this.getData('tableAlign')\n        let tableColumn = this.getData('tableColumn')\n        assert(tableAlign, 'expected `tableAlign`')\n        assert(typeof tableColumn === 'number', 'expected `tableColumn`')\n\n        while (tableColumn < tableAlign.length) {\n          this.lineEndingIfNeeded()\n          this.tag('<td' + alignment[tableAlign[tableColumn]] + '></td>')\n          tableColumn++\n        }\n\n        this.setData('tableColumn', tableColumn)\n        this.lineEndingIfNeeded()\n        this.tag('</tr>')\n      }\n    }\n  }\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 33910, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 33916, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-extension-gfm-task-list-item/dev/lib/syntax.js"],"sourcesContent":["/**\n * @import {Extension, State, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {codes, types} from 'micromark-util-symbol'\n\nconst tasklistCheck = {name: 'tasklistCheck', tokenize: tokenizeTasklistCheck}\n\n/**\n * Create an HTML extension for `micromark` to support GFM task list items\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM task list items when serializing to HTML.\n */\nexport function gfmTaskListItem() {\n  return {\n    text: {[codes.leftSquareBracket]: tasklistCheck}\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this\n\n  return open\n\n  /**\n   * At start of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    assert(code === codes.leftSquareBracket, 'expected `[`')\n\n    if (\n      // Exit if there’s stuff before.\n      self.previous !== codes.eof ||\n      // Exit if not in the first content that is the first child of a list\n      // item.\n      !self._gfmTasklistFirstContentOfListItem\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('taskListCheck')\n    effects.enter('taskListCheckMarker')\n    effects.consume(code)\n    effects.exit('taskListCheckMarker')\n    return inside\n  }\n\n  /**\n   * In task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // Currently we match how GH works in files.\n    // To match how GH works in comments, use `markdownSpace` (`[\\t ]`) instead\n    // of `markdownLineEndingOrSpace` (`[\\t\\n\\r ]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueUnchecked')\n      return close\n    }\n\n    if (code === codes.uppercaseX || code === codes.lowercaseX) {\n      effects.enter('taskListCheckValueChecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueChecked')\n      return close\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * At close of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function close(code) {\n    if (code === codes.rightSquareBracket) {\n      effects.enter('taskListCheckMarker')\n      effects.consume(code)\n      effects.exit('taskListCheckMarker')\n      effects.exit('taskListCheck')\n      return after\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   */\n  function after(code) {\n    // EOL in paragraph means there must be something else after it.\n    if (markdownLineEnding(code)) {\n      return ok(code)\n    }\n\n    // Space or tab?\n    // Check what comes after.\n    if (markdownSpace(code)) {\n      return effects.check({tokenize: spaceThenNonSpace}, ok, nok)(code)\n    }\n\n    // EOF, or non-whitespace, both wrong.\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction spaceThenNonSpace(effects, ok, nok) {\n  return factorySpace(effects, after, types.whitespace)\n\n  /**\n   * After whitespace, after task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // EOF means there was nothing, so bad.\n    // EOL means there’s content after it, so good.\n    // Impossible to have more spaces.\n    // Anything else is good.\n    return code === codes.eof ? nok(code) : ok(code)\n  }\n}\n"],"names":[],"mappings":"AAAA;;CAEC;;;AASD;AAPA;AAEA;AADA;AAMA;;;;;AAEA,MAAM,gBAAgB;IAAC,MAAM;IAAiB,UAAU;AAAqB;AAUtE,SAAS;IACd,OAAO;QACL,MAAM;YAAC,CAAC,uJAAA,CAAA,QAAK,CAAC,iBAAiB,CAAC,EAAE;QAAa;IACjD;AACF;AAEA;;;CAGC,GACD,SAAS,sBAAsB,OAAO,EAAE,EAAE,EAAE,GAAG;IAC7C,MAAM,OAAO,IAAI;IAEjB,OAAO;;IAEP;;;;;;;;;GASC,GACD,SAAS,KAAK,IAAI;QAChB,CAAA,GAAA,wIAAA,CAAA,KAAM,AAAD,EAAE,SAAS,uJAAA,CAAA,QAAK,CAAC,iBAAiB,EAAE;QAEzC,IACE,gCAAgC;QAChC,KAAK,QAAQ,KAAK,uJAAA,CAAA,QAAK,CAAC,GAAG,IAC3B,qEAAqE;QACrE,QAAQ;QACR,CAAC,KAAK,kCAAkC,EACxC;YACA,OAAO,IAAI;QACb;QAEA,QAAQ,KAAK,CAAC;QACd,QAAQ,KAAK,CAAC;QACd,QAAQ,OAAO,CAAC;QAChB,QAAQ,IAAI,CAAC;QACb,OAAO;IACT;IAEA;;;;;;;;;GASC,GACD,SAAS,OAAO,IAAI;QAClB,4CAA4C;QAC5C,2EAA2E;QAC3E,gDAAgD;QAChD,IAAI,CAAA,GAAA,0JAAA,CAAA,4BAAyB,AAAD,EAAE,OAAO;YACnC,QAAQ,KAAK,CAAC;YACd,QAAQ,OAAO,CAAC;YAChB,QAAQ,IAAI,CAAC;YACb,OAAO;QACT;QAEA,IAAI,SAAS,uJAAA,CAAA,QAAK,CAAC,UAAU,IAAI,SAAS,uJAAA,CAAA,QAAK,CAAC,UAAU,EAAE;YAC1D,QAAQ,KAAK,CAAC;YACd,QAAQ,OAAO,CAAC;YAChB,QAAQ,IAAI,CAAC;YACb,OAAO;QACT;QAEA,OAAO,IAAI;IACb;IAEA;;;;;;;;;GASC,GACD,SAAS,MAAM,IAAI;QACjB,IAAI,SAAS,uJAAA,CAAA,QAAK,CAAC,kBAAkB,EAAE;YACrC,QAAQ,KAAK,CAAC;YACd,QAAQ,OAAO,CAAC;YAChB,QAAQ,IAAI,CAAC;YACb,QAAQ,IAAI,CAAC;YACb,OAAO;QACT;QAEA,OAAO,IAAI;IACb;IAEA;;GAEC,GACD,SAAS,MAAM,IAAI;QACjB,gEAAgE;QAChE,IAAI,CAAA,GAAA,0JAAA,CAAA,qBAAkB,AAAD,EAAE,OAAO;YAC5B,OAAO,GAAG;QACZ;QAEA,gBAAgB;QAChB,0BAA0B;QAC1B,IAAI,CAAA,GAAA,0JAAA,CAAA,gBAAa,AAAD,EAAE,OAAO;YACvB,OAAO,QAAQ,KAAK,CAAC;gBAAC,UAAU;YAAiB,GAAG,IAAI,KAAK;QAC/D;QAEA,sCAAsC;QACtC,OAAO,IAAI;IACb;AACF;AAEA;;;CAGC,GACD,SAAS,kBAAkB,OAAO,EAAE,EAAE,EAAE,GAAG;IACzC,OAAO,CAAA,GAAA,yJAAA,CAAA,eAAY,AAAD,EAAE,SAAS,OAAO,uJAAA,CAAA,QAAK,CAAC,UAAU;;IAEpD;;;;;;;;;GASC,GACD,SAAS,MAAM,IAAI;QACjB,uCAAuC;QACvC,+CAA+C;QAC/C,kCAAkC;QAClC,yBAAyB;QACzB,OAAO,SAAS,uJAAA,CAAA,QAAK,CAAC,GAAG,GAAG,IAAI,QAAQ,GAAG;IAC7C;AACF","ignoreList":[0]}},
    {"offset": {"line": 34058, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 34064, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-extension-gfm-task-list-item/dev/lib/html.js"],"sourcesContent":["/**\n * @import {HtmlExtension} from 'micromark-util-types'\n */\n\n/**\n * Create an HTML extension for `micromark` to support GFM task list items when\n * serializing to HTML.\n *\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM task list items when serializing to HTML.\n */\nexport function gfmTaskListItemHtml() {\n  return {\n    enter: {\n      taskListCheck() {\n        this.tag('<input type=\"checkbox\" disabled=\"\" ')\n      }\n    },\n    exit: {\n      taskListCheck() {\n        this.tag('/>')\n      },\n      taskListCheckValueChecked() {\n        this.tag('checked=\"\" ')\n      }\n    }\n  }\n}\n"],"names":[],"mappings":"AAAA;;CAEC,GAED;;;;;;;CAOC;;;AACM,SAAS;IACd,OAAO;QACL,OAAO;YACL;gBACE,IAAI,CAAC,GAAG,CAAC;YACX;QACF;QACA,MAAM;YACJ;gBACE,IAAI,CAAC,GAAG,CAAC;YACX;YACA;gBACE,IAAI,CAAC,GAAG,CAAC;YACX;QACF;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 34093, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 34099, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-extension-gfm-tagfilter/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').CompileContext} CompileContext\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').Token} Token\n */\n\n// An opening or closing tag start, followed by a case-insensitive specific tag name,\n// followed by HTML whitespace, a greater than, or a slash.\nconst reFlow =\n  /<(\\/?)(iframe|noembed|noframes|plaintext|script|style|title|textarea|xmp)(?=[\\t\\n\\f\\r />])/gi\n\n// As HTML (text) parses tags separately (and very strictly), we don’t need to be\n// global.\nconst reText = new RegExp('^' + reFlow.source, 'i')\n\n/**\n * Create an HTML extension for `micromark` to support GitHubs weird and\n * useless tagfilter when serializing to HTML.\n *\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to support\n *   GitHubs weird and useless tagfilter when serializing to HTML.\n */\nexport function gfmTagfilterHtml() {\n  return {\n    exit: {\n      htmlFlowData(token) {\n        exitHtmlData.call(this, token, reFlow)\n      },\n      htmlTextData(token) {\n        exitHtmlData.call(this, token, reText)\n      }\n    }\n  }\n}\n\n/**\n * @this {CompileContext}\n * @param {Token} token\n * @param {RegExp} filter\n * @returns {undefined}\n */\nfunction exitHtmlData(token, filter) {\n  let value = this.sliceSerialize(token)\n\n  if (this.options.allowDangerousHtml) {\n    value = value.replace(filter, '&lt;$1$2')\n  }\n\n  this.raw(this.encode(value))\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC,GAED,qFAAqF;AACrF,2DAA2D;;;;AAC3D,MAAM,SACJ;AAEF,iFAAiF;AACjF,UAAU;AACV,MAAM,SAAS,IAAI,OAAO,MAAM,OAAO,MAAM,EAAE;AAUxC,SAAS;IACd,OAAO;QACL,MAAM;YACJ,cAAa,KAAK;gBAChB,aAAa,IAAI,CAAC,IAAI,EAAE,OAAO;YACjC;YACA,cAAa,KAAK;gBAChB,aAAa,IAAI,CAAC,IAAI,EAAE,OAAO;YACjC;QACF;IACF;AACF;AAEA;;;;;CAKC,GACD,SAAS,aAAa,KAAK,EAAE,MAAM;IACjC,IAAI,QAAQ,IAAI,CAAC,cAAc,CAAC;IAEhC,IAAI,IAAI,CAAC,OAAO,CAAC,kBAAkB,EAAE;QACnC,QAAQ,MAAM,OAAO,CAAC,QAAQ;IAChC;IAEA,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;AACvB","ignoreList":[0]}},
    {"offset": {"line": 34136, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 34142, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-extension-gfm/index.js"],"sourcesContent":["/**\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Create an extension for `micromark` to enable GFM syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-strikethrough`.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   syntax.\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral(),\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable(),\n    gfmTaskListItem()\n  ])\n}\n\n/**\n * Create an extension for `micromark` to support GFM when serializing to HTML.\n *\n * @param {HtmlOptions | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-footnote`.\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM when serializing to HTML.\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml(),\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml(),\n    gfmTableHtml(),\n    gfmTagfilterHtml(),\n    gfmTaskListItemHtml()\n  ])\n}\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;;AAED;AAIA;AAIA;AACA;AAIA;AAEA;AAXA;AAIA;AACA;AAIA;AACA;AACA;;;;;;;;AAgBO,SAAS,IAAI,OAAO;IACzB,OAAO,CAAA,GAAA,+JAAA,CAAA,oBAAiB,AAAD,EAAE;QACvB,CAAA,GAAA,wLAAA,CAAA,qBAAkB,AAAD;QACjB,CAAA,GAAA,6KAAA,CAAA,cAAW,AAAD;QACV,CAAA,GAAA,kLAAA,CAAA,mBAAgB,AAAD,EAAE;QACjB,CAAA,GAAA,0KAAA,CAAA,WAAQ,AAAD;QACP,CAAA,GAAA,yLAAA,CAAA,kBAAe,AAAD;KACf;AACH;AAaO,SAAS,QAAQ,OAAO;IAC7B,OAAO,CAAA,GAAA,+JAAA,CAAA,wBAAqB,AAAD,EAAE;QAC3B,CAAA,GAAA,sLAAA,CAAA,yBAAsB,AAAD;QACrB,CAAA,GAAA,2KAAA,CAAA,kBAAe,AAAD,EAAE;QAChB,CAAA,GAAA,gLAAA,CAAA,uBAAoB,AAAD;QACnB,CAAA,GAAA,wKAAA,CAAA,eAAY,AAAD;QACX,CAAA,GAAA,sKAAA,CAAA,mBAAgB,AAAD;QACf,CAAA,GAAA,uLAAA,CAAA,sBAAmB,AAAD;KACnB;AACH","ignoreList":[0]}},
    {"offset": {"line": 34189, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 34195, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-find-and-replace/lib/index.js"],"sourcesContent":["/**\n * @import {Nodes, Parents, PhrasingContent, Root, Text} from 'mdast'\n * @import {BuildVisitor, Test, VisitorResult} from 'unist-util-visit-parents'\n */\n\n/**\n * @typedef RegExpMatchObject\n *   Info on the match.\n * @property {number} index\n *   The index of the search at which the result was found.\n * @property {string} input\n *   A copy of the search string in the text node.\n * @property {[...Array<Parents>, Text]} stack\n *   All ancestors of the text node, where the last node is the text itself.\n *\n * @typedef {RegExp | string} Find\n *   Pattern to find.\n *\n *   Strings are escaped and then turned into global expressions.\n *\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *   Several find and replaces, in array form.\n *\n * @typedef {[Find, Replace?]} FindAndReplaceTuple\n *   Find and replace in tuple form.\n *\n * @typedef {ReplaceFunction | string | null | undefined} Replace\n *   Thing to replace with.\n *\n * @callback ReplaceFunction\n *   Callback called when a search matches.\n * @param {...any} parameters\n *   The parameters are the result of corresponding search expression:\n *\n *   * `value` (`string`) — whole match\n *   * `...capture` (`Array<string>`) — matches from regex capture groups\n *   * `match` (`RegExpMatchObject`) — info on the match\n * @returns {Array<PhrasingContent> | PhrasingContent | string | false | null | undefined}\n *   Thing to replace with.\n *\n *   * when `null`, `undefined`, `''`, remove the match\n *   * …or when `false`, do not replace at all\n *   * …or when `string`, replace with a text node of that value\n *   * …or when `Node` or `Array<Node>`, replace with those nodes\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n *   Normalized find and replace.\n *\n * @typedef {Array<Pair>} Pairs\n *   All find and replaced.\n *\n * @typedef Options\n *   Configuration.\n * @property {Test | null | undefined} [ignore]\n *   Test for which nodes to ignore (optional).\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\n/**\n * Find patterns in a tree and replace them.\n *\n * The algorithm searches the tree in *preorder* for complete values in `Text`\n * nodes.\n * Partial matches are not supported.\n *\n * @param {Nodes} tree\n *   Tree to change.\n * @param {FindAndReplaceList | FindAndReplaceTuple} list\n *   Patterns to find.\n * @param {Options | null | undefined} [options]\n *   Configuration (when `find` is not `Find`).\n * @returns {undefined}\n *   Nothing.\n */\nexport function findAndReplace(tree, list, options) {\n  const settings = options || {}\n  const ignored = convert(settings.ignore || [])\n  const pairs = toPairs(list)\n  let pairIndex = -1\n\n  while (++pairIndex < pairs.length) {\n    visitParents(tree, 'text', visitor)\n  }\n\n  /** @type {BuildVisitor<Root, 'text'>} */\n  function visitor(node, parents) {\n    let index = -1\n    /** @type {Parents | undefined} */\n    let grandparent\n\n    while (++index < parents.length) {\n      const parent = parents[index]\n      /** @type {Array<Nodes> | undefined} */\n      const siblings = grandparent ? grandparent.children : undefined\n\n      if (\n        ignored(\n          parent,\n          siblings ? siblings.indexOf(parent) : undefined,\n          grandparent\n        )\n      ) {\n        return\n      }\n\n      grandparent = parent\n    }\n\n    if (grandparent) {\n      return handler(node, parents)\n    }\n  }\n\n  /**\n   * Handle a text node which is not in an ignored parent.\n   *\n   * @param {Text} node\n   *   Text node.\n   * @param {Array<Parents>} parents\n   *   Parents.\n   * @returns {VisitorResult}\n   *   Result.\n   */\n  function handler(node, parents) {\n    const parent = parents[parents.length - 1]\n    const find = pairs[pairIndex][0]\n    const replace = pairs[pairIndex][1]\n    let start = 0\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    const index = siblings.indexOf(node)\n    let change = false\n    /** @type {Array<PhrasingContent>} */\n    let nodes = []\n\n    find.lastIndex = 0\n\n    let match = find.exec(node.value)\n\n    while (match) {\n      const position = match.index\n      /** @type {RegExpMatchObject} */\n      const matchObject = {\n        index: match.index,\n        input: match.input,\n        stack: [...parents, node]\n      }\n      let value = replace(...match, matchObject)\n\n      if (typeof value === 'string') {\n        value = value.length > 0 ? {type: 'text', value} : undefined\n      }\n\n      // It wasn’t a match after all.\n      if (value === false) {\n        // False acts as if there was no match.\n        // So we need to reset `lastIndex`, which currently being at the end of\n        // the current match, to the beginning.\n        find.lastIndex = position + 1\n      } else {\n        if (start !== position) {\n          nodes.push({\n            type: 'text',\n            value: node.value.slice(start, position)\n          })\n        }\n\n        if (Array.isArray(value)) {\n          nodes.push(...value)\n        } else if (value) {\n          nodes.push(value)\n        }\n\n        start = position + match[0].length\n        change = true\n      }\n\n      if (!find.global) {\n        break\n      }\n\n      match = find.exec(node.value)\n    }\n\n    if (change) {\n      if (start < node.value.length) {\n        nodes.push({type: 'text', value: node.value.slice(start)})\n      }\n\n      parent.children.splice(index, 1, ...nodes)\n    } else {\n      nodes = [node]\n    }\n\n    return index + nodes.length\n  }\n}\n\n/**\n * Turn a tuple or a list of tuples into pairs.\n *\n * @param {FindAndReplaceList | FindAndReplaceTuple} tupleOrList\n *   Schema.\n * @returns {Pairs}\n *   Clean pairs.\n */\nfunction toPairs(tupleOrList) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (!Array.isArray(tupleOrList)) {\n    throw new TypeError('Expected find and replace tuple or list of tuples')\n  }\n\n  /** @type {FindAndReplaceList} */\n  // @ts-expect-error: correct.\n  const list =\n    !tupleOrList[0] || Array.isArray(tupleOrList[0])\n      ? tupleOrList\n      : [tupleOrList]\n\n  let index = -1\n\n  while (++index < list.length) {\n    const tuple = list[index]\n    result.push([toExpression(tuple[0]), toFunction(tuple[1])])\n  }\n\n  return result\n}\n\n/**\n * Turn a find into an expression.\n *\n * @param {Find} find\n *   Find.\n * @returns {RegExp}\n *   Expression.\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * Turn a replace into a function.\n *\n * @param {Replace} replace\n *   Replace.\n * @returns {ReplaceFunction}\n *   Function.\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function'\n    ? replace\n    : function () {\n        return replace\n      }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 34407, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 34413, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-gfm-autolink-literal/lib/index.js"],"sourcesContent":["/**\n * @import {RegExpMatchObject, ReplaceFunction} from 'mdast-util-find-and-replace'\n * @import {CompileContext, Extension as FromMarkdownExtension, Handle as FromMarkdownHandle, Transform as FromMarkdownTransform} from 'mdast-util-from-markdown'\n * @import {ConstructName, Options as ToMarkdownExtension} from 'mdast-util-to-markdown'\n * @import {Link, PhrasingContent} from 'mdast'\n */\n\nimport {ccount} from 'ccount'\nimport {ok as assert} from 'devlop'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\n\n/** @type {ConstructName} */\nconst inConstruct = 'phrasing'\n/** @type {Array<ConstructName>} */\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralFromMarkdown() {\n  return {\n    transforms: [transformGfmAutolinkLiterals],\n    enter: {\n      literalAutolink: enterLiteralAutolink,\n      literalAutolinkEmail: enterLiteralAutolinkValue,\n      literalAutolinkHttp: enterLiteralAutolinkValue,\n      literalAutolinkWww: enterLiteralAutolinkValue\n    },\n    exit: {\n      literalAutolink: exitLiteralAutolink,\n      literalAutolinkEmail: exitLiteralAutolinkEmail,\n      literalAutolinkHttp: exitLiteralAutolinkHttp,\n      literalAutolinkWww: exitLiteralAutolinkWww\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '@',\n        before: '[+\\\\-.\\\\w]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: '.',\n        before: '[Ww]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: ':',\n        before: '[ps]',\n        after: '\\\\/',\n        inConstruct,\n        notInConstruct\n      }\n    ]\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'link')\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/(?<=^|\\s|\\p{P}|\\p{S})([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/gu, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n * @returns {Array<PhrasingContent> | Link | false}\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {Link} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n * @returns {Link | false}\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[-\\d_]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string | undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n\n  if (!trailExec) {\n    return [url, undefined]\n  }\n\n  url = url.slice(0, trailExec.index)\n\n  let trail = trailExec[0]\n  let closingParenIndex = trail.indexOf(')')\n  const openingParens = ccount(url, '(')\n  let closingParens = ccount(url, ')')\n\n  while (closingParenIndex !== -1 && openingParens > closingParens) {\n    url += trail.slice(0, closingParenIndex + 1)\n    trail = trail.slice(closingParenIndex + 1)\n    closingParenIndex = trail.indexOf(')')\n    closingParens++\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean | null | undefined} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    // If it’s an email, the previous character should not be a slash.\n    (!email || code !== 47)\n  )\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 34663, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 34669, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-gfm-footnote/lib/index.js"],"sourcesContent":["/**\n * @import {\n *   CompileContext,\n *   Extension as FromMarkdownExtension,\n *   Handle as FromMarkdownHandle\n * } from 'mdast-util-from-markdown'\n * @import {ToMarkdownOptions} from 'mdast-util-gfm-footnote'\n * @import {\n *   Handle as ToMarkdownHandle,\n *   Map,\n *   Options as ToMarkdownExtension\n * } from 'mdast-util-to-markdown'\n * @import {FootnoteDefinition, FootnoteReference} from 'mdast'\n */\n\nimport {ok as assert} from 'devlop'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n\nfootnoteReference.peek = footnoteReferencePeek\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCallString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCall(token) {\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinitionLabelString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinition(token) {\n  this.enter(\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n    token\n  )\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCallString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteReference')\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n  node.label = label\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCall(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinitionLabelString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteDefinition')\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n  node.label = label\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinition(token) {\n  this.exit(token)\n}\n\n/** @type {ToMarkdownHandle} */\nfunction footnoteReferencePeek() {\n  return '['\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteReference} node\n */\nfunction footnoteReference(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[^')\n  const exit = state.enter('footnoteReference')\n  const subexit = state.enter('reference')\n  value += tracker.move(\n    state.safe(state.associationId(node), {after: ']', before: value})\n  )\n  subexit()\n  exit()\n  value += tracker.move(']')\n  return value\n}\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteCallString: enterFootnoteCallString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteDefinition: enterFootnoteDefinition\n    },\n    exit: {\n      gfmFootnoteCallString: exitFootnoteCallString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteDefinition: exitFootnoteDefinition\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @param {ToMarkdownOptions | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function gfmFootnoteToMarkdown(options) {\n  // To do: next major: change default.\n  let firstLineBlank = false\n\n  if (options && options.firstLineBlank) {\n    firstLineBlank = true\n  }\n\n  return {\n    handlers: {footnoteDefinition, footnoteReference},\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['label', 'phrasing', 'reference']}]\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteDefinition} node\n   */\n  function footnoteDefinition(node, _, state, info) {\n    const tracker = state.createTracker(info)\n    let value = tracker.move('[^')\n    const exit = state.enter('footnoteDefinition')\n    const subexit = state.enter('label')\n    value += tracker.move(\n      state.safe(state.associationId(node), {before: value, after: ']'})\n    )\n    subexit()\n\n    value += tracker.move(']:')\n\n    if (node.children && node.children.length > 0) {\n      tracker.shift(4)\n\n      value += tracker.move(\n        (firstLineBlank ? '\\n' : ' ') +\n          state.indentLines(\n            state.containerFlow(node, tracker.current()),\n            firstLineBlank ? mapAll : mapExceptFirst\n          )\n      )\n    }\n\n    exit()\n\n    return value\n  }\n}\n\n/** @type {Map} */\nfunction mapExceptFirst(line, index, blank) {\n  return index === 0 ? line : mapAll(line, index, blank)\n}\n\n/** @type {Map} */\nfunction mapAll(line, index, blank) {\n  return (blank ? '' : '    ') + line\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 34844, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 34850, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-gfm-strikethrough/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('mdast').Delete} Delete\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethrough.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\n *\n * @type {Array<ConstructName>}\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\nhandleDelete.peek = peekDelete\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughFromMarkdown() {\n  return {\n    canContainEols: ['delete'],\n    enter: {strikethrough: enterStrikethrough},\n    exit: {strikethrough: exitStrikethrough}\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '~',\n        inConstruct: 'phrasing',\n        notInConstruct: constructsWithoutStrikethrough\n      }\n    ],\n    handlers: {delete: handleDelete}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  const exit = state.enter('strikethrough')\n  let value = tracker.move('~~')\n  value += state.containerPhrasing(node, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;CAUC,GAED;;;;;;;;;CASC;;;;AACD,MAAM,iCAAiC;IACrC;IACA;IACA;IACA;IACA;IACA;CACD;AAED,aAAa,IAAI,GAAG;AASb,SAAS;IACd,OAAO;QACL,gBAAgB;YAAC;SAAS;QAC1B,OAAO;YAAC,eAAe;QAAkB;QACzC,MAAM;YAAC,eAAe;QAAiB;IACzC;AACF;AASO,SAAS;IACd,OAAO;QACL,QAAQ;YACN;gBACE,WAAW;gBACX,aAAa;gBACb,gBAAgB;YAClB;SACD;QACD,UAAU;YAAC,QAAQ;QAAY;IACjC;AACF;AAEA;;;CAGC,GACD,SAAS,mBAAmB,KAAK;IAC/B,IAAI,CAAC,KAAK,CAAC;QAAC,MAAM;QAAU,UAAU,EAAE;IAAA,GAAG;AAC7C;AAEA;;;CAGC,GACD,SAAS,kBAAkB,KAAK;IAC9B,IAAI,CAAC,IAAI,CAAC;AACZ;AAEA;;;CAGC,GACD,SAAS,aAAa,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI;IACxC,MAAM,UAAU,MAAM,aAAa,CAAC;IACpC,MAAM,OAAO,MAAM,KAAK,CAAC;IACzB,IAAI,QAAQ,QAAQ,IAAI,CAAC;IACzB,SAAS,MAAM,iBAAiB,CAAC,MAAM;QACrC,GAAG,QAAQ,OAAO,EAAE;QACpB,QAAQ;QACR,OAAO;IACT;IACA,SAAS,QAAQ,IAAI,CAAC;IACtB;IACA,OAAO;AACT;AAEA,6BAA6B,GAC7B,SAAS;IACP,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 34943, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 34949, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/markdown-table/index.js"],"sourcesContent":["// To do: next major: remove.\n/**\n * @typedef {Options} MarkdownTableOptions\n *   Configuration.\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [alignDelimiters=true]\n *   Whether to align the delimiters (default: `true`);\n *   they are aligned by default:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {ReadonlyArray<string | null | undefined> | string | null | undefined} [align]\n *   How to align columns (default: `''`);\n *   one style for all columns or styles for their respective columns;\n *   each style is either `'l'` (left), `'r'` (right), or `'c'` (center);\n *   other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left;\n *   *only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean | null | undefined} [delimiterEnd=true]\n *   Whether to end each row with the delimiter (default: `true`).\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean | null | undefined} [delimiterStart=true]\n *   Whether to begin each row with the delimiter (default: `true`).\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean | null | undefined} [padding=true]\n *   Whether to add a space of padding between delimiters and cells\n *   (default: `true`).\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {((value: string) => number) | null | undefined} [stringLength]\n *   Function to detect the length of table cell content (optional);\n *   this is used when aligning the delimiters (`|`) between table cells;\n *   full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source;\n *   to fix this, you can pass this function,\n *   which receives the cell content and returns its “visible” size;\n *   note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @param {string} value\n *   Cell value.\n * @returns {number}\n *   Cell size.\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * Generate a markdown\n * ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables))\n * table.\n *\n * @param {ReadonlyArray<ReadonlyArray<string | null | undefined>>} table\n *   Table data (matrix of strings).\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Result.\n */\nexport function markdownTable(table, options) {\n  const settings = options || {}\n  // To do: next major: change to spread.\n  const align = (settings.align || []).concat()\n  const stringLength = settings.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (settings.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      settings.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (settings.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (settings.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (settings.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        settings.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(settings.alignDelimiters === false && cell === '') &&\n        (settings.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (settings.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (settings.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (settings.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        settings.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      settings.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string | null | undefined} [value]\n *   Value to serialize.\n * @returns {string}\n *   Result.\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string | null | undefined} value\n *   Value.\n * @returns {number}\n *   Alignment.\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n      ? 108 /* `l` */\n      : code === 82 /* `R` */ || code === 114 /* `r` */\n        ? 114 /* `r` */\n        : 0\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 35251, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35257, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-markdown/lib/handle/blockquote.js"],"sourcesContent":["/**\n * @import {Blockquote, Parents} from 'mdast'\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {Blockquote} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function blockquote(node, _, state, info) {\n  const exit = state.enter('blockquote')\n  const tracker = state.createTracker(info)\n  tracker.move('> ')\n  tracker.shift(2)\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return '>' + (blank ? '' : ' ') + line\n}\n"],"names":[],"mappings":"AAAA;;;CAGC,GAED;;;;;;CAMC;;;AACM,SAAS,WAAW,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI;IAC7C,MAAM,OAAO,MAAM,KAAK,CAAC;IACzB,MAAM,UAAU,MAAM,aAAa,CAAC;IACpC,QAAQ,IAAI,CAAC;IACb,QAAQ,KAAK,CAAC;IACd,MAAM,QAAQ,MAAM,WAAW,CAC7B,MAAM,aAAa,CAAC,MAAM,QAAQ,OAAO,KACzC;IAEF;IACA,OAAO;AACT;AAEA,gBAAgB,GAChB,SAAS,IAAI,IAAI,EAAE,CAAC,EAAE,KAAK;IACzB,OAAO,MAAM,CAAC,QAAQ,KAAK,GAAG,IAAI;AACpC","ignoreList":[0]}},
    {"offset": {"line": 35281, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35287, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js"],"sourcesContent":["/**\n * @import {ConstructName, Unsafe} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n"],"names":[],"mappings":"AAAA;;CAEC,GAED;;;;CAIC;;;AACM,SAAS,eAAe,KAAK,EAAE,OAAO;IAC3C,OACE,YAAY,OAAO,QAAQ,WAAW,EAAE,SACxC,CAAC,YAAY,OAAO,QAAQ,cAAc,EAAE;AAEhD;AAEA;;;;;CAKC,GACD,SAAS,YAAY,KAAK,EAAE,IAAI,EAAE,IAAI;IACpC,IAAI,OAAO,SAAS,UAAU;QAC5B,OAAO;YAAC;SAAK;IACf;IAEA,IAAI,CAAC,QAAQ,KAAK,MAAM,KAAK,GAAG;QAC9B,OAAO;IACT;IAEA,IAAI,QAAQ,CAAC;IAEb,MAAO,EAAE,QAAQ,KAAK,MAAM,CAAE;QAC5B,IAAI,MAAM,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG;YAC/B,OAAO;QACT;IACF;IAEA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 35321, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35327, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-markdown/lib/handle/break.js"],"sourcesContent":["/**\n * @import {Break, Parents} from 'mdast'\n * @import {Info, State} from 'mdast-util-to-markdown'\n */\n\nimport {patternInScope} from '../util/pattern-in-scope.js'\n\n/**\n * @param {Break} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function hardBreak(_, _1, state, info) {\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    // If we can’t put eols in this construct (setext headings, tables), use a\n    // space instead.\n    if (\n      state.unsafe[index].character === '\\n' &&\n      patternInScope(state.stack, state.unsafe[index])\n    ) {\n      return /[ \\t]/.test(info.before) ? '' : ' '\n    }\n  }\n\n  return '\\\\\\n'\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AAED;;AASO,SAAS,UAAU,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI;IAC1C,IAAI,QAAQ,CAAC;IAEb,MAAO,EAAE,QAAQ,MAAM,MAAM,CAAC,MAAM,CAAE;QACpC,0EAA0E;QAC1E,iBAAiB;QACjB,IACE,MAAM,MAAM,CAAC,MAAM,CAAC,SAAS,KAAK,QAClC,CAAA,GAAA,oLAAA,CAAA,iBAAc,AAAD,EAAE,MAAM,KAAK,EAAE,MAAM,MAAM,CAAC,MAAM,GAC/C;YACA,OAAO,QAAQ,IAAI,CAAC,KAAK,MAAM,IAAI,KAAK;QAC1C;IACF;IAEA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 35346, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35352, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-markdown/lib/util/check-fence.js"],"sourcesContent":["/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['fence'], null | undefined>}\n */\nexport function checkFence(state) {\n  const marker = state.options.fence || '`'\n\n  if (marker !== '`' && marker !== '~') {\n    throw new Error(\n      'Cannot serialize code with `' +\n        marker +\n        '` for `options.fence`, expected `` ` `` or `~`'\n    )\n  }\n\n  return marker\n}\n"],"names":[],"mappings":"AAAA;;CAEC,GAED;;;CAGC;;;AACM,SAAS,WAAW,KAAK;IAC9B,MAAM,SAAS,MAAM,OAAO,CAAC,KAAK,IAAI;IAEtC,IAAI,WAAW,OAAO,WAAW,KAAK;QACpC,MAAM,IAAI,MACR,iCACE,SACA;IAEN;IAEA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 35367, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35373, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js"],"sourcesContent":["/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Code} from 'mdast'\n */\n\n/**\n * @param {Code} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatCodeAsIndented(node, state) {\n  return Boolean(\n    state.options.fences === false &&\n      node.value &&\n      // If there’s no info…\n      !node.lang &&\n      // And there’s a non-whitespace character…\n      /[^ \\r\\n]/.test(node.value) &&\n      // And the value doesn’t start or end in a blank…\n      !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n"],"names":[],"mappings":"AAAA;;;CAGC,GAED;;;;CAIC;;;AACM,SAAS,qBAAqB,IAAI,EAAE,KAAK;IAC9C,OAAO,QACL,MAAM,OAAO,CAAC,MAAM,KAAK,SACvB,KAAK,KAAK,IACV,sBAAsB;IACtB,CAAC,KAAK,IAAI,IACV,0CAA0C;IAC1C,WAAW,IAAI,CAAC,KAAK,KAAK,KAC1B,iDAAiD;IACjD,CAAC,0CAA0C,IAAI,CAAC,KAAK,KAAK;AAEhE","ignoreList":[0]}},
    {"offset": {"line": 35389, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35395, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-markdown/lib/handle/code.js"],"sourcesContent":["/**\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n * @import {Code, Parents} from 'mdast'\n */\n\nimport {longestStreak} from 'longest-streak'\nimport {formatCodeAsIndented} from '../util/format-code-as-indented.js'\nimport {checkFence} from '../util/check-fence.js'\n\n/**\n * @param {Code} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function code(node, _, state, info) {\n  const marker = checkFence(state)\n  const raw = node.value || ''\n  const suffix = marker === '`' ? 'GraveAccent' : 'Tilde'\n\n  if (formatCodeAsIndented(node, state)) {\n    const exit = state.enter('codeIndented')\n    const value = state.indentLines(raw, map)\n    exit()\n    return value\n  }\n\n  const tracker = state.createTracker(info)\n  const sequence = marker.repeat(Math.max(longestStreak(raw, marker) + 1, 3))\n  const exit = state.enter('codeFenced')\n  let value = tracker.move(sequence)\n\n  if (node.lang) {\n    const subexit = state.enter(`codeFencedLang${suffix}`)\n    value += tracker.move(\n      state.safe(node.lang, {\n        before: value,\n        after: ' ',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  if (node.lang && node.meta) {\n    const subexit = state.enter(`codeFencedMeta${suffix}`)\n    value += tracker.move(' ')\n    value += tracker.move(\n      state.safe(node.meta, {\n        before: value,\n        after: '\\n',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  value += tracker.move('\\n')\n\n  if (raw) {\n    value += tracker.move(raw + '\\n')\n  }\n\n  value += tracker.move(sequence)\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return (blank ? '' : '    ') + line\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AAID;AADA;AADA;;;;AAWO,SAAS,KAAK,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI;IACvC,MAAM,SAAS,CAAA,GAAA,4KAAA,CAAA,aAAU,AAAD,EAAE;IAC1B,MAAM,MAAM,KAAK,KAAK,IAAI;IAC1B,MAAM,SAAS,WAAW,MAAM,gBAAgB;IAEhD,IAAI,CAAA,GAAA,8LAAA,CAAA,uBAAoB,AAAD,EAAE,MAAM,QAAQ;QACrC,MAAM,OAAO,MAAM,KAAK,CAAC;QACzB,MAAM,QAAQ,MAAM,WAAW,CAAC,KAAK;QACrC;QACA,OAAO;IACT;IAEA,MAAM,UAAU,MAAM,aAAa,CAAC;IACpC,MAAM,WAAW,OAAO,MAAM,CAAC,KAAK,GAAG,CAAC,CAAA,GAAA,sIAAA,CAAA,gBAAa,AAAD,EAAE,KAAK,UAAU,GAAG;IACxE,MAAM,OAAO,MAAM,KAAK,CAAC;IACzB,IAAI,QAAQ,QAAQ,IAAI,CAAC;IAEzB,IAAI,KAAK,IAAI,EAAE;QACb,MAAM,UAAU,MAAM,KAAK,CAAC,CAAC,cAAc,EAAE,QAAQ;QACrD,SAAS,QAAQ,IAAI,CACnB,MAAM,IAAI,CAAC,KAAK,IAAI,EAAE;YACpB,QAAQ;YACR,OAAO;YACP,QAAQ;gBAAC;aAAI;YACb,GAAG,QAAQ,OAAO,EAAE;QACtB;QAEF;IACF;IAEA,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI,EAAE;QAC1B,MAAM,UAAU,MAAM,KAAK,CAAC,CAAC,cAAc,EAAE,QAAQ;QACrD,SAAS,QAAQ,IAAI,CAAC;QACtB,SAAS,QAAQ,IAAI,CACnB,MAAM,IAAI,CAAC,KAAK,IAAI,EAAE;YACpB,QAAQ;YACR,OAAO;YACP,QAAQ;gBAAC;aAAI;YACb,GAAG,QAAQ,OAAO,EAAE;QACtB;QAEF;IACF;IAEA,SAAS,QAAQ,IAAI,CAAC;IAEtB,IAAI,KAAK;QACP,SAAS,QAAQ,IAAI,CAAC,MAAM;IAC9B;IAEA,SAAS,QAAQ,IAAI,CAAC;IACtB;IACA,OAAO;AACT;AAEA,gBAAgB,GAChB,SAAS,IAAI,IAAI,EAAE,CAAC,EAAE,KAAK;IACzB,OAAO,CAAC,QAAQ,KAAK,MAAM,IAAI;AACjC","ignoreList":[0]}},
    {"offset": {"line": 35457, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35463, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-markdown/lib/util/check-quote.js"],"sourcesContent":["/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['quote'], null | undefined>}\n */\nexport function checkQuote(state) {\n  const marker = state.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n"],"names":[],"mappings":"AAAA;;CAEC,GAED;;;CAGC;;;AACM,SAAS,WAAW,KAAK;IAC9B,MAAM,SAAS,MAAM,OAAO,CAAC,KAAK,IAAI;IAEtC,IAAI,WAAW,OAAO,WAAW,KAAK;QACpC,MAAM,IAAI,MACR,kCACE,SACA;IAEN;IAEA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 35478, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35484, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-markdown/lib/handle/definition.js"],"sourcesContent":["/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Definition, Parents} from 'mdast'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\n/**\n * @param {Definition} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function definition(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('definition')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      before: value,\n      after: ']',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(']: ')\n\n  subexit()\n\n  if (\n    // If there’s no url, or…\n    !node.url ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : '\\n',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  exit()\n\n  return value\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AAED;;AASO,SAAS,WAAW,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI;IAC7C,MAAM,QAAQ,CAAA,GAAA,4KAAA,CAAA,aAAU,AAAD,EAAE;IACzB,MAAM,SAAS,UAAU,MAAM,UAAU;IACzC,MAAM,OAAO,MAAM,KAAK,CAAC;IACzB,IAAI,UAAU,MAAM,KAAK,CAAC;IAC1B,MAAM,UAAU,MAAM,aAAa,CAAC;IACpC,IAAI,QAAQ,QAAQ,IAAI,CAAC;IACzB,SAAS,QAAQ,IAAI,CACnB,MAAM,IAAI,CAAC,MAAM,aAAa,CAAC,OAAO;QACpC,QAAQ;QACR,OAAO;QACP,GAAG,QAAQ,OAAO,EAAE;IACtB;IAEF,SAAS,QAAQ,IAAI,CAAC;IAEtB;IAEA,IACE,yBAAyB;IACzB,CAAC,KAAK,GAAG,IACT,iDAAiD;IACjD,eAAe,IAAI,CAAC,KAAK,GAAG,GAC5B;QACA,UAAU,MAAM,KAAK,CAAC;QACtB,SAAS,QAAQ,IAAI,CAAC;QACtB,SAAS,QAAQ,IAAI,CACnB,MAAM,IAAI,CAAC,KAAK,GAAG,EAAE;YAAC,QAAQ;YAAO,OAAO;YAAK,GAAG,QAAQ,OAAO,EAAE;QAAA;QAEvE,SAAS,QAAQ,IAAI,CAAC;IACxB,OAAO;QACL,kCAAkC;QAClC,UAAU,MAAM,KAAK,CAAC;QACtB,SAAS,QAAQ,IAAI,CACnB,MAAM,IAAI,CAAC,KAAK,GAAG,EAAE;YACnB,QAAQ;YACR,OAAO,KAAK,KAAK,GAAG,MAAM;YAC1B,GAAG,QAAQ,OAAO,EAAE;QACtB;IAEJ;IAEA;IAEA,IAAI,KAAK,KAAK,EAAE;QACd,UAAU,MAAM,KAAK,CAAC,CAAC,KAAK,EAAE,QAAQ;QACtC,SAAS,QAAQ,IAAI,CAAC,MAAM;QAC5B,SAAS,QAAQ,IAAI,CACnB,MAAM,IAAI,CAAC,KAAK,KAAK,EAAE;YACrB,QAAQ;YACR,OAAO;YACP,GAAG,QAAQ,OAAO,EAAE;QACtB;QAEF,SAAS,QAAQ,IAAI,CAAC;QACtB;IACF;IAEA;IAEA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 35541, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35547, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-markdown/lib/util/check-emphasis.js"],"sourcesContent":["/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['emphasis'], null | undefined>}\n */\nexport function checkEmphasis(state) {\n  const marker = state.options.emphasis || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize emphasis with `' +\n        marker +\n        '` for `options.emphasis`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n"],"names":[],"mappings":"AAAA;;CAEC,GAED;;;CAGC;;;AACM,SAAS,cAAc,KAAK;IACjC,MAAM,SAAS,MAAM,OAAO,CAAC,QAAQ,IAAI;IAEzC,IAAI,WAAW,OAAO,WAAW,KAAK;QACpC,MAAM,IAAI,MACR,qCACE,SACA;IAEN;IAEA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 35562, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35568, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-markdown/lib/util/encode-info.js"],"sourcesContent":["/**\n * @import {EncodeSides} from '../types.js'\n */\n\nimport {classifyCharacter} from 'micromark-util-classify-character'\n\n/**\n * Check whether to encode (as a character reference) the characters\n * surrounding an attention run.\n *\n * Which characters are around an attention run influence whether it works or\n * not.\n *\n * See <https://github.com/orgs/syntax-tree/discussions/60> for more info.\n * See this markdown in a particular renderer to see what works:\n *\n * ```markdown\n * |                         | A (letter inside) | B (punctuation inside) | C (whitespace inside) | D (nothing inside) |\n * | ----------------------- | ----------------- | ---------------------- | --------------------- | ------------------ |\n * | 1 (letter outside)      | x*y*z             | x*.*z                  | x* *z                 | x**z               |\n * | 2 (punctuation outside) | .*y*.             | .*.*.                  | .* *.                 | .**.               |\n * | 3 (whitespace outside)  | x *y* z           | x *.* z                | x * * z               | x ** z             |\n * | 4 (nothing outside)     | *x*               | *.*                    | * *                   | **                 |\n * ```\n *\n * @param {number} outside\n *   Code point on the outer side of the run.\n * @param {number} inside\n *   Code point on the inner side of the run.\n * @param {'*' | '_'} marker\n *   Marker of the run.\n *   Underscores are handled more strictly (they form less often) than\n *   asterisks.\n * @returns {EncodeSides}\n *   Whether to encode characters.\n */\n// Important: punctuation must never be encoded.\n// Punctuation is solely used by markdown constructs.\n// And by encoding itself.\n// Encoding them will break constructs or double encode things.\nexport function encodeInfo(outside, inside, marker) {\n  const outsideKind = classifyCharacter(outside)\n  const insideKind = classifyCharacter(inside)\n\n  // Letter outside:\n  if (outsideKind === undefined) {\n    return insideKind === undefined\n      ? // Letter inside:\n        // we have to encode *both* letters for `_` as it is looser.\n        // it already forms for `*` (and GFMs `~`).\n        marker === '_'\n        ? {inside: true, outside: true}\n        : {inside: false, outside: false}\n      : insideKind === 1\n        ? // Whitespace inside: encode both (letter, whitespace).\n          {inside: true, outside: true}\n        : // Punctuation inside: encode outer (letter)\n          {inside: false, outside: true}\n  }\n\n  // Whitespace outside:\n  if (outsideKind === 1) {\n    return insideKind === undefined\n      ? // Letter inside: already forms.\n        {inside: false, outside: false}\n      : insideKind === 1\n        ? // Whitespace inside: encode both (whitespace).\n          {inside: true, outside: true}\n        : // Punctuation inside: already forms.\n          {inside: false, outside: false}\n  }\n\n  // Punctuation outside:\n  return insideKind === undefined\n    ? // Letter inside: already forms.\n      {inside: false, outside: false}\n    : insideKind === 1\n      ? // Whitespace inside: encode inner (whitespace).\n        {inside: true, outside: false}\n      : // Punctuation inside: already forms.\n        {inside: false, outside: false}\n}\n"],"names":[],"mappings":"AAAA;;CAEC;;;AAED;;AAoCO,SAAS,WAAW,OAAO,EAAE,MAAM,EAAE,MAAM;IAChD,MAAM,cAAc,CAAA,GAAA,sKAAA,CAAA,oBAAiB,AAAD,EAAE;IACtC,MAAM,aAAa,CAAA,GAAA,sKAAA,CAAA,oBAAiB,AAAD,EAAE;IAErC,kBAAkB;IAClB,IAAI,gBAAgB,WAAW;QAC7B,OAAO,eAAe,YAElB,4DAA4D;QAC5D,2CAA2C;QAC3C,WAAW,MACT;YAAC,QAAQ;YAAM,SAAS;QAAI,IAC5B;YAAC,QAAQ;YAAO,SAAS;QAAK,IAChC,eAAe,IAEb;YAAC,QAAQ;YAAM,SAAS;QAAI,IAE5B;YAAC,QAAQ;YAAO,SAAS;QAAI;IACrC;IAEA,sBAAsB;IACtB,IAAI,gBAAgB,GAAG;QACrB,OAAO,eAAe,YAElB;YAAC,QAAQ;YAAO,SAAS;QAAK,IAC9B,eAAe,IAEb;YAAC,QAAQ;YAAM,SAAS;QAAI,IAE5B;YAAC,QAAQ;YAAO,SAAS;QAAK;IACtC;IAEA,uBAAuB;IACvB,OAAO,eAAe,YAElB;QAAC,QAAQ;QAAO,SAAS;IAAK,IAC9B,eAAe,IAEb;QAAC,QAAQ;QAAM,SAAS;IAAK,IAE7B;QAAC,QAAQ;QAAO,SAAS;IAAK;AACtC","ignoreList":[0]}},
    {"offset": {"line": 35621, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35627, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-markdown/lib/util/encode-character-reference.js"],"sourcesContent":["/**\n * Encode a code point as a character reference.\n *\n * @param {number} code\n *   Code point to encode.\n * @returns {string}\n *   Encoded character reference.\n */\nexport function encodeCharacterReference(code) {\n  return '&#x' + code.toString(16).toUpperCase() + ';'\n}\n"],"names":[],"mappings":"AAAA;;;;;;;CAOC;;;AACM,SAAS,yBAAyB,IAAI;IAC3C,OAAO,QAAQ,KAAK,QAAQ,CAAC,IAAI,WAAW,KAAK;AACnD","ignoreList":[0]}},
    {"offset": {"line": 35640, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35646, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-markdown/lib/handle/emphasis.js"],"sourcesContent":["/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Emphasis, Parents} from 'mdast'\n */\n\nimport {checkEmphasis} from '../util/check-emphasis.js'\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {encodeInfo} from '../util/encode-info.js'\n\nemphasis.peek = emphasisPeek\n\n/**\n * @param {Emphasis} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function emphasis(node, _, state, info) {\n  const marker = checkEmphasis(state)\n  const exit = state.enter('emphasis')\n  const tracker = state.createTracker(info)\n  const before = tracker.move(marker)\n\n  let between = tracker.move(\n    state.containerPhrasing(node, {\n      after: marker,\n      before,\n      ...tracker.current()\n    })\n  )\n  const betweenHead = between.charCodeAt(0)\n  const open = encodeInfo(\n    info.before.charCodeAt(info.before.length - 1),\n    betweenHead,\n    marker\n  )\n\n  if (open.inside) {\n    between = encodeCharacterReference(betweenHead) + between.slice(1)\n  }\n\n  const betweenTail = between.charCodeAt(between.length - 1)\n  const close = encodeInfo(info.after.charCodeAt(0), betweenTail, marker)\n\n  if (close.inside) {\n    between = between.slice(0, -1) + encodeCharacterReference(betweenTail)\n  }\n\n  const after = tracker.move(marker)\n\n  exit()\n\n  state.attentionEncodeSurroundingInfo = {\n    after: close.outside,\n    before: open.outside\n  }\n  return before + between + after\n}\n\n/**\n * @param {Emphasis} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction emphasisPeek(_, _1, state) {\n  return state.options.emphasis || '*'\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AAED;AAEA;AADA;;;;AAGA,SAAS,IAAI,GAAG;AAST,SAAS,SAAS,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI;IAC3C,MAAM,SAAS,CAAA,GAAA,+KAAA,CAAA,gBAAa,AAAD,EAAE;IAC7B,MAAM,OAAO,MAAM,KAAK,CAAC;IACzB,MAAM,UAAU,MAAM,aAAa,CAAC;IACpC,MAAM,SAAS,QAAQ,IAAI,CAAC;IAE5B,IAAI,UAAU,QAAQ,IAAI,CACxB,MAAM,iBAAiB,CAAC,MAAM;QAC5B,OAAO;QACP;QACA,GAAG,QAAQ,OAAO,EAAE;IACtB;IAEF,MAAM,cAAc,QAAQ,UAAU,CAAC;IACvC,MAAM,OAAO,CAAA,GAAA,4KAAA,CAAA,aAAU,AAAD,EACpB,KAAK,MAAM,CAAC,UAAU,CAAC,KAAK,MAAM,CAAC,MAAM,GAAG,IAC5C,aACA;IAGF,IAAI,KAAK,MAAM,EAAE;QACf,UAAU,CAAA,GAAA,8LAAA,CAAA,2BAAwB,AAAD,EAAE,eAAe,QAAQ,KAAK,CAAC;IAClE;IAEA,MAAM,cAAc,QAAQ,UAAU,CAAC,QAAQ,MAAM,GAAG;IACxD,MAAM,QAAQ,CAAA,GAAA,4KAAA,CAAA,aAAU,AAAD,EAAE,KAAK,KAAK,CAAC,UAAU,CAAC,IAAI,aAAa;IAEhE,IAAI,MAAM,MAAM,EAAE;QAChB,UAAU,QAAQ,KAAK,CAAC,GAAG,CAAC,KAAK,CAAA,GAAA,8LAAA,CAAA,2BAAwB,AAAD,EAAE;IAC5D;IAEA,MAAM,QAAQ,QAAQ,IAAI,CAAC;IAE3B;IAEA,MAAM,8BAA8B,GAAG;QACrC,OAAO,MAAM,OAAO;QACpB,QAAQ,KAAK,OAAO;IACtB;IACA,OAAO,SAAS,UAAU;AAC5B;AAEA;;;;;CAKC,GACD,SAAS,aAAa,CAAC,EAAE,EAAE,EAAE,KAAK;IAChC,OAAO,MAAM,OAAO,CAAC,QAAQ,IAAI;AACnC","ignoreList":[0]}},
    {"offset": {"line": 35695, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35701, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js"],"sourcesContent":["/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Heading} from 'mdast'\n */\n\nimport {EXIT, visit} from 'unist-util-visit'\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Heading} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatHeadingAsSetext(node, state) {\n  let literalWithBreak = false\n\n  // Look for literals with a line break.\n  // Note that this also\n  visit(node, function (node) {\n    if (\n      ('value' in node && /\\r?\\n|\\r/.test(node.value)) ||\n      node.type === 'break'\n    ) {\n      literalWithBreak = true\n      return EXIT\n    }\n  })\n\n  return Boolean(\n    (!node.depth || node.depth < 3) &&\n      toString(node) &&\n      (state.options.setext || literalWithBreak)\n  )\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AAED;AAAA;AACA;;;AAOO,SAAS,sBAAsB,IAAI,EAAE,KAAK;IAC/C,IAAI,mBAAmB;IAEvB,uCAAuC;IACvC,sBAAsB;IACtB,CAAA,GAAA,kKAAA,CAAA,QAAK,AAAD,EAAE,MAAM,SAAU,IAAI;QACxB,IACE,AAAC,WAAW,QAAQ,WAAW,IAAI,CAAC,KAAK,KAAK,KAC9C,KAAK,IAAI,KAAK,SACd;YACA,mBAAmB;YACnB,OAAO,6JAAA,CAAA,OAAI;QACb;IACF;IAEA,OAAO,QACL,CAAC,CAAC,KAAK,KAAK,IAAI,KAAK,KAAK,GAAG,CAAC,KAC5B,CAAA,GAAA,yJAAA,CAAA,WAAQ,AAAD,EAAE,SACT,CAAC,MAAM,OAAO,CAAC,MAAM,IAAI,gBAAgB;AAE/C","ignoreList":[0]}},
    {"offset": {"line": 35724, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35730, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-markdown/lib/handle/heading.js"],"sourcesContent":["/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Heading, Parents} from 'mdast'\n */\n\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {formatHeadingAsSetext} from '../util/format-heading-as-setext.js'\n\n/**\n * @param {Heading} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function heading(node, _, state, info) {\n  const rank = Math.max(Math.min(6, node.depth || 1), 1)\n  const tracker = state.createTracker(info)\n\n  if (formatHeadingAsSetext(node, state)) {\n    const exit = state.enter('headingSetext')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...tracker.current(),\n      before: '\\n',\n      after: '\\n'\n    })\n    subexit()\n    exit()\n\n    return (\n      value +\n      '\\n' +\n      (rank === 1 ? '=' : '-').repeat(\n        // The whole size…\n        value.length -\n          // Minus the position of the character after the last EOL (or\n          // 0 if there is none)…\n          (Math.max(value.lastIndexOf('\\r'), value.lastIndexOf('\\n')) + 1)\n      )\n    )\n  }\n\n  const sequence = '#'.repeat(rank)\n  const exit = state.enter('headingAtx')\n  const subexit = state.enter('phrasing')\n\n  // Note: for proper tracking, we should reset the output positions when there\n  // is no content returned, because then the space is not output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  tracker.move(sequence + ' ')\n\n  let value = state.containerPhrasing(node, {\n    before: '# ',\n    after: '\\n',\n    ...tracker.current()\n  })\n\n  if (/^[\\t ]/.test(value)) {\n    // To do: what effect has the character reference on tracking?\n    value = encodeCharacterReference(value.charCodeAt(0)) + value.slice(1)\n  }\n\n  value = value ? sequence + ' ' + value : sequence\n\n  if (state.options.closeAtx) {\n    value += ' ' + sequence\n  }\n\n  subexit()\n  exit()\n\n  return value\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AAGD;AADA;;;AAUO,SAAS,QAAQ,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI;IAC1C,MAAM,OAAO,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,GAAG,KAAK,KAAK,IAAI,IAAI;IACpD,MAAM,UAAU,MAAM,aAAa,CAAC;IAEpC,IAAI,CAAA,GAAA,+LAAA,CAAA,wBAAqB,AAAD,EAAE,MAAM,QAAQ;QACtC,MAAM,OAAO,MAAM,KAAK,CAAC;QACzB,MAAM,UAAU,MAAM,KAAK,CAAC;QAC5B,MAAM,QAAQ,MAAM,iBAAiB,CAAC,MAAM;YAC1C,GAAG,QAAQ,OAAO,EAAE;YACpB,QAAQ;YACR,OAAO;QACT;QACA;QACA;QAEA,OACE,QACA,OACA,CAAC,SAAS,IAAI,MAAM,GAAG,EAAE,MAAM,CAC7B,kBAAkB;QAClB,MAAM,MAAM,GACV,6DAA6D;QAC7D,uBAAuB;QACvB,CAAC,KAAK,GAAG,CAAC,MAAM,WAAW,CAAC,OAAO,MAAM,WAAW,CAAC,SAAS,CAAC;IAGvE;IAEA,MAAM,WAAW,IAAI,MAAM,CAAC;IAC5B,MAAM,OAAO,MAAM,KAAK,CAAC;IACzB,MAAM,UAAU,MAAM,KAAK,CAAC;IAE5B,6EAA6E;IAC7E,gEAAgE;IAChE,4EAA4E;IAC5E,yCAAyC;IACzC,QAAQ,IAAI,CAAC,WAAW;IAExB,IAAI,QAAQ,MAAM,iBAAiB,CAAC,MAAM;QACxC,QAAQ;QACR,OAAO;QACP,GAAG,QAAQ,OAAO,EAAE;IACtB;IAEA,IAAI,SAAS,IAAI,CAAC,QAAQ;QACxB,8DAA8D;QAC9D,QAAQ,CAAA,GAAA,8LAAA,CAAA,2BAAwB,AAAD,EAAE,MAAM,UAAU,CAAC,MAAM,MAAM,KAAK,CAAC;IACtE;IAEA,QAAQ,QAAQ,WAAW,MAAM,QAAQ;IAEzC,IAAI,MAAM,OAAO,CAAC,QAAQ,EAAE;QAC1B,SAAS,MAAM;IACjB;IAEA;IACA;IAEA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 35783, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35789, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-markdown/lib/handle/html.js"],"sourcesContent":["/**\n * @import {Html} from 'mdast'\n */\n\nhtml.peek = htmlPeek\n\n/**\n * @param {Html} node\n * @returns {string}\n */\nexport function html(node) {\n  return node.value || ''\n}\n\n/**\n * @returns {string}\n */\nfunction htmlPeek() {\n  return '<'\n}\n"],"names":[],"mappings":"AAAA;;CAEC;;;AAED,KAAK,IAAI,GAAG;AAML,SAAS,KAAK,IAAI;IACvB,OAAO,KAAK,KAAK,IAAI;AACvB;AAEA;;CAEC,GACD,SAAS;IACP,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 35803, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35809, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-markdown/lib/handle/image.js"],"sourcesContent":["/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Image, Parents} from 'mdast'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\nimage.peek = imagePeek\n\n/**\n * @param {Image} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function image(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('image')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  value += tracker.move(\n    state.safe(node.alt, {before: value, after: ']', ...tracker.current()})\n  )\n  value += tracker.move('](')\n\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n  exit()\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imagePeek() {\n  return '!'\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AAED;;AAEA,MAAM,IAAI,GAAG;AASN,SAAS,MAAM,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI;IACxC,MAAM,QAAQ,CAAA,GAAA,4KAAA,CAAA,aAAU,AAAD,EAAE;IACzB,MAAM,SAAS,UAAU,MAAM,UAAU;IACzC,MAAM,OAAO,MAAM,KAAK,CAAC;IACzB,IAAI,UAAU,MAAM,KAAK,CAAC;IAC1B,MAAM,UAAU,MAAM,aAAa,CAAC;IACpC,IAAI,QAAQ,QAAQ,IAAI,CAAC;IACzB,SAAS,QAAQ,IAAI,CACnB,MAAM,IAAI,CAAC,KAAK,GAAG,EAAE;QAAC,QAAQ;QAAO,OAAO;QAAK,GAAG,QAAQ,OAAO,EAAE;IAAA;IAEvE,SAAS,QAAQ,IAAI,CAAC;IAEtB;IAEA,IACE,0CAA0C;IACzC,CAAC,KAAK,GAAG,IAAI,KAAK,KAAK,IACxB,iDAAiD;IACjD,eAAe,IAAI,CAAC,KAAK,GAAG,GAC5B;QACA,UAAU,MAAM,KAAK,CAAC;QACtB,SAAS,QAAQ,IAAI,CAAC;QACtB,SAAS,QAAQ,IAAI,CACnB,MAAM,IAAI,CAAC,KAAK,GAAG,EAAE;YAAC,QAAQ;YAAO,OAAO;YAAK,GAAG,QAAQ,OAAO,EAAE;QAAA;QAEvE,SAAS,QAAQ,IAAI,CAAC;IACxB,OAAO;QACL,kCAAkC;QAClC,UAAU,MAAM,KAAK,CAAC;QACtB,SAAS,QAAQ,IAAI,CACnB,MAAM,IAAI,CAAC,KAAK,GAAG,EAAE;YACnB,QAAQ;YACR,OAAO,KAAK,KAAK,GAAG,MAAM;YAC1B,GAAG,QAAQ,OAAO,EAAE;QACtB;IAEJ;IAEA;IAEA,IAAI,KAAK,KAAK,EAAE;QACd,UAAU,MAAM,KAAK,CAAC,CAAC,KAAK,EAAE,QAAQ;QACtC,SAAS,QAAQ,IAAI,CAAC,MAAM;QAC5B,SAAS,QAAQ,IAAI,CACnB,MAAM,IAAI,CAAC,KAAK,KAAK,EAAE;YACrB,QAAQ;YACR,OAAO;YACP,GAAG,QAAQ,OAAO,EAAE;QACtB;QAEF,SAAS,QAAQ,IAAI,CAAC;QACtB;IACF;IAEA,SAAS,QAAQ,IAAI,CAAC;IACtB;IAEA,OAAO;AACT;AAEA;;CAEC,GACD,SAAS;IACP,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 35873, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35879, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-markdown/lib/handle/image-reference.js"],"sourcesContent":["/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {ImageReference, Parents} from 'mdast'\n */\n\nimageReference.peek = imageReferencePeek\n\n/**\n * @param {ImageReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function imageReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('imageReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  const alt = state.safe(node.alt, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(alt + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !alt || alt !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imageReferencePeek() {\n  return '!'\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AAED,eAAe,IAAI,GAAG;AASf,SAAS,eAAe,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI;IACjD,MAAM,OAAO,KAAK,aAAa;IAC/B,MAAM,OAAO,MAAM,KAAK,CAAC;IACzB,IAAI,UAAU,MAAM,KAAK,CAAC;IAC1B,MAAM,UAAU,MAAM,aAAa,CAAC;IACpC,IAAI,QAAQ,QAAQ,IAAI,CAAC;IACzB,MAAM,MAAM,MAAM,IAAI,CAAC,KAAK,GAAG,EAAE;QAC/B,QAAQ;QACR,OAAO;QACP,GAAG,QAAQ,OAAO,EAAE;IACtB;IACA,SAAS,QAAQ,IAAI,CAAC,MAAM;IAE5B;IACA,oEAAoE;IACpE,MAAM,QAAQ,MAAM,KAAK;IACzB,MAAM,KAAK,GAAG,EAAE;IAChB,UAAU,MAAM,KAAK,CAAC;IACtB,8EAA8E;IAC9E,2EAA2E;IAC3E,4EAA4E;IAC5E,yCAAyC;IACzC,MAAM,YAAY,MAAM,IAAI,CAAC,MAAM,aAAa,CAAC,OAAO;QACtD,QAAQ;QACR,OAAO;QACP,GAAG,QAAQ,OAAO,EAAE;IACtB;IACA;IACA,MAAM,KAAK,GAAG;IACd;IAEA,IAAI,SAAS,UAAU,CAAC,OAAO,QAAQ,WAAW;QAChD,SAAS,QAAQ,IAAI,CAAC,YAAY;IACpC,OAAO,IAAI,SAAS,YAAY;QAC9B,2BAA2B;QAC3B,QAAQ,MAAM,KAAK,CAAC,GAAG,CAAC;IAC1B,OAAO;QACL,SAAS,QAAQ,IAAI,CAAC;IACxB;IAEA,OAAO;AACT;AAEA;;CAEC,GACD,SAAS;IACP,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 35930, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35936, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-markdown/lib/handle/inline-code.js"],"sourcesContent":["/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {InlineCode, Parents} from 'mdast'\n */\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = state.compilePattern(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AAED,WAAW,IAAI,GAAG;AAQX,SAAS,WAAW,IAAI,EAAE,CAAC,EAAE,KAAK;IACvC,IAAI,QAAQ,KAAK,KAAK,IAAI;IAC1B,IAAI,WAAW;IACf,IAAI,QAAQ,CAAC;IAEb,2EAA2E;IAC3E,OAAO;IACP,sCAAsC;IACtC,MAAO,IAAI,OAAO,aAAa,WAAW,YAAY,IAAI,CAAC,OAAQ;QACjE,YAAY;IACd;IAEA,wEAAwE;IACxE,2EAA2E;IAC3E,IACE,WAAW,IAAI,CAAC,UAChB,CAAC,AAAC,WAAW,IAAI,CAAC,UAAU,WAAW,IAAI,CAAC,UAAW,QAAQ,IAAI,CAAC,MAAM,GAC1E;QACA,QAAQ,MAAM,QAAQ;IACxB;IAEA,6EAA6E;IAC7E,qBAAqB;IACrB,yEAAyE;IACzE,4BAA4B;IAC5B,mEAAmE;IACnE,6EAA6E;IAC7E,YAAY;IACZ,MAAO,EAAE,QAAQ,MAAM,MAAM,CAAC,MAAM,CAAE;QACpC,MAAM,UAAU,MAAM,MAAM,CAAC,MAAM;QACnC,MAAM,aAAa,MAAM,cAAc,CAAC;QACxC,mCAAmC,GACnC,IAAI;QAEJ,4BAA4B;QAC5B,yEAAyE;QACzE,MAAM;QACN,IAAI,CAAC,QAAQ,OAAO,EAAE;QAEtB,MAAQ,QAAQ,WAAW,IAAI,CAAC,OAAS;YACvC,IAAI,WAAW,MAAM,KAAK;YAE1B,+DAA+D;YAC/D,IACE,MAAM,UAAU,CAAC,cAAc,GAAG,QAAQ,OAC1C,MAAM,UAAU,CAAC,WAAW,OAAO,GAAG,QAAQ,KAC9C;gBACA;YACF;YAEA,QAAQ,MAAM,KAAK,CAAC,GAAG,YAAY,MAAM,MAAM,KAAK,CAAC,MAAM,KAAK,GAAG;QACrE;IACF;IAEA,OAAO,WAAW,QAAQ;AAC5B;AAEA;;CAEC,GACD,SAAS;IACP,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 35989, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35995, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-markdown/lib/util/format-link-as-autolink.js"],"sourcesContent":["/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Link} from 'mdast'\n */\n\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Link} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatLinkAsAutolink(node, state) {\n  const raw = toString(node)\n\n  return Boolean(\n    !state.options.resourceLink &&\n      // If there’s a url…\n      node.url &&\n      // And there’s a no title…\n      !node.title &&\n      // And the content of `node` is a single text node…\n      node.children &&\n      node.children.length === 1 &&\n      node.children[0].type === 'text' &&\n      // And if the url is the same as the content…\n      (raw === node.url || 'mailto:' + raw === node.url) &&\n      // And that starts w/ a protocol…\n      /^[a-z][a-z+.-]+:/i.test(node.url) &&\n      // And that doesn’t contain ASCII control codes (character escapes and\n      // references don’t work), space, or angle brackets…\n      !/[\\0- <>\\u007F]/.test(node.url)\n  )\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AAED;;AAOO,SAAS,qBAAqB,IAAI,EAAE,KAAK;IAC9C,MAAM,MAAM,CAAA,GAAA,yJAAA,CAAA,WAAQ,AAAD,EAAE;IAErB,OAAO,QACL,CAAC,MAAM,OAAO,CAAC,YAAY,IACzB,oBAAoB;IACpB,KAAK,GAAG,IACR,0BAA0B;IAC1B,CAAC,KAAK,KAAK,IACX,mDAAmD;IACnD,KAAK,QAAQ,IACb,KAAK,QAAQ,CAAC,MAAM,KAAK,KACzB,KAAK,QAAQ,CAAC,EAAE,CAAC,IAAI,KAAK,UAC1B,6CAA6C;IAC7C,CAAC,QAAQ,KAAK,GAAG,IAAI,YAAY,QAAQ,KAAK,GAAG,KACjD,iCAAiC;IACjC,oBAAoB,IAAI,CAAC,KAAK,GAAG,KACjC,sEAAsE;IACtE,oDAAoD;IACpD,CAAC,iBAAiB,IAAI,CAAC,KAAK,GAAG;AAErC","ignoreList":[0]}},
    {"offset": {"line": 36014, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 36020, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-markdown/lib/handle/link.js"],"sourcesContent":["/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Link, Parents} from 'mdast'\n * @import {Exit} from '../types.js'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\nimport {formatLinkAsAutolink} from '../util/format-link-as-autolink.js'\n\nlink.peek = linkPeek\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function link(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const tracker = state.createTracker(info)\n  /** @type {Exit} */\n  let exit\n  /** @type {Exit} */\n  let subexit\n\n  if (formatLinkAsAutolink(node, state)) {\n    // Hide the fact that we’re in phrasing, because escapes don’t work.\n    const stack = state.stack\n    state.stack = []\n    exit = state.enter('autolink')\n    let value = tracker.move('<')\n    value += tracker.move(\n      state.containerPhrasing(node, {\n        before: value,\n        after: '>',\n        ...tracker.current()\n      })\n    )\n    value += tracker.move('>')\n    exit()\n    state.stack = stack\n    return value\n  }\n\n  exit = state.enter('link')\n  subexit = state.enter('label')\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: '](',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move('](')\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n\n  exit()\n  return value\n}\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nfunction linkPeek(node, _, state) {\n  return formatLinkAsAutolink(node, state) ? '<' : '['\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;AAED;AACA;;;AAEA,KAAK,IAAI,GAAG;AASL,SAAS,KAAK,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI;IACvC,MAAM,QAAQ,CAAA,GAAA,4KAAA,CAAA,aAAU,AAAD,EAAE;IACzB,MAAM,SAAS,UAAU,MAAM,UAAU;IACzC,MAAM,UAAU,MAAM,aAAa,CAAC;IACpC,iBAAiB,GACjB,IAAI;IACJ,iBAAiB,GACjB,IAAI;IAEJ,IAAI,CAAA,GAAA,8LAAA,CAAA,uBAAoB,AAAD,EAAE,MAAM,QAAQ;QACrC,oEAAoE;QACpE,MAAM,QAAQ,MAAM,KAAK;QACzB,MAAM,KAAK,GAAG,EAAE;QAChB,OAAO,MAAM,KAAK,CAAC;QACnB,IAAI,QAAQ,QAAQ,IAAI,CAAC;QACzB,SAAS,QAAQ,IAAI,CACnB,MAAM,iBAAiB,CAAC,MAAM;YAC5B,QAAQ;YACR,OAAO;YACP,GAAG,QAAQ,OAAO,EAAE;QACtB;QAEF,SAAS,QAAQ,IAAI,CAAC;QACtB;QACA,MAAM,KAAK,GAAG;QACd,OAAO;IACT;IAEA,OAAO,MAAM,KAAK,CAAC;IACnB,UAAU,MAAM,KAAK,CAAC;IACtB,IAAI,QAAQ,QAAQ,IAAI,CAAC;IACzB,SAAS,QAAQ,IAAI,CACnB,MAAM,iBAAiB,CAAC,MAAM;QAC5B,QAAQ;QACR,OAAO;QACP,GAAG,QAAQ,OAAO,EAAE;IACtB;IAEF,SAAS,QAAQ,IAAI,CAAC;IACtB;IAEA,IACE,0CAA0C;IACzC,CAAC,KAAK,GAAG,IAAI,KAAK,KAAK,IACxB,iDAAiD;IACjD,eAAe,IAAI,CAAC,KAAK,GAAG,GAC5B;QACA,UAAU,MAAM,KAAK,CAAC;QACtB,SAAS,QAAQ,IAAI,CAAC;QACtB,SAAS,QAAQ,IAAI,CACnB,MAAM,IAAI,CAAC,KAAK,GAAG,EAAE;YAAC,QAAQ;YAAO,OAAO;YAAK,GAAG,QAAQ,OAAO,EAAE;QAAA;QAEvE,SAAS,QAAQ,IAAI,CAAC;IACxB,OAAO;QACL,kCAAkC;QAClC,UAAU,MAAM,KAAK,CAAC;QACtB,SAAS,QAAQ,IAAI,CACnB,MAAM,IAAI,CAAC,KAAK,GAAG,EAAE;YACnB,QAAQ;YACR,OAAO,KAAK,KAAK,GAAG,MAAM;YAC1B,GAAG,QAAQ,OAAO,EAAE;QACtB;IAEJ;IAEA;IAEA,IAAI,KAAK,KAAK,EAAE;QACd,UAAU,MAAM,KAAK,CAAC,CAAC,KAAK,EAAE,QAAQ;QACtC,SAAS,QAAQ,IAAI,CAAC,MAAM;QAC5B,SAAS,QAAQ,IAAI,CACnB,MAAM,IAAI,CAAC,KAAK,KAAK,EAAE;YACrB,QAAQ;YACR,OAAO;YACP,GAAG,QAAQ,OAAO,EAAE;QACtB;QAEF,SAAS,QAAQ,IAAI,CAAC;QACtB;IACF;IAEA,SAAS,QAAQ,IAAI,CAAC;IAEtB;IACA,OAAO;AACT;AAEA;;;;;CAKC,GACD,SAAS,SAAS,IAAI,EAAE,CAAC,EAAE,KAAK;IAC9B,OAAO,CAAA,GAAA,8LAAA,CAAA,uBAAoB,AAAD,EAAE,MAAM,SAAS,MAAM;AACnD","ignoreList":[0]}},
    {"offset": {"line": 36108, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 36114, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-markdown/lib/handle/link-reference.js"],"sourcesContent":["/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {LinkReference, Parents} from 'mdast'\n */\n\nlinkReference.peek = linkReferencePeek\n\n/**\n * @param {LinkReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function linkReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('linkReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  const text = state.containerPhrasing(node, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(text + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !text || text !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction linkReferencePeek() {\n  return '['\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AAED,cAAc,IAAI,GAAG;AASd,SAAS,cAAc,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI;IAChD,MAAM,OAAO,KAAK,aAAa;IAC/B,MAAM,OAAO,MAAM,KAAK,CAAC;IACzB,IAAI,UAAU,MAAM,KAAK,CAAC;IAC1B,MAAM,UAAU,MAAM,aAAa,CAAC;IACpC,IAAI,QAAQ,QAAQ,IAAI,CAAC;IACzB,MAAM,OAAO,MAAM,iBAAiB,CAAC,MAAM;QACzC,QAAQ;QACR,OAAO;QACP,GAAG,QAAQ,OAAO,EAAE;IACtB;IACA,SAAS,QAAQ,IAAI,CAAC,OAAO;IAE7B;IACA,oEAAoE;IACpE,MAAM,QAAQ,MAAM,KAAK;IACzB,MAAM,KAAK,GAAG,EAAE;IAChB,UAAU,MAAM,KAAK,CAAC;IACtB,8EAA8E;IAC9E,2EAA2E;IAC3E,4EAA4E;IAC5E,yCAAyC;IACzC,MAAM,YAAY,MAAM,IAAI,CAAC,MAAM,aAAa,CAAC,OAAO;QACtD,QAAQ;QACR,OAAO;QACP,GAAG,QAAQ,OAAO,EAAE;IACtB;IACA;IACA,MAAM,KAAK,GAAG;IACd;IAEA,IAAI,SAAS,UAAU,CAAC,QAAQ,SAAS,WAAW;QAClD,SAAS,QAAQ,IAAI,CAAC,YAAY;IACpC,OAAO,IAAI,SAAS,YAAY;QAC9B,2BAA2B;QAC3B,QAAQ,MAAM,KAAK,CAAC,GAAG,CAAC;IAC1B,OAAO;QACL,SAAS,QAAQ,IAAI,CAAC;IACxB;IAEA,OAAO;AACT;AAEA;;CAEC,GACD,SAAS;IACP,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 36165, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 36171, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-markdown/lib/util/check-bullet.js"],"sourcesContent":["/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n"],"names":[],"mappings":"AAAA;;CAEC,GAED;;;CAGC;;;AACM,SAAS,YAAY,KAAK;IAC/B,MAAM,SAAS,MAAM,OAAO,CAAC,MAAM,IAAI;IAEvC,IAAI,WAAW,OAAO,WAAW,OAAO,WAAW,KAAK;QACtD,MAAM,IAAI,MACR,kCACE,SACA;IAEN;IAEA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 36186, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 36192, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-markdown/lib/util/check-bullet-ordered.js"],"sourcesContent":["/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bulletOrdered'], null | undefined>}\n */\nexport function checkBulletOrdered(state) {\n  const marker = state.options.bulletOrdered || '.'\n\n  if (marker !== '.' && marker !== ')') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bulletOrdered`, expected `.` or `)`'\n    )\n  }\n\n  return marker\n}\n"],"names":[],"mappings":"AAAA;;CAEC,GAED;;;CAGC;;;AACM,SAAS,mBAAmB,KAAK;IACtC,MAAM,SAAS,MAAM,OAAO,CAAC,aAAa,IAAI;IAE9C,IAAI,WAAW,OAAO,WAAW,KAAK;QACpC,MAAM,IAAI,MACR,kCACE,SACA;IAEN;IAEA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 36207, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 36213, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-markdown/lib/util/check-bullet-other.js"],"sourcesContent":["/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\nimport {checkBullet} from './check-bullet.js'\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBulletOther(state) {\n  const bullet = checkBullet(state)\n  const bulletOther = state.options.bulletOther\n\n  if (!bulletOther) {\n    return bullet === '*' ? '-' : '*'\n  }\n\n  if (bulletOther !== '*' && bulletOther !== '+' && bulletOther !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        bulletOther +\n        '` for `options.bulletOther`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  if (bulletOther === bullet) {\n    throw new Error(\n      'Expected `bullet` (`' +\n        bullet +\n        '`) and `bulletOther` (`' +\n        bulletOther +\n        '`) to be different'\n    )\n  }\n\n  return bulletOther\n}\n"],"names":[],"mappings":"AAAA;;CAEC;;;AAED;;AAMO,SAAS,iBAAiB,KAAK;IACpC,MAAM,SAAS,CAAA,GAAA,6KAAA,CAAA,cAAW,AAAD,EAAE;IAC3B,MAAM,cAAc,MAAM,OAAO,CAAC,WAAW;IAE7C,IAAI,CAAC,aAAa;QAChB,OAAO,WAAW,MAAM,MAAM;IAChC;IAEA,IAAI,gBAAgB,OAAO,gBAAgB,OAAO,gBAAgB,KAAK;QACrE,MAAM,IAAI,MACR,kCACE,cACA;IAEN;IAEA,IAAI,gBAAgB,QAAQ;QAC1B,MAAM,IAAI,MACR,yBACE,SACA,4BACA,cACA;IAEN;IAEA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 36234, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 36240, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-markdown/lib/util/check-rule.js"],"sourcesContent":["/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['rule'], null | undefined>}\n */\nexport function checkRule(state) {\n  const marker = state.options.rule || '*'\n\n  if (marker !== '*' && marker !== '-' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize rules with `' +\n        marker +\n        '` for `options.rule`, expected `*`, `-`, or `_`'\n    )\n  }\n\n  return marker\n}\n"],"names":[],"mappings":"AAAA;;CAEC,GAED;;;CAGC;;;AACM,SAAS,UAAU,KAAK;IAC7B,MAAM,SAAS,MAAM,OAAO,CAAC,IAAI,IAAI;IAErC,IAAI,WAAW,OAAO,WAAW,OAAO,WAAW,KAAK;QACtD,MAAM,IAAI,MACR,kCACE,SACA;IAEN;IAEA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 36255, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 36261, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-markdown/lib/handle/list.js"],"sourcesContent":["/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {List, Parents} from 'mdast'\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkBulletOther} from '../util/check-bullet-other.js'\nimport {checkBulletOrdered} from '../util/check-bullet-ordered.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {List} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function list(node, parent, state, info) {\n  const exit = state.enter('list')\n  const bulletCurrent = state.bulletCurrent\n  /** @type {string} */\n  let bullet = node.ordered ? checkBulletOrdered(state) : checkBullet(state)\n  /** @type {string} */\n  const bulletOther = node.ordered\n    ? bullet === '.'\n      ? ')'\n      : '.'\n    : checkBulletOther(state)\n  let useDifferentMarker =\n    parent && state.bulletLastUsed ? bullet === state.bulletLastUsed : false\n\n  if (!node.ordered) {\n    const firstListItem = node.children ? node.children[0] : undefined\n\n    // If there’s an empty first list item directly in two list items,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * - *\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (\n      // Bullet could be used as a thematic break marker:\n      (bullet === '*' || bullet === '-') &&\n      // Empty first list item:\n      firstListItem &&\n      (!firstListItem.children || !firstListItem.children[0]) &&\n      // Directly in two other list items:\n      state.stack[state.stack.length - 1] === 'list' &&\n      state.stack[state.stack.length - 2] === 'listItem' &&\n      state.stack[state.stack.length - 3] === 'list' &&\n      state.stack[state.stack.length - 4] === 'listItem' &&\n      // That are each the first child.\n      state.indexStack[state.indexStack.length - 1] === 0 &&\n      state.indexStack[state.indexStack.length - 2] === 0 &&\n      state.indexStack[state.indexStack.length - 3] === 0\n    ) {\n      useDifferentMarker = true\n    }\n\n    // If there’s a thematic break at the start of the first list item,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * ---\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (checkRule(state) === bullet && firstListItem) {\n      let index = -1\n\n      while (++index < node.children.length) {\n        const item = node.children[index]\n\n        if (\n          item &&\n          item.type === 'listItem' &&\n          item.children &&\n          item.children[0] &&\n          item.children[0].type === 'thematicBreak'\n        ) {\n          useDifferentMarker = true\n          break\n        }\n      }\n    }\n  }\n\n  if (useDifferentMarker) {\n    bullet = bulletOther\n  }\n\n  state.bulletCurrent = bullet\n  const value = state.containerFlow(node, info)\n  state.bulletLastUsed = bullet\n  state.bulletCurrent = bulletCurrent\n  exit()\n  return value\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AAED;AAEA;AADA;AAEA;;;;;AASO,SAAS,KAAK,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI;IAC5C,MAAM,OAAO,MAAM,KAAK,CAAC;IACzB,MAAM,gBAAgB,MAAM,aAAa;IACzC,mBAAmB,GACnB,IAAI,SAAS,KAAK,OAAO,GAAG,CAAA,GAAA,wLAAA,CAAA,qBAAkB,AAAD,EAAE,SAAS,CAAA,GAAA,6KAAA,CAAA,cAAW,AAAD,EAAE;IACpE,mBAAmB,GACnB,MAAM,cAAc,KAAK,OAAO,GAC5B,WAAW,MACT,MACA,MACF,CAAA,GAAA,sLAAA,CAAA,mBAAgB,AAAD,EAAE;IACrB,IAAI,qBACF,UAAU,MAAM,cAAc,GAAG,WAAW,MAAM,cAAc,GAAG;IAErE,IAAI,CAAC,KAAK,OAAO,EAAE;QACjB,MAAM,gBAAgB,KAAK,QAAQ,GAAG,KAAK,QAAQ,CAAC,EAAE,GAAG;QAEzD,kEAAkE;QAClE,qCAAqC;QACrC,EAAE;QACF,cAAc;QACd,QAAQ;QACR,MAAM;QACN,EAAE;QACF,6DAA6D;QAC7D,IACE,mDAAmD;QACnD,CAAC,WAAW,OAAO,WAAW,GAAG,KACjC,yBAAyB;QACzB,iBACA,CAAC,CAAC,cAAc,QAAQ,IAAI,CAAC,cAAc,QAAQ,CAAC,EAAE,KACtD,oCAAoC;QACpC,MAAM,KAAK,CAAC,MAAM,KAAK,CAAC,MAAM,GAAG,EAAE,KAAK,UACxC,MAAM,KAAK,CAAC,MAAM,KAAK,CAAC,MAAM,GAAG,EAAE,KAAK,cACxC,MAAM,KAAK,CAAC,MAAM,KAAK,CAAC,MAAM,GAAG,EAAE,KAAK,UACxC,MAAM,KAAK,CAAC,MAAM,KAAK,CAAC,MAAM,GAAG,EAAE,KAAK,cACxC,iCAAiC;QACjC,MAAM,UAAU,CAAC,MAAM,UAAU,CAAC,MAAM,GAAG,EAAE,KAAK,KAClD,MAAM,UAAU,CAAC,MAAM,UAAU,CAAC,MAAM,GAAG,EAAE,KAAK,KAClD,MAAM,UAAU,CAAC,MAAM,UAAU,CAAC,MAAM,GAAG,EAAE,KAAK,GAClD;YACA,qBAAqB;QACvB;QAEA,mEAAmE;QACnE,qCAAqC;QACrC,EAAE;QACF,cAAc;QACd,QAAQ;QACR,MAAM;QACN,EAAE;QACF,6DAA6D;QAC7D,IAAI,CAAA,GAAA,2KAAA,CAAA,YAAS,AAAD,EAAE,WAAW,UAAU,eAAe;YAChD,IAAI,QAAQ,CAAC;YAEb,MAAO,EAAE,QAAQ,KAAK,QAAQ,CAAC,MAAM,CAAE;gBACrC,MAAM,OAAO,KAAK,QAAQ,CAAC,MAAM;gBAEjC,IACE,QACA,KAAK,IAAI,KAAK,cACd,KAAK,QAAQ,IACb,KAAK,QAAQ,CAAC,EAAE,IAChB,KAAK,QAAQ,CAAC,EAAE,CAAC,IAAI,KAAK,iBAC1B;oBACA,qBAAqB;oBACrB;gBACF;YACF;QACF;IACF;IAEA,IAAI,oBAAoB;QACtB,SAAS;IACX;IAEA,MAAM,aAAa,GAAG;IACtB,MAAM,QAAQ,MAAM,aAAa,CAAC,MAAM;IACxC,MAAM,cAAc,GAAG;IACvB,MAAM,aAAa,GAAG;IACtB;IACA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 36327, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 36333, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js"],"sourcesContent":["/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'one'\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n"],"names":[],"mappings":"AAAA;;CAEC,GAED;;;CAGC;;;AACM,SAAS,oBAAoB,KAAK;IACvC,MAAM,QAAQ,MAAM,OAAO,CAAC,cAAc,IAAI;IAE9C,IAAI,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS;QAC3D,MAAM,IAAI,MACR,kCACE,QACA;IAEN;IAEA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 36348, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 36354, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-markdown/lib/handle/list-item.js"],"sourcesContent":["/**\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n * @import {ListItem, Parents} from 'mdast'\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AAGD;AADA;;;AAUO,SAAS,SAAS,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI;IAChD,MAAM,iBAAiB,CAAA,GAAA,6LAAA,CAAA,sBAAmB,AAAD,EAAE;IAC3C,IAAI,SAAS,MAAM,aAAa,IAAI,CAAA,GAAA,6KAAA,CAAA,cAAW,AAAD,EAAE;IAEhD,0CAA0C;IAC1C,IAAI,UAAU,OAAO,IAAI,KAAK,UAAU,OAAO,OAAO,EAAE;QACtD,SACE,CAAC,OAAO,OAAO,KAAK,KAAK,YAAY,OAAO,KAAK,GAAG,CAAC,IACjD,OAAO,KAAK,GACZ,CAAC,IACL,CAAC,MAAM,OAAO,CAAC,mBAAmB,KAAK,QACnC,IACA,OAAO,QAAQ,CAAC,OAAO,CAAC,KAAK,IACjC;IACJ;IAEA,IAAI,OAAO,OAAO,MAAM,GAAG;IAE3B,IACE,mBAAmB,SAClB,mBAAmB,WAClB,CAAC,AAAC,UAAU,OAAO,IAAI,KAAK,UAAU,OAAO,MAAM,IAAK,KAAK,MAAM,GACrE;QACA,OAAO,KAAK,IAAI,CAAC,OAAO,KAAK;IAC/B;IAEA,MAAM,UAAU,MAAM,aAAa,CAAC;IACpC,QAAQ,IAAI,CAAC,SAAS,IAAI,MAAM,CAAC,OAAO,OAAO,MAAM;IACrD,QAAQ,KAAK,CAAC;IACd,MAAM,OAAO,MAAM,KAAK,CAAC;IACzB,MAAM,QAAQ,MAAM,WAAW,CAC7B,MAAM,aAAa,CAAC,MAAM,QAAQ,OAAO,KACzC;IAEF;IAEA,OAAO;;IAEP,gBAAgB,GAChB,SAAS,IAAI,IAAI,EAAE,KAAK,EAAE,KAAK;QAC7B,IAAI,OAAO;YACT,OAAO,CAAC,QAAQ,KAAK,IAAI,MAAM,CAAC,KAAK,IAAI;QAC3C;QAEA,OAAO,CAAC,QAAQ,SAAS,SAAS,IAAI,MAAM,CAAC,OAAO,OAAO,MAAM,CAAC,IAAI;IACxE;AACF","ignoreList":[0]}},
    {"offset": {"line": 36390, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 36396, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-markdown/lib/handle/paragraph.js"],"sourcesContent":["/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Paragraph, Parents} from 'mdast'\n */\n\n/**\n * @param {Paragraph} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function paragraph(node, _, state, info) {\n  const exit = state.enter('paragraph')\n  const subexit = state.enter('phrasing')\n  const value = state.containerPhrasing(node, info)\n  subexit()\n  exit()\n  return value\n}\n"],"names":[],"mappings":"AAAA;;;CAGC,GAED;;;;;;CAMC;;;AACM,SAAS,UAAU,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI;IAC5C,MAAM,OAAO,MAAM,KAAK,CAAC;IACzB,MAAM,UAAU,MAAM,KAAK,CAAC;IAC5B,MAAM,QAAQ,MAAM,iBAAiB,CAAC,MAAM;IAC5C;IACA;IACA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 36416, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 36422, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-markdown/lib/handle/root.js"],"sourcesContent":["/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Root} from 'mdast'\n */\n\nimport {phrasing} from 'mdast-util-phrasing'\n\n/**\n * @param {Root} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function root(node, _, state, info) {\n  // Note: `html` nodes are ambiguous.\n  const hasPhrasing = node.children.some(function (d) {\n    return phrasing(d)\n  })\n\n  const container = hasPhrasing ? state.containerPhrasing : state.containerFlow\n  return container.call(state, node, info)\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AAED;;AASO,SAAS,KAAK,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI;IACvC,oCAAoC;IACpC,MAAM,cAAc,KAAK,QAAQ,CAAC,IAAI,CAAC,SAAU,CAAC;QAChD,OAAO,CAAA,GAAA,qJAAA,CAAA,WAAQ,AAAD,EAAE;IAClB;IAEA,MAAM,YAAY,cAAc,MAAM,iBAAiB,GAAG,MAAM,aAAa;IAC7E,OAAO,UAAU,IAAI,CAAC,OAAO,MAAM;AACrC","ignoreList":[0]}},
    {"offset": {"line": 36438, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 36444, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-markdown/lib/util/check-strong.js"],"sourcesContent":["/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['strong'], null | undefined>}\n */\nexport function checkStrong(state) {\n  const marker = state.options.strong || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize strong with `' +\n        marker +\n        '` for `options.strong`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n"],"names":[],"mappings":"AAAA;;CAEC,GAED;;;CAGC;;;AACM,SAAS,YAAY,KAAK;IAC/B,MAAM,SAAS,MAAM,OAAO,CAAC,MAAM,IAAI;IAEvC,IAAI,WAAW,OAAO,WAAW,KAAK;QACpC,MAAM,IAAI,MACR,mCACE,SACA;IAEN;IAEA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 36459, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 36465, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-markdown/lib/handle/strong.js"],"sourcesContent":["/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Strong} from 'mdast'\n */\n\nimport {checkStrong} from '../util/check-strong.js'\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {encodeInfo} from '../util/encode-info.js'\n\nstrong.peek = strongPeek\n\n/**\n * @param {Strong} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function strong(node, _, state, info) {\n  const marker = checkStrong(state)\n  const exit = state.enter('strong')\n  const tracker = state.createTracker(info)\n  const before = tracker.move(marker + marker)\n\n  let between = tracker.move(\n    state.containerPhrasing(node, {\n      after: marker,\n      before,\n      ...tracker.current()\n    })\n  )\n  const betweenHead = between.charCodeAt(0)\n  const open = encodeInfo(\n    info.before.charCodeAt(info.before.length - 1),\n    betweenHead,\n    marker\n  )\n\n  if (open.inside) {\n    between = encodeCharacterReference(betweenHead) + between.slice(1)\n  }\n\n  const betweenTail = between.charCodeAt(between.length - 1)\n  const close = encodeInfo(info.after.charCodeAt(0), betweenTail, marker)\n\n  if (close.inside) {\n    between = between.slice(0, -1) + encodeCharacterReference(betweenTail)\n  }\n\n  const after = tracker.move(marker + marker)\n\n  exit()\n\n  state.attentionEncodeSurroundingInfo = {\n    after: close.outside,\n    before: open.outside\n  }\n  return before + between + after\n}\n\n/**\n * @param {Strong} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction strongPeek(_, _1, state) {\n  return state.options.strong || '*'\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AAED;AAEA;AADA;;;;AAGA,OAAO,IAAI,GAAG;AASP,SAAS,OAAO,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI;IACzC,MAAM,SAAS,CAAA,GAAA,6KAAA,CAAA,cAAW,AAAD,EAAE;IAC3B,MAAM,OAAO,MAAM,KAAK,CAAC;IACzB,MAAM,UAAU,MAAM,aAAa,CAAC;IACpC,MAAM,SAAS,QAAQ,IAAI,CAAC,SAAS;IAErC,IAAI,UAAU,QAAQ,IAAI,CACxB,MAAM,iBAAiB,CAAC,MAAM;QAC5B,OAAO;QACP;QACA,GAAG,QAAQ,OAAO,EAAE;IACtB;IAEF,MAAM,cAAc,QAAQ,UAAU,CAAC;IACvC,MAAM,OAAO,CAAA,GAAA,4KAAA,CAAA,aAAU,AAAD,EACpB,KAAK,MAAM,CAAC,UAAU,CAAC,KAAK,MAAM,CAAC,MAAM,GAAG,IAC5C,aACA;IAGF,IAAI,KAAK,MAAM,EAAE;QACf,UAAU,CAAA,GAAA,8LAAA,CAAA,2BAAwB,AAAD,EAAE,eAAe,QAAQ,KAAK,CAAC;IAClE;IAEA,MAAM,cAAc,QAAQ,UAAU,CAAC,QAAQ,MAAM,GAAG;IACxD,MAAM,QAAQ,CAAA,GAAA,4KAAA,CAAA,aAAU,AAAD,EAAE,KAAK,KAAK,CAAC,UAAU,CAAC,IAAI,aAAa;IAEhE,IAAI,MAAM,MAAM,EAAE;QAChB,UAAU,QAAQ,KAAK,CAAC,GAAG,CAAC,KAAK,CAAA,GAAA,8LAAA,CAAA,2BAAwB,AAAD,EAAE;IAC5D;IAEA,MAAM,QAAQ,QAAQ,IAAI,CAAC,SAAS;IAEpC;IAEA,MAAM,8BAA8B,GAAG;QACrC,OAAO,MAAM,OAAO;QACpB,QAAQ,KAAK,OAAO;IACtB;IACA,OAAO,SAAS,UAAU;AAC5B;AAEA;;;;;CAKC,GACD,SAAS,WAAW,CAAC,EAAE,EAAE,EAAE,KAAK;IAC9B,OAAO,MAAM,OAAO,CAAC,MAAM,IAAI;AACjC","ignoreList":[0]}},
    {"offset": {"line": 36514, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 36520, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-markdown/lib/handle/text.js"],"sourcesContent":["/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Text} from 'mdast'\n */\n\n/**\n * @param {Text} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function text(node, _, state, info) {\n  return state.safe(node.value, info)\n}\n"],"names":[],"mappings":"AAAA;;;CAGC,GAED;;;;;;CAMC;;;AACM,SAAS,KAAK,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI;IACvC,OAAO,MAAM,IAAI,CAAC,KAAK,KAAK,EAAE;AAChC","ignoreList":[0]}},
    {"offset": {"line": 36535, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 36541, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-markdown/lib/util/check-rule-repetition.js"],"sourcesContent":["/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['ruleRepetition'], null | undefined>}\n */\nexport function checkRuleRepetition(state) {\n  const repetition = state.options.ruleRepetition || 3\n\n  if (repetition < 3) {\n    throw new Error(\n      'Cannot serialize rules with repetition `' +\n        repetition +\n        '` for `options.ruleRepetition`, expected `3` or more'\n    )\n  }\n\n  return repetition\n}\n"],"names":[],"mappings":"AAAA;;CAEC,GAED;;;CAGC;;;AACM,SAAS,oBAAoB,KAAK;IACvC,MAAM,aAAa,MAAM,OAAO,CAAC,cAAc,IAAI;IAEnD,IAAI,aAAa,GAAG;QAClB,MAAM,IAAI,MACR,6CACE,aACA;IAEN;IAEA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 36556, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 36562, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-markdown/lib/handle/thematic-break.js"],"sourcesContent":["/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Parents, ThematicBreak} from 'mdast'\n */\n\nimport {checkRuleRepetition} from '../util/check-rule-repetition.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {ThematicBreak} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nexport function thematicBreak(_, _1, state) {\n  const value = (\n    checkRule(state) + (state.options.ruleSpaces ? ' ' : '')\n  ).repeat(checkRuleRepetition(state))\n\n  return state.options.ruleSpaces ? value.slice(0, -1) : value\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AAGD;AADA;;;AASO,SAAS,cAAc,CAAC,EAAE,EAAE,EAAE,KAAK;IACxC,MAAM,QAAQ,CACZ,CAAA,GAAA,2KAAA,CAAA,YAAS,AAAD,EAAE,SAAS,CAAC,MAAM,OAAO,CAAC,UAAU,GAAG,MAAM,EAAE,CACzD,EAAE,MAAM,CAAC,CAAA,GAAA,yLAAA,CAAA,sBAAmB,AAAD,EAAE;IAE7B,OAAO,MAAM,OAAO,CAAC,UAAU,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,KAAK;AACzD","ignoreList":[0]}},
    {"offset": {"line": 36576, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 36582, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-to-markdown/lib/handle/index.js"],"sourcesContent":["import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {definition} from './definition.js'\nimport {emphasis} from './emphasis.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {image} from './image.js'\nimport {imageReference} from './image-reference.js'\nimport {inlineCode} from './inline-code.js'\nimport {link} from './link.js'\nimport {linkReference} from './link-reference.js'\nimport {list} from './list.js'\nimport {listItem} from './list-item.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default (CommonMark) handlers.\n */\nexport const handle = {\n  blockquote,\n  break: hardBreak,\n  code,\n  definition,\n  emphasis,\n  hardBreak,\n  heading,\n  html,\n  image,\n  imageReference,\n  inlineCode,\n  link,\n  linkReference,\n  list,\n  listItem,\n  paragraph,\n  root,\n  strong,\n  text,\n  thematicBreak\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AAKO,MAAM,SAAS;IACpB,YAAA,0KAAA,CAAA,aAAU;IACV,OAAO,qKAAA,CAAA,YAAS;IAChB,MAAA,oKAAA,CAAA,OAAI;IACJ,YAAA,0KAAA,CAAA,aAAU;IACV,UAAA,wKAAA,CAAA,WAAQ;IACR,WAAA,qKAAA,CAAA,YAAS;IACT,SAAA,uKAAA,CAAA,UAAO;IACP,MAAA,oKAAA,CAAA,OAAI;IACJ,OAAA,qKAAA,CAAA,QAAK;IACL,gBAAA,kLAAA,CAAA,iBAAc;IACd,YAAA,8KAAA,CAAA,aAAU;IACV,MAAA,oKAAA,CAAA,OAAI;IACJ,eAAA,iLAAA,CAAA,gBAAa;IACb,MAAA,oKAAA,CAAA,OAAI;IACJ,UAAA,4KAAA,CAAA,WAAQ;IACR,WAAA,yKAAA,CAAA,YAAS;IACT,MAAA,oKAAA,CAAA,OAAI;IACJ,QAAA,sKAAA,CAAA,SAAM;IACN,MAAA,oKAAA,CAAA,OAAI;IACJ,eAAA,iLAAA,CAAA,gBAAa;AACf","ignoreList":[0]}},
    {"offset": {"line": 36645, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 36661, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/longest-streak/index.js"],"sourcesContent":["/**\n * Get the count of the longest repeating streak of `substring` in `value`.\n *\n * @param {string} value\n *   Content to search in.\n * @param {string} substring\n *   Substring to look for, typically one character.\n * @returns {number}\n *   Count of most frequent adjacent `substring`s in `value`.\n */\nexport function longestStreak(value, substring) {\n  const source = String(value)\n  let index = source.indexOf(substring)\n  let expected = index\n  let count = 0\n  let max = 0\n\n  if (typeof substring !== 'string') {\n    throw new TypeError('Expected substring')\n  }\n\n  while (index !== -1) {\n    if (index === expected) {\n      if (++count > max) {\n        max = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + substring.length\n    index = source.indexOf(substring, expected)\n  }\n\n  return max\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;CASC;;;AACM,SAAS,cAAc,KAAK,EAAE,SAAS;IAC5C,MAAM,SAAS,OAAO;IACtB,IAAI,QAAQ,OAAO,OAAO,CAAC;IAC3B,IAAI,WAAW;IACf,IAAI,QAAQ;IACZ,IAAI,MAAM;IAEV,IAAI,OAAO,cAAc,UAAU;QACjC,MAAM,IAAI,UAAU;IACtB;IAEA,MAAO,UAAU,CAAC,EAAG;QACnB,IAAI,UAAU,UAAU;YACtB,IAAI,EAAE,QAAQ,KAAK;gBACjB,MAAM;YACR;QACF,OAAO;YACL,QAAQ;QACV;QAEA,WAAW,QAAQ,UAAU,MAAM;QACnC,QAAQ,OAAO,OAAO,CAAC,WAAW;IACpC;IAEA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 36695, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 36701, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-phrasing/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n */\n\nimport {convert} from 'unist-util-is'\n\n/**\n * Check if the given value is *phrasing content*.\n *\n * > 👉 **Note**: Excludes `html`, which can be both phrasing or flow.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @returns\n *   Whether `value` is phrasing content.\n */\n\nexport const phrasing =\n  /** @type {(node?: unknown) => node is Exclude<PhrasingContent, Html>} */\n  (\n    convert([\n      'break',\n      'delete',\n      'emphasis',\n      // To do: next major: removed since footnotes were added to GFM.\n      'footnote',\n      'footnoteReference',\n      'image',\n      'imageReference',\n      'inlineCode',\n      // Enabled by `mdast-util-math`:\n      'inlineMath',\n      'link',\n      'linkReference',\n      // Enabled by `mdast-util-mdx`:\n      'mdxJsxTextElement',\n      // Enabled by `mdast-util-mdx`:\n      'mdxTextExpression',\n      'strong',\n      'text',\n      // Enabled by `mdast-util-directive`:\n      'textDirective'\n    ])\n  )\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AAED;;AAaO,MAAM,WAGT,CAAA,GAAA,+IAAA,CAAA,UAAO,AAAD,EAAE;IACN;IACA;IACA;IACA,gEAAgE;IAChE;IACA;IACA;IACA;IACA;IACA,gCAAgC;IAChC;IACA;IACA;IACA,+BAA+B;IAC/B;IACA,+BAA+B;IAC/B;IACA;IACA;IACA,qCAAqC;IACrC;CACD","ignoreList":[0]}},
    {"offset": {"line": 36732, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 36738, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-gfm-table/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').TableRow} TableRow\n *\n * @typedef {import('markdown-table').Options} MarkdownTableOptions\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').State} State\n * @typedef {import('mdast-util-to-markdown').Info} Info\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [tableCellPadding=true]\n *   Whether to add a space of padding between delimiters and cells (default:\n *   `true`).\n * @property {boolean | null | undefined} [tablePipeAlign=true]\n *   Whether to align the delimiters (default: `true`).\n * @property {MarkdownTableOptions['stringLength'] | null | undefined} [stringLength]\n *   Function to detect the length of table cell content, used when aligning\n *   the delimiters between cells (optional).\n */\n\nimport {ok as assert} from 'devlop'\nimport {markdownTable} from 'markdown-table'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM tables in\n * markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM tables.\n */\nexport function gfmTableFromMarkdown() {\n  return {\n    enter: {\n      table: enterTable,\n      tableData: enterCell,\n      tableHeader: enterCell,\n      tableRow: enterRow\n    },\n    exit: {\n      codeText: exitCodeText,\n      table: exitTable,\n      tableData: exit,\n      tableHeader: exit,\n      tableRow: exit\n    }\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterTable(token) {\n  const align = token._align\n  assert(align, 'expected `_align` on table')\n  this.enter(\n    {\n      type: 'table',\n      align: align.map(function (d) {\n        return d === 'none' ? null : d\n      }),\n      children: []\n    },\n    token\n  )\n  this.data.inTable = true\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitTable(token) {\n  this.exit(token)\n  this.data.inTable = undefined\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.data.inTable) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'inlineCode')\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM tables in\n * markdown.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM tables.\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      inlineCode: inlineCodeWithTable,\n      table: handleTable,\n      tableCell: handleTableCell,\n      tableRow: handleTableRow\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, state, info) {\n    return serializeData(handleTableAsData(node, state, info), node.align)\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, state, info) {\n    const row = handleTableRowAsData(node, state, info)\n    const value = serializeData([row])\n    // `markdown-table` will always add an align row\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, state, info) {\n    const exit = state.enter('tableCell')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...info,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string | null | undefined> | null | undefined} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      alignDelimiters,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      padding,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = state.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(children[index], state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableRowAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = state.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(children[index], node, state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, state) {\n    let value = defaultHandlers.inlineCode(node, parent, state)\n\n    if (state.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 37009, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 37015, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-gfm-task-list-item/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {ok as assert} from 'devlop'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM task\n * list items in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemFromMarkdown() {\n  return {\n    exit: {\n      taskListCheckValueChecked: exitCheck,\n      taskListCheckValueUnchecked: exitCheck,\n      paragraph: exitParagraphWithTaskListItem\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM task list\n * items in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemToMarkdown() {\n  return {\n    unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n    handlers: {listItem: listItemWithTaskListItem}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCheck(token) {\n  // We’re always in a paragraph, in a list item.\n  const node = this.stack[this.stack.length - 2]\n  assert(node.type === 'listItem')\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = this.stack[this.stack.length - 2]\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean'\n  ) {\n    const node = this.stack[this.stack.length - 1]\n    assert(node.type === 'paragraph')\n    const head = node.children[0]\n\n    if (head && head.type === 'text') {\n      const siblings = parent.children\n      let index = -1\n      /** @type {Paragraph | undefined} */\n      let firstParaghraph\n\n      while (++index < siblings.length) {\n        const sibling = siblings[index]\n        if (sibling.type === 'paragraph') {\n          firstParaghraph = sibling\n          break\n        }\n      }\n\n      if (firstParaghraph === node) {\n        // Must start with a space or a tab.\n        head.value = head.value.slice(1)\n\n        if (head.value.length === 0) {\n          node.children.shift()\n        } else if (\n          node.position &&\n          head.position &&\n          typeof head.position.start.offset === 'number'\n        ) {\n          head.position.start.column++\n          head.position.start.offset++\n          node.position.start = Object.assign({}, head.position.start)\n        }\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, state, info) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = state.createTracker(info)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = defaultHandlers.listItem(node, parent, state, {\n    ...info,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;CAQC;;;;AAED;AACA;;;AASO,SAAS;IACd,OAAO;QACL,MAAM;YACJ,2BAA2B;YAC3B,6BAA6B;YAC7B,WAAW;QACb;IACF;AACF;AASO,SAAS;IACd,OAAO;QACL,QAAQ;YAAC;gBAAC,SAAS;gBAAM,WAAW;gBAAK,OAAO;YAAO;SAAE;QACzD,UAAU;YAAC,UAAU;QAAwB;IAC/C;AACF;AAEA;;;CAGC,GACD,SAAS,UAAU,KAAK;IACtB,+CAA+C;IAC/C,MAAM,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE;IAC9C,CAAA,GAAA,wIAAA,CAAA,KAAM,AAAD,EAAE,KAAK,IAAI,KAAK;IACrB,KAAK,OAAO,GAAG,MAAM,IAAI,KAAK;AAChC;AAEA;;;CAGC,GACD,SAAS,8BAA8B,KAAK;IAC1C,MAAM,SAAS,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE;IAEhD,IACE,UACA,OAAO,IAAI,KAAK,cAChB,OAAO,OAAO,OAAO,KAAK,WAC1B;QACA,MAAM,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE;QAC9C,CAAA,GAAA,wIAAA,CAAA,KAAM,AAAD,EAAE,KAAK,IAAI,KAAK;QACrB,MAAM,OAAO,KAAK,QAAQ,CAAC,EAAE;QAE7B,IAAI,QAAQ,KAAK,IAAI,KAAK,QAAQ;YAChC,MAAM,WAAW,OAAO,QAAQ;YAChC,IAAI,QAAQ,CAAC;YACb,kCAAkC,GAClC,IAAI;YAEJ,MAAO,EAAE,QAAQ,SAAS,MAAM,CAAE;gBAChC,MAAM,UAAU,QAAQ,CAAC,MAAM;gBAC/B,IAAI,QAAQ,IAAI,KAAK,aAAa;oBAChC,kBAAkB;oBAClB;gBACF;YACF;YAEA,IAAI,oBAAoB,MAAM;gBAC5B,oCAAoC;gBACpC,KAAK,KAAK,GAAG,KAAK,KAAK,CAAC,KAAK,CAAC;gBAE9B,IAAI,KAAK,KAAK,CAAC,MAAM,KAAK,GAAG;oBAC3B,KAAK,QAAQ,CAAC,KAAK;gBACrB,OAAO,IACL,KAAK,QAAQ,IACb,KAAK,QAAQ,IACb,OAAO,KAAK,QAAQ,CAAC,KAAK,CAAC,MAAM,KAAK,UACtC;oBACA,KAAK,QAAQ,CAAC,KAAK,CAAC,MAAM;oBAC1B,KAAK,QAAQ,CAAC,KAAK,CAAC,MAAM;oBAC1B,KAAK,QAAQ,CAAC,KAAK,GAAG,OAAO,MAAM,CAAC,CAAC,GAAG,KAAK,QAAQ,CAAC,KAAK;gBAC7D;YACF;QACF;IACF;IAEA,IAAI,CAAC,IAAI,CAAC;AACZ;AAEA;;;CAGC,GACD,SAAS,yBAAyB,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI;IACzD,MAAM,OAAO,KAAK,QAAQ,CAAC,EAAE;IAC7B,MAAM,YACJ,OAAO,KAAK,OAAO,KAAK,aAAa,QAAQ,KAAK,IAAI,KAAK;IAC7D,MAAM,WAAW,MAAM,CAAC,KAAK,OAAO,GAAG,MAAM,GAAG,IAAI;IACpD,MAAM,UAAU,MAAM,aAAa,CAAC;IAEpC,IAAI,WAAW;QACb,QAAQ,IAAI,CAAC;IACf;IAEA,IAAI,QAAQ,kNAAA,CAAA,kBAAe,CAAC,QAAQ,CAAC,MAAM,QAAQ,OAAO;QACxD,GAAG,IAAI;QACP,GAAG,QAAQ,OAAO,EAAE;IACtB;IAEA,IAAI,WAAW;QACb,QAAQ,MAAM,OAAO,CAAC,mCAAmC;IAC3D;IAEA,OAAO;;IAEP;;;GAGC,GACD,SAAS,MAAM,EAAE;QACf,OAAO,KAAK;IACd;AACF","ignoreList":[0]}},
    {"offset": {"line": 37125, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 37131, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-gfm/lib/index.js"],"sourcesContent":["/**\n * @import {Extension as FromMarkdownExtension} from 'mdast-util-from-markdown'\n * @import {Options} from 'mdast-util-gfm'\n * @import {Options as ToMarkdownExtension} from 'mdast-util-to-markdown'\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown(),\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown(),\n    gfmTableFromMarkdown(),\n    gfmTaskListItemFromMarkdown()\n  ]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown(),\n      gfmFootnoteToMarkdown(options),\n      gfmStrikethroughToMarkdown(),\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown()\n    ]\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;;AAED;AAIA;AAIA;AAIA;AACA;;;;;;AAaO,SAAS;IACd,OAAO;QACL,CAAA,GAAA,uKAAA,CAAA,iCAA8B,AAAD;QAC7B,CAAA,GAAA,4JAAA,CAAA,0BAAuB,AAAD;QACtB,CAAA,GAAA,iKAAA,CAAA,+BAA4B,AAAD;QAC3B,CAAA,GAAA,yJAAA,CAAA,uBAAoB,AAAD;QACnB,CAAA,GAAA,wKAAA,CAAA,8BAA2B,AAAD;KAC3B;AACH;AAYO,SAAS,cAAc,OAAO;IACnC,OAAO;QACL,YAAY;YACV,CAAA,GAAA,uKAAA,CAAA,+BAA4B,AAAD;YAC3B,CAAA,GAAA,4JAAA,CAAA,wBAAqB,AAAD,EAAE;YACtB,CAAA,GAAA,iKAAA,CAAA,6BAA0B,AAAD;YACzB,CAAA,GAAA,yJAAA,CAAA,qBAAkB,AAAD,EAAE;YACnB,CAAA,GAAA,wKAAA,CAAA,4BAAyB,AAAD;SACzB;IACH;AACF","ignoreList":[0]}},
    {"offset": {"line": 37169, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 37175, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/remark-gfm/lib/index.js"],"sourcesContent":["/**\n * @import {Root} from 'mdast'\n * @import {Options} from 'remark-gfm'\n * @import {} from 'remark-parse'\n * @import {} from 'remark-stringify'\n * @import {Processor} from 'unified'\n */\n\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\nimport {gfm} from 'micromark-extension-gfm'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Add support GFM (autolink literals, footnotes, strikethrough, tables,\n * tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkGfm(options) {\n  // @ts-expect-error: TS is wrong about `this`.\n  // eslint-disable-next-line unicorn/no-this-assignment\n  const self = /** @type {Processor<Root>} */ (this)\n  const settings = options || emptyOptions\n  const data = self.data()\n\n  const micromarkExtensions =\n    data.micromarkExtensions || (data.micromarkExtensions = [])\n  const fromMarkdownExtensions =\n    data.fromMarkdownExtensions || (data.fromMarkdownExtensions = [])\n  const toMarkdownExtensions =\n    data.toMarkdownExtensions || (data.toMarkdownExtensions = [])\n\n  micromarkExtensions.push(gfm(settings))\n  fromMarkdownExtensions.push(gfmFromMarkdown())\n  toMarkdownExtensions.push(gfmToMarkdown(settings))\n}\n"],"names":[],"mappings":"AAAA;;;;;;CAMC;;;AAGD;AADA;;;AAGA,oBAAoB,GACpB,MAAM,eAAe,CAAC;AAWP,SAAS,UAAU,OAAO;IACvC,8CAA8C;IAC9C,sDAAsD;IACtD,MAAM,OAAuC,IAAI;IACjD,MAAM,WAAW,WAAW;IAC5B,MAAM,OAAO,KAAK,IAAI;IAEtB,MAAM,sBACJ,KAAK,mBAAmB,IAAI,CAAC,KAAK,mBAAmB,GAAG,EAAE;IAC5D,MAAM,yBACJ,KAAK,sBAAsB,IAAI,CAAC,KAAK,sBAAsB,GAAG,EAAE;IAClE,MAAM,uBACJ,KAAK,oBAAoB,IAAI,CAAC,KAAK,oBAAoB,GAAG,EAAE;IAE9D,oBAAoB,IAAI,CAAC,CAAA,GAAA,kJAAA,CAAA,MAAG,AAAD,EAAE;IAC7B,uBAAuB,IAAI,CAAC,CAAA,GAAA,gJAAA,CAAA,kBAAe,AAAD;IAC1C,qBAAqB,IAAI,CAAC,CAAA,GAAA,gJAAA,CAAA,gBAAa,AAAD,EAAE;AAC1C","ignoreList":[0]}},
    {"offset": {"line": 37202, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 37208, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-extension-math/dev/lib/math-flow.js"],"sourcesContent":["/**\n * @import {Construct, State, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\n/** @type {Construct} */\nexport const mathFlow = {\n  tokenize: tokenizeMathFenced,\n  concrete: true,\n  name: 'mathFlow'\n}\n\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  tokenize: tokenizeNonLazyContinuation,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeMathFenced(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  const initialSize =\n    tail && tail[1].type === types.linePrefix\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n\n  return start\n\n  /**\n   * Start of math.\n   *\n   * ```markdown\n   * > | $$\n   *     ^\n   *   | \\frac{1}{2}\n   *   | $$\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.dollarSign, 'expected `$`')\n    effects.enter('mathFlow')\n    effects.enter('mathFlowFence')\n    effects.enter('mathFlowFenceSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | $$\n   *      ^\n   *   | \\frac{1}{2}\n   *   | $$\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === codes.dollarSign) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    if (sizeOpen < 2) {\n      return nok(code)\n    }\n\n    effects.exit('mathFlowFenceSequence')\n    return factorySpace(effects, metaBefore, types.whitespace)(code)\n  }\n\n  /**\n   * In opening fence, before meta.\n   *\n   * ```markdown\n   * > | $$asciimath\n   *       ^\n   *   | x < y\n   *   | $$\n   * ```\n   *\n   * @type {State}\n   */\n\n  function metaBefore(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      return metaAfter(code)\n    }\n\n    effects.enter('mathFlowFenceMeta')\n    effects.enter(types.chunkString, {contentType: constants.contentTypeString})\n    return meta(code)\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | $$asciimath\n   *        ^\n   *   | x < y\n   *   | $$\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.chunkString)\n      effects.exit('mathFlowFenceMeta')\n      return metaAfter(code)\n    }\n\n    if (code === codes.dollarSign) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return meta\n  }\n\n  /**\n   * After meta.\n   *\n   * ```markdown\n   * > | $$\n   *       ^\n   *   | \\frac{1}{2}\n   *   | $$\n   * ```\n   *\n   * @type {State}\n   */\n  function metaAfter(code) {\n    // Guaranteed to be eol/eof.\n    effects.exit('mathFlowFence')\n\n    if (self.interrupt) {\n      return ok(code)\n    }\n\n    return effects.attempt(\n      nonLazyContinuation,\n      beforeNonLazyContinuation,\n      after\n    )(code)\n  }\n\n  /**\n   * After eol/eof in math, at a non-lazy closing fence or content.\n   *\n   * ```markdown\n   *   | $$\n   * > | \\frac{1}{2}\n   *     ^\n   * > | $$\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeNonLazyContinuation(code) {\n    return effects.attempt(\n      {tokenize: tokenizeClosingFence, partial: true},\n      after,\n      contentStart\n    )(code)\n  }\n\n  /**\n   * Before math content, definitely not before a closing fence.\n   *\n   * ```markdown\n   *   | $$\n   * > | \\frac{1}{2}\n   *     ^\n   *   | $$\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return (\n      initialSize\n        ? factorySpace(\n            effects,\n            beforeContentChunk,\n            types.linePrefix,\n            initialSize + 1\n          )\n        : beforeContentChunk\n    )(code)\n  }\n\n  /**\n   * Before math content, after optional prefix.\n   *\n   * ```markdown\n   *   | $$\n   * > | \\frac{1}{2}\n   *     ^\n   *   | $$\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === codes.eof) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyContinuation,\n        beforeNonLazyContinuation,\n        after\n      )(code)\n    }\n\n    effects.enter('mathFlowValue')\n    return contentChunk(code)\n  }\n\n  /**\n   * In math content.\n   *\n   * ```markdown\n   *   | $$\n   * > | \\frac{1}{2}\n   *      ^\n   *   | $$\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      effects.exit('mathFlowValue')\n      return beforeContentChunk(code)\n    }\n\n    effects.consume(code)\n    return contentChunk\n  }\n\n  /**\n   * After math (ha!).\n   *\n   * ```markdown\n   *   | $$\n   *   | \\frac{1}{2}\n   * > | $$\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit('mathFlow')\n    return ok(code)\n  }\n\n  /** @type {Tokenizer} */\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n\n    assert(self.parser.constructs.disable.null, 'expected `disable.null`')\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | $$\n     *   | \\frac{1}{2}\n     * > | $$\n     *     ^\n     * ```\n     */\n    return factorySpace(\n      effects,\n      beforeSequenceClose,\n      types.linePrefix,\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : constants.tabSize\n    )\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | $$\n     *   | \\frac{1}{2}\n     * > | $$\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      effects.enter('mathFlowFence')\n      effects.enter('mathFlowFenceSequence')\n      return sequenceClose(code)\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | $$\n     *   | \\frac{1}{2}\n     * > | $$\n     *      ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === codes.dollarSign) {\n        size++\n        effects.consume(code)\n        return sequenceClose\n      }\n\n      if (size < sizeOpen) {\n        return nok(code)\n      }\n\n      effects.exit('mathFlowFenceSequence')\n      return factorySpace(effects, afterSequenceClose, types.whitespace)(code)\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | $$\n     *   | \\frac{1}{2}\n     * > | $$\n     *       ^\n     * ```\n     *\n     * @type {State}\n     */\n    function afterSequenceClose(code) {\n      if (code === codes.eof || markdownLineEnding(code)) {\n        effects.exit('mathFlowFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this\n\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (code === null) {\n      return ok(code)\n    }\n\n    assert(markdownLineEnding(code), 'expected eol')\n    effects.enter(types.lineEnding)\n    effects.consume(code)\n    effects.exit(types.lineEnding)\n    return lineStart\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 37527, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 37533, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-extension-math/dev/lib/math-text.js"],"sourcesContent":["/**\n * @import {Options} from 'micromark-extension-math'\n * @import {Construct, Previous, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\n// To do: next major: clean spaces in HTML compiler.\n// This has to be coordinated together with `mdast-util-math`.\n\nimport {ok as assert} from 'devlop'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {codes, types} from 'micromark-util-symbol'\n\n/**\n * @param {Options | null | undefined} [options={}]\n *   Configuration (default: `{}`).\n * @returns {Construct}\n *   Construct.\n */\nexport function mathText(options) {\n  const options_ = options || {}\n  let single = options_.singleDollarTextMath\n\n  if (single === null || single === undefined) {\n    single = true\n  }\n\n  return {\n    tokenize: tokenizeMathText,\n    resolve: resolveMathText,\n    previous,\n    name: 'mathText'\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeMathText(effects, ok, nok) {\n    const self = this\n    let sizeOpen = 0\n    /** @type {number} */\n    let size\n    /** @type {Token} */\n    let token\n\n    return start\n\n    /**\n     * Start of math (text).\n     *\n     * ```markdown\n     * > | $a$\n     *     ^\n     * > | \\$a$\n     *      ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      assert(code === codes.dollarSign, 'expected `$`')\n      assert(previous.call(self, self.previous), 'expected correct previous')\n      effects.enter('mathText')\n      effects.enter('mathTextSequence')\n      return sequenceOpen(code)\n    }\n\n    /**\n     * In opening sequence.\n     *\n     * ```markdown\n     * > | $a$\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n\n    function sequenceOpen(code) {\n      if (code === codes.dollarSign) {\n        effects.consume(code)\n        sizeOpen++\n        return sequenceOpen\n      }\n\n      // Not enough markers in the sequence.\n      if (sizeOpen < 2 && !single) {\n        return nok(code)\n      }\n\n      effects.exit('mathTextSequence')\n      return between(code)\n    }\n\n    /**\n     * Between something and something else.\n     *\n     * ```markdown\n     * > | $a$\n     *      ^^\n     * ```\n     *\n     * @type {State}\n     */\n    function between(code) {\n      if (code === codes.eof) {\n        return nok(code)\n      }\n\n      if (code === codes.dollarSign) {\n        token = effects.enter('mathTextSequence')\n        size = 0\n        return sequenceClose(code)\n      }\n\n      // Tabs don’t work, and virtual spaces don’t make sense.\n      if (code === codes.space) {\n        effects.enter('space')\n        effects.consume(code)\n        effects.exit('space')\n        return between\n      }\n\n      if (markdownLineEnding(code)) {\n        effects.enter(types.lineEnding)\n        effects.consume(code)\n        effects.exit(types.lineEnding)\n        return between\n      }\n\n      // Data.\n      effects.enter('mathTextData')\n      return data(code)\n    }\n\n    /**\n     * In data.\n     *\n     * ```markdown\n     * > | $a$\n     *      ^\n     * ```\n     *\n     * @type {State}\n     */\n    function data(code) {\n      if (\n        code === codes.eof ||\n        code === codes.space ||\n        code === codes.dollarSign ||\n        markdownLineEnding(code)\n      ) {\n        effects.exit('mathTextData')\n        return between(code)\n      }\n\n      effects.consume(code)\n      return data\n    }\n\n    /**\n     * In closing sequence.\n     *\n     * ```markdown\n     * > | `a`\n     *       ^\n     * ```\n     *\n     * @type {State}\n     */\n\n    function sequenceClose(code) {\n      // More.\n      if (code === codes.dollarSign) {\n        effects.consume(code)\n        size++\n        return sequenceClose\n      }\n\n      // Done!\n      if (size === sizeOpen) {\n        effects.exit('mathTextSequence')\n        effects.exit('mathText')\n        return ok(code)\n      }\n\n      // More or less accents: mark as data.\n      token.type = 'mathTextData'\n      return data(code)\n    }\n  }\n}\n\n/** @type {Resolver} */\nfunction resolveMathText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n  let index\n  /** @type {number | undefined} */\n  let enter\n\n  // If we start and end with an EOL or a space.\n  if (\n    (events[headEnterIndex][1].type === types.lineEnding ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === types.lineEnding ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'mathTextData') {\n        // Then we have padding.\n        events[tailExitIndex][1].type = 'mathTextPadding'\n        events[headEnterIndex][1].type = 'mathTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (\n        index !== tailExitIndex &&\n        events[index][1].type !== types.lineEnding\n      ) {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === types.lineEnding\n    ) {\n      events[enter][1].type = 'mathTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== codes.dollarSign ||\n    this.events[this.events.length - 1][1].type === types.characterEscape\n  )\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 37739, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 37745, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/micromark-extension-math/dev/lib/syntax.js"],"sourcesContent":["/**\n * @import {Options} from 'micromark-extension-math'\n * @import {Extension} from 'micromark-util-types'\n */\n\nimport {codes} from 'micromark-util-symbol'\nimport {mathFlow} from './math-flow.js'\nimport {mathText} from './math-text.js'\n\n/**\n * Create an extension for `micromark` to enable math syntax.\n *\n * @param {Options | null | undefined} [options={}]\n *   Configuration (default: `{}`).\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable math syntax.\n */\nexport function math(options) {\n  return {\n    flow: {[codes.dollarSign]: mathFlow},\n    text: {[codes.dollarSign]: mathText(options)}\n  }\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AAED;AACA;AACA;;;;AAWO,SAAS,KAAK,OAAO;IAC1B,OAAO;QACL,MAAM;YAAC,CAAC,uJAAA,CAAA,QAAK,CAAC,UAAU,CAAC,EAAE,wKAAA,CAAA,WAAQ;QAAA;QACnC,MAAM;YAAC,CAAC,uJAAA,CAAA,QAAK,CAAC,UAAU,CAAC,EAAE,CAAA,GAAA,wKAAA,CAAA,WAAQ,AAAD,EAAE;QAAQ;IAC9C;AACF","ignoreList":[0]}},
    {"offset": {"line": 37767, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 37773, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/mdast-util-math/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('../index.js').InlineMath} InlineMath\n * @typedef {import('../index.js').Math} Math\n *\n * @typedef ToOptions\n *   Configuration.\n * @property {boolean | null | undefined} [singleDollarTextMath=true]\n *   Whether to support math (text) with a single dollar (default: `true`).\n *\n *   Single dollars work in Pandoc and many other places, but often interfere\n *   with “normal” dollars in text.\n *   If you turn this off, you can still use two or more dollars for text math.\n */\n\nimport {ok as assert} from 'devlop'\nimport {longestStreak} from 'longest-streak'\n\n/**\n * Create an extension for `mdast-util-from-markdown`.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function mathFromMarkdown() {\n  return {\n    enter: {\n      mathFlow: enterMathFlow,\n      mathFlowFenceMeta: enterMathFlowMeta,\n      mathText: enterMathText\n    },\n    exit: {\n      mathFlow: exitMathFlow,\n      mathFlowFence: exitMathFlowFence,\n      mathFlowFenceMeta: exitMathFlowMeta,\n      mathFlowValue: exitMathData,\n      mathText: exitMathText,\n      mathTextData: exitMathData\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function enterMathFlow(token) {\n    /** @type {HastElement} */\n    const code = {\n      type: 'element',\n      tagName: 'code',\n      properties: {className: ['language-math', 'math-display']},\n      children: []\n    }\n    this.enter(\n      {\n        type: 'math',\n        meta: null,\n        value: '',\n        data: {hName: 'pre', hChildren: [code]}\n      },\n      token\n    )\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function enterMathFlowMeta() {\n    this.buffer()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMathFlowMeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node.type === 'math')\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMathFlowFence() {\n    // Exit if this is the closing fence.\n    if (this.data.mathFlowInside) return\n    this.buffer()\n    this.data.mathFlowInside = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMathFlow(token) {\n    const data = this.resume().replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    const node = this.stack[this.stack.length - 1]\n    assert(node.type === 'math')\n    this.exit(token)\n    node.value = data\n    // @ts-expect-error: we defined it in `enterMathFlow`.\n    const code = /** @type {HastElement} */ (node.data.hChildren[0])\n    assert(code.type === 'element')\n    assert(code.tagName === 'code')\n    code.children.push({type: 'text', value: data})\n    this.data.mathFlowInside = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function enterMathText(token) {\n    this.enter(\n      {\n        type: 'inlineMath',\n        value: '',\n        data: {\n          hName: 'code',\n          hProperties: {className: ['language-math', 'math-inline']},\n          hChildren: []\n        }\n      },\n      token\n    )\n    this.buffer()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMathText(token) {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node.type === 'inlineMath')\n    this.exit(token)\n    node.value = data\n    const children = /** @type {Array<HastElementContent>} */ (\n      // @ts-expect-error: we defined it in `enterMathFlow`.\n      node.data.hChildren\n    )\n    children.push({type: 'text', value: data})\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMathData(token) {\n    this.config.enter.data.call(this, token)\n    this.config.exit.data.call(this, token)\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown`.\n *\n * @param {ToOptions | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function mathToMarkdown(options) {\n  let single = (options || {}).singleDollarTextMath\n\n  if (single === null || single === undefined) {\n    single = true\n  }\n\n  inlineMath.peek = inlineMathPeek\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'mathFlowMeta'},\n      {character: '\\n', inConstruct: 'mathFlowMeta'},\n      {\n        character: '$',\n        after: single ? undefined : '\\\\$',\n        inConstruct: 'phrasing'\n      },\n      {character: '$', inConstruct: 'mathFlowMeta'},\n      {atBreak: true, character: '$', after: '\\\\$'}\n    ],\n    handlers: {math, inlineMath}\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Math} node\n   */\n  // Note: fixing this code? Please also fix the similar code for code:\n  // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/main/lib/handle/code.js>\n  function math(node, _, state, info) {\n    const raw = node.value || ''\n    const tracker = state.createTracker(info)\n    const sequence = '$'.repeat(Math.max(longestStreak(raw, '$') + 1, 2))\n    const exit = state.enter('mathFlow')\n    let value = tracker.move(sequence)\n\n    if (node.meta) {\n      const subexit = state.enter('mathFlowMeta')\n      value += tracker.move(\n        state.safe(node.meta, {\n          after: '\\n',\n          before: value,\n          encode: ['$'],\n          ...tracker.current()\n        })\n      )\n      subexit()\n    }\n\n    value += tracker.move('\\n')\n\n    if (raw) {\n      value += tracker.move(raw + '\\n')\n    }\n\n    value += tracker.move(sequence)\n    exit()\n    return value\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineMath} node\n   */\n  // Note: fixing this code? Please also fix the similar code for inline code:\n  // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/main/lib/handle/inline-code.js>\n  function inlineMath(node, _, state) {\n    let value = node.value || ''\n    let size = 1\n\n    if (!single) size++\n\n    // If there is a single dollar sign on its own in the math, use a fence of\n    // two.\n    // If there are two in a row, use one.\n    while (\n      new RegExp('(^|[^$])' + '\\\\$'.repeat(size) + '([^$]|$)').test(value)\n    ) {\n      size++\n    }\n\n    const sequence = '$'.repeat(size)\n\n    // If this is not just spaces or eols (tabs don’t count), and either the\n    // first and last character are a space or eol, or the first or last\n    // character are dollar signs, then pad with spaces.\n    if (\n      // Contains non-space.\n      /[^ \\r\\n]/.test(value) &&\n      // Starts with space and ends with space.\n      ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) ||\n        // Starts or ends with dollar.\n        /^\\$|\\$$/.test(value))\n    ) {\n      value = ' ' + value + ' '\n    }\n\n    let index = -1\n\n    // We have a potential problem: certain characters after eols could result in\n    // blocks being seen.\n    // For example, if someone injected the string `'\\n# b'`, then that would\n    // result in an ATX heading.\n    // We can’t escape characters in `inlineMath`, but because eols are\n    // transformed to spaces when going from markdown to HTML anyway, we can swap\n    // them out.\n    while (++index < state.unsafe.length) {\n      const pattern = state.unsafe[index]\n\n      // Only look for `atBreak`s.\n      // Btw: note that `atBreak` patterns will always start the regex at LF or\n      // CR.\n      if (!pattern.atBreak) continue\n\n      const expression = state.compilePattern(pattern)\n      /** @type {RegExpExecArray | null} */\n      let match\n\n      while ((match = expression.exec(value))) {\n        let position = match.index\n\n        // Support CRLF (patterns only look for one of the characters).\n        if (\n          value.codePointAt(position) === 10 /* `\\n` */ &&\n          value.codePointAt(position - 1) === 13 /* `\\r` */\n        ) {\n          position--\n        }\n\n        value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n      }\n    }\n\n    return sequence + value + sequence\n  }\n\n  /**\n   * @returns {string}\n   */\n  function inlineMathPeek() {\n    return '$'\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 38057, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 38063, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/remark-math/lib/index.js"],"sourcesContent":["/// <reference types=\"mdast-util-math\" />\n/// <reference types=\"remark-parse\" />\n/// <reference types=\"remark-stringify\" />\n\n/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-math').ToOptions} Options\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\nimport {mathFromMarkdown, mathToMarkdown} from 'mdast-util-math'\nimport {math} from 'micromark-extension-math'\n\n/** @type {Readonly<Options>} */\nconst emptyOptions = {}\n\n/**\n * Add support for math.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkMath(options) {\n  // @ts-expect-error: TS is wrong about `this`.\n  // eslint-disable-next-line unicorn/no-this-assignment\n  const self = /** @type {Processor} */ (this)\n  const settings = options || emptyOptions\n  const data = self.data()\n\n  const micromarkExtensions =\n    data.micromarkExtensions || (data.micromarkExtensions = [])\n  const fromMarkdownExtensions =\n    data.fromMarkdownExtensions || (data.fromMarkdownExtensions = [])\n  const toMarkdownExtensions =\n    data.toMarkdownExtensions || (data.toMarkdownExtensions = [])\n\n  micromarkExtensions.push(math(settings))\n  fromMarkdownExtensions.push(mathFromMarkdown())\n  toMarkdownExtensions.push(mathToMarkdown(settings))\n}\n"],"names":[],"mappings":"AAAA,yCAAyC;AACzC,sCAAsC;AACtC,0CAA0C;AAE1C;;;;CAIC;;;AAGD;AADA;;;AAGA,8BAA8B,GAC9B,MAAM,eAAe,CAAC;AAUP,SAAS,WAAW,OAAO;IACxC,8CAA8C;IAC9C,sDAAsD;IACtD,MAAM,OAAiC,IAAI;IAC3C,MAAM,WAAW,WAAW;IAC5B,MAAM,OAAO,KAAK,IAAI;IAEtB,MAAM,sBACJ,KAAK,mBAAmB,IAAI,CAAC,KAAK,mBAAmB,GAAG,EAAE;IAC5D,MAAM,yBACJ,KAAK,sBAAsB,IAAI,CAAC,KAAK,sBAAsB,GAAG,EAAE;IAClE,MAAM,uBACJ,KAAK,oBAAoB,IAAI,CAAC,KAAK,oBAAoB,GAAG,EAAE;IAE9D,oBAAoB,IAAI,CAAC,CAAA,GAAA,kKAAA,CAAA,OAAI,AAAD,EAAE;IAC9B,uBAAuB,IAAI,CAAC,CAAA,GAAA,iJAAA,CAAA,mBAAgB,AAAD;IAC3C,qBAAqB,IAAI,CAAC,CAAA,GAAA,iJAAA,CAAA,iBAAc,AAAD,EAAE;AAC3C","ignoreList":[0]}},
    {"offset": {"line": 38091, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 38097, "column": 0}, "map": {"version":3,"file":"decode-data-html.js","sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/entities/lib/esm/generated/https%3A/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/decode-data-html.ts"],"sourcesContent":["unable to read source [project]/node_modules/entities/lib/esm/generated/https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/decode-data-html.ts"],"names":[],"mappings":"AAAA,8CAA8C;;;;uCAE/B,IAAI,WAAW,CAC1B,kBAAkB;AAClB,268CAA268C,CACt68C,KAAK,CAAC,EAAE,CAAC,CACT,GAAG,CAAC,CAAC,CAAC,EAAE,CAAG,CAAD,AAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CACnC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 38104, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 38110, "column": 0}, "map": {"version":3,"file":"decode-data-xml.js","sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/entities/lib/esm/generated/https%3A/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/decode-data-xml.ts"],"sourcesContent":["unable to read source [project]/node_modules/entities/lib/esm/generated/https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/decode-data-xml.ts"],"names":[],"mappings":"AAAA,8CAA8C;;;;uCAE/B,IAAI,WAAW,CAC1B,kBAAkB;AAClB,uFAAuF,CAClF,KAAK,CAAC,EAAE,CAAC,CACT,GAAG,CAAC,CAAC,CAAC,EAAE,CAAG,CAAD,AAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CACnC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 38117, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 38123, "column": 0}, "map": {"version":3,"file":"decode_codepoint.js","sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/entities/lib/esm/https%3A/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/decode_codepoint.ts"],"sourcesContent":["unable to read source [project]/node_modules/entities/lib/esm/https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/decode_codepoint.ts"],"names":[],"mappings":"AAAA,qHAAqH;;;;;;;AAErH,MAAM,SAAS,GAAG,IAAI,GAAG,CAAC;IACtB;QAAC,CAAC;QAAE,KAAK;KAAC;IACV,sDAAsD;IACtD;QAAC,GAAG;QAAE,IAAI;KAAC;IACX;QAAC,GAAG;QAAE,IAAI;KAAC;IACX;QAAC,GAAG;QAAE,GAAG;KAAC;IACV;QAAC,GAAG;QAAE,IAAI;KAAC;IACX;QAAC,GAAG;QAAE,IAAI;KAAC;IACX;QAAC,GAAG;QAAE,IAAI;KAAC;IACX;QAAC,GAAG;QAAE,IAAI;KAAC;IACX;QAAC,GAAG;QAAE,GAAG;KAAC;IACV;QAAC,GAAG;QAAE,IAAI;KAAC;IACX;QAAC,GAAG;QAAE,GAAG;KAAC;IACV;QAAC,GAAG;QAAE,IAAI;KAAC;IACX;QAAC,GAAG;QAAE,GAAG;KAAC;IACV;QAAC,GAAG;QAAE,GAAG;KAAC;IACV;QAAC,GAAG;QAAE,IAAI;KAAC;IACX;QAAC,GAAG;QAAE,IAAI;KAAC;IACX;QAAC,GAAG;QAAE,IAAI;KAAC;IACX;QAAC,GAAG;QAAE,IAAI;KAAC;IACX;QAAC,GAAG;QAAE,IAAI;KAAC;IACX;QAAC,GAAG;QAAE,IAAI;KAAC;IACX;QAAC,GAAG;QAAE,IAAI;KAAC;IACX;QAAC,GAAG;QAAE,GAAG;KAAC;IACV;QAAC,GAAG;QAAE,IAAI;KAAC;IACX;QAAC,GAAG;QAAE,GAAG;KAAC;IACV;QAAC,GAAG;QAAE,IAAI;KAAC;IACX;QAAC,GAAG;QAAE,GAAG;KAAC;IACV;QAAC,GAAG;QAAE,GAAG;KAAC;IACV;QAAC,GAAG;QAAE,GAAG;KAAC;CACb,CAAC,CAAC;AAKI,MAAM,aAAa,GACtB,iHAAiH;AACjH,CAAA,KAAA,MAAM,CAAC,aAAa,MAAA,QAAA,OAAA,KAAA,IAAA,KACpB,SAAU,SAAiB;IACvB,IAAI,MAAM,GAAG,EAAE,CAAC;IAEhB,IAAI,SAAS,GAAG,MAAM,EAAE;QACpB,SAAS,IAAI,OAAO,CAAC;QACrB,MAAM,IAAI,MAAM,CAAC,YAAY,CACzB,AAAE,CAAD,QAAU,KAAK,EAAE,CAAC,EAAG,KAAK,CAAC,EAAG,MAAM,CACxC,CAAC;QACF,SAAS,GAAG,MAAM,GAAG,AAAC,SAAS,GAAG,KAAK,CAAC,CAAC;KAC5C;IAED,MAAM,IAAI,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;IACzC,OAAO,MAAM,CAAC;AAClB,CAAC,CAAC;AAOA,SAAU,gBAAgB,CAAC,SAAiB;;IAC9C,IAAI,AAAC,SAAS,IAAI,MAAM,IAAI,SAAS,IAAI,MAAM,CAAC,GAAI,SAAS,GAAG,QAAQ,EAAE;QACtE,OAAO,MAAM,CAAC;KACjB;IAED,OAAO,CAAA,KAAA,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,SAAS,CAAC;AACjD,CAAC;AASa,SAAU,eAAe,CAAC,SAAiB;IACrD,OAAO,aAAa,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC;AACtD,CAAC","ignoreList":[0]}},
    {"offset": {"line": 38266, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 38272, "column": 0}, "map": {"version":3,"file":"decode.js","sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/entities/lib/esm/https%3A/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/decode.ts"],"sourcesContent":["unable to read source [project]/node_modules/entities/lib/esm/https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/decode.ts"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 38698, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 38725, "column": 0}, "map": {"version":3,"file":"escape.js","sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/entities/lib/esm/https%3A/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/escape.ts"],"sourcesContent":["unable to read source [project]/node_modules/entities/lib/esm/https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/escape.ts"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 38838, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 38844, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/vfile-location/lib/index.js"],"sourcesContent":["/**\n * @import {VFile, Value} from 'vfile'\n * @import {Location} from 'vfile-location'\n */\n\n/**\n * Create an index of the given document to translate between line/column and\n * offset based positional info.\n *\n * Also implemented in Rust in [`wooorm/markdown-rs`][markdown-rs].\n *\n * [markdown-rs]: https://github.com/wooorm/markdown-rs/blob/main/src/util/location.rs\n *\n * @param {VFile | Value} file\n *   File to index.\n * @returns {Location}\n *   Accessors for index.\n */\nexport function location(file) {\n  const value = String(file)\n  /**\n   * List, where each index is a line number (0-based), and each value is the\n   * byte index *after* where the line ends.\n   *\n   * @type {Array<number>}\n   */\n  const indices = []\n\n  return {toOffset, toPoint}\n\n  /** @type {Location['toPoint']} */\n  function toPoint(offset) {\n    if (typeof offset === 'number' && offset > -1 && offset <= value.length) {\n      let index = 0\n\n      while (true) {\n        let end = indices[index]\n\n        if (end === undefined) {\n          const eol = next(value, indices[index - 1])\n          end = eol === -1 ? value.length + 1 : eol + 1\n          indices[index] = end\n        }\n\n        if (end > offset) {\n          return {\n            line: index + 1,\n            column: offset - (index > 0 ? indices[index - 1] : 0) + 1,\n            offset\n          }\n        }\n\n        index++\n      }\n    }\n  }\n\n  /** @type {Location['toOffset']} */\n  function toOffset(point) {\n    if (\n      point &&\n      typeof point.line === 'number' &&\n      typeof point.column === 'number' &&\n      !Number.isNaN(point.line) &&\n      !Number.isNaN(point.column)\n    ) {\n      while (indices.length < point.line) {\n        const from = indices[indices.length - 1]\n        const eol = next(value, from)\n        const end = eol === -1 ? value.length + 1 : eol + 1\n        if (from === end) break\n        indices.push(end)\n      }\n\n      const offset =\n        (point.line > 1 ? indices[point.line - 2] : 0) + point.column - 1\n      // The given `column` could not exist on this line.\n      if (offset < indices[point.line - 1]) return offset\n    }\n  }\n}\n\n/**\n * @param {string} value\n * @param {number} from\n */\nfunction next(value, from) {\n  const cr = value.indexOf('\\r', from)\n  const lf = value.indexOf('\\n', from)\n  if (lf === -1) return cr\n  if (cr === -1 || cr + 1 === lf) return lf\n  return cr < lf ? cr : lf\n}\n"],"names":[],"mappings":"AAAA;;;CAGC,GAED;;;;;;;;;;;;CAYC;;;AACM,SAAS,SAAS,IAAI;IAC3B,MAAM,QAAQ,OAAO;IACrB;;;;;GAKC,GACD,MAAM,UAAU,EAAE;IAElB,OAAO;QAAC;QAAU;IAAO;;IAEzB,gCAAgC,GAChC,SAAS,QAAQ,MAAM;QACrB,IAAI,OAAO,WAAW,YAAY,SAAS,CAAC,KAAK,UAAU,MAAM,MAAM,EAAE;YACvE,IAAI,QAAQ;YAEZ,MAAO,KAAM;gBACX,IAAI,MAAM,OAAO,CAAC,MAAM;gBAExB,IAAI,QAAQ,WAAW;oBACrB,MAAM,MAAM,KAAK,OAAO,OAAO,CAAC,QAAQ,EAAE;oBAC1C,MAAM,QAAQ,CAAC,IAAI,MAAM,MAAM,GAAG,IAAI,MAAM;oBAC5C,OAAO,CAAC,MAAM,GAAG;gBACnB;gBAEA,IAAI,MAAM,QAAQ;oBAChB,OAAO;wBACL,MAAM,QAAQ;wBACd,QAAQ,SAAS,CAAC,QAAQ,IAAI,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC,IAAI;wBACxD;oBACF;gBACF;gBAEA;YACF;QACF;IACF;IAEA,iCAAiC,GACjC,SAAS,SAAS,KAAK;QACrB,IACE,SACA,OAAO,MAAM,IAAI,KAAK,YACtB,OAAO,MAAM,MAAM,KAAK,YACxB,CAAC,OAAO,KAAK,CAAC,MAAM,IAAI,KACxB,CAAC,OAAO,KAAK,CAAC,MAAM,MAAM,GAC1B;YACA,MAAO,QAAQ,MAAM,GAAG,MAAM,IAAI,CAAE;gBAClC,MAAM,OAAO,OAAO,CAAC,QAAQ,MAAM,GAAG,EAAE;gBACxC,MAAM,MAAM,KAAK,OAAO;gBACxB,MAAM,MAAM,QAAQ,CAAC,IAAI,MAAM,MAAM,GAAG,IAAI,MAAM;gBAClD,IAAI,SAAS,KAAK;gBAClB,QAAQ,IAAI,CAAC;YACf;YAEA,MAAM,SACJ,CAAC,MAAM,IAAI,GAAG,IAAI,OAAO,CAAC,MAAM,IAAI,GAAG,EAAE,GAAG,CAAC,IAAI,MAAM,MAAM,GAAG;YAClE,mDAAmD;YACnD,IAAI,SAAS,OAAO,CAAC,MAAM,IAAI,GAAG,EAAE,EAAE,OAAO;QAC/C;IACF;AACF;AAEA;;;CAGC,GACD,SAAS,KAAK,KAAK,EAAE,IAAI;IACvB,MAAM,KAAK,MAAM,OAAO,CAAC,MAAM;IAC/B,MAAM,KAAK,MAAM,OAAO,CAAC,MAAM;IAC/B,IAAI,OAAO,CAAC,GAAG,OAAO;IACtB,IAAI,OAAO,CAAC,KAAK,KAAK,MAAM,IAAI,OAAO;IACvC,OAAO,KAAK,KAAK,KAAK;AACxB","ignoreList":[0]}},
    {"offset": {"line": 38921, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 38927, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/web-namespaces/index.js"],"sourcesContent":["/**\n * Map of web namespaces.\n *\n * @type {Record<string, string>}\n */\nexport const webNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg',\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace',\n  xmlns: 'http://www.w3.org/2000/xmlns/'\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;AACM,MAAM,gBAAgB;IAC3B,MAAM;IACN,QAAQ;IACR,KAAK;IACL,OAAO;IACP,KAAK;IACL,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 38942, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 38948, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/hast-util-parse-selector/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n */\n\n/**\n * @template {string} SimpleSelector\n *   Selector type.\n * @template {string} DefaultTagName\n *   Default tag name.\n * @typedef {(\n *   SimpleSelector extends ''\n *     ? DefaultTagName\n *     : SimpleSelector extends `${infer TagName}.${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends `${infer TagName}#${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends string\n *     ? SimpleSelector\n *     : DefaultTagName\n * )} ExtractTagName\n *   Extract tag name from a simple selector.\n */\n\nconst search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @template {string} Selector\n *   Type of selector.\n * @template {string} [DefaultTagName='div']\n *   Type of default tag name (default: `'div'`).\n * @param {Selector | null | undefined} [selector]\n *   Simple CSS selector (optional).\n *\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\n * @returns {Element & {tagName: ExtractTagName<Selector, DefaultTagName>}}\n *   Built element.\n */\nexport function parseSelector(selector, defaultTagName) {\n  const value = selector || ''\n  /** @type {Properties} */\n  const props = {}\n  let start = 0\n  /** @type {string | undefined} */\n  let previous\n  /** @type {string | undefined} */\n  let tagName\n\n  while (start < value.length) {\n    search.lastIndex = start\n    const match = search.exec(value)\n    const subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        tagName = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (Array.isArray(props.className)) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {\n    type: 'element',\n    // @ts-expect-error: tag name is parsed.\n    tagName: tagName || defaultTagName || 'div',\n    properties: props,\n    children: []\n  }\n}\n"],"names":[],"mappings":"AAAA;;;CAGC,GAED;;;;;;;;;;;;;;;;;CAiBC;;;AAED,MAAM,SAAS;AAoBR,SAAS,cAAc,QAAQ,EAAE,cAAc;IACpD,MAAM,QAAQ,YAAY;IAC1B,uBAAuB,GACvB,MAAM,QAAQ,CAAC;IACf,IAAI,QAAQ;IACZ,+BAA+B,GAC/B,IAAI;IACJ,+BAA+B,GAC/B,IAAI;IAEJ,MAAO,QAAQ,MAAM,MAAM,CAAE;QAC3B,OAAO,SAAS,GAAG;QACnB,MAAM,QAAQ,OAAO,IAAI,CAAC;QAC1B,MAAM,WAAW,MAAM,KAAK,CAAC,OAAO,QAAQ,MAAM,KAAK,GAAG,MAAM,MAAM;QAEtE,IAAI,UAAU;YACZ,IAAI,CAAC,UAAU;gBACb,UAAU;YACZ,OAAO,IAAI,aAAa,KAAK;gBAC3B,MAAM,EAAE,GAAG;YACb,OAAO,IAAI,MAAM,OAAO,CAAC,MAAM,SAAS,GAAG;gBACzC,MAAM,SAAS,CAAC,IAAI,CAAC;YACvB,OAAO;gBACL,MAAM,SAAS,GAAG;oBAAC;iBAAS;YAC9B;YAEA,SAAS,SAAS,MAAM;QAC1B;QAEA,IAAI,OAAO;YACT,WAAW,KAAK,CAAC,EAAE;YACnB;QACF;IACF;IAEA,OAAO;QACL,MAAM;QACN,wCAAwC;QACxC,SAAS,WAAW,kBAAkB;QACtC,YAAY;QACZ,UAAU,EAAE;IACd;AACF","ignoreList":[0]}},
    {"offset": {"line": 39009, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 39015, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/hastscript/lib/create-h.js"],"sourcesContent":["/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef {Element | Root} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {number | string} StyleValue\n *   Value for a CSS style field.\n * @typedef {Record<string, StyleValue>} Style\n *   Supported value of a `style` prop.\n * @typedef {boolean | number | string | null | undefined} PrimitiveValue\n *   Primitive property value.\n * @typedef {Array<number | string>} ArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n * @typedef {ArrayValue | PrimitiveValue} PropertyValue\n *   Primitive value or list value.\n * @typedef {{[property: string]: PropertyValue | Style}} Properties\n *   Acceptable value for element properties.\n *\n * @typedef {number | string | null | undefined} PrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n * @typedef {Array<ArrayChildNested | Nodes | PrimitiveChild>} ArrayChild\n *   List of children.\n * @typedef {Array<Nodes | PrimitiveChild>} ArrayChildNested\n *   List of children (deep).\n * @typedef {ArrayChild | Nodes | PrimitiveChild} Child\n *   Acceptable child value.\n */\n\nimport {parse as commas} from 'comma-separated-tokens'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {find, normalize} from 'property-information'\nimport {parse as spaces} from 'space-separated-tokens'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n *   Schema to use.\n * @param {string} defaultTagName\n *   Default tag name.\n * @param {Array<string> | undefined} [caseSensitive]\n *   Case-sensitive tag names (default: `undefined`).\n * @returns\n *   `h`.\n */\nexport function createH(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  /**\n   * Hyperscript compatible DSL for creating virtual hast trees.\n   *\n   * @overload\n   * @param {null | undefined} [selector]\n   * @param {...Child} children\n   * @returns {Root}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {Properties} properties\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @param {string | null | undefined} [selector]\n   *   Selector.\n   * @param {Child | Properties | null | undefined} [properties]\n   *   Properties (or first child) (default: `undefined`).\n   * @param {...Child} children\n   *   Children.\n   * @returns {Result}\n   *   Result.\n   */\n  function h(selector, properties, ...children) {\n    let index = -1\n    /** @type {Result} */\n    let node\n\n    if (selector === undefined || selector === null) {\n      node = {type: 'root', children: []}\n      // Properties are not supported for roots.\n      const child = /** @type {Child} */ (properties)\n      children.unshift(child)\n    } else {\n      node = parseSelector(selector, defaultTagName)\n      // Normalize the name.\n      node.tagName = node.tagName.toLowerCase()\n      if (adjust && own.call(adjust, node.tagName)) {\n        node.tagName = adjust[node.tagName]\n      }\n\n      // Handle props.\n      if (isChild(properties)) {\n        children.unshift(properties)\n      } else {\n        /** @type {string} */\n        let key\n\n        for (key in properties) {\n          if (own.call(properties, key)) {\n            addProperty(schema, node.properties, key, properties[key])\n          }\n        }\n      }\n    }\n\n    // Handle children.\n    while (++index < children.length) {\n      addChild(node.children, children[index])\n    }\n\n    if (node.type === 'element' && node.tagName === 'template') {\n      node.content = {type: 'root', children: node.children}\n      node.children = []\n    }\n\n    return node\n  }\n\n  return h\n}\n\n/**\n * Check if something is properties or a child.\n *\n * @param {Child | Properties} value\n *   Value to check.\n * @returns {value is Child}\n *   Whether `value` is definitely a child.\n */\nfunction isChild(value) {\n  // Never properties if not an object.\n  if (value === null || typeof value !== 'object' || Array.isArray(value)) {\n    return true\n  }\n\n  // Never node without `type`; that’s the main discriminator.\n  if (typeof value.type !== 'string') return false\n\n  // Slower check: never property value if object or array with\n  // non-number/strings.\n  const record = /** @type {Record<string, unknown>} */ (value)\n  const keys = Object.keys(value)\n\n  for (const key of keys) {\n    const value = record[key]\n\n    if (value && typeof value === 'object') {\n      if (!Array.isArray(value)) return true\n\n      const list = /** @type {Array<unknown>} */ (value)\n\n      for (const item of list) {\n        if (typeof item !== 'number' && typeof item !== 'string') {\n          return true\n        }\n      }\n    }\n  }\n\n  // Also see empty `children` as a node.\n  if ('children' in value && Array.isArray(value.children)) {\n    return true\n  }\n\n  // Default to properties, someone can always pass an empty object,\n  // put `data: {}` in a node,\n  // or wrap it in an array.\n  return false\n}\n\n/**\n * @param {Schema} schema\n *   Schema.\n * @param {Properties} properties\n *   Properties object.\n * @param {string} key\n *   Property name.\n * @param {PropertyValue | Style} value\n *   Property value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {PropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<number | string>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // Assume no booleans in array.\n      const value = /** @type {number | string} */ (\n        parsePrimitive(info, info.property, result[index])\n      )\n      finalResult[index] = value\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // Assume no booleans in `className`.\n    const value = /** @type {number | string} */ (result)\n    result = properties.className.concat(value)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<RootContent>} nodes\n *   Children.\n * @param {Child} value\n *   Child.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n *   Property information.\n * @param {string} name\n *   Property name.\n * @param {PrimitiveValue} value\n *   Property value.\n * @returns {PrimitiveValue}\n *   Property value.\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {Style} value\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(value) {\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {Array<string>} values\n *   List of properly cased keys.\n * @returns {Record<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Record<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 39316, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 39322, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/hastscript/lib/svg-case-sensitive-tag-names.js"],"sourcesContent":["export const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n"],"names":[],"mappings":";;;AAAO,MAAM,2BAA2B;IACtC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD","ignoreList":[0]}},
    {"offset": {"line": 39366, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 39372, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/hastscript/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('./create-h.js').Child} Child\n *   Acceptable child value.\n * @typedef {import('./create-h.js').Properties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./create-h.js').Result} Result\n *   Result from a `h` (or `s`) call.\n */\n\n// Register the JSX namespace on `h`.\n/**\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\n */\n\n// Register the JSX namespace on `s`.\n/**\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\n */\n\nimport {html, svg} from 'property-information'\nimport {createH} from './create-h.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const h = createH(html, 'div')\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const s = createH(svg, 'g', svgCaseSensitiveTagNames)\n"],"names":[],"mappings":"AAAA;;;;;;;CAOC,GAED,qCAAqC;AACrC;;;;;CAKC,GAED,qCAAqC;AACrC;;;;;CAKC;;;;AAGD;AADA;AAEA;;;;AAIO,MAAM,IAAI,CAAA,GAAA,4IAAA,CAAA,UAAO,AAAD,EAAE,4JAAA,CAAA,OAAI,EAAE;AAIxB,MAAM,IAAI,CAAA,GAAA,4IAAA,CAAA,UAAO,AAAD,EAAE,4JAAA,CAAA,MAAG,EAAE,KAAK,yKAAA,CAAA,2BAAwB","ignoreList":[0]}},
    {"offset": {"line": 39403, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 39409, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/hast-util-from-parse5/lib/index.js"],"sourcesContent":["/**\n * @import {ElementData, Element, Nodes, RootContent, Root} from 'hast'\n * @import {DefaultTreeAdapterMap, Token} from 'parse5'\n * @import {Schema} from 'property-information'\n * @import {Point, Position} from 'unist'\n * @import {VFile} from 'vfile'\n * @import {Options} from 'hast-util-from-parse5'\n */\n\n/**\n * @typedef State\n *   Info passed around about the current state.\n * @property {VFile | undefined} file\n *   Corresponding file.\n * @property {boolean} location\n *   Whether location info was found.\n * @property {Schema} schema\n *   Current schema.\n * @property {boolean | undefined} verbose\n *   Add extra positional info.\n */\n\nimport {ok as assert} from 'devlop'\nimport {h, s} from 'hastscript'\nimport {find, html, svg} from 'property-information'\nimport {location} from 'vfile-location'\nimport {webNamespaces} from 'web-namespaces'\n\nconst own = {}.hasOwnProperty\n/** @type {unknown} */\n// type-coverage:ignore-next-line\nconst proto = Object.prototype\n\n/**\n * Transform a `parse5` AST to hast.\n *\n * @param {DefaultTreeAdapterMap['node']} tree\n *   `parse5` tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   hast tree.\n */\nexport function fromParse5(tree, options) {\n  const settings = options || {}\n\n  return one(\n    {\n      file: settings.file || undefined,\n      location: false,\n      schema: settings.space === 'svg' ? svg : html,\n      verbose: settings.verbose || false\n    },\n    tree\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {DefaultTreeAdapterMap['node']} node\n *   p5 node.\n * @returns {Nodes}\n *   hast node.\n */\nfunction one(state, node) {\n  /** @type {Nodes} */\n  let result\n\n  switch (node.nodeName) {\n    case '#comment': {\n      const reference = /** @type {DefaultTreeAdapterMap['commentNode']} */ (\n        node\n      )\n      result = {type: 'comment', value: reference.data}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#document':\n    case '#document-fragment': {\n      const reference =\n        /** @type {DefaultTreeAdapterMap['document'] | DefaultTreeAdapterMap['documentFragment']} */ (\n          node\n        )\n      const quirksMode =\n        'mode' in reference\n          ? reference.mode === 'quirks' || reference.mode === 'limited-quirks'\n          : false\n\n      result = {\n        type: 'root',\n        children: all(state, node.childNodes),\n        data: {quirksMode}\n      }\n\n      if (state.file && state.location) {\n        const document = String(state.file)\n        const loc = location(document)\n        const start = loc.toPoint(0)\n        const end = loc.toPoint(document.length)\n        // Always defined as we give valid input.\n        assert(start, 'expected `start`')\n        assert(end, 'expected `end`')\n        result.position = {start, end}\n      }\n\n      return result\n    }\n\n    case '#documentType': {\n      const reference = /** @type {DefaultTreeAdapterMap['documentType']} */ (\n        node\n      )\n      result = {type: 'doctype'}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#text': {\n      const reference = /** @type {DefaultTreeAdapterMap['textNode']} */ (node)\n      result = {type: 'text', value: reference.value}\n      patch(state, reference, result)\n      return result\n    }\n\n    // Element.\n    default: {\n      const reference = /** @type {DefaultTreeAdapterMap['element']} */ (node)\n      result = element(state, reference)\n      return result\n    }\n  }\n}\n\n/**\n * Transform children.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Array<DefaultTreeAdapterMap['node']>} nodes\n *   Nodes.\n * @returns {Array<RootContent>}\n *   hast nodes.\n */\nfunction all(state, nodes) {\n  let index = -1\n  /** @type {Array<RootContent>} */\n  const results = []\n\n  while (++index < nodes.length) {\n    // Assume no roots in `nodes`.\n    const result = /** @type {RootContent} */ (one(state, nodes[index]))\n    results.push(result)\n  }\n\n  return results\n}\n\n/**\n * Transform an element.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {DefaultTreeAdapterMap['element']} node\n *   `parse5` node to transform.\n * @returns {Element}\n *   hast node.\n */\nfunction element(state, node) {\n  const schema = state.schema\n\n  state.schema = node.namespaceURI === webNamespaces.svg ? svg : html\n\n  // Props.\n  let index = -1\n  /** @type {Record<string, string>} */\n  const properties = {}\n\n  while (++index < node.attrs.length) {\n    const attribute = node.attrs[index]\n    const name =\n      (attribute.prefix ? attribute.prefix + ':' : '') + attribute.name\n    if (!own.call(proto, name)) {\n      properties[name] = attribute.value\n    }\n  }\n\n  // Build.\n  const x = state.schema.space === 'svg' ? s : h\n  const result = x(node.tagName, properties, all(state, node.childNodes))\n  patch(state, node, result)\n\n  // Switch content.\n  if (result.tagName === 'template') {\n    const reference = /** @type {DefaultTreeAdapterMap['template']} */ (node)\n    const pos = reference.sourceCodeLocation\n    const startTag = pos && pos.startTag && position(pos.startTag)\n    const endTag = pos && pos.endTag && position(pos.endTag)\n\n    // Root in, root out.\n    const content = /** @type {Root} */ (one(state, reference.content))\n\n    if (startTag && endTag && state.file) {\n      content.position = {start: startTag.end, end: endTag.start}\n    }\n\n    result.content = content\n  }\n\n  state.schema = schema\n\n  return result\n}\n\n/**\n * Patch positional info from `from` onto `to`.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {DefaultTreeAdapterMap['node']} from\n *   p5 node.\n * @param {Nodes} to\n *   hast node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(state, from, to) {\n  if ('sourceCodeLocation' in from && from.sourceCodeLocation && state.file) {\n    const position = createLocation(state, to, from.sourceCodeLocation)\n\n    if (position) {\n      state.location = true\n      to.position = position\n    }\n  }\n}\n\n/**\n * Create clean positional information.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Nodes} node\n *   hast node.\n * @param {Token.ElementLocation} location\n *   p5 location info.\n * @returns {Position | undefined}\n *   Position, or nothing.\n */\nfunction createLocation(state, node, location) {\n  const result = position(location)\n\n  if (node.type === 'element') {\n    const tail = node.children[node.children.length - 1]\n\n    // Bug for unclosed with children.\n    // See: <https://github.com/inikulin/parse5/issues/109>.\n    if (\n      result &&\n      !location.endTag &&\n      tail &&\n      tail.position &&\n      tail.position.end\n    ) {\n      result.end = Object.assign({}, tail.position.end)\n    }\n\n    if (state.verbose) {\n      /** @type {Record<string, Position | undefined>} */\n      const properties = {}\n      /** @type {string} */\n      let key\n\n      if (location.attrs) {\n        for (key in location.attrs) {\n          if (own.call(location.attrs, key)) {\n            properties[find(state.schema, key).property] = position(\n              location.attrs[key]\n            )\n          }\n        }\n      }\n\n      assert(location.startTag, 'a start tag should exist')\n      const opening = position(location.startTag)\n      const closing = location.endTag ? position(location.endTag) : undefined\n      /** @type {ElementData['position']} */\n      const data = {opening}\n      if (closing) data.closing = closing\n      data.properties = properties\n\n      node.data = {position: data}\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a p5 location into a position.\n *\n * @param {Token.Location} loc\n *   Location.\n * @returns {Position | undefined}\n *   Position or nothing.\n */\nfunction position(loc) {\n  const start = point({\n    line: loc.startLine,\n    column: loc.startCol,\n    offset: loc.startOffset\n  })\n  const end = point({\n    line: loc.endLine,\n    column: loc.endCol,\n    offset: loc.endOffset\n  })\n\n  // @ts-expect-error: we do use `undefined` for points if one or the other\n  // exists.\n  return start || end ? {start, end} : undefined\n}\n\n/**\n * Filter out invalid points.\n *\n * @param {Point} point\n *   Point with potentially `undefined` values.\n * @returns {Point | undefined}\n *   Point or nothing.\n */\nfunction point(point) {\n  return point.line && point.column ? point : undefined\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 39694, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 39700, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/hast-util-to-parse5/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap['document']} Parse5Document\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentFragment']} Parse5Fragment\n * @typedef {import('parse5').DefaultTreeAdapterMap['element']} Parse5Element\n * @typedef {import('parse5').DefaultTreeAdapterMap['node']} Parse5Nodes\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentType']} Parse5Doctype\n * @typedef {import('parse5').DefaultTreeAdapterMap['commentNode']} Parse5Comment\n * @typedef {import('parse5').DefaultTreeAdapterMap['textNode']} Parse5Text\n * @typedef {import('parse5').DefaultTreeAdapterMap['parentNode']} Parse5Parent\n * @typedef {import('parse5').Token.Attribute} Parse5Attribute\n *\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n *\n * @typedef {Exclude<Parse5Nodes, Parse5Document | Parse5Fragment>} Parse5Content\n *\n * @typedef {'html' | 'svg'} Space\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {find, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\nconst own = {}.hasOwnProperty\n\nconst one = zwitch('type', {handlers: {root, element, text, comment, doctype}})\n\n/**\n * Transform a hast tree to a `parse5` AST.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Parse5Nodes}\n *   `parse5` node.\n */\nexport function toParse5(tree, options) {\n  const settings = options || emptyOptions\n  const space = settings.space\n  return one(tree, space === 'svg' ? svg : html)\n}\n\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Document}\n *   Parse5 node.\n */\nfunction root(node, schema) {\n  /** @type {Parse5Document} */\n  const result = {\n    nodeName: '#document',\n    // @ts-expect-error: `parse5` uses enums, which are actually strings.\n    mode: (node.data || {}).quirksMode ? 'quirks' : 'no-quirks',\n    childNodes: []\n  }\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Fragment}\n *   Parse5 node.\n */\nfunction fragment(node, schema) {\n  /** @type {Parse5Fragment} */\n  const result = {nodeName: '#document-fragment', childNodes: []}\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Doctype} node\n *   Node (hast) to transform.\n * @returns {Parse5Doctype}\n *   Parse5 node.\n */\nfunction doctype(node) {\n  /** @type {Parse5Doctype} */\n  const result = {\n    nodeName: '#documentType',\n    name: 'html',\n    publicId: '',\n    systemId: '',\n    parentNode: null\n  }\n\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Text} node\n *   Node (hast) to transform.\n * @returns {Parse5Text}\n *   Parse5 node.\n */\nfunction text(node) {\n  /** @type {Parse5Text} */\n  const result = {\n    nodeName: '#text',\n    value: node.value,\n    parentNode: null\n  }\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Comment} node\n *   Node (hast) to transform.\n * @returns {Parse5Comment}\n *   Parse5 node.\n */\nfunction comment(node) {\n  /** @type {Parse5Comment} */\n  const result = {\n    nodeName: '#comment',\n    data: node.value,\n    parentNode: null\n  }\n\n  patch(node, result)\n\n  return result\n}\n\n/**\n * @param {Element} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Element}\n *   Parse5 node.\n */\nfunction element(node, schema) {\n  const parentSchema = schema\n  let currentSchema = parentSchema\n\n  if (\n    node.type === 'element' &&\n    node.tagName.toLowerCase() === 'svg' &&\n    parentSchema.space === 'html'\n  ) {\n    currentSchema = svg\n  }\n\n  /** @type {Array<Parse5Attribute>} */\n  const attrs = []\n  /** @type {string} */\n  let prop\n\n  if (node.properties) {\n    for (prop in node.properties) {\n      if (prop !== 'children' && own.call(node.properties, prop)) {\n        const result = createProperty(\n          currentSchema,\n          prop,\n          node.properties[prop]\n        )\n\n        if (result) {\n          attrs.push(result)\n        }\n      }\n    }\n  }\n\n  const space = currentSchema.space\n  // `html` and `svg` both have a space.\n  assert(space)\n\n  /** @type {Parse5Element} */\n  const result = {\n    nodeName: node.tagName,\n    tagName: node.tagName,\n    attrs,\n    // @ts-expect-error: `parse5` types are wrong.\n    namespaceURI: webNamespaces[space],\n    childNodes: [],\n    parentNode: null\n  }\n  result.childNodes = all(node.children, result, currentSchema)\n  patch(node, result)\n\n  if (node.tagName === 'template' && node.content) {\n    // @ts-expect-error: `parse5` types are wrong.\n    result.content = fragment(node.content, currentSchema)\n  }\n\n  return result\n}\n\n/**\n * Handle a property.\n *\n * @param {Schema} schema\n *   Current schema.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Parse5Attribute | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(schema, prop, value) {\n  const info = find(schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === false ||\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value)) ||\n    (!value && info.boolean)\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  /** @type {Parse5Attribute} */\n  const attribute = {\n    name: info.attribute,\n    value: value === true ? '' : String(value)\n  }\n\n  if (info.space && info.space !== 'html' && info.space !== 'svg') {\n    const index = attribute.name.indexOf(':')\n\n    if (index < 0) {\n      attribute.prefix = ''\n    } else {\n      attribute.name = attribute.name.slice(index + 1)\n      attribute.prefix = info.attribute.slice(0, index)\n    }\n\n    attribute.namespace = webNamespaces[info.space]\n  }\n\n  return attribute\n}\n\n/**\n * Transform all hast nodes.\n *\n * @param {Array<RootContent>} children\n *   List of children.\n * @param {Parse5Parent} parentNode\n *   `parse5` parent node.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Array<Parse5Content>}\n *   Transformed children.\n */\nfunction all(children, parentNode, schema) {\n  let index = -1\n  /** @type {Array<Parse5Content>} */\n  const results = []\n\n  if (children) {\n    while (++index < children.length) {\n      /** @type {Parse5Content} */\n      const child = one(children[index], schema)\n\n      child.parentNode = parentNode\n\n      results.push(child)\n    }\n  }\n\n  return results\n}\n\n/**\n * Add position info from `from` to `to`.\n *\n * @param {Nodes} from\n *   hast node.\n * @param {Parse5Nodes} to\n *   `parse5` node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  const position = from.position\n\n  if (position && position.start && position.end) {\n    assert(typeof position.start.offset === 'number')\n    assert(typeof position.end.offset === 'number')\n\n    to.sourceCodeLocation = {\n      startLine: position.start.line,\n      startCol: position.start.column,\n      startOffset: position.start.offset,\n      endLine: position.end.line,\n      endCol: position.end.column,\n      endOffset: position.end.offset\n    }\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 39973, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 39979, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/html-void-elements/index.js"],"sourcesContent":["/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;AACM,MAAM,mBAAmB;IAC9B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD","ignoreList":[0]}},
    {"offset": {"line": 40008, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 40014, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/hast-util-raw/lib/index.js"],"sourcesContent":["/**\n * @import {Options} from 'hast-util-raw'\n * @import {Comment, Doctype, Element, Nodes, RootContent, Root, Text} from 'hast'\n * @import {Raw} from 'mdast-util-to-hast'\n * @import {DefaultTreeAdapterMap, ParserOptions} from 'parse5'\n * @import {Point} from 'unist'\n */\n\n/**\n * @typedef State\n *   Info passed around about the current state.\n * @property {(node: Nodes) => undefined} handle\n *   Add a hast node to the parser.\n * @property {Options} options\n *   User configuration.\n * @property {Parser<DefaultTreeAdapterMap>} parser\n *   Current parser.\n * @property {boolean} stitches\n *   Whether there are stitches.\n */\n\n/**\n * @typedef Stitch\n *   Custom comment-like value we pass through parse5, which contains a\n *   replacement node that we’ll swap back in afterwards.\n * @property {'comment'} type\n *   Node type.\n * @property {{stitch: Nodes}} value\n *   Replacement value.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {fromParse5} from 'hast-util-from-parse5'\nimport {toParse5} from 'hast-util-to-parse5'\nimport {htmlVoidElements} from 'html-void-elements'\nimport {Parser, Token, TokenizerMode, html} from 'parse5'\nimport {pointEnd, pointStart} from 'unist-util-position'\nimport {visit} from 'unist-util-visit'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\nconst gfmTagfilterExpression =\n  /<(\\/?)(iframe|noembed|noframes|plaintext|script|style|textarea|title|xmp)(?=[\\t\\n\\f\\r />])/gi\n\n// Node types associated with MDX.\n// <https://github.com/mdx-js/mdx/blob/8a56312/packages/mdx/lib/node-types.js>\nconst knownMdxNames = new Set([\n  'mdxFlowExpression',\n  'mdxJsxFlowElement',\n  'mdxJsxTextElement',\n  'mdxTextExpression',\n  'mdxjsEsm'\n])\n\n/** @type {ParserOptions<DefaultTreeAdapterMap>} */\nconst parseOptions = {sourceCodeLocationInfo: true, scriptingEnabled: false}\n\n/**\n * Pass a hast tree through an HTML parser, which will fix nesting, and turn\n * raw nodes into actual nodes.\n *\n * @param {Nodes} tree\n *   Original hast tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   Parsed again tree.\n */\nexport function raw(tree, options) {\n  const document = documentMode(tree)\n  /** @type {(node: Nodes, state: State) => undefined} */\n  const one = zwitch('type', {\n    handlers: {root, element, text, comment, doctype, raw: handleRaw},\n    unknown\n  })\n\n  /** @type {State} */\n  const state = {\n    parser: document\n      ? new Parser(parseOptions)\n      : Parser.getFragmentParser(undefined, parseOptions),\n    handle(node) {\n      one(node, state)\n    },\n    stitches: false,\n    options: options || {}\n  }\n\n  one(tree, state)\n  resetTokenizer(state, pointStart())\n\n  const p5 = document ? state.parser.document : state.parser.getFragment()\n  const result = fromParse5(p5, {\n    // To do: support `space`?\n    file: state.options.file\n  })\n\n  if (state.stitches) {\n    visit(result, 'comment', function (node, index, parent) {\n      const stitch = /** @type {Stitch} */ (/** @type {unknown} */ (node))\n      if (stitch.value.stitch && parent && index !== undefined) {\n        /** @type {Array<RootContent>} */\n        const siblings = parent.children\n        // @ts-expect-error: assume the stitch is allowed.\n        siblings[index] = stitch.value.stitch\n        return index\n      }\n    })\n  }\n\n  // Unpack if possible and when not given a `root`.\n  if (\n    result.type === 'root' &&\n    result.children.length === 1 &&\n    result.children[0].type === tree.type\n  ) {\n    return result.children[0]\n  }\n\n  return result\n}\n\n/**\n * Transform all nodes\n *\n * @param {Array<RootContent>} nodes\n *   hast content.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction all(nodes, state) {\n  let index = -1\n\n  /* istanbul ignore else - invalid nodes, see rehypejs/rehype-raw#7. */\n  if (nodes) {\n    while (++index < nodes.length) {\n      state.handle(nodes[index])\n    }\n  }\n}\n\n/**\n * Transform a root.\n *\n * @param {Root} node\n *   hast root node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction root(node, state) {\n  all(node.children, state)\n}\n\n/**\n * Transform an element.\n *\n * @param {Element} node\n *   hast element node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction element(node, state) {\n  startTag(node, state)\n\n  all(node.children, state)\n\n  endTag(node, state)\n}\n\n/**\n * Transform a text.\n *\n * @param {Text} node\n *   hast text node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction text(node, state) {\n  // Allow `DATA` through `PLAINTEXT`,\n  // but when hanging in a tag for example,\n  // switch back to `DATA`.\n  // Note: `State` is not exposed by `parse5`, so these numbers are fragile.\n  // See: <https://github.com/inikulin/parse5/blob/46cba43/packages/parse5/lib/tokenizer/index.ts#L58>\n  if (state.parser.tokenizer.state > 4) {\n    state.parser.tokenizer.state = 0\n  }\n\n  /** @type {Token.CharacterToken} */\n  const token = {\n    type: Token.TokenType.CHARACTER,\n    chars: node.value,\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a doctype.\n *\n * @param {Doctype} node\n *   hast doctype node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction doctype(node, state) {\n  /** @type {Token.DoctypeToken} */\n  const token = {\n    type: Token.TokenType.DOCTYPE,\n    name: 'html',\n    forceQuirks: false,\n    publicId: '',\n    systemId: '',\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a stitch.\n *\n * @param {Nodes} node\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction stitch(node, state) {\n  // Mark that there are stitches, so we need to walk the tree and revert them.\n  state.stitches = true\n\n  /** @type {Nodes} */\n  const clone = cloneWithoutChildren(node)\n\n  // Recurse, because to somewhat handle `[<x>]</x>` (where `[]` denotes the\n  // passed through node).\n  if ('children' in node && 'children' in clone) {\n    // Root in root out.\n    const fakeRoot = /** @type {Root} */ (\n      raw({type: 'root', children: node.children}, state.options)\n    )\n    clone.children = fakeRoot.children\n  }\n\n  // Hack: `value` is supposed to be a string, but as none of the tools\n  // (`parse5` or `hast-util-from-parse5`) looks at it, we can pass nodes\n  // through.\n  comment({type: 'comment', value: {stitch: clone}}, state)\n}\n\n/**\n * Transform a comment (or stitch).\n *\n * @param {Comment | Stitch} node\n *   hast comment node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction comment(node, state) {\n  /** @type {string} */\n  // @ts-expect-error: we pass stitches through.\n  const data = node.value\n\n  /** @type {Token.CommentToken} */\n  const token = {\n    type: Token.TokenType.COMMENT,\n    data,\n    location: createParse5Location(node)\n  }\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a raw node.\n *\n * @param {Raw} node\n *   hast raw node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction handleRaw(node, state) {\n  // Reset preprocessor:\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/preprocessor.ts#L18-L31>.\n  state.parser.tokenizer.preprocessor.html = ''\n  state.parser.tokenizer.preprocessor.pos = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.lastGapPos = -2\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.gapStack = []\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.skipNextNewLine = false\n  state.parser.tokenizer.preprocessor.lastChunkWritten = false\n  state.parser.tokenizer.preprocessor.endOfChunkHit = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.isEol = false\n\n  // Now pass `node.value`.\n  setPoint(state, pointStart(node))\n\n  state.parser.tokenizer.write(\n    state.options.tagfilter\n      ? node.value.replace(gfmTagfilterExpression, '&lt;$1$2')\n      : node.value,\n    false\n  )\n  // @ts-expect-error: private.\n  state.parser.tokenizer._runParsingLoop()\n\n  // Character references hang, so if we ended there, we need to flush\n  // those too.\n  // We reset the preprocessor as if the document ends here.\n  // Then one single call to the relevant state does the trick, parse5\n  // consumes the whole token.\n\n  // Note: `State` is not exposed by `parse5`, so these numbers are fragile.\n  // See: <https://github.com/inikulin/parse5/blob/46cba43/packages/parse5/lib/tokenizer/index.ts#L58>\n  // Note: a change to `parse5`, which breaks this, was merged but not released.\n  // Investigate when it is.\n  // To do: remove next major.\n  /* c8 ignore next 12 -- removed in <https://github.com/inikulin/parse5/pull/897> */\n  if (\n    state.parser.tokenizer.state === 72 /* NAMED_CHARACTER_REFERENCE */ ||\n    // @ts-expect-error: removed.\n    state.parser.tokenizer.state === 78 /* NUMERIC_CHARACTER_REFERENCE_END */\n  ) {\n    state.parser.tokenizer.preprocessor.lastChunkWritten = true\n    /** @type {number} */\n    // @ts-expect-error: private.\n    const cp = state.parser.tokenizer._consume()\n    // @ts-expect-error: private.\n    state.parser.tokenizer._callState(cp)\n  }\n}\n\n/**\n * Crash on an unknown node.\n *\n * @param {unknown} node_\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Never.\n */\nfunction unknown(node_, state) {\n  const node = /** @type {Nodes} */ (node_)\n\n  if (\n    state.options.passThrough &&\n    state.options.passThrough.includes(node.type)\n  ) {\n    stitch(node, state)\n  } else {\n    let extra = ''\n\n    if (knownMdxNames.has(node.type)) {\n      extra =\n        \". It looks like you are using MDX nodes with `hast-util-raw` (or `rehype-raw`). If you use this because you are using remark or rehype plugins that inject `'html'` nodes, then please raise an issue with that plugin, as its a bad and slow idea. If you use this because you are using markdown syntax, then you have to configure this utility (or plugin) to pass through these nodes (see `passThrough` in docs), but you can also migrate to use the MDX syntax\"\n    }\n\n    throw new Error('Cannot compile `' + node.type + '` node' + extra)\n  }\n}\n\n/**\n * Reset the tokenizer of a parser.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point | undefined} point\n *   Point.\n * @returns {undefined}\n *   Nothing.\n */\nfunction resetTokenizer(state, point) {\n  setPoint(state, point)\n\n  // Process final characters if they’re still there after hibernating.\n  /** @type {Token.CharacterToken} */\n  // @ts-expect-error: private.\n  const token = state.parser.tokenizer.currentCharacterToken\n\n  if (token && token.location) {\n    token.location.endLine = state.parser.tokenizer.preprocessor.line\n    token.location.endCol = state.parser.tokenizer.preprocessor.col + 1\n    token.location.endOffset = state.parser.tokenizer.preprocessor.offset + 1\n    // @ts-expect-error: private.\n    state.parser.currentToken = token\n    // @ts-expect-error: private.\n    state.parser._processToken(state.parser.currentToken)\n  }\n\n  // Reset tokenizer:\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/index.ts#L187-L223>.\n  // Especially putting it back in the `data` state is useful: some elements,\n  // like textareas and iframes, change the state.\n  // See GH-7.\n  // But also if broken HTML is in `raw`, and then a correct element is given.\n  // See GH-11.\n  // @ts-expect-error: private.\n  state.parser.tokenizer.paused = false\n  // @ts-expect-error: private.\n  state.parser.tokenizer.inLoop = false\n\n  // Note: don’t reset `state`, `inForeignNode`, or `lastStartTagName`, we\n  // manually update those when needed.\n  state.parser.tokenizer.active = false\n  // @ts-expect-error: private.\n  state.parser.tokenizer.returnState = TokenizerMode.DATA\n  // @ts-expect-error: private.\n  state.parser.tokenizer.charRefCode = -1\n  // @ts-expect-error: private.\n  state.parser.tokenizer.consumedAfterSnapshot = -1\n  // @ts-expect-error: private.\n  state.parser.tokenizer.currentLocation = null\n  // @ts-expect-error: private.\n  state.parser.tokenizer.currentCharacterToken = null\n  // @ts-expect-error: private.\n  state.parser.tokenizer.currentToken = null\n  // @ts-expect-error: private.\n  state.parser.tokenizer.currentAttr = {name: '', value: ''}\n}\n\n/**\n * Set current location.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point | undefined} point\n *   Point.\n * @returns {undefined}\n *   Nothing.\n */\nfunction setPoint(state, point) {\n  if (point && point.offset !== undefined) {\n    /** @type {Token.Location} */\n    const location = {\n      startLine: point.line,\n      startCol: point.column,\n      startOffset: point.offset,\n      endLine: -1,\n      endCol: -1,\n      endOffset: -1\n    }\n\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.preprocessor.lineStartPos = -point.column + 1 // Looks weird, but ensures we get correct positional info.\n    state.parser.tokenizer.preprocessor.droppedBufferSize = point.offset\n    state.parser.tokenizer.preprocessor.line = point.line\n    // @ts-expect-error: private.\n    state.parser.tokenizer.currentLocation = location\n  }\n}\n\n/**\n * Emit a start tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction startTag(node, state) {\n  const tagName = node.tagName.toLowerCase()\n\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointStart(node))\n\n  const current = state.parser.openElements.current\n  let ns = 'namespaceURI' in current ? current.namespaceURI : webNamespaces.html\n\n  if (ns === webNamespaces.html && tagName === 'svg') {\n    ns = webNamespaces.svg\n  }\n\n  const result = toParse5(\n    // Shallow clone to not delve into `children`: we only need the attributes.\n    {...node, children: []},\n    {space: ns === webNamespaces.svg ? 'svg' : 'html'}\n  )\n\n  /** @type {Token.TagToken} */\n  const tag = {\n    type: Token.TokenType.START_TAG,\n    tagName,\n    tagID: html.getTagID(tagName),\n    // We always send start and end tags.\n    selfClosing: false,\n    ackSelfClosing: false,\n    // Always element.\n    /* c8 ignore next */\n    attrs: 'attrs' in result ? result.attrs : [],\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Set a tag name, similar to how the tokenizer would do it.\n  state.parser.tokenizer.lastStartTagName = tagName\n\n  // `inForeignNode` is correctly set by the parser.\n}\n\n/**\n * Emit an end tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction endTag(node, state) {\n  const tagName = node.tagName.toLowerCase()\n  // Do not emit closing tags for HTML void elements.\n  if (\n    !state.parser.tokenizer.inForeignNode &&\n    htmlVoidElements.includes(tagName)\n  ) {\n    return\n  }\n\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointEnd(node))\n\n  /** @type {Token.TagToken} */\n  const tag = {\n    type: Token.TokenType.END_TAG,\n    tagName,\n    tagID: html.getTagID(tagName),\n    selfClosing: false,\n    ackSelfClosing: false,\n    attrs: [],\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Switch back to the data state after alternative states that don’t accept\n  // tags:\n  if (\n    // Current element is closed.\n    tagName === state.parser.tokenizer.lastStartTagName &&\n    // `<textarea>` and `<title>`\n    (state.parser.tokenizer.state === TokenizerMode.RCDATA ||\n      // `<iframe>`, `<noembed>`, `<noframes>`, `<style>`, `<xmp>`\n      state.parser.tokenizer.state === TokenizerMode.RAWTEXT ||\n      // `<script>`\n      state.parser.tokenizer.state === TokenizerMode.SCRIPT_DATA)\n    // Note: `<plaintext>` not needed, as it’s the last element.\n  ) {\n    state.parser.tokenizer.state = TokenizerMode.DATA\n  }\n}\n\n/**\n * Check if `node` represents a whole document or a fragment.\n *\n * @param {Nodes} node\n *   hast node.\n * @returns {boolean}\n *   Whether this represents a whole document or a fragment.\n */\nfunction documentMode(node) {\n  const head = node.type === 'root' ? node.children[0] : node\n  return Boolean(\n    head &&\n      (head.type === 'doctype' ||\n        (head.type === 'element' && head.tagName.toLowerCase() === 'html'))\n  )\n}\n\n/**\n * Get a `parse5` location from a node.\n *\n * @param {Nodes | Stitch} node\n *   hast node.\n * @returns {Token.Location}\n *   `parse5` location.\n */\nfunction createParse5Location(node) {\n  const start = pointStart(node) || {\n    line: undefined,\n    column: undefined,\n    offset: undefined\n  }\n  const end = pointEnd(node) || {\n    line: undefined,\n    column: undefined,\n    offset: undefined\n  }\n\n  /** @type {Record<keyof Token.Location, number | undefined>} */\n  const location = {\n    startLine: start.line,\n    startCol: start.column,\n    startOffset: start.offset,\n    endLine: end.line,\n    endCol: end.column,\n    endOffset: end.offset\n  }\n\n  // @ts-expect-error: unist point values can be `undefined` in hast, which\n  // `parse5` types don’t want.\n  return location\n}\n\n/**\n * @template {Nodes} NodeType\n *   Node type.\n * @param {NodeType} node\n *   Node to clone.\n * @returns {NodeType}\n *   Cloned node, without children.\n */\nfunction cloneWithoutChildren(node) {\n  return 'children' in node\n    ? structuredClone({...node, children: []})\n    : structuredClone(node)\n}\n"],"names":[],"mappings":"AAAA;;;;;;CAMC,GAED;;;;;;;;;;;CAWC,GAED;;;;;;;;CAQC;;;AAMD;AAIA;AAJA;AACA;AAJA;AAKA;AAFA;AAAA;AAGA;AALA;AAEA;AADA;AAHA;;;;;;;;;;AAUA,MAAM,yBACJ;AAEF,kCAAkC;AAClC,8EAA8E;AAC9E,MAAM,gBAAgB,IAAI,IAAI;IAC5B;IACA;IACA;IACA;IACA;CACD;AAED,iDAAiD,GACjD,MAAM,eAAe;IAAC,wBAAwB;IAAM,kBAAkB;AAAK;AAapE,SAAS,IAAI,IAAI,EAAE,OAAO;IAC/B,MAAM,WAAW,aAAa;IAC9B,qDAAqD,GACrD,MAAM,MAAM,CAAA,GAAA,2HAAA,CAAA,SAAM,AAAD,EAAE,QAAQ;QACzB,UAAU;YAAC;YAAM;YAAS;YAAM;YAAS;YAAS,KAAK;QAAS;QAChE;IACF;IAEA,kBAAkB,GAClB,MAAM,QAAQ;QACZ,QAAQ,WACJ,IAAI,6IAAA,CAAA,SAAM,CAAC,gBACX,6IAAA,CAAA,SAAM,CAAC,iBAAiB,CAAC,WAAW;QACxC,QAAO,IAAI;YACT,IAAI,MAAM;QACZ;QACA,UAAU;QACV,SAAS,WAAW,CAAC;IACvB;IAEA,IAAI,MAAM;IACV,eAAe,OAAO,CAAA,GAAA,qJAAA,CAAA,aAAU,AAAD;IAE/B,MAAM,KAAK,WAAW,MAAM,MAAM,CAAC,QAAQ,GAAG,MAAM,MAAM,CAAC,WAAW;IACtE,MAAM,SAAS,CAAA,GAAA,0JAAA,CAAA,aAAU,AAAD,EAAE,IAAI;QAC5B,0BAA0B;QAC1B,MAAM,MAAM,OAAO,CAAC,IAAI;IAC1B;IAEA,IAAI,MAAM,QAAQ,EAAE;QAClB,CAAA,GAAA,kKAAA,CAAA,QAAK,AAAD,EAAE,QAAQ,WAAW,SAAU,IAAI,EAAE,KAAK,EAAE,MAAM;YACpD,MAAM,SAAwD;YAC9D,IAAI,OAAO,KAAK,CAAC,MAAM,IAAI,UAAU,UAAU,WAAW;gBACxD,+BAA+B,GAC/B,MAAM,WAAW,OAAO,QAAQ;gBAChC,kDAAkD;gBAClD,QAAQ,CAAC,MAAM,GAAG,OAAO,KAAK,CAAC,MAAM;gBACrC,OAAO;YACT;QACF;IACF;IAEA,kDAAkD;IAClD,IACE,OAAO,IAAI,KAAK,UAChB,OAAO,QAAQ,CAAC,MAAM,KAAK,KAC3B,OAAO,QAAQ,CAAC,EAAE,CAAC,IAAI,KAAK,KAAK,IAAI,EACrC;QACA,OAAO,OAAO,QAAQ,CAAC,EAAE;IAC3B;IAEA,OAAO;AACT;AAEA;;;;;;;;;CASC,GACD,SAAS,IAAI,KAAK,EAAE,KAAK;IACvB,IAAI,QAAQ,CAAC;IAEb,oEAAoE,GACpE,IAAI,OAAO;QACT,MAAO,EAAE,QAAQ,MAAM,MAAM,CAAE;YAC7B,MAAM,MAAM,CAAC,KAAK,CAAC,MAAM;QAC3B;IACF;AACF;AAEA;;;;;;;;;CASC,GACD,SAAS,KAAK,IAAI,EAAE,KAAK;IACvB,IAAI,KAAK,QAAQ,EAAE;AACrB;AAEA;;;;;;;;;CASC,GACD,SAAS,QAAQ,IAAI,EAAE,KAAK;IAC1B,SAAS,MAAM;IAEf,IAAI,KAAK,QAAQ,EAAE;IAEnB,OAAO,MAAM;AACf;AAEA;;;;;;;;;CASC,GACD,SAAS,KAAK,IAAI,EAAE,KAAK;IACvB,oCAAoC;IACpC,yCAAyC;IACzC,yBAAyB;IACzB,0EAA0E;IAC1E,oGAAoG;IACpG,IAAI,MAAM,MAAM,CAAC,SAAS,CAAC,KAAK,GAAG,GAAG;QACpC,MAAM,MAAM,CAAC,SAAS,CAAC,KAAK,GAAG;IACjC;IAEA,iCAAiC,GACjC,MAAM,QAAQ;QACZ,MAAM,8KAAA,CAAA,QAAK,CAAC,SAAS,CAAC,SAAS;QAC/B,OAAO,KAAK,KAAK;QACjB,UAAU,qBAAqB;IACjC;IAEA,eAAe,OAAO,CAAA,GAAA,qJAAA,CAAA,aAAU,AAAD,EAAE;IACjC,6BAA6B;IAC7B,MAAM,MAAM,CAAC,YAAY,GAAG;IAC5B,6BAA6B;IAC7B,MAAM,MAAM,CAAC,aAAa,CAAC,MAAM,MAAM,CAAC,YAAY;AACtD;AAEA;;;;;;;;;CASC,GACD,SAAS,QAAQ,IAAI,EAAE,KAAK;IAC1B,+BAA+B,GAC/B,MAAM,QAAQ;QACZ,MAAM,8KAAA,CAAA,QAAK,CAAC,SAAS,CAAC,OAAO;QAC7B,MAAM;QACN,aAAa;QACb,UAAU;QACV,UAAU;QACV,UAAU,qBAAqB;IACjC;IAEA,eAAe,OAAO,CAAA,GAAA,qJAAA,CAAA,aAAU,AAAD,EAAE;IACjC,6BAA6B;IAC7B,MAAM,MAAM,CAAC,YAAY,GAAG;IAC5B,6BAA6B;IAC7B,MAAM,MAAM,CAAC,aAAa,CAAC,MAAM,MAAM,CAAC,YAAY;AACtD;AAEA;;;;;;;;;CASC,GACD,SAAS,OAAO,IAAI,EAAE,KAAK;IACzB,6EAA6E;IAC7E,MAAM,QAAQ,GAAG;IAEjB,kBAAkB,GAClB,MAAM,QAAQ,qBAAqB;IAEnC,0EAA0E;IAC1E,wBAAwB;IACxB,IAAI,cAAc,QAAQ,cAAc,OAAO;QAC7C,oBAAoB;QACpB,MAAM,WACJ,IAAI;YAAC,MAAM;YAAQ,UAAU,KAAK,QAAQ;QAAA,GAAG,MAAM,OAAO;QAE5D,MAAM,QAAQ,GAAG,SAAS,QAAQ;IACpC;IAEA,qEAAqE;IACrE,uEAAuE;IACvE,WAAW;IACX,QAAQ;QAAC,MAAM;QAAW,OAAO;YAAC,QAAQ;QAAK;IAAC,GAAG;AACrD;AAEA;;;;;;;;;CASC,GACD,SAAS,QAAQ,IAAI,EAAE,KAAK;IAC1B,mBAAmB,GACnB,8CAA8C;IAC9C,MAAM,OAAO,KAAK,KAAK;IAEvB,+BAA+B,GAC/B,MAAM,QAAQ;QACZ,MAAM,8KAAA,CAAA,QAAK,CAAC,SAAS,CAAC,OAAO;QAC7B;QACA,UAAU,qBAAqB;IACjC;IACA,eAAe,OAAO,CAAA,GAAA,qJAAA,CAAA,aAAU,AAAD,EAAE;IACjC,6BAA6B;IAC7B,MAAM,MAAM,CAAC,YAAY,GAAG;IAC5B,6BAA6B;IAC7B,MAAM,MAAM,CAAC,aAAa,CAAC,MAAM,MAAM,CAAC,YAAY;AACtD;AAEA;;;;;;;;;CASC,GACD,SAAS,UAAU,IAAI,EAAE,KAAK;IAC5B,sBAAsB;IACtB,gHAAgH;IAChH,MAAM,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,GAAG;IAC3C,MAAM,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,GAAG,GAAG,CAAC;IAC3C,6BAA6B;IAC7B,iCAAiC;IACjC,MAAM,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,UAAU,GAAG,CAAC;IAClD,6BAA6B;IAC7B,iCAAiC;IACjC,MAAM,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,QAAQ,GAAG,EAAE;IACjD,6BAA6B;IAC7B,iCAAiC;IACjC,MAAM,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,eAAe,GAAG;IACtD,MAAM,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,gBAAgB,GAAG;IACvD,MAAM,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,aAAa,GAAG;IACpD,6BAA6B;IAC7B,iCAAiC;IACjC,MAAM,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,GAAG;IAE5C,yBAAyB;IACzB,SAAS,OAAO,CAAA,GAAA,qJAAA,CAAA,aAAU,AAAD,EAAE;IAE3B,MAAM,MAAM,CAAC,SAAS,CAAC,KAAK,CAC1B,MAAM,OAAO,CAAC,SAAS,GACnB,KAAK,KAAK,CAAC,OAAO,CAAC,wBAAwB,cAC3C,KAAK,KAAK,EACd;IAEF,6BAA6B;IAC7B,MAAM,MAAM,CAAC,SAAS,CAAC,eAAe;IAEtC,oEAAoE;IACpE,aAAa;IACb,0DAA0D;IAC1D,oEAAoE;IACpE,4BAA4B;IAE5B,0EAA0E;IAC1E,oGAAoG;IACpG,8EAA8E;IAC9E,0BAA0B;IAC1B,4BAA4B;IAC5B,iFAAiF,GACjF,IACE,MAAM,MAAM,CAAC,SAAS,CAAC,KAAK,KAAK,GAAG,6BAA6B,OACjE,6BAA6B;IAC7B,MAAM,MAAM,CAAC,SAAS,CAAC,KAAK,KAAK,GAAG,mCAAmC,KACvE;QACA,MAAM,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,gBAAgB,GAAG;QACvD,mBAAmB,GACnB,6BAA6B;QAC7B,MAAM,KAAK,MAAM,MAAM,CAAC,SAAS,CAAC,QAAQ;QAC1C,6BAA6B;QAC7B,MAAM,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC;IACpC;AACF;AAEA;;;;;;;;;CASC,GACD,SAAS,QAAQ,KAAK,EAAE,KAAK;IAC3B,MAAM,OAA6B;IAEnC,IACE,MAAM,OAAO,CAAC,WAAW,IACzB,MAAM,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,IAAI,GAC5C;QACA,OAAO,MAAM;IACf,OAAO;QACL,IAAI,QAAQ;QAEZ,IAAI,cAAc,GAAG,CAAC,KAAK,IAAI,GAAG;YAChC,QACE;QACJ;QAEA,MAAM,IAAI,MAAM,qBAAqB,KAAK,IAAI,GAAG,WAAW;IAC9D;AACF;AAEA;;;;;;;;;CASC,GACD,SAAS,eAAe,KAAK,EAAE,KAAK;IAClC,SAAS,OAAO;IAEhB,qEAAqE;IACrE,iCAAiC,GACjC,6BAA6B;IAC7B,MAAM,QAAQ,MAAM,MAAM,CAAC,SAAS,CAAC,qBAAqB;IAE1D,IAAI,SAAS,MAAM,QAAQ,EAAE;QAC3B,MAAM,QAAQ,CAAC,OAAO,GAAG,MAAM,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI;QACjE,MAAM,QAAQ,CAAC,MAAM,GAAG,MAAM,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,GAAG,GAAG;QAClE,MAAM,QAAQ,CAAC,SAAS,GAAG,MAAM,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,MAAM,GAAG;QACxE,6BAA6B;QAC7B,MAAM,MAAM,CAAC,YAAY,GAAG;QAC5B,6BAA6B;QAC7B,MAAM,MAAM,CAAC,aAAa,CAAC,MAAM,MAAM,CAAC,YAAY;IACtD;IAEA,mBAAmB;IACnB,2GAA2G;IAC3G,2EAA2E;IAC3E,gDAAgD;IAChD,YAAY;IACZ,4EAA4E;IAC5E,aAAa;IACb,6BAA6B;IAC7B,MAAM,MAAM,CAAC,SAAS,CAAC,MAAM,GAAG;IAChC,6BAA6B;IAC7B,MAAM,MAAM,CAAC,SAAS,CAAC,MAAM,GAAG;IAEhC,wEAAwE;IACxE,qCAAqC;IACrC,MAAM,MAAM,CAAC,SAAS,CAAC,MAAM,GAAG;IAChC,6BAA6B;IAC7B,MAAM,MAAM,CAAC,SAAS,CAAC,WAAW,GAAG,gJAAA,CAAA,gBAAa,CAAC,IAAI;IACvD,6BAA6B;IAC7B,MAAM,MAAM,CAAC,SAAS,CAAC,WAAW,GAAG,CAAC;IACtC,6BAA6B;IAC7B,MAAM,MAAM,CAAC,SAAS,CAAC,qBAAqB,GAAG,CAAC;IAChD,6BAA6B;IAC7B,MAAM,MAAM,CAAC,SAAS,CAAC,eAAe,GAAG;IACzC,6BAA6B;IAC7B,MAAM,MAAM,CAAC,SAAS,CAAC,qBAAqB,GAAG;IAC/C,6BAA6B;IAC7B,MAAM,MAAM,CAAC,SAAS,CAAC,YAAY,GAAG;IACtC,6BAA6B;IAC7B,MAAM,MAAM,CAAC,SAAS,CAAC,WAAW,GAAG;QAAC,MAAM;QAAI,OAAO;IAAE;AAC3D;AAEA;;;;;;;;;CASC,GACD,SAAS,SAAS,KAAK,EAAE,KAAK;IAC5B,IAAI,SAAS,MAAM,MAAM,KAAK,WAAW;QACvC,2BAA2B,GAC3B,MAAM,WAAW;YACf,WAAW,MAAM,IAAI;YACrB,UAAU,MAAM,MAAM;YACtB,aAAa,MAAM,MAAM;YACzB,SAAS,CAAC;YACV,QAAQ,CAAC;YACT,WAAW,CAAC;QACd;QAEA,6BAA6B;QAC7B,iCAAiC;QACjC,MAAM,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,YAAY,GAAG,CAAC,MAAM,MAAM,GAAG,EAAE,2DAA2D;;QAChI,MAAM,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,iBAAiB,GAAG,MAAM,MAAM;QACpE,MAAM,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,GAAG,MAAM,IAAI;QACrD,6BAA6B;QAC7B,MAAM,MAAM,CAAC,SAAS,CAAC,eAAe,GAAG;IAC3C;AACF;AAEA;;;;;;;;;CASC,GACD,SAAS,SAAS,IAAI,EAAE,KAAK;IAC3B,MAAM,UAAU,KAAK,OAAO,CAAC,WAAW;IAExC,sCAAsC;IACtC,IAAI,MAAM,MAAM,CAAC,SAAS,CAAC,KAAK,KAAK,gJAAA,CAAA,gBAAa,CAAC,SAAS,EAAE;IAE9D,eAAe,OAAO,CAAA,GAAA,qJAAA,CAAA,aAAU,AAAD,EAAE;IAEjC,MAAM,UAAU,MAAM,MAAM,CAAC,YAAY,CAAC,OAAO;IACjD,IAAI,KAAK,kBAAkB,UAAU,QAAQ,YAAY,GAAG,sIAAA,CAAA,gBAAa,CAAC,IAAI;IAE9E,IAAI,OAAO,sIAAA,CAAA,gBAAa,CAAC,IAAI,IAAI,YAAY,OAAO;QAClD,KAAK,sIAAA,CAAA,gBAAa,CAAC,GAAG;IACxB;IAEA,MAAM,SAAS,CAAA,GAAA,wJAAA,CAAA,WAAQ,AAAD,EACpB,2EAA2E;IAC3E;QAAC,GAAG,IAAI;QAAE,UAAU,EAAE;IAAA,GACtB;QAAC,OAAO,OAAO,sIAAA,CAAA,gBAAa,CAAC,GAAG,GAAG,QAAQ;IAAM;IAGnD,2BAA2B,GAC3B,MAAM,MAAM;QACV,MAAM,8KAAA,CAAA,QAAK,CAAC,SAAS,CAAC,SAAS;QAC/B;QACA,OAAO,4KAAA,CAAA,OAAI,CAAC,QAAQ,CAAC;QACrB,qCAAqC;QACrC,aAAa;QACb,gBAAgB;QAChB,kBAAkB;QAClB,kBAAkB,GAClB,OAAO,WAAW,SAAS,OAAO,KAAK,GAAG,EAAE;QAC5C,UAAU,qBAAqB;IACjC;IAEA,4EAA4E;IAC5E,wCAAwC;IACxC,6DAA6D;IAC7D,gDAAgD;IAEhD,6BAA6B;IAC7B,MAAM,MAAM,CAAC,YAAY,GAAG;IAC5B,6BAA6B;IAC7B,MAAM,MAAM,CAAC,aAAa,CAAC,MAAM,MAAM,CAAC,YAAY;IAEpD,4EAA4E;IAC5E,eAAe;IAEf,4DAA4D;IAC5D,MAAM,MAAM,CAAC,SAAS,CAAC,gBAAgB,GAAG;AAE1C,kDAAkD;AACpD;AAEA;;;;;;;;;CASC,GACD,SAAS,OAAO,IAAI,EAAE,KAAK;IACzB,MAAM,UAAU,KAAK,OAAO,CAAC,WAAW;IACxC,mDAAmD;IACnD,IACE,CAAC,MAAM,MAAM,CAAC,SAAS,CAAC,aAAa,IACrC,6IAAA,CAAA,mBAAgB,CAAC,QAAQ,CAAC,UAC1B;QACA;IACF;IAEA,sCAAsC;IACtC,IAAI,MAAM,MAAM,CAAC,SAAS,CAAC,KAAK,KAAK,gJAAA,CAAA,gBAAa,CAAC,SAAS,EAAE;IAE9D,eAAe,OAAO,CAAA,GAAA,qJAAA,CAAA,WAAQ,AAAD,EAAE;IAE/B,2BAA2B,GAC3B,MAAM,MAAM;QACV,MAAM,8KAAA,CAAA,QAAK,CAAC,SAAS,CAAC,OAAO;QAC7B;QACA,OAAO,4KAAA,CAAA,OAAI,CAAC,QAAQ,CAAC;QACrB,aAAa;QACb,gBAAgB;QAChB,OAAO,EAAE;QACT,UAAU,qBAAqB;IACjC;IAEA,4EAA4E;IAC5E,wCAAwC;IACxC,6DAA6D;IAC7D,gDAAgD;IAEhD,6BAA6B;IAC7B,MAAM,MAAM,CAAC,YAAY,GAAG;IAC5B,6BAA6B;IAC7B,MAAM,MAAM,CAAC,aAAa,CAAC,MAAM,MAAM,CAAC,YAAY;IAEpD,4EAA4E;IAC5E,eAAe;IAEf,2EAA2E;IAC3E,QAAQ;IACR,IACE,6BAA6B;IAC7B,YAAY,MAAM,MAAM,CAAC,SAAS,CAAC,gBAAgB,IACnD,6BAA6B;IAC7B,CAAC,MAAM,MAAM,CAAC,SAAS,CAAC,KAAK,KAAK,gJAAA,CAAA,gBAAa,CAAC,MAAM,IACpD,4DAA4D;IAC5D,MAAM,MAAM,CAAC,SAAS,CAAC,KAAK,KAAK,gJAAA,CAAA,gBAAa,CAAC,OAAO,IACtD,aAAa;IACb,MAAM,MAAM,CAAC,SAAS,CAAC,KAAK,KAAK,gJAAA,CAAA,gBAAa,CAAC,WAAW,GAE5D;QACA,MAAM,MAAM,CAAC,SAAS,CAAC,KAAK,GAAG,gJAAA,CAAA,gBAAa,CAAC,IAAI;IACnD;AACF;AAEA;;;;;;;CAOC,GACD,SAAS,aAAa,IAAI;IACxB,MAAM,OAAO,KAAK,IAAI,KAAK,SAAS,KAAK,QAAQ,CAAC,EAAE,GAAG;IACvD,OAAO,QACL,QACE,CAAC,KAAK,IAAI,KAAK,aACZ,KAAK,IAAI,KAAK,aAAa,KAAK,OAAO,CAAC,WAAW,OAAO,MAAO;AAE1E;AAEA;;;;;;;CAOC,GACD,SAAS,qBAAqB,IAAI;IAChC,MAAM,QAAQ,CAAA,GAAA,qJAAA,CAAA,aAAU,AAAD,EAAE,SAAS;QAChC,MAAM;QACN,QAAQ;QACR,QAAQ;IACV;IACA,MAAM,MAAM,CAAA,GAAA,qJAAA,CAAA,WAAQ,AAAD,EAAE,SAAS;QAC5B,MAAM;QACN,QAAQ;QACR,QAAQ;IACV;IAEA,6DAA6D,GAC7D,MAAM,WAAW;QACf,WAAW,MAAM,IAAI;QACrB,UAAU,MAAM,MAAM;QACtB,aAAa,MAAM,MAAM;QACzB,SAAS,IAAI,IAAI;QACjB,QAAQ,IAAI,MAAM;QAClB,WAAW,IAAI,MAAM;IACvB;IAEA,yEAAyE;IACzE,6BAA6B;IAC7B,OAAO;AACT;AAEA;;;;;;;CAOC,GACD,SAAS,qBAAqB,IAAI;IAChC,OAAO,cAAc,OACjB,CAAA,GAAA,0KAAA,CAAA,UAAe,AAAD,EAAE;QAAC,GAAG,IAAI;QAAE,UAAU,EAAE;IAAA,KACtC,CAAA,GAAA,0KAAA,CAAA,UAAe,AAAD,EAAE;AACtB","ignoreList":[0]}},
    {"offset": {"line": 40584, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 40590, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/rehype-raw/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-raw').Options} RawOptions\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {Omit<RawOptions, 'file'>} Options\n *   Configuration.\n */\n\nimport {raw} from 'hast-util-raw'\n\n/**\n * Parse the tree (and raw nodes) again, keeping positional info okay.\n *\n * @param {Options | null | undefined}  [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport default function rehypeRaw(options) {\n  /**\n   * @param {Root} tree\n   *   Tree.\n   * @param {VFile} file\n   *   File.\n   * @returns {Root}\n   *   New tree.\n   */\n  return function (tree, file) {\n    // Assume root in -> root out.\n    const result = /** @type {Root} */ (raw(tree, {...options, file}))\n    return result\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC,GAED;;;CAGC;;;AAED;;AAUe,SAAS,UAAU,OAAO;IACvC;;;;;;;GAOC,GACD,OAAO,SAAU,IAAI,EAAE,IAAI;QACzB,8BAA8B;QAC9B,MAAM,SAA8B,CAAA,GAAA,+IAAA,CAAA,MAAG,AAAD,EAAE,MAAM;YAAC,GAAG,OAAO;YAAE;QAAI;QAC/D,OAAO;IACT;AACF","ignoreList":[0]}},
    {"offset": {"line": 40619, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 40625, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/shiki/node_modules/%40shikijs/engine-oniguruma/dist/index.mjs"],"sourcesContent":["class ShikiError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"ShikiError\";\n  }\n}\n\nfunction getHeapMax() {\n  return 2147483648;\n}\nfunction _emscripten_get_now() {\n  return typeof performance !== \"undefined\" ? performance.now() : Date.now();\n}\nconst alignUp = (x, multiple) => x + (multiple - x % multiple) % multiple;\nasync function main(init) {\n  let wasmMemory;\n  let buffer;\n  const binding = {};\n  function updateGlobalBufferAndViews(buf) {\n    buffer = buf;\n    binding.HEAPU8 = new Uint8Array(buf);\n    binding.HEAPU32 = new Uint32Array(buf);\n  }\n  function _emscripten_memcpy_big(dest, src, num) {\n    binding.HEAPU8.copyWithin(dest, src, src + num);\n  }\n  function emscripten_realloc_buffer(size) {\n    try {\n      wasmMemory.grow(size - buffer.byteLength + 65535 >>> 16);\n      updateGlobalBufferAndViews(wasmMemory.buffer);\n      return 1;\n    } catch {\n    }\n  }\n  function _emscripten_resize_heap(requestedSize) {\n    const oldSize = binding.HEAPU8.length;\n    requestedSize = requestedSize >>> 0;\n    const maxHeapSize = getHeapMax();\n    if (requestedSize > maxHeapSize)\n      return false;\n    for (let cutDown = 1; cutDown <= 4; cutDown *= 2) {\n      let overGrownHeapSize = oldSize * (1 + 0.2 / cutDown);\n      overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n      const newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\n      const replacement = emscripten_realloc_buffer(newSize);\n      if (replacement)\n        return true;\n    }\n    return false;\n  }\n  const UTF8Decoder = typeof TextDecoder != \"undefined\" ? new TextDecoder(\"utf8\") : undefined;\n  function UTF8ArrayToString(heapOrArray, idx, maxBytesToRead = 1024) {\n    const endIdx = idx + maxBytesToRead;\n    let endPtr = idx;\n    while (heapOrArray[endPtr] && !(endPtr >= endIdx))\n      ++endPtr;\n    if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n      return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n    }\n    let str = \"\";\n    while (idx < endPtr) {\n      let u0 = heapOrArray[idx++];\n      if (!(u0 & 128)) {\n        str += String.fromCharCode(u0);\n        continue;\n      }\n      const u1 = heapOrArray[idx++] & 63;\n      if ((u0 & 224) === 192) {\n        str += String.fromCharCode((u0 & 31) << 6 | u1);\n        continue;\n      }\n      const u2 = heapOrArray[idx++] & 63;\n      if ((u0 & 240) === 224) {\n        u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n      } else {\n        u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heapOrArray[idx++] & 63;\n      }\n      if (u0 < 65536) {\n        str += String.fromCharCode(u0);\n      } else {\n        const ch = u0 - 65536;\n        str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n      }\n    }\n    return str;\n  }\n  function UTF8ToString(ptr, maxBytesToRead) {\n    return ptr ? UTF8ArrayToString(binding.HEAPU8, ptr, maxBytesToRead) : \"\";\n  }\n  const asmLibraryArg = {\n    emscripten_get_now: _emscripten_get_now,\n    emscripten_memcpy_big: _emscripten_memcpy_big,\n    emscripten_resize_heap: _emscripten_resize_heap,\n    fd_write: () => 0\n  };\n  async function createWasm() {\n    const info = {\n      env: asmLibraryArg,\n      wasi_snapshot_preview1: asmLibraryArg\n    };\n    const exports = await init(info);\n    wasmMemory = exports.memory;\n    updateGlobalBufferAndViews(wasmMemory.buffer);\n    Object.assign(binding, exports);\n    binding.UTF8ToString = UTF8ToString;\n  }\n  await createWasm();\n  return binding;\n}\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nlet onigBinding = null;\nfunction throwLastOnigError(onigBinding2) {\n  throw new ShikiError(onigBinding2.UTF8ToString(onigBinding2.getLastOnigError()));\n}\nclass UtfString {\n  constructor(str) {\n    __publicField(this, \"utf16Length\");\n    __publicField(this, \"utf8Length\");\n    __publicField(this, \"utf16Value\");\n    __publicField(this, \"utf8Value\");\n    __publicField(this, \"utf16OffsetToUtf8\");\n    __publicField(this, \"utf8OffsetToUtf16\");\n    const utf16Length = str.length;\n    const utf8Length = UtfString._utf8ByteLength(str);\n    const computeIndicesMapping = utf8Length !== utf16Length;\n    const utf16OffsetToUtf8 = computeIndicesMapping ? new Uint32Array(utf16Length + 1) : null;\n    if (computeIndicesMapping)\n      utf16OffsetToUtf8[utf16Length] = utf8Length;\n    const utf8OffsetToUtf16 = computeIndicesMapping ? new Uint32Array(utf8Length + 1) : null;\n    if (computeIndicesMapping)\n      utf8OffsetToUtf16[utf8Length] = utf16Length;\n    const utf8Value = new Uint8Array(utf8Length);\n    let i8 = 0;\n    for (let i16 = 0; i16 < utf16Length; i16++) {\n      const charCode = str.charCodeAt(i16);\n      let codePoint = charCode;\n      let wasSurrogatePair = false;\n      if (charCode >= 55296 && charCode <= 56319) {\n        if (i16 + 1 < utf16Length) {\n          const nextCharCode = str.charCodeAt(i16 + 1);\n          if (nextCharCode >= 56320 && nextCharCode <= 57343) {\n            codePoint = (charCode - 55296 << 10) + 65536 | nextCharCode - 56320;\n            wasSurrogatePair = true;\n          }\n        }\n      }\n      if (computeIndicesMapping) {\n        utf16OffsetToUtf8[i16] = i8;\n        if (wasSurrogatePair)\n          utf16OffsetToUtf8[i16 + 1] = i8;\n        if (codePoint <= 127) {\n          utf8OffsetToUtf16[i8 + 0] = i16;\n        } else if (codePoint <= 2047) {\n          utf8OffsetToUtf16[i8 + 0] = i16;\n          utf8OffsetToUtf16[i8 + 1] = i16;\n        } else if (codePoint <= 65535) {\n          utf8OffsetToUtf16[i8 + 0] = i16;\n          utf8OffsetToUtf16[i8 + 1] = i16;\n          utf8OffsetToUtf16[i8 + 2] = i16;\n        } else {\n          utf8OffsetToUtf16[i8 + 0] = i16;\n          utf8OffsetToUtf16[i8 + 1] = i16;\n          utf8OffsetToUtf16[i8 + 2] = i16;\n          utf8OffsetToUtf16[i8 + 3] = i16;\n        }\n      }\n      if (codePoint <= 127) {\n        utf8Value[i8++] = codePoint;\n      } else if (codePoint <= 2047) {\n        utf8Value[i8++] = 192 | (codePoint & 1984) >>> 6;\n        utf8Value[i8++] = 128 | (codePoint & 63) >>> 0;\n      } else if (codePoint <= 65535) {\n        utf8Value[i8++] = 224 | (codePoint & 61440) >>> 12;\n        utf8Value[i8++] = 128 | (codePoint & 4032) >>> 6;\n        utf8Value[i8++] = 128 | (codePoint & 63) >>> 0;\n      } else {\n        utf8Value[i8++] = 240 | (codePoint & 1835008) >>> 18;\n        utf8Value[i8++] = 128 | (codePoint & 258048) >>> 12;\n        utf8Value[i8++] = 128 | (codePoint & 4032) >>> 6;\n        utf8Value[i8++] = 128 | (codePoint & 63) >>> 0;\n      }\n      if (wasSurrogatePair)\n        i16++;\n    }\n    this.utf16Length = utf16Length;\n    this.utf8Length = utf8Length;\n    this.utf16Value = str;\n    this.utf8Value = utf8Value;\n    this.utf16OffsetToUtf8 = utf16OffsetToUtf8;\n    this.utf8OffsetToUtf16 = utf8OffsetToUtf16;\n  }\n  static _utf8ByteLength(str) {\n    let result = 0;\n    for (let i = 0, len = str.length; i < len; i++) {\n      const charCode = str.charCodeAt(i);\n      let codepoint = charCode;\n      let wasSurrogatePair = false;\n      if (charCode >= 55296 && charCode <= 56319) {\n        if (i + 1 < len) {\n          const nextCharCode = str.charCodeAt(i + 1);\n          if (nextCharCode >= 56320 && nextCharCode <= 57343) {\n            codepoint = (charCode - 55296 << 10) + 65536 | nextCharCode - 56320;\n            wasSurrogatePair = true;\n          }\n        }\n      }\n      if (codepoint <= 127)\n        result += 1;\n      else if (codepoint <= 2047)\n        result += 2;\n      else if (codepoint <= 65535)\n        result += 3;\n      else\n        result += 4;\n      if (wasSurrogatePair)\n        i++;\n    }\n    return result;\n  }\n  createString(onigBinding2) {\n    const result = onigBinding2.omalloc(this.utf8Length);\n    onigBinding2.HEAPU8.set(this.utf8Value, result);\n    return result;\n  }\n}\nconst _OnigString = class {\n  constructor(str) {\n    __publicField(this, \"id\", ++_OnigString.LAST_ID);\n    __publicField(this, \"_onigBinding\");\n    __publicField(this, \"content\");\n    __publicField(this, \"utf16Length\");\n    __publicField(this, \"utf8Length\");\n    __publicField(this, \"utf16OffsetToUtf8\");\n    __publicField(this, \"utf8OffsetToUtf16\");\n    __publicField(this, \"ptr\");\n    if (!onigBinding)\n      throw new ShikiError(\"Must invoke loadWasm first.\");\n    this._onigBinding = onigBinding;\n    this.content = str;\n    const utfString = new UtfString(str);\n    this.utf16Length = utfString.utf16Length;\n    this.utf8Length = utfString.utf8Length;\n    this.utf16OffsetToUtf8 = utfString.utf16OffsetToUtf8;\n    this.utf8OffsetToUtf16 = utfString.utf8OffsetToUtf16;\n    if (this.utf8Length < 1e4 && !_OnigString._sharedPtrInUse) {\n      if (!_OnigString._sharedPtr)\n        _OnigString._sharedPtr = onigBinding.omalloc(1e4);\n      _OnigString._sharedPtrInUse = true;\n      onigBinding.HEAPU8.set(utfString.utf8Value, _OnigString._sharedPtr);\n      this.ptr = _OnigString._sharedPtr;\n    } else {\n      this.ptr = utfString.createString(onigBinding);\n    }\n  }\n  convertUtf8OffsetToUtf16(utf8Offset) {\n    if (this.utf8OffsetToUtf16) {\n      if (utf8Offset < 0)\n        return 0;\n      if (utf8Offset > this.utf8Length)\n        return this.utf16Length;\n      return this.utf8OffsetToUtf16[utf8Offset];\n    }\n    return utf8Offset;\n  }\n  convertUtf16OffsetToUtf8(utf16Offset) {\n    if (this.utf16OffsetToUtf8) {\n      if (utf16Offset < 0)\n        return 0;\n      if (utf16Offset > this.utf16Length)\n        return this.utf8Length;\n      return this.utf16OffsetToUtf8[utf16Offset];\n    }\n    return utf16Offset;\n  }\n  dispose() {\n    if (this.ptr === _OnigString._sharedPtr)\n      _OnigString._sharedPtrInUse = false;\n    else\n      this._onigBinding.ofree(this.ptr);\n  }\n};\nlet OnigString = _OnigString;\n__publicField(OnigString, \"LAST_ID\", 0);\n__publicField(OnigString, \"_sharedPtr\", 0);\n// a pointer to a string of 10000 bytes\n__publicField(OnigString, \"_sharedPtrInUse\", false);\nclass OnigScanner {\n  constructor(patterns) {\n    __publicField(this, \"_onigBinding\");\n    __publicField(this, \"_ptr\");\n    if (!onigBinding)\n      throw new ShikiError(\"Must invoke loadWasm first.\");\n    const strPtrsArr = [];\n    const strLenArr = [];\n    for (let i = 0, len = patterns.length; i < len; i++) {\n      const utfString = new UtfString(patterns[i]);\n      strPtrsArr[i] = utfString.createString(onigBinding);\n      strLenArr[i] = utfString.utf8Length;\n    }\n    const strPtrsPtr = onigBinding.omalloc(4 * patterns.length);\n    onigBinding.HEAPU32.set(strPtrsArr, strPtrsPtr / 4);\n    const strLenPtr = onigBinding.omalloc(4 * patterns.length);\n    onigBinding.HEAPU32.set(strLenArr, strLenPtr / 4);\n    const scannerPtr = onigBinding.createOnigScanner(strPtrsPtr, strLenPtr, patterns.length);\n    for (let i = 0, len = patterns.length; i < len; i++)\n      onigBinding.ofree(strPtrsArr[i]);\n    onigBinding.ofree(strLenPtr);\n    onigBinding.ofree(strPtrsPtr);\n    if (scannerPtr === 0)\n      throwLastOnigError(onigBinding);\n    this._onigBinding = onigBinding;\n    this._ptr = scannerPtr;\n  }\n  dispose() {\n    this._onigBinding.freeOnigScanner(this._ptr);\n  }\n  findNextMatchSync(string, startPosition, arg) {\n    let options = 0 /* None */;\n    if (typeof arg === \"number\") {\n      options = arg;\n    }\n    if (typeof string === \"string\") {\n      string = new OnigString(string);\n      const result = this._findNextMatchSync(string, startPosition, false, options);\n      string.dispose();\n      return result;\n    }\n    return this._findNextMatchSync(string, startPosition, false, options);\n  }\n  _findNextMatchSync(string, startPosition, debugCall, options) {\n    const onigBinding2 = this._onigBinding;\n    const resultPtr = onigBinding2.findNextOnigScannerMatch(this._ptr, string.id, string.ptr, string.utf8Length, string.convertUtf16OffsetToUtf8(startPosition), options);\n    if (resultPtr === 0) {\n      return null;\n    }\n    const HEAPU32 = onigBinding2.HEAPU32;\n    let offset = resultPtr / 4;\n    const index = HEAPU32[offset++];\n    const count = HEAPU32[offset++];\n    const captureIndices = [];\n    for (let i = 0; i < count; i++) {\n      const beg = string.convertUtf8OffsetToUtf16(HEAPU32[offset++]);\n      const end = string.convertUtf8OffsetToUtf16(HEAPU32[offset++]);\n      captureIndices[i] = {\n        start: beg,\n        end,\n        length: end - beg\n      };\n    }\n    return {\n      index,\n      captureIndices\n    };\n  }\n}\nfunction isInstantiatorOptionsObject(dataOrOptions) {\n  return typeof dataOrOptions.instantiator === \"function\";\n}\nfunction isInstantiatorModule(dataOrOptions) {\n  return typeof dataOrOptions.default === \"function\";\n}\nfunction isDataOptionsObject(dataOrOptions) {\n  return typeof dataOrOptions.data !== \"undefined\";\n}\nfunction isResponse(dataOrOptions) {\n  return typeof Response !== \"undefined\" && dataOrOptions instanceof Response;\n}\nfunction isArrayBuffer(data) {\n  return typeof ArrayBuffer !== \"undefined\" && (data instanceof ArrayBuffer || ArrayBuffer.isView(data)) || typeof Buffer !== \"undefined\" && Buffer.isBuffer?.(data) || typeof SharedArrayBuffer !== \"undefined\" && data instanceof SharedArrayBuffer || typeof Uint32Array !== \"undefined\" && data instanceof Uint32Array;\n}\nlet initPromise;\nfunction loadWasm(options) {\n  if (initPromise)\n    return initPromise;\n  async function _load() {\n    onigBinding = await main(async (info) => {\n      let instance = options;\n      instance = await instance;\n      if (typeof instance === \"function\")\n        instance = await instance(info);\n      if (typeof instance === \"function\")\n        instance = await instance(info);\n      if (isInstantiatorOptionsObject(instance)) {\n        instance = await instance.instantiator(info);\n      } else if (isInstantiatorModule(instance)) {\n        instance = await instance.default(info);\n      } else {\n        if (isDataOptionsObject(instance))\n          instance = instance.data;\n        if (isResponse(instance)) {\n          if (typeof WebAssembly.instantiateStreaming === \"function\")\n            instance = await _makeResponseStreamingLoader(instance)(info);\n          else\n            instance = await _makeResponseNonStreamingLoader(instance)(info);\n        } else if (isArrayBuffer(instance)) {\n          instance = await _makeArrayBufferLoader(instance)(info);\n        } else if (instance instanceof WebAssembly.Module) {\n          instance = await _makeArrayBufferLoader(instance)(info);\n        } else if (\"default\" in instance && instance.default instanceof WebAssembly.Module) {\n          instance = await _makeArrayBufferLoader(instance.default)(info);\n        }\n      }\n      if (\"instance\" in instance)\n        instance = instance.instance;\n      if (\"exports\" in instance)\n        instance = instance.exports;\n      return instance;\n    });\n  }\n  initPromise = _load();\n  return initPromise;\n}\nfunction _makeArrayBufferLoader(data) {\n  return (importObject) => WebAssembly.instantiate(data, importObject);\n}\nfunction _makeResponseStreamingLoader(data) {\n  return (importObject) => WebAssembly.instantiateStreaming(data, importObject);\n}\nfunction _makeResponseNonStreamingLoader(data) {\n  return async (importObject) => {\n    const arrayBuffer = await data.arrayBuffer();\n    return WebAssembly.instantiate(arrayBuffer, importObject);\n  };\n}\n\nlet _defaultWasmLoader;\nfunction setDefaultWasmLoader(_loader) {\n  _defaultWasmLoader = _loader;\n}\nfunction getDefaultWasmLoader() {\n  return _defaultWasmLoader;\n}\nasync function createOnigurumaEngine(options) {\n  if (options)\n    await loadWasm(options);\n  return {\n    createScanner(patterns) {\n      return new OnigScanner(patterns.map((p) => typeof p === \"string\" ? p : p.source));\n    },\n    createString(s) {\n      return new OnigString(s);\n    }\n  };\n}\nasync function createWasmOnigEngine(options) {\n  return createOnigurumaEngine(options);\n}\n\nexport { createOnigurumaEngine, createWasmOnigEngine, getDefaultWasmLoader, loadWasm, setDefaultWasmLoader };\n"],"names":[],"mappings":";;;;;;;AAsXmH;AAtXnH,MAAM,mBAAmB;IACvB,YAAY,OAAO,CAAE;QACnB,KAAK,CAAC;QACN,IAAI,CAAC,IAAI,GAAG;IACd;AACF;AAEA,SAAS;IACP,OAAO;AACT;AACA,SAAS;IACP,OAAO,OAAO,gBAAgB,cAAc,YAAY,GAAG,KAAK,KAAK,GAAG;AAC1E;AACA,MAAM,UAAU,CAAC,GAAG,WAAa,IAAI,CAAC,WAAW,IAAI,QAAQ,IAAI;AACjE,eAAe,KAAK,IAAI;IACtB,IAAI;IACJ,IAAI;IACJ,MAAM,UAAU,CAAC;IACjB,SAAS,2BAA2B,GAAG;QACrC,SAAS;QACT,QAAQ,MAAM,GAAG,IAAI,WAAW;QAChC,QAAQ,OAAO,GAAG,IAAI,YAAY;IACpC;IACA,SAAS,uBAAuB,IAAI,EAAE,GAAG,EAAE,GAAG;QAC5C,QAAQ,MAAM,CAAC,UAAU,CAAC,MAAM,KAAK,MAAM;IAC7C;IACA,SAAS,0BAA0B,IAAI;QACrC,IAAI;YACF,WAAW,IAAI,CAAC,OAAO,OAAO,UAAU,GAAG,UAAU;YACrD,2BAA2B,WAAW,MAAM;YAC5C,OAAO;QACT,EAAE,OAAM,CACR;IACF;IACA,SAAS,wBAAwB,aAAa;QAC5C,MAAM,UAAU,QAAQ,MAAM,CAAC,MAAM;QACrC,gBAAgB,kBAAkB;QAClC,MAAM,cAAc;QACpB,IAAI,gBAAgB,aAClB,OAAO;QACT,IAAK,IAAI,UAAU,GAAG,WAAW,GAAG,WAAW,EAAG;YAChD,IAAI,oBAAoB,UAAU,CAAC,IAAI,MAAM,OAAO;YACpD,oBAAoB,KAAK,GAAG,CAAC,mBAAmB,gBAAgB;YAChE,MAAM,UAAU,KAAK,GAAG,CAAC,aAAa,QAAQ,KAAK,GAAG,CAAC,eAAe,oBAAoB;YAC1F,MAAM,cAAc,0BAA0B;YAC9C,IAAI,aACF,OAAO;QACX;QACA,OAAO;IACT;IACA,MAAM,cAAc,OAAO,eAAe,cAAc,IAAI,YAAY,UAAU;IAClF,SAAS,kBAAkB,WAAW,EAAE,GAAG,EAAE,iBAAiB,IAAI;QAChE,MAAM,SAAS,MAAM;QACrB,IAAI,SAAS;QACb,MAAO,WAAW,CAAC,OAAO,IAAI,CAAC,CAAC,UAAU,MAAM,EAC9C,EAAE;QACJ,IAAI,SAAS,MAAM,MAAM,YAAY,MAAM,IAAI,aAAa;YAC1D,OAAO,YAAY,MAAM,CAAC,YAAY,QAAQ,CAAC,KAAK;QACtD;QACA,IAAI,MAAM;QACV,MAAO,MAAM,OAAQ;YACnB,IAAI,KAAK,WAAW,CAAC,MAAM;YAC3B,IAAI,CAAC,CAAC,KAAK,GAAG,GAAG;gBACf,OAAO,OAAO,YAAY,CAAC;gBAC3B;YACF;YACA,MAAM,KAAK,WAAW,CAAC,MAAM,GAAG;YAChC,IAAI,CAAC,KAAK,GAAG,MAAM,KAAK;gBACtB,OAAO,OAAO,YAAY,CAAC,CAAC,KAAK,EAAE,KAAK,IAAI;gBAC5C;YACF;YACA,MAAM,KAAK,WAAW,CAAC,MAAM,GAAG;YAChC,IAAI,CAAC,KAAK,GAAG,MAAM,KAAK;gBACtB,KAAK,CAAC,KAAK,EAAE,KAAK,KAAK,MAAM,IAAI;YACnC,OAAO;gBACL,KAAK,CAAC,KAAK,CAAC,KAAK,KAAK,MAAM,KAAK,MAAM,IAAI,WAAW,CAAC,MAAM,GAAG;YAClE;YACA,IAAI,KAAK,OAAO;gBACd,OAAO,OAAO,YAAY,CAAC;YAC7B,OAAO;gBACL,MAAM,KAAK,KAAK;gBAChB,OAAO,OAAO,YAAY,CAAC,QAAQ,MAAM,IAAI,QAAQ,KAAK;YAC5D;QACF;QACA,OAAO;IACT;IACA,SAAS,aAAa,GAAG,EAAE,cAAc;QACvC,OAAO,MAAM,kBAAkB,QAAQ,MAAM,EAAE,KAAK,kBAAkB;IACxE;IACA,MAAM,gBAAgB;QACpB,oBAAoB;QACpB,uBAAuB;QACvB,wBAAwB;QACxB,UAAU,IAAM;IAClB;IACA,eAAe;QACb,MAAM,OAAO;YACX,KAAK;YACL,wBAAwB;QAC1B;QACA,MAAM,UAAU,MAAM,KAAK;QAC3B,aAAa,QAAQ,MAAM;QAC3B,2BAA2B,WAAW,MAAM;QAC5C,OAAO,MAAM,CAAC,SAAS;QACvB,QAAQ,YAAY,GAAG;IACzB;IACA,MAAM;IACN,OAAO;AACT;AAEA,IAAI,YAAY,OAAO,cAAc;AACrC,IAAI,kBAAkB,CAAC,KAAK,KAAK,QAAU,OAAO,MAAM,UAAU,KAAK,KAAK;QAAE,YAAY;QAAM,cAAc;QAAM,UAAU;QAAM;IAAM,KAAK,GAAG,CAAC,IAAI,GAAG;AAC1J,IAAI,gBAAgB,CAAC,KAAK,KAAK;IAC7B,gBAAgB,KAAK,OAAO,QAAQ,WAAW,MAAM,KAAK,KAAK;IAC/D,OAAO;AACT;AACA,IAAI,cAAc;AAClB,SAAS,mBAAmB,YAAY;IACtC,MAAM,IAAI,WAAW,aAAa,YAAY,CAAC,aAAa,gBAAgB;AAC9E;AACA,MAAM;IACJ,YAAY,GAAG,CAAE;QACf,cAAc,IAAI,EAAE;QACpB,cAAc,IAAI,EAAE;QACpB,cAAc,IAAI,EAAE;QACpB,cAAc,IAAI,EAAE;QACpB,cAAc,IAAI,EAAE;QACpB,cAAc,IAAI,EAAE;QACpB,MAAM,cAAc,IAAI,MAAM;QAC9B,MAAM,aAAa,UAAU,eAAe,CAAC;QAC7C,MAAM,wBAAwB,eAAe;QAC7C,MAAM,oBAAoB,wBAAwB,IAAI,YAAY,cAAc,KAAK;QACrF,IAAI,uBACF,iBAAiB,CAAC,YAAY,GAAG;QACnC,MAAM,oBAAoB,wBAAwB,IAAI,YAAY,aAAa,KAAK;QACpF,IAAI,uBACF,iBAAiB,CAAC,WAAW,GAAG;QAClC,MAAM,YAAY,IAAI,WAAW;QACjC,IAAI,KAAK;QACT,IAAK,IAAI,MAAM,GAAG,MAAM,aAAa,MAAO;YAC1C,MAAM,WAAW,IAAI,UAAU,CAAC;YAChC,IAAI,YAAY;YAChB,IAAI,mBAAmB;YACvB,IAAI,YAAY,SAAS,YAAY,OAAO;gBAC1C,IAAI,MAAM,IAAI,aAAa;oBACzB,MAAM,eAAe,IAAI,UAAU,CAAC,MAAM;oBAC1C,IAAI,gBAAgB,SAAS,gBAAgB,OAAO;wBAClD,YAAY,CAAC,WAAW,SAAS,EAAE,IAAI,QAAQ,eAAe;wBAC9D,mBAAmB;oBACrB;gBACF;YACF;YACA,IAAI,uBAAuB;gBACzB,iBAAiB,CAAC,IAAI,GAAG;gBACzB,IAAI,kBACF,iBAAiB,CAAC,MAAM,EAAE,GAAG;gBAC/B,IAAI,aAAa,KAAK;oBACpB,iBAAiB,CAAC,KAAK,EAAE,GAAG;gBAC9B,OAAO,IAAI,aAAa,MAAM;oBAC5B,iBAAiB,CAAC,KAAK,EAAE,GAAG;oBAC5B,iBAAiB,CAAC,KAAK,EAAE,GAAG;gBAC9B,OAAO,IAAI,aAAa,OAAO;oBAC7B,iBAAiB,CAAC,KAAK,EAAE,GAAG;oBAC5B,iBAAiB,CAAC,KAAK,EAAE,GAAG;oBAC5B,iBAAiB,CAAC,KAAK,EAAE,GAAG;gBAC9B,OAAO;oBACL,iBAAiB,CAAC,KAAK,EAAE,GAAG;oBAC5B,iBAAiB,CAAC,KAAK,EAAE,GAAG;oBAC5B,iBAAiB,CAAC,KAAK,EAAE,GAAG;oBAC5B,iBAAiB,CAAC,KAAK,EAAE,GAAG;gBAC9B;YACF;YACA,IAAI,aAAa,KAAK;gBACpB,SAAS,CAAC,KAAK,GAAG;YACpB,OAAO,IAAI,aAAa,MAAM;gBAC5B,SAAS,CAAC,KAAK,GAAG,MAAM,CAAC,YAAY,IAAI,MAAM;gBAC/C,SAAS,CAAC,KAAK,GAAG,MAAM,CAAC,YAAY,EAAE,MAAM;YAC/C,OAAO,IAAI,aAAa,OAAO;gBAC7B,SAAS,CAAC,KAAK,GAAG,MAAM,CAAC,YAAY,KAAK,MAAM;gBAChD,SAAS,CAAC,KAAK,GAAG,MAAM,CAAC,YAAY,IAAI,MAAM;gBAC/C,SAAS,CAAC,KAAK,GAAG,MAAM,CAAC,YAAY,EAAE,MAAM;YAC/C,OAAO;gBACL,SAAS,CAAC,KAAK,GAAG,MAAM,CAAC,YAAY,OAAO,MAAM;gBAClD,SAAS,CAAC,KAAK,GAAG,MAAM,CAAC,YAAY,MAAM,MAAM;gBACjD,SAAS,CAAC,KAAK,GAAG,MAAM,CAAC,YAAY,IAAI,MAAM;gBAC/C,SAAS,CAAC,KAAK,GAAG,MAAM,CAAC,YAAY,EAAE,MAAM;YAC/C;YACA,IAAI,kBACF;QACJ;QACA,IAAI,CAAC,WAAW,GAAG;QACnB,IAAI,CAAC,UAAU,GAAG;QAClB,IAAI,CAAC,UAAU,GAAG;QAClB,IAAI,CAAC,SAAS,GAAG;QACjB,IAAI,CAAC,iBAAiB,GAAG;QACzB,IAAI,CAAC,iBAAiB,GAAG;IAC3B;IACA,OAAO,gBAAgB,GAAG,EAAE;QAC1B,IAAI,SAAS;QACb,IAAK,IAAI,IAAI,GAAG,MAAM,IAAI,MAAM,EAAE,IAAI,KAAK,IAAK;YAC9C,MAAM,WAAW,IAAI,UAAU,CAAC;YAChC,IAAI,YAAY;YAChB,IAAI,mBAAmB;YACvB,IAAI,YAAY,SAAS,YAAY,OAAO;gBAC1C,IAAI,IAAI,IAAI,KAAK;oBACf,MAAM,eAAe,IAAI,UAAU,CAAC,IAAI;oBACxC,IAAI,gBAAgB,SAAS,gBAAgB,OAAO;wBAClD,YAAY,CAAC,WAAW,SAAS,EAAE,IAAI,QAAQ,eAAe;wBAC9D,mBAAmB;oBACrB;gBACF;YACF;YACA,IAAI,aAAa,KACf,UAAU;iBACP,IAAI,aAAa,MACpB,UAAU;iBACP,IAAI,aAAa,OACpB,UAAU;iBAEV,UAAU;YACZ,IAAI,kBACF;QACJ;QACA,OAAO;IACT;IACA,aAAa,YAAY,EAAE;QACzB,MAAM,SAAS,aAAa,OAAO,CAAC,IAAI,CAAC,UAAU;QACnD,aAAa,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE;QACxC,OAAO;IACT;AACF;AACA,MAAM,cAAc;IAClB,YAAY,GAAG,CAAE;QACf,cAAc,IAAI,EAAE,MAAM,EAAE,YAAY,OAAO;QAC/C,cAAc,IAAI,EAAE;QACpB,cAAc,IAAI,EAAE;QACpB,cAAc,IAAI,EAAE;QACpB,cAAc,IAAI,EAAE;QACpB,cAAc,IAAI,EAAE;QACpB,cAAc,IAAI,EAAE;QACpB,cAAc,IAAI,EAAE;QACpB,IAAI,CAAC,aACH,MAAM,IAAI,WAAW;QACvB,IAAI,CAAC,YAAY,GAAG;QACpB,IAAI,CAAC,OAAO,GAAG;QACf,MAAM,YAAY,IAAI,UAAU;QAChC,IAAI,CAAC,WAAW,GAAG,UAAU,WAAW;QACxC,IAAI,CAAC,UAAU,GAAG,UAAU,UAAU;QACtC,IAAI,CAAC,iBAAiB,GAAG,UAAU,iBAAiB;QACpD,IAAI,CAAC,iBAAiB,GAAG,UAAU,iBAAiB;QACpD,IAAI,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,YAAY,eAAe,EAAE;YACzD,IAAI,CAAC,YAAY,UAAU,EACzB,YAAY,UAAU,GAAG,YAAY,OAAO,CAAC;YAC/C,YAAY,eAAe,GAAG;YAC9B,YAAY,MAAM,CAAC,GAAG,CAAC,UAAU,SAAS,EAAE,YAAY,UAAU;YAClE,IAAI,CAAC,GAAG,GAAG,YAAY,UAAU;QACnC,OAAO;YACL,IAAI,CAAC,GAAG,GAAG,UAAU,YAAY,CAAC;QACpC;IACF;IACA,yBAAyB,UAAU,EAAE;QACnC,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAC1B,IAAI,aAAa,GACf,OAAO;YACT,IAAI,aAAa,IAAI,CAAC,UAAU,EAC9B,OAAO,IAAI,CAAC,WAAW;YACzB,OAAO,IAAI,CAAC,iBAAiB,CAAC,WAAW;QAC3C;QACA,OAAO;IACT;IACA,yBAAyB,WAAW,EAAE;QACpC,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAC1B,IAAI,cAAc,GAChB,OAAO;YACT,IAAI,cAAc,IAAI,CAAC,WAAW,EAChC,OAAO,IAAI,CAAC,UAAU;YACxB,OAAO,IAAI,CAAC,iBAAiB,CAAC,YAAY;QAC5C;QACA,OAAO;IACT;IACA,UAAU;QACR,IAAI,IAAI,CAAC,GAAG,KAAK,YAAY,UAAU,EACrC,YAAY,eAAe,GAAG;aAE9B,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG;IACpC;AACF;AACA,IAAI,aAAa;AACjB,cAAc,YAAY,WAAW;AACrC,cAAc,YAAY,cAAc;AACxC,uCAAuC;AACvC,cAAc,YAAY,mBAAmB;AAC7C,MAAM;IACJ,YAAY,QAAQ,CAAE;QACpB,cAAc,IAAI,EAAE;QACpB,cAAc,IAAI,EAAE;QACpB,IAAI,CAAC,aACH,MAAM,IAAI,WAAW;QACvB,MAAM,aAAa,EAAE;QACrB,MAAM,YAAY,EAAE;QACpB,IAAK,IAAI,IAAI,GAAG,MAAM,SAAS,MAAM,EAAE,IAAI,KAAK,IAAK;YACnD,MAAM,YAAY,IAAI,UAAU,QAAQ,CAAC,EAAE;YAC3C,UAAU,CAAC,EAAE,GAAG,UAAU,YAAY,CAAC;YACvC,SAAS,CAAC,EAAE,GAAG,UAAU,UAAU;QACrC;QACA,MAAM,aAAa,YAAY,OAAO,CAAC,IAAI,SAAS,MAAM;QAC1D,YAAY,OAAO,CAAC,GAAG,CAAC,YAAY,aAAa;QACjD,MAAM,YAAY,YAAY,OAAO,CAAC,IAAI,SAAS,MAAM;QACzD,YAAY,OAAO,CAAC,GAAG,CAAC,WAAW,YAAY;QAC/C,MAAM,aAAa,YAAY,iBAAiB,CAAC,YAAY,WAAW,SAAS,MAAM;QACvF,IAAK,IAAI,IAAI,GAAG,MAAM,SAAS,MAAM,EAAE,IAAI,KAAK,IAC9C,YAAY,KAAK,CAAC,UAAU,CAAC,EAAE;QACjC,YAAY,KAAK,CAAC;QAClB,YAAY,KAAK,CAAC;QAClB,IAAI,eAAe,GACjB,mBAAmB;QACrB,IAAI,CAAC,YAAY,GAAG;QACpB,IAAI,CAAC,IAAI,GAAG;IACd;IACA,UAAU;QACR,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI;IAC7C;IACA,kBAAkB,MAAM,EAAE,aAAa,EAAE,GAAG,EAAE;QAC5C,IAAI,UAAU,EAAE,QAAQ;QACxB,IAAI,OAAO,QAAQ,UAAU;YAC3B,UAAU;QACZ;QACA,IAAI,OAAO,WAAW,UAAU;YAC9B,SAAS,IAAI,WAAW;YACxB,MAAM,SAAS,IAAI,CAAC,kBAAkB,CAAC,QAAQ,eAAe,OAAO;YACrE,OAAO,OAAO;YACd,OAAO;QACT;QACA,OAAO,IAAI,CAAC,kBAAkB,CAAC,QAAQ,eAAe,OAAO;IAC/D;IACA,mBAAmB,MAAM,EAAE,aAAa,EAAE,SAAS,EAAE,OAAO,EAAE;QAC5D,MAAM,eAAe,IAAI,CAAC,YAAY;QACtC,MAAM,YAAY,aAAa,wBAAwB,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,EAAE,OAAO,GAAG,EAAE,OAAO,UAAU,EAAE,OAAO,wBAAwB,CAAC,gBAAgB;QAC7J,IAAI,cAAc,GAAG;YACnB,OAAO;QACT;QACA,MAAM,UAAU,aAAa,OAAO;QACpC,IAAI,SAAS,YAAY;QACzB,MAAM,QAAQ,OAAO,CAAC,SAAS;QAC/B,MAAM,QAAQ,OAAO,CAAC,SAAS;QAC/B,MAAM,iBAAiB,EAAE;QACzB,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,IAAK;YAC9B,MAAM,MAAM,OAAO,wBAAwB,CAAC,OAAO,CAAC,SAAS;YAC7D,MAAM,MAAM,OAAO,wBAAwB,CAAC,OAAO,CAAC,SAAS;YAC7D,cAAc,CAAC,EAAE,GAAG;gBAClB,OAAO;gBACP;gBACA,QAAQ,MAAM;YAChB;QACF;QACA,OAAO;YACL;YACA;QACF;IACF;AACF;AACA,SAAS,4BAA4B,aAAa;IAChD,OAAO,OAAO,cAAc,YAAY,KAAK;AAC/C;AACA,SAAS,qBAAqB,aAAa;IACzC,OAAO,OAAO,cAAc,OAAO,KAAK;AAC1C;AACA,SAAS,oBAAoB,aAAa;IACxC,OAAO,OAAO,cAAc,IAAI,KAAK;AACvC;AACA,SAAS,WAAW,aAAa;IAC/B,OAAO,OAAO,aAAa,eAAe,yBAAyB;AACrE;AACA,SAAS,cAAc,IAAI;IACzB,OAAO,OAAO,gBAAgB,eAAe,CAAC,gBAAgB,eAAe,YAAY,MAAM,CAAC,KAAK,KAAK,OAAO,uJAAA,CAAA,SAAM,KAAK,eAAe,uJAAA,CAAA,SAAM,CAAC,QAAQ,GAAG,SAAS,OAAO,sBAAsB,eAAe,gBAAgB,qBAAqB,OAAO,gBAAgB,eAAe,gBAAgB;AAC/S;AACA,IAAI;AACJ,SAAS,SAAS,OAAO;IACvB,IAAI,aACF,OAAO;IACT,eAAe;QACb,cAAc,MAAM,KAAK,OAAO;YAC9B,IAAI,WAAW;YACf,WAAW,MAAM;YACjB,IAAI,OAAO,aAAa,YACtB,WAAW,MAAM,SAAS;YAC5B,IAAI,OAAO,aAAa,YACtB,WAAW,MAAM,SAAS;YAC5B,IAAI,4BAA4B,WAAW;gBACzC,WAAW,MAAM,SAAS,YAAY,CAAC;YACzC,OAAO,IAAI,qBAAqB,WAAW;gBACzC,WAAW,MAAM,SAAS,OAAO,CAAC;YACpC,OAAO;gBACL,IAAI,oBAAoB,WACtB,WAAW,SAAS,IAAI;gBAC1B,IAAI,WAAW,WAAW;oBACxB,IAAI,OAAO,YAAY,oBAAoB,KAAK,YAC9C,WAAW,MAAM,6BAA6B,UAAU;yBAExD,WAAW,MAAM,gCAAgC,UAAU;gBAC/D,OAAO,IAAI,cAAc,WAAW;oBAClC,WAAW,MAAM,uBAAuB,UAAU;gBACpD,OAAO,IAAI,oBAAoB,YAAY,MAAM,EAAE;oBACjD,WAAW,MAAM,uBAAuB,UAAU;gBACpD,OAAO,IAAI,aAAa,YAAY,SAAS,OAAO,YAAY,YAAY,MAAM,EAAE;oBAClF,WAAW,MAAM,uBAAuB,SAAS,OAAO,EAAE;gBAC5D;YACF;YACA,IAAI,cAAc,UAChB,WAAW,SAAS,QAAQ;YAC9B,IAAI,aAAa,UACf,WAAW,SAAS,OAAO;YAC7B,OAAO;QACT;IACF;IACA,cAAc;IACd,OAAO;AACT;AACA,SAAS,uBAAuB,IAAI;IAClC,OAAO,CAAC,eAAiB,YAAY,WAAW,CAAC,MAAM;AACzD;AACA,SAAS,6BAA6B,IAAI;IACxC,OAAO,CAAC,eAAiB,YAAY,oBAAoB,CAAC,MAAM;AAClE;AACA,SAAS,gCAAgC,IAAI;IAC3C,OAAO,OAAO;QACZ,MAAM,cAAc,MAAM,KAAK,WAAW;QAC1C,OAAO,YAAY,WAAW,CAAC,aAAa;IAC9C;AACF;AAEA,IAAI;AACJ,SAAS,qBAAqB,OAAO;IACnC,qBAAqB;AACvB;AACA,SAAS;IACP,OAAO;AACT;AACA,eAAe,sBAAsB,OAAO;IAC1C,IAAI,SACF,MAAM,SAAS;IACjB,OAAO;QACL,eAAc,QAAQ;YACpB,OAAO,IAAI,YAAY,SAAS,GAAG,CAAC,CAAC,IAAM,OAAO,MAAM,WAAW,IAAI,EAAE,MAAM;QACjF;QACA,cAAa,CAAC;YACZ,OAAO,IAAI,WAAW;QACxB;IACF;AACF;AACA,eAAe,qBAAqB,OAAO;IACzC,OAAO,sBAAsB;AAC/B","ignoreList":[0]}},
    {"offset": {"line": 41059, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 41065, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/shiki/node_modules/%40shikijs/types/dist/index.mjs"],"sourcesContent":["class ShikiError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"ShikiError\";\n  }\n}\n\nexport { ShikiError };\n"],"names":[],"mappings":";;;AAAA,MAAM,mBAAmB;IACvB,YAAY,OAAO,CAAE;QACnB,KAAK,CAAC;QACN,IAAI,CAAC,IAAI,GAAG;IACd;AACF","ignoreList":[0]}},
    {"offset": {"line": 41078, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 41084, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/shiki/node_modules/regex/src/subclass.js"],"sourcesContent":["import {Context, replaceUnescaped} from 'regex-utilities';\n\n// This marker was chosen because it's impossible to match (so its extemely unlikely to be used in\n// a user-provided regex); it's not at risk of being optimized away, transformed, or flagged as an\n// error by a plugin; and it ends with an unquantifiable token\nconst emulationGroupMarker = '$E$';\n// Note: Emulation groups with transfer are also supported. They look like `($N$E$…)` where `N` is\n// an integer 1 or greater. They're not used directly by Regex+ but can be used by plugins and\n// libraries that use Regex+ internals. Emulation groups with transfer are not only excluded from\n// match results, but additionally transfer their match to the group specified by `N`\n\n/**\nWorks the same as JavaScript's native `RegExp` constructor in all contexts, but automatically\nadjusts matches and subpattern indices (with flag `d`) to account for injected emulation groups.\n*/\nclass RegExpSubclass extends RegExp {\n  // Avoid `#private` to allow for subclassing\n  /**\n  @private\n  @type {Array<{\n    exclude: boolean;\n    transfer?: number;\n  }> | undefined}\n  */\n  _captureMap;\n  /**\n  @private\n  @type {Record<number, string> | undefined}\n  */\n  _namesByIndex;\n  /**\n  @param {string | RegExpSubclass} expression\n  @param {string} [flags]\n  @param {{useEmulationGroups: boolean;}} [options]\n  */\n  constructor(expression, flags, options) {\n    if (expression instanceof RegExp && options) {\n      throw new Error('Cannot provide options when copying a regexp');\n    }\n    const useEmulationGroups = !!options?.useEmulationGroups;\n    const unmarked = useEmulationGroups ? unmarkEmulationGroups(expression) : null;\n    super(unmarked?.expression || expression, flags);\n    // The third argument `options` isn't provided when regexes are copied as part of the internal\n    // handling of string methods `matchAll` and `split`\n    const src = useEmulationGroups ? unmarked : (expression instanceof RegExpSubclass ? expression : null);\n    if (src) {\n      this._captureMap = src._captureMap;\n      this._namesByIndex = src._namesByIndex;\n    }\n  }\n  /**\n  Called internally by all String/RegExp methods that use regexes.\n  @override\n  @param {string} str\n  @returns {RegExpExecArray | null}\n  */\n  exec(str) {\n    const match = RegExp.prototype.exec.call(this, str);\n    if (!match || !this._captureMap) {\n      return match;\n    }\n    const matchCopy = [...match];\n    // Empty all but the first value of the array while preserving its other properties\n    match.length = 1;\n    let indicesCopy;\n    if (this.hasIndices) {\n      indicesCopy = [...match.indices];\n      match.indices.length = 1;\n    }\n    for (let i = 1; i < matchCopy.length; i++) {\n      if (this._captureMap[i].exclude) {\n        const transfer = this._captureMap[i].transfer;\n        if (transfer && match.length > transfer) {\n          match[transfer] = matchCopy[i];\n          const transferName = this._namesByIndex[transfer];\n          if (transferName) {\n            match.groups[transferName] = matchCopy[i];\n            if (this.hasIndices) {\n              match.indices.groups[transferName] = indicesCopy[i];\n            }\n          }\n          if (this.hasIndices) {\n            match.indices[transfer] = indicesCopy[i];\n          }\n        }\n      } else {\n        match.push(matchCopy[i]);\n        if (this.hasIndices) {\n          match.indices.push(indicesCopy[i]);\n        }\n      }\n    }\n    return match;\n  }\n}\n\n/**\nBuild the capturing group map (with emulation groups marked to indicate their submatches shouldn't\nappear in results), and remove the markers for captures that were added to emulate extended syntax.\n@param {string} expression\n@returns {{\n  _captureMap: Array<{\n    exclude: boolean;\n    transfer?: number;\n  }>;\n  _namesByIndex: Record<number, string>;\n  expression: string;\n}}\n*/\nfunction unmarkEmulationGroups(expression) {\n  const marker = emulationGroupMarker.replace(/\\$/g, '\\\\$');\n  const _captureMap = [{exclude: false}];\n  const _namesByIndex = {0: ''};\n  let realCaptureNum = 0;\n  expression = replaceUnescaped(\n    expression,\n    String.raw`\\((?:(?!\\?)|\\?<(?![=!])(?<name>[^>]+)>)(?<mark>(?:\\$(?<transfer>[1-9]\\d*))?${marker})?`,\n    ({0: m, groups: {name, mark, transfer}}) => {\n      if (mark) {\n        _captureMap.push({\n          exclude: true,\n          transfer: transfer && +transfer,\n        });\n        return m.slice(0, -mark.length);\n      }\n      realCaptureNum++;\n      if (name) {\n        _namesByIndex[realCaptureNum] = name;\n      }\n      _captureMap.push({\n        exclude: false,\n      });\n      return m;\n    },\n    Context.DEFAULT\n  );\n  return {\n    _captureMap,\n    _namesByIndex,\n    expression,\n  };\n}\n\nexport {\n  emulationGroupMarker,\n  RegExpSubclass,\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 41231, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 41237, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/shiki/node_modules/regex/src/utils-internals.js"],"sourcesContent":["// Separating some utils for improved tree shaking of the `./internals` export\n\nconst noncapturingDelim = String.raw`\\(\\?(?:[:=!>A-Za-z\\-]|<[=!]|\\(DEFINE\\))`;\n\n/**\n@param {string} str\n@param {number} pos\n@param {string} oldValue\n@param {string} newValue\n@returns {string}\n*/\nfunction spliceStr(str, pos, oldValue, newValue) {\n  return str.slice(0, pos) + newValue + str.slice(pos + oldValue.length);\n}\n\nexport {\n  noncapturingDelim,\n  spliceStr,\n};\n"],"names":[],"mappings":"AAAA,8EAA8E;;;;;AAE9E,MAAM,oBAAoB,OAAO,GAAG,CAAC,uCAAuC,CAAC;AAE7E;;;;;;AAMA,GACA,SAAS,UAAU,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,QAAQ;IAC7C,OAAO,IAAI,KAAK,CAAC,GAAG,OAAO,WAAW,IAAI,KAAK,CAAC,MAAM,SAAS,MAAM;AACvE","ignoreList":[0]}},
    {"offset": {"line": 41256, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 41262, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/shiki/node_modules/regex/src/atomic.js"],"sourcesContent":["import {emulationGroupMarker} from './subclass.js';\nimport {noncapturingDelim, spliceStr} from './utils-internals.js';\nimport {Context, replaceUnescaped} from 'regex-utilities';\n\nconst atomicPluginToken = new RegExp(String.raw`(?<noncapturingStart>${noncapturingDelim})|(?<capturingStart>\\((?:\\?<[^>]+>)?)|\\\\?.`, 'gsu');\n\n/**\nApply transformations for atomic groups: `(?>…)`.\n@param {string} expression\n@param {import('./regex.js').PluginData} [data]\n@returns {string}\n*/\nfunction atomic(expression, data) {\n  if (!/\\(\\?>/.test(expression)) {\n    return expression;\n  }\n  const aGDelim = '(?>';\n  const emulatedAGDelim = `(?:(?=(${data?.useEmulationGroups ? emulationGroupMarker : ''}`;\n  const captureNumMap = [0];\n  let numCapturesBeforeAG = 0;\n  let numAGs = 0;\n  let aGPos = NaN;\n  let hasProcessedAG;\n  do {\n    hasProcessedAG = false;\n    let numCharClassesOpen = 0;\n    let numGroupsOpenInAG = 0;\n    let inAG = false;\n    let match;\n    atomicPluginToken.lastIndex = Number.isNaN(aGPos) ? 0 : aGPos + emulatedAGDelim.length;\n    while (match = atomicPluginToken.exec(expression)) {\n      const {0: m, index, groups: {capturingStart, noncapturingStart}} = match;\n      if (m === '[') {\n        numCharClassesOpen++;\n      } else if (!numCharClassesOpen) {\n\n        if (m === aGDelim && !inAG) {\n          aGPos = index;\n          inAG = true;\n        } else if (inAG && noncapturingStart) {\n          numGroupsOpenInAG++;\n        } else if (capturingStart) {\n          if (inAG) {\n            numGroupsOpenInAG++;\n          } else {\n            numCapturesBeforeAG++;\n            captureNumMap.push(numCapturesBeforeAG + numAGs);\n          }\n        } else if (m === ')' && inAG) {\n          if (!numGroupsOpenInAG) {\n            numAGs++;\n            // Replace `expression` and use `<$$N>` as a temporary wrapper for the backref so it\n            // can avoid backref renumbering afterward. Need to wrap the whole substitution\n            // (including the lookahead and following backref) in a noncapturing group to handle\n            // following quantifiers and literal digits\n            expression = `${expression.slice(0, aGPos)}${emulatedAGDelim}${\n                expression.slice(aGPos + aGDelim.length, index)\n              }))<$$${numAGs + numCapturesBeforeAG}>)${expression.slice(index + 1)}`;\n            hasProcessedAG = true;\n            break;\n          }\n          numGroupsOpenInAG--;\n        }\n\n      } else if (m === ']') {\n        numCharClassesOpen--;\n      }\n    }\n  // Start over from the beginning of the last atomic group's contents, in case the processed group\n  // contains additional atomic groups\n  } while (hasProcessedAG);\n\n  // Second pass to adjust numbered backrefs\n  expression = replaceUnescaped(\n    expression,\n    String.raw`\\\\(?<backrefNum>[1-9]\\d*)|<\\$\\$(?<wrappedBackrefNum>\\d+)>`,\n    ({0: m, groups: {backrefNum, wrappedBackrefNum}}) => {\n      if (backrefNum) {\n        const bNum = +backrefNum;\n        if (bNum > captureNumMap.length - 1) {\n          throw new Error(`Backref \"${m}\" greater than number of captures`);\n        }\n        return `\\\\${captureNumMap[bNum]}`;\n      }\n      return `\\\\${wrappedBackrefNum}`;\n    },\n    Context.DEFAULT\n  );\n  return expression;\n}\n\nconst baseQuantifier = String.raw`(?:[?*+]|\\{\\d+(?:,\\d*)?\\})`;\n// Complete tokenizer for base syntax; doesn't (need to) know about character-class-only syntax\nconst possessivePluginToken = new RegExp(String.raw`\n\\\\(?: \\d+\n  | c[A-Za-z]\n  | [gk]<[^>]+>\n  | [pPu]\\{[^\\}]+\\}\n  | u[A-Fa-f\\d]{4}\n  | x[A-Fa-f\\d]{2}\n  )\n| \\((?: \\? (?: [:=!>]\n  | <(?:[=!]|[^>]+>)\n  | [A-Za-z\\-]+:\n  | \\(DEFINE\\)\n  ))?\n| (?<qBase>${baseQuantifier})(?<qMod>[?+]?)(?<invalidQ>[?*+\\{]?)\n| \\\\?.\n`.replace(/\\s+/g, ''), 'gsu');\n\n/**\nTransform posessive quantifiers into atomic groups. The posessessive quantifiers are:\n`?+`, `*+`, `++`, `{N}+`, `{N,}+`, `{N,N}+`.\nThis follows Java, PCRE, Perl, and Python.\nPossessive quantifiers in Oniguruma and Onigmo are only: `?+`, `*+`, `++`.\n@param {string} expression\n@returns {string}\n*/\nfunction possessive(expression) {\n  if (!(new RegExp(`${baseQuantifier}\\\\+`).test(expression))) {\n    return expression;\n  }\n  const openGroupIndices = [];\n  let lastGroupIndex = null;\n  let lastCharClassIndex = null;\n  let lastToken = '';\n  let numCharClassesOpen = 0;\n  let match;\n  possessivePluginToken.lastIndex = 0;\n  while (match = possessivePluginToken.exec(expression)) {\n    const {0: m, index, groups: {qBase, qMod, invalidQ}} = match;\n    if (m === '[') {\n      if (!numCharClassesOpen) {\n        lastCharClassIndex = index;\n      }\n      numCharClassesOpen++;\n    } else if (m === ']') {\n      if (numCharClassesOpen) {\n        numCharClassesOpen--;\n      // Unmatched `]`\n      } else {\n        lastCharClassIndex = null;\n      }\n    } else if (!numCharClassesOpen) {\n\n      if (qMod === '+' && lastToken && !lastToken.startsWith('(')) {\n        // Invalid following quantifier would become valid via the wrapping group\n        if (invalidQ) {\n          throw new Error(`Invalid quantifier \"${m}\"`);\n        }\n        let charsAdded = -1; // -1 for removed trailing `+`\n        // Possessivizing fixed repetition quantifiers like `{2}` does't change their behavior, so\n        // avoid doing so (convert them to greedy)\n        if (/^\\{\\d+\\}$/.test(qBase)) {\n          expression = spliceStr(expression, index + qBase.length, qMod, '');\n        } else {\n          if (lastToken === ')' || lastToken === ']') {\n            const nodeIndex = lastToken === ')' ? lastGroupIndex : lastCharClassIndex;\n            // Unmatched `)` would break out of the wrapping group and mess with handling.\n            // Unmatched `]` wouldn't be a problem, but it's unnecessary to have dedicated support\n            // for unescaped `]++` since this won't work with flag u or v anyway\n            if (nodeIndex === null) {\n              throw new Error(`Invalid unmatched \"${lastToken}\"`);\n            }\n            expression = `${expression.slice(0, nodeIndex)}(?>${expression.slice(nodeIndex, index)}${qBase})${expression.slice(index + m.length)}`;\n          } else {\n            expression = `${expression.slice(0, index - lastToken.length)}(?>${lastToken}${qBase})${expression.slice(index + m.length)}`;\n          }\n          charsAdded += 4; // `(?>)`\n        }\n        possessivePluginToken.lastIndex += charsAdded;\n      } else if (m[0] === '(') {\n        openGroupIndices.push(index);\n      } else if (m === ')') {\n        lastGroupIndex = openGroupIndices.length ? openGroupIndices.pop() : null;\n      }\n\n    }\n    lastToken = m;\n  }\n  return expression;\n}\n\nexport {\n  atomic,\n  possessive,\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 41439, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 41445, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 41451, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 41467, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/shiki/node_modules/regex-recursion/src/index.js"],"sourcesContent":["import {Context, forEachUnescaped, getGroupContents, hasUnescaped, replaceUnescaped} from 'regex-utilities';\nimport {emulationGroupMarker} from 'regex/internals';\n\nconst r = String.raw;\nconst gRToken = r`\\\\g<(?<gRNameOrNum>[^>&]+)&R=(?<gRDepth>[^>]+)>`;\nconst recursiveToken = r`\\(\\?R=(?<rDepth>[^\\)]+)\\)|${gRToken}`;\nconst namedCapturingDelim = r`\\(\\?<(?![=!])(?<captureName>[^>]+)>`;\nconst token = new RegExp(r`${namedCapturingDelim}|${recursiveToken}|\\(\\?|\\\\?.`, 'gsu');\nconst overlappingRecursionMsg = 'Cannot use multiple overlapping recursions';\n// Support emulation groups with transfer marker prefix\nconst emulationGroupMarkerRe = new RegExp(r`(?:\\$[1-9]\\d*)?${emulationGroupMarker.replace(/\\$/g, r`\\$`)}`, 'y');\n\n/**\n@param {string} expression\n@param {{\n  flags?: string;\n  useEmulationGroups?: boolean;\n}} [data]\n@returns {string}\n*/\nexport function recursion(expression, data) {\n  // Keep the initial fail-check (which avoids unneeded processing) as fast as possible by testing\n  // without the accuracy improvement of using `hasUnescaped` with default `Context`\n  if (!(new RegExp(recursiveToken, 'su').test(expression))) {\n    return expression;\n  }\n  if (hasUnescaped(expression, r`\\(\\?\\(DEFINE\\)`, Context.DEFAULT)) {\n    throw new Error('DEFINE groups cannot be used with recursion');\n  }\n  const useEmulationGroups = !!data?.useEmulationGroups;\n  const hasNumberedBackref = hasUnescaped(expression, r`\\\\[1-9]`, Context.DEFAULT);\n  const groupContentsStartPos = new Map();\n  const openGroups = [];\n  let hasRecursed = false;\n  let numCharClassesOpen = 0;\n  let numCaptures = 0;\n  let match;\n  token.lastIndex = 0;\n  while ((match = token.exec(expression))) {\n    const {0: m, groups: {captureName, rDepth, gRNameOrNum, gRDepth}} = match;\n    if (m === '[') {\n      numCharClassesOpen++;\n    } else if (!numCharClassesOpen) {\n\n      // `(?R=N)`\n      if (rDepth) {\n        assertMaxInBounds(rDepth);\n        if (hasRecursed) {\n          throw new Error(overlappingRecursionMsg);\n        }\n        if (hasNumberedBackref) {\n          // Could add support for numbered backrefs with extra effort, but it's probably not worth\n          // it. To trigger this error, the regex must include recursion and one of the following:\n          // - An interpolated regex that contains a numbered backref (since other numbered\n          //   backrefs are prevented by implicit flag n).\n          // - A numbered backref, when flag n is explicitly disabled.\n          // Note that Regex+'s extended syntax (atomic groups and sometimes subroutines) can also\n          // add numbered backrefs, but those work fine because external plugins like this one run\n          // *before* the transformation of built-in syntax extensions\n          throw new Error('Numbered backrefs cannot be used with global recursion');\n        }\n        const pre = expression.slice(0, match.index);\n        const post = expression.slice(token.lastIndex);\n        if (hasUnescaped(post, recursiveToken, Context.DEFAULT)) {\n          throw new Error(overlappingRecursionMsg);\n        }\n        // No need to parse further\n        return makeRecursive(pre, post, +rDepth, false, useEmulationGroups);\n      // `\\g<name&R=N>`, `\\g<number&R=N>`\n      } else if (gRNameOrNum) {\n        assertMaxInBounds(gRDepth);\n        let isWithinReffedGroup = false;\n        for (const g of openGroups) {\n          if (g.name === gRNameOrNum || g.num === +gRNameOrNum) {\n            isWithinReffedGroup = true;\n            if (g.hasRecursedWithin) {\n              throw new Error(overlappingRecursionMsg);\n            }\n            break;\n          }\n        }\n        if (!isWithinReffedGroup) {\n          throw new Error(r`Recursive \\g cannot be used outside the referenced group \"\\g<${gRNameOrNum}&R=${gRDepth}>\"`);\n        }\n        const startPos = groupContentsStartPos.get(gRNameOrNum);\n        const groupContents = getGroupContents(expression, startPos);\n        if (\n          hasNumberedBackref &&\n          hasUnescaped(groupContents, r`${namedCapturingDelim}|\\((?!\\?)`, Context.DEFAULT)\n        ) {\n          throw new Error('Numbered backrefs cannot be used with recursion of capturing groups');\n        }\n        const groupContentsPre = expression.slice(startPos, match.index);\n        const groupContentsPost = groupContents.slice(groupContentsPre.length + m.length);\n        const expansion = makeRecursive(groupContentsPre, groupContentsPost, +gRDepth, true, useEmulationGroups);\n        const pre = expression.slice(0, startPos);\n        const post = expression.slice(startPos + groupContents.length);\n        // Modify the string we're looping over\n        expression = `${pre}${expansion}${post}`;\n        // Step forward for the next loop iteration\n        token.lastIndex += expansion.length - m.length - groupContentsPre.length - groupContentsPost.length;\n        openGroups.forEach(g => g.hasRecursedWithin = true);\n        hasRecursed = true;\n      } else if (captureName) {\n        numCaptures++;\n        // NOTE: Not currently handling *named* emulation groups that already exist in the pattern\n        groupContentsStartPos.set(String(numCaptures), token.lastIndex);\n        groupContentsStartPos.set(captureName, token.lastIndex);\n        openGroups.push({\n          num: numCaptures,\n          name: captureName,\n        });\n      } else if (m.startsWith('(')) {\n        const isUnnamedCapture = m === '(';\n        if (isUnnamedCapture) {\n          numCaptures++;\n          groupContentsStartPos.set(\n            String(numCaptures),\n            token.lastIndex + (useEmulationGroups ? emulationGroupMarkerLength(expression, token.lastIndex) : 0)\n          );\n        }\n        openGroups.push(isUnnamedCapture ? {num: numCaptures} : {});\n      } else if (m === ')') {\n        openGroups.pop();\n      }\n\n    } else if (m === ']') {\n      numCharClassesOpen--;\n    }\n  }\n\n  return expression;\n}\n\n/**\n@param {string} max\n*/\nfunction assertMaxInBounds(max) {\n  const errMsg = `Max depth must be integer between 2 and 100; used ${max}`;\n  if (!/^[1-9]\\d*$/.test(max)) {\n    throw new Error(errMsg);\n  }\n  max = +max;\n  if (max < 2 || max > 100) {\n    throw new Error(errMsg);\n  }\n}\n\n/**\n@param {string} pre\n@param {string} post\n@param {number} maxDepth\n@param {boolean} isSubpattern\n@param {boolean} useEmulationGroups\n@returns {string}\n*/\nfunction makeRecursive(pre, post, maxDepth, isSubpattern, useEmulationGroups) {\n  const namesInRecursed = new Set();\n  // Avoid this work if not needed\n  if (isSubpattern) {\n    forEachUnescaped(pre + post, namedCapturingDelim, ({groups: {captureName}}) => {\n      namesInRecursed.add(captureName);\n    }, Context.DEFAULT);\n  }\n  const reps = maxDepth - 1;\n  // Depth 2: 'pre(?:pre(?:)post)post'\n  // Depth 3: 'pre(?:pre(?:pre(?:)post)post)post'\n  return `${pre}${\n    repeatWithDepth(`(?:${pre}`, reps, (isSubpattern ? namesInRecursed : null), 'forward', useEmulationGroups)\n  }(?:)${\n    repeatWithDepth(`${post})`, reps, (isSubpattern ? namesInRecursed : null), 'backward', useEmulationGroups)\n  }${post}`;\n}\n\n/**\n@param {string} expression\n@param {number} reps\n@param {Set<string> | null} namesInRecursed\n@param {'forward' | 'backward'} direction\n@param {boolean} useEmulationGroups\n@returns {string}\n*/\nfunction repeatWithDepth(expression, reps, namesInRecursed, direction, useEmulationGroups) {\n  const startNum = 2;\n  const depthNum = i => direction === 'backward' ? reps - i + startNum - 1 : i + startNum;\n  let result = '';\n  for (let i = 0; i < reps; i++) {\n    const captureNum = depthNum(i);\n    result += replaceUnescaped(\n      expression,\n      // NOTE: Not currently handling *named* emulation groups that already exist in the pattern\n      r`${namedCapturingDelim}|\\\\k<(?<backref>[^>]+)>${\n        useEmulationGroups ? r`|(?<unnamed>\\()(?!\\?)(?:${emulationGroupMarkerRe.source})?` : ''\n      }`,\n      ({0: m, index, groups: {captureName, backref, unnamed}}) => {\n        if (backref && namesInRecursed && !namesInRecursed.has(backref)) {\n          // Don't alter backrefs to groups outside the recursed subpattern\n          return m;\n        }\n        // Only matches unnamed capture delim if `useEmulationGroups`\n        if (unnamed) {\n          // Add an emulation group marker, possibly replacing an existing marker (removes any\n          // transfer prefix)\n          return `(${emulationGroupMarker}`;\n        }\n        const suffix = `_$${captureNum}`;\n        return captureName ?\n          `(?<${captureName}${suffix}>${useEmulationGroups ? emulationGroupMarker : ''}` :\n          r`\\k<${backref}${suffix}>`;\n      },\n      Context.DEFAULT\n    );\n  }\n  return result;\n}\n\nfunction emulationGroupMarkerLength(expression, index) {\n  emulationGroupMarkerRe.lastIndex = index;\n  const match = emulationGroupMarkerRe.exec(expression);\n  return match ? match[0].length : 0;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 41660, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 41666, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/shiki/node_modules/%40shikijs/engine-javascript/dist/shared/engine-javascript.hzpS1_41.mjs"],"sourcesContent":["const MAX = 4294967295;\nclass JavaScriptScanner {\n  constructor(patterns, options = {}) {\n    this.patterns = patterns;\n    this.options = options;\n    const {\n      forgiving = false,\n      cache,\n      regexConstructor\n    } = options;\n    if (!regexConstructor) {\n      throw new Error(\"Option `regexConstructor` is not provided\");\n    }\n    this.regexps = patterns.map((p) => {\n      if (typeof p !== \"string\") {\n        return p;\n      }\n      const cached = cache?.get(p);\n      if (cached) {\n        if (cached instanceof RegExp) {\n          return cached;\n        }\n        if (forgiving)\n          return null;\n        throw cached;\n      }\n      try {\n        const regex = regexConstructor(p);\n        cache?.set(p, regex);\n        return regex;\n      } catch (e) {\n        cache?.set(p, e);\n        if (forgiving)\n          return null;\n        throw e;\n      }\n    });\n  }\n  regexps;\n  findNextMatchSync(string, startPosition, _options) {\n    const str = typeof string === \"string\" ? string : string.content;\n    const pending = [];\n    function toResult(index, match, offset = 0) {\n      return {\n        index,\n        captureIndices: match.indices.map((indice) => {\n          if (indice == null) {\n            return {\n              start: MAX,\n              end: MAX,\n              length: 0\n            };\n          }\n          return {\n            start: indice[0] + offset,\n            end: indice[1] + offset,\n            length: indice[1] - indice[0]\n          };\n        })\n      };\n    }\n    for (let i = 0; i < this.regexps.length; i++) {\n      const regexp = this.regexps[i];\n      if (!regexp)\n        continue;\n      try {\n        regexp.lastIndex = startPosition;\n        const match = regexp.exec(str);\n        if (!match)\n          continue;\n        if (match.index === startPosition) {\n          return toResult(i, match, 0);\n        }\n        pending.push([i, match, 0]);\n      } catch (e) {\n        if (this.options.forgiving)\n          continue;\n        throw e;\n      }\n    }\n    if (pending.length) {\n      const minIndex = Math.min(...pending.map((m) => m[1].index));\n      for (const [i, match, offset] of pending) {\n        if (match.index === minIndex) {\n          return toResult(i, match, offset);\n        }\n      }\n    }\n    return null;\n  }\n}\n\nexport { JavaScriptScanner as J };\n"],"names":[],"mappings":";;;AAAA,MAAM,MAAM;AACZ,MAAM;IACJ,YAAY,QAAQ,EAAE,UAAU,CAAC,CAAC,CAAE;QAClC,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,OAAO,GAAG;QACf,MAAM,EACJ,YAAY,KAAK,EACjB,KAAK,EACL,gBAAgB,EACjB,GAAG;QACJ,IAAI,CAAC,kBAAkB;YACrB,MAAM,IAAI,MAAM;QAClB;QACA,IAAI,CAAC,OAAO,GAAG,SAAS,GAAG,CAAC,CAAC;YAC3B,IAAI,OAAO,MAAM,UAAU;gBACzB,OAAO;YACT;YACA,MAAM,SAAS,OAAO,IAAI;YAC1B,IAAI,QAAQ;gBACV,IAAI,kBAAkB,QAAQ;oBAC5B,OAAO;gBACT;gBACA,IAAI,WACF,OAAO;gBACT,MAAM;YACR;YACA,IAAI;gBACF,MAAM,QAAQ,iBAAiB;gBAC/B,OAAO,IAAI,GAAG;gBACd,OAAO;YACT,EAAE,OAAO,GAAG;gBACV,OAAO,IAAI,GAAG;gBACd,IAAI,WACF,OAAO;gBACT,MAAM;YACR;QACF;IACF;IACA,QAAQ;IACR,kBAAkB,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE;QACjD,MAAM,MAAM,OAAO,WAAW,WAAW,SAAS,OAAO,OAAO;QAChE,MAAM,UAAU,EAAE;QAClB,SAAS,SAAS,KAAK,EAAE,KAAK,EAAE,SAAS,CAAC;YACxC,OAAO;gBACL;gBACA,gBAAgB,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC;oBACjC,IAAI,UAAU,MAAM;wBAClB,OAAO;4BACL,OAAO;4BACP,KAAK;4BACL,QAAQ;wBACV;oBACF;oBACA,OAAO;wBACL,OAAO,MAAM,CAAC,EAAE,GAAG;wBACnB,KAAK,MAAM,CAAC,EAAE,GAAG;wBACjB,QAAQ,MAAM,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE;oBAC/B;gBACF;YACF;QACF;QACA,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,IAAK;YAC5C,MAAM,SAAS,IAAI,CAAC,OAAO,CAAC,EAAE;YAC9B,IAAI,CAAC,QACH;YACF,IAAI;gBACF,OAAO,SAAS,GAAG;gBACnB,MAAM,QAAQ,OAAO,IAAI,CAAC;gBAC1B,IAAI,CAAC,OACH;gBACF,IAAI,MAAM,KAAK,KAAK,eAAe;oBACjC,OAAO,SAAS,GAAG,OAAO;gBAC5B;gBACA,QAAQ,IAAI,CAAC;oBAAC;oBAAG;oBAAO;iBAAE;YAC5B,EAAE,OAAO,GAAG;gBACV,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,EACxB;gBACF,MAAM;YACR;QACF;QACA,IAAI,QAAQ,MAAM,EAAE;YAClB,MAAM,WAAW,KAAK,GAAG,IAAI,QAAQ,GAAG,CAAC,CAAC,IAAM,CAAC,CAAC,EAAE,CAAC,KAAK;YAC1D,KAAK,MAAM,CAAC,GAAG,OAAO,OAAO,IAAI,QAAS;gBACxC,IAAI,MAAM,KAAK,KAAK,UAAU;oBAC5B,OAAO,SAAS,GAAG,OAAO;gBAC5B;YACF;QACF;QACA,OAAO;IACT;AACF","ignoreList":[0]}},
    {"offset": {"line": 41759, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 41765, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/shiki/node_modules/%40shikijs/engine-javascript/dist/engine-compile.mjs"],"sourcesContent":["import { toRegExp } from 'oniguruma-to-es';\nimport { J as JavaScriptScanner } from './shared/engine-javascript.hzpS1_41.mjs';\n\nfunction defaultJavaScriptRegexConstructor(pattern, options) {\n  return toRegExp(\n    pattern,\n    {\n      global: true,\n      hasIndices: true,\n      rules: {\n        // Needed since TextMate grammars merge backrefs across patterns\n        allowOrphanBackrefs: true,\n        // Improves search performance for generated regexes\n        asciiWordBoundaries: true,\n        // Follow `vscode-oniguruma` which enables this Oniguruma option by default\n        captureGroup: true,\n        // Oniguruma uses depth limit `20`; lowered here to keep regexes shorter and maybe\n        // sometimes faster, but can be increased if issues reported due to low limit\n        recursionLimit: 5,\n        // Oniguruma option for `^`->`\\A`, `$`->`\\Z`; improves search performance without any\n        // change in meaning since TM grammars search line by line\n        singleline: true\n      },\n      ...options\n    }\n  );\n}\nfunction createJavaScriptRegexEngine(options = {}) {\n  const _options = Object.assign(\n    {\n      target: \"auto\",\n      cache: /* @__PURE__ */ new Map()\n    },\n    options\n  );\n  _options.regexConstructor ||= (pattern) => defaultJavaScriptRegexConstructor(pattern, { target: _options.target });\n  return {\n    createScanner(patterns) {\n      return new JavaScriptScanner(patterns, _options);\n    },\n    createString(s) {\n      return {\n        content: s\n      };\n    }\n  };\n}\n\nexport { createJavaScriptRegexEngine, defaultJavaScriptRegexConstructor };\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEA,SAAS,kCAAkC,OAAO,EAAE,OAAO;IACzD,OAAO,CAAA,GAAA,kLAAA,CAAA,WAAQ,AAAD,EACZ,SACA;QACE,QAAQ;QACR,YAAY;QACZ,OAAO;YACL,gEAAgE;YAChE,qBAAqB;YACrB,oDAAoD;YACpD,qBAAqB;YACrB,2EAA2E;YAC3E,cAAc;YACd,kFAAkF;YAClF,6EAA6E;YAC7E,gBAAgB;YAChB,qFAAqF;YACrF,0DAA0D;YAC1D,YAAY;QACd;QACA,GAAG,OAAO;IACZ;AAEJ;AACA,SAAS,4BAA4B,UAAU,CAAC,CAAC;IAC/C,MAAM,WAAW,OAAO,MAAM,CAC5B;QACE,QAAQ;QACR,OAAO,aAAa,GAAG,IAAI;IAC7B,GACA;IAEF,SAAS,gBAAgB,KAAK,CAAC,UAAY,kCAAkC,SAAS;YAAE,QAAQ,SAAS,MAAM;QAAC;IAChH,OAAO;QACL,eAAc,QAAQ;YACpB,OAAO,IAAI,6NAAA,CAAA,IAAiB,CAAC,UAAU;QACzC;QACA,cAAa,CAAC;YACZ,OAAO;gBACL,SAAS;YACX;QACF;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 41817, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 41823, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/hast-util-to-html/lib/handle/comment.js"],"sourcesContent":["/**\n * @import {Comment, Parents} from 'hast'\n * @import {State} from '../index.js'\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\nconst htmlCommentRegex = /^>|^->|<!--|-->|--!>|<!-$/g\n\n// Declare arrays as variables so it can be cached by `stringifyEntities`\nconst bogusCommentEntitySubset = ['>']\nconst commentEntitySubset = ['<', '>']\n\n/**\n * Serialize a comment.\n *\n * @param {Comment} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function comment(node, _1, _2, state) {\n  // See: <https://html.spec.whatwg.org/multipage/syntax.html#comments>\n  return state.settings.bogusComments\n    ? '<?' +\n        stringifyEntities(\n          node.value,\n          Object.assign({}, state.settings.characterReferences, {\n            subset: bogusCommentEntitySubset\n          })\n        ) +\n        '>'\n    : '<!--' + node.value.replace(htmlCommentRegex, encode) + '-->'\n\n  /**\n   * @param {string} $0\n   */\n  function encode($0) {\n    return stringifyEntities(\n      $0,\n      Object.assign({}, state.settings.characterReferences, {\n        subset: commentEntitySubset\n      })\n    )\n  }\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AAED;;AAEA,MAAM,mBAAmB;AAEzB,yEAAyE;AACzE,MAAM,2BAA2B;IAAC;CAAI;AACtC,MAAM,sBAAsB;IAAC;IAAK;CAAI;AAgB/B,SAAS,QAAQ,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK;IACzC,qEAAqE;IACrE,OAAO,MAAM,QAAQ,CAAC,aAAa,GAC/B,OACE,CAAA,GAAA,iJAAA,CAAA,oBAAiB,AAAD,EACd,KAAK,KAAK,EACV,OAAO,MAAM,CAAC,CAAC,GAAG,MAAM,QAAQ,CAAC,mBAAmB,EAAE;QACpD,QAAQ;IACV,MAEF,MACF,SAAS,KAAK,KAAK,CAAC,OAAO,CAAC,kBAAkB,UAAU;;IAE5D;;GAEC,GACD,SAAS,OAAO,EAAE;QAChB,OAAO,CAAA,GAAA,iJAAA,CAAA,oBAAiB,AAAD,EACrB,IACA,OAAO,MAAM,CAAC,CAAC,GAAG,MAAM,QAAQ,CAAC,mBAAmB,EAAE;YACpD,QAAQ;QACV;IAEJ;AACF","ignoreList":[0]}},
    {"offset": {"line": 41854, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 41860, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/hast-util-to-html/lib/handle/doctype.js"],"sourcesContent":["/**\n * @import {Doctype, Parents} from 'hast'\n * @import {State} from '../index.js'\n */\n\n/**\n * Serialize a doctype.\n *\n * @param {Doctype} _1\n *   Node to handle.\n * @param {number | undefined} _2\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _3\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function doctype(_1, _2, _3, state) {\n  return (\n    '<!' +\n    (state.settings.upperDoctype ? 'DOCTYPE' : 'doctype') +\n    (state.settings.tightDoctype ? '' : ' ') +\n    'html>'\n  )\n}\n"],"names":[],"mappings":"AAAA;;;CAGC,GAED;;;;;;;;;;;;;CAaC;;;AACM,SAAS,QAAQ,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK;IACvC,OACE,OACA,CAAC,MAAM,QAAQ,CAAC,YAAY,GAAG,YAAY,SAAS,IACpD,CAAC,MAAM,QAAQ,CAAC,YAAY,GAAG,KAAK,GAAG,IACvC;AAEJ","ignoreList":[0]}},
    {"offset": {"line": 41882, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 41888, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/hast-util-to-html/lib/omission/omission.js"],"sourcesContent":["/**\n * @import {Element, Parents} from 'hast'\n */\n\n/**\n * @callback OmitHandle\n *   Check if a tag can be omitted.\n * @param {Element} element\n *   Element to check.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether to omit a tag.\n *\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Factory to check if a given node can have a tag omitted.\n *\n * @param {Record<string, OmitHandle>} handlers\n *   Omission handlers, where each key is a tag name, and each value is the\n *   corresponding handler.\n * @returns {OmitHandle}\n *   Whether to omit a tag of an element.\n */\nexport function omission(handlers) {\n  return omit\n\n  /**\n   * Check if a given node can have a tag omitted.\n   *\n   * @type {OmitHandle}\n   */\n  function omit(node, index, parent) {\n    return (\n      own.call(handlers, node.tagName) &&\n      handlers[node.tagName](node, index, parent)\n    )\n  }\n}\n"],"names":[],"mappings":"AAAA;;CAEC,GAED;;;;;;;;;;;;CAYC;;;AAED,MAAM,MAAM,CAAC,EAAE,cAAc;AAWtB,SAAS,SAAS,QAAQ;IAC/B,OAAO;;IAEP;;;;GAIC,GACD,SAAS,KAAK,IAAI,EAAE,KAAK,EAAE,MAAM;QAC/B,OACE,IAAI,IAAI,CAAC,UAAU,KAAK,OAAO,KAC/B,QAAQ,CAAC,KAAK,OAAO,CAAC,CAAC,MAAM,OAAO;IAExC;AACF","ignoreList":[0]}},
    {"offset": {"line": 41917, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 41923, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/hast-util-to-html/lib/omission/util/siblings.js"],"sourcesContent":["/**\n * @import {Parents, RootContent} from 'hast'\n */\n\nimport {whitespace} from 'hast-util-whitespace'\n\nexport const siblingAfter = siblings(1)\nexport const siblingBefore = siblings(-1)\n\n/** @type {Array<RootContent>} */\nconst emptyChildren = []\n\n/**\n * Factory to check siblings in a direction.\n *\n * @param {number} increment\n */\nfunction siblings(increment) {\n  return sibling\n\n  /**\n   * Find applicable siblings in a direction.\n   *\n   * @template {Parents} Parent\n   *   Parent type.\n   * @param {Parent | undefined} parent\n   *   Parent.\n   * @param {number | undefined} index\n   *   Index of child in `parent`.\n   * @param {boolean | undefined} [includeWhitespace=false]\n   *   Whether to include whitespace (default: `false`).\n   * @returns {Parent extends {children: Array<infer Child>} ? Child | undefined : never}\n   *   Child of parent.\n   */\n  function sibling(parent, index, includeWhitespace) {\n    const siblings = parent ? parent.children : emptyChildren\n    let offset = (index || 0) + increment\n    let next = siblings[offset]\n\n    if (!includeWhitespace) {\n      while (next && whitespace(next)) {\n        offset += increment\n        next = siblings[offset]\n      }\n    }\n\n    // @ts-expect-error: it’s a correct child.\n    return next\n  }\n}\n"],"names":[],"mappings":"AAAA;;CAEC;;;;AAED;;AAEO,MAAM,eAAe,SAAS;AAC9B,MAAM,gBAAgB,SAAS,CAAC;AAEvC,+BAA+B,GAC/B,MAAM,gBAAgB,EAAE;AAExB;;;;CAIC,GACD,SAAS,SAAS,SAAS;IACzB,OAAO;;IAEP;;;;;;;;;;;;;GAaC,GACD,SAAS,QAAQ,MAAM,EAAE,KAAK,EAAE,iBAAiB;QAC/C,MAAM,WAAW,SAAS,OAAO,QAAQ,GAAG;QAC5C,IAAI,SAAS,CAAC,SAAS,CAAC,IAAI;QAC5B,IAAI,OAAO,QAAQ,CAAC,OAAO;QAE3B,IAAI,CAAC,mBAAmB;YACtB,MAAO,QAAQ,CAAA,GAAA,sJAAA,CAAA,aAAU,AAAD,EAAE,MAAO;gBAC/B,UAAU;gBACV,OAAO,QAAQ,CAAC,OAAO;YACzB;QACF;QAEA,0CAA0C;QAC1C,OAAO;IACT;AACF","ignoreList":[0]}},
    {"offset": {"line": 41968, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 41974, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/hast-util-to-html/lib/omission/closing.js"],"sourcesContent":["/**\n * @import {Element, Parents} from 'hast'\n */\n\nimport {whitespace} from 'hast-util-whitespace'\nimport {siblingAfter} from './util/siblings.js'\nimport {omission} from './omission.js'\n\nexport const closing = omission({\n  body,\n  caption: headOrColgroupOrCaption,\n  colgroup: headOrColgroupOrCaption,\n  dd,\n  dt,\n  head: headOrColgroupOrCaption,\n  html,\n  li,\n  optgroup,\n  option,\n  p,\n  rp: rubyElement,\n  rt: rubyElement,\n  tbody,\n  td: cells,\n  tfoot,\n  th: cells,\n  thead,\n  tr\n})\n\n/**\n * Macro for `</head>`, `</colgroup>`, and `</caption>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction headOrColgroupOrCaption(_, index, parent) {\n  const next = siblingAfter(parent, index, true)\n  return (\n    !next ||\n    (next.type !== 'comment' &&\n      !(next.type === 'text' && whitespace(next.value.charAt(0))))\n  )\n}\n\n/**\n * Whether to omit `</html>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction html(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || next.type !== 'comment'\n}\n\n/**\n * Whether to omit `</body>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction body(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || next.type !== 'comment'\n}\n\n/**\n * Whether to omit `</p>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction p(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return next\n    ? next.type === 'element' &&\n        (next.tagName === 'address' ||\n          next.tagName === 'article' ||\n          next.tagName === 'aside' ||\n          next.tagName === 'blockquote' ||\n          next.tagName === 'details' ||\n          next.tagName === 'div' ||\n          next.tagName === 'dl' ||\n          next.tagName === 'fieldset' ||\n          next.tagName === 'figcaption' ||\n          next.tagName === 'figure' ||\n          next.tagName === 'footer' ||\n          next.tagName === 'form' ||\n          next.tagName === 'h1' ||\n          next.tagName === 'h2' ||\n          next.tagName === 'h3' ||\n          next.tagName === 'h4' ||\n          next.tagName === 'h5' ||\n          next.tagName === 'h6' ||\n          next.tagName === 'header' ||\n          next.tagName === 'hgroup' ||\n          next.tagName === 'hr' ||\n          next.tagName === 'main' ||\n          next.tagName === 'menu' ||\n          next.tagName === 'nav' ||\n          next.tagName === 'ol' ||\n          next.tagName === 'p' ||\n          next.tagName === 'pre' ||\n          next.tagName === 'section' ||\n          next.tagName === 'table' ||\n          next.tagName === 'ul')\n    : !parent ||\n        // Confusing parent.\n        !(\n          parent.type === 'element' &&\n          (parent.tagName === 'a' ||\n            parent.tagName === 'audio' ||\n            parent.tagName === 'del' ||\n            parent.tagName === 'ins' ||\n            parent.tagName === 'map' ||\n            parent.tagName === 'noscript' ||\n            parent.tagName === 'video')\n        )\n}\n\n/**\n * Whether to omit `</li>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction li(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'li')\n}\n\n/**\n * Whether to omit `</dt>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dt(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return Boolean(\n    next &&\n      next.type === 'element' &&\n      (next.tagName === 'dt' || next.tagName === 'dd')\n  )\n}\n\n/**\n * Whether to omit `</dd>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dd(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'dt' || next.tagName === 'dd'))\n  )\n}\n\n/**\n * Whether to omit `</rt>` or `</rp>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction rubyElement(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'rp' || next.tagName === 'rt'))\n  )\n}\n\n/**\n * Whether to omit `</optgroup>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction optgroup(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'optgroup')\n}\n\n/**\n * Whether to omit `</option>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction option(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'option' || next.tagName === 'optgroup'))\n  )\n}\n\n/**\n * Whether to omit `</thead>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction thead(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return Boolean(\n    next &&\n      next.type === 'element' &&\n      (next.tagName === 'tbody' || next.tagName === 'tfoot')\n  )\n}\n\n/**\n * Whether to omit `</tbody>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tbody(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'tbody' || next.tagName === 'tfoot'))\n  )\n}\n\n/**\n * Whether to omit `</tfoot>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tfoot(_, index, parent) {\n  return !siblingAfter(parent, index)\n}\n\n/**\n * Whether to omit `</tr>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tr(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'tr')\n}\n\n/**\n * Whether to omit `</td>` or `</th>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction cells(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'td' || next.tagName === 'th'))\n  )\n}\n"],"names":[],"mappings":"AAAA;;CAEC;;;AAID;AADA;AADA;;;;AAIO,MAAM,UAAU,CAAA,GAAA,qKAAA,CAAA,WAAQ,AAAD,EAAE;IAC9B;IACA,SAAS;IACT,UAAU;IACV;IACA;IACA,MAAM;IACN;IACA;IACA;IACA;IACA;IACA,IAAI;IACJ,IAAI;IACJ;IACA,IAAI;IACJ;IACA,IAAI;IACJ;IACA;AACF;AAEA;;;;;;;;;;;CAWC,GACD,SAAS,wBAAwB,CAAC,EAAE,KAAK,EAAE,MAAM;IAC/C,MAAM,OAAO,CAAA,GAAA,6KAAA,CAAA,eAAY,AAAD,EAAE,QAAQ,OAAO;IACzC,OACE,CAAC,QACA,KAAK,IAAI,KAAK,aACb,CAAC,CAAC,KAAK,IAAI,KAAK,UAAU,CAAA,GAAA,sJAAA,CAAA,aAAU,AAAD,EAAE,KAAK,KAAK,CAAC,MAAM,CAAC,GAAG;AAEhE;AAEA;;;;;;;;;;;CAWC,GACD,SAAS,KAAK,CAAC,EAAE,KAAK,EAAE,MAAM;IAC5B,MAAM,OAAO,CAAA,GAAA,6KAAA,CAAA,eAAY,AAAD,EAAE,QAAQ;IAClC,OAAO,CAAC,QAAQ,KAAK,IAAI,KAAK;AAChC;AAEA;;;;;;;;;;;CAWC,GACD,SAAS,KAAK,CAAC,EAAE,KAAK,EAAE,MAAM;IAC5B,MAAM,OAAO,CAAA,GAAA,6KAAA,CAAA,eAAY,AAAD,EAAE,QAAQ;IAClC,OAAO,CAAC,QAAQ,KAAK,IAAI,KAAK;AAChC;AAEA;;;;;;;;;;;CAWC,GACD,SAAS,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM;IACzB,MAAM,OAAO,CAAA,GAAA,6KAAA,CAAA,eAAY,AAAD,EAAE,QAAQ;IAClC,OAAO,OACH,KAAK,IAAI,KAAK,aACZ,CAAC,KAAK,OAAO,KAAK,aAChB,KAAK,OAAO,KAAK,aACjB,KAAK,OAAO,KAAK,WACjB,KAAK,OAAO,KAAK,gBACjB,KAAK,OAAO,KAAK,aACjB,KAAK,OAAO,KAAK,SACjB,KAAK,OAAO,KAAK,QACjB,KAAK,OAAO,KAAK,cACjB,KAAK,OAAO,KAAK,gBACjB,KAAK,OAAO,KAAK,YACjB,KAAK,OAAO,KAAK,YACjB,KAAK,OAAO,KAAK,UACjB,KAAK,OAAO,KAAK,QACjB,KAAK,OAAO,KAAK,QACjB,KAAK,OAAO,KAAK,QACjB,KAAK,OAAO,KAAK,QACjB,KAAK,OAAO,KAAK,QACjB,KAAK,OAAO,KAAK,QACjB,KAAK,OAAO,KAAK,YACjB,KAAK,OAAO,KAAK,YACjB,KAAK,OAAO,KAAK,QACjB,KAAK,OAAO,KAAK,UACjB,KAAK,OAAO,KAAK,UACjB,KAAK,OAAO,KAAK,SACjB,KAAK,OAAO,KAAK,QACjB,KAAK,OAAO,KAAK,OACjB,KAAK,OAAO,KAAK,SACjB,KAAK,OAAO,KAAK,aACjB,KAAK,OAAO,KAAK,WACjB,KAAK,OAAO,KAAK,IAAI,IACzB,CAAC,UACC,oBAAoB;IACpB,CAAC,CACC,OAAO,IAAI,KAAK,aAChB,CAAC,OAAO,OAAO,KAAK,OAClB,OAAO,OAAO,KAAK,WACnB,OAAO,OAAO,KAAK,SACnB,OAAO,OAAO,KAAK,SACnB,OAAO,OAAO,KAAK,SACnB,OAAO,OAAO,KAAK,cACnB,OAAO,OAAO,KAAK,OAAO,CAC9B;AACR;AAEA;;;;;;;;;;;CAWC,GACD,SAAS,GAAG,CAAC,EAAE,KAAK,EAAE,MAAM;IAC1B,MAAM,OAAO,CAAA,GAAA,6KAAA,CAAA,eAAY,AAAD,EAAE,QAAQ;IAClC,OAAO,CAAC,QAAS,KAAK,IAAI,KAAK,aAAa,KAAK,OAAO,KAAK;AAC/D;AAEA;;;;;;;;;;;CAWC,GACD,SAAS,GAAG,CAAC,EAAE,KAAK,EAAE,MAAM;IAC1B,MAAM,OAAO,CAAA,GAAA,6KAAA,CAAA,eAAY,AAAD,EAAE,QAAQ;IAClC,OAAO,QACL,QACE,KAAK,IAAI,KAAK,aACd,CAAC,KAAK,OAAO,KAAK,QAAQ,KAAK,OAAO,KAAK,IAAI;AAErD;AAEA;;;;;;;;;;;CAWC,GACD,SAAS,GAAG,CAAC,EAAE,KAAK,EAAE,MAAM;IAC1B,MAAM,OAAO,CAAA,GAAA,6KAAA,CAAA,eAAY,AAAD,EAAE,QAAQ;IAClC,OACE,CAAC,QACA,KAAK,IAAI,KAAK,aACb,CAAC,KAAK,OAAO,KAAK,QAAQ,KAAK,OAAO,KAAK,IAAI;AAErD;AAEA;;;;;;;;;;;CAWC,GACD,SAAS,YAAY,CAAC,EAAE,KAAK,EAAE,MAAM;IACnC,MAAM,OAAO,CAAA,GAAA,6KAAA,CAAA,eAAY,AAAD,EAAE,QAAQ;IAClC,OACE,CAAC,QACA,KAAK,IAAI,KAAK,aACb,CAAC,KAAK,OAAO,KAAK,QAAQ,KAAK,OAAO,KAAK,IAAI;AAErD;AAEA;;;;;;;;;;;CAWC,GACD,SAAS,SAAS,CAAC,EAAE,KAAK,EAAE,MAAM;IAChC,MAAM,OAAO,CAAA,GAAA,6KAAA,CAAA,eAAY,AAAD,EAAE,QAAQ;IAClC,OAAO,CAAC,QAAS,KAAK,IAAI,KAAK,aAAa,KAAK,OAAO,KAAK;AAC/D;AAEA;;;;;;;;;;;CAWC,GACD,SAAS,OAAO,CAAC,EAAE,KAAK,EAAE,MAAM;IAC9B,MAAM,OAAO,CAAA,GAAA,6KAAA,CAAA,eAAY,AAAD,EAAE,QAAQ;IAClC,OACE,CAAC,QACA,KAAK,IAAI,KAAK,aACb,CAAC,KAAK,OAAO,KAAK,YAAY,KAAK,OAAO,KAAK,UAAU;AAE/D;AAEA;;;;;;;;;;;CAWC,GACD,SAAS,MAAM,CAAC,EAAE,KAAK,EAAE,MAAM;IAC7B,MAAM,OAAO,CAAA,GAAA,6KAAA,CAAA,eAAY,AAAD,EAAE,QAAQ;IAClC,OAAO,QACL,QACE,KAAK,IAAI,KAAK,aACd,CAAC,KAAK,OAAO,KAAK,WAAW,KAAK,OAAO,KAAK,OAAO;AAE3D;AAEA;;;;;;;;;;;CAWC,GACD,SAAS,MAAM,CAAC,EAAE,KAAK,EAAE,MAAM;IAC7B,MAAM,OAAO,CAAA,GAAA,6KAAA,CAAA,eAAY,AAAD,EAAE,QAAQ;IAClC,OACE,CAAC,QACA,KAAK,IAAI,KAAK,aACb,CAAC,KAAK,OAAO,KAAK,WAAW,KAAK,OAAO,KAAK,OAAO;AAE3D;AAEA;;;;;;;;;;;CAWC,GACD,SAAS,MAAM,CAAC,EAAE,KAAK,EAAE,MAAM;IAC7B,OAAO,CAAC,CAAA,GAAA,6KAAA,CAAA,eAAY,AAAD,EAAE,QAAQ;AAC/B;AAEA;;;;;;;;;;;CAWC,GACD,SAAS,GAAG,CAAC,EAAE,KAAK,EAAE,MAAM;IAC1B,MAAM,OAAO,CAAA,GAAA,6KAAA,CAAA,eAAY,AAAD,EAAE,QAAQ;IAClC,OAAO,CAAC,QAAS,KAAK,IAAI,KAAK,aAAa,KAAK,OAAO,KAAK;AAC/D;AAEA;;;;;;;;;;;CAWC,GACD,SAAS,MAAM,CAAC,EAAE,KAAK,EAAE,MAAM;IAC7B,MAAM,OAAO,CAAA,GAAA,6KAAA,CAAA,eAAY,AAAD,EAAE,QAAQ;IAClC,OACE,CAAC,QACA,KAAK,IAAI,KAAK,aACb,CAAC,KAAK,OAAO,KAAK,QAAQ,KAAK,OAAO,KAAK,IAAI;AAErD","ignoreList":[0]}},
    {"offset": {"line": 42231, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 42237, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/hast-util-to-html/lib/omission/opening.js"],"sourcesContent":["/**\n * @import {Element, Parents} from 'hast'\n */\n\nimport {whitespace} from 'hast-util-whitespace'\nimport {siblingAfter, siblingBefore} from './util/siblings.js'\nimport {closing} from './closing.js'\nimport {omission} from './omission.js'\n\nexport const opening = omission({\n  body,\n  colgroup,\n  head,\n  html,\n  tbody\n})\n\n/**\n * Whether to omit `<html>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction html(node) {\n  const head = siblingAfter(node, -1)\n  return !head || head.type !== 'comment'\n}\n\n/**\n * Whether to omit `<head>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction head(node) {\n  /** @type {Set<string>} */\n  const seen = new Set()\n\n  // Whether `srcdoc` or not,\n  // make sure the content model at least doesn’t have too many `base`s/`title`s.\n  for (const child of node.children) {\n    if (\n      child.type === 'element' &&\n      (child.tagName === 'base' || child.tagName === 'title')\n    ) {\n      if (seen.has(child.tagName)) return false\n      seen.add(child.tagName)\n    }\n  }\n\n  // “May be omitted if the element is empty,\n  // or if the first thing inside the head element is an element.”\n  const child = node.children[0]\n  return !child || child.type === 'element'\n}\n\n/**\n * Whether to omit `<body>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction body(node) {\n  const head = siblingAfter(node, -1, true)\n\n  return (\n    !head ||\n    (head.type !== 'comment' &&\n      !(head.type === 'text' && whitespace(head.value.charAt(0))) &&\n      !(\n        head.type === 'element' &&\n        (head.tagName === 'meta' ||\n          head.tagName === 'link' ||\n          head.tagName === 'script' ||\n          head.tagName === 'style' ||\n          head.tagName === 'template')\n      ))\n  )\n}\n\n/**\n * Whether to omit `<colgroup>`.\n * The spec describes some logic for the opening tag, but it’s easier to\n * implement in the closing tag, to the same effect, so we handle it there\n * instead.\n *\n * @param {Element} node\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction colgroup(node, index, parent) {\n  const previous = siblingBefore(parent, index)\n  const head = siblingAfter(node, -1, true)\n\n  // Previous colgroup was already omitted.\n  if (\n    parent &&\n    previous &&\n    previous.type === 'element' &&\n    previous.tagName === 'colgroup' &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return Boolean(head && head.type === 'element' && head.tagName === 'col')\n}\n\n/**\n * Whether to omit `<tbody>`.\n *\n * @param {Element} node\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction tbody(node, index, parent) {\n  const previous = siblingBefore(parent, index)\n  const head = siblingAfter(node, -1)\n\n  // Previous table section was already omitted.\n  if (\n    parent &&\n    previous &&\n    previous.type === 'element' &&\n    (previous.tagName === 'thead' || previous.tagName === 'tbody') &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return Boolean(head && head.type === 'element' && head.tagName === 'tr')\n}\n"],"names":[],"mappings":"AAAA;;CAEC;;;AAKD;AAFA;AADA;AAEA;;;;;AAGO,MAAM,UAAU,CAAA,GAAA,qKAAA,CAAA,WAAQ,AAAD,EAAE;IAC9B;IACA;IACA;IACA;IACA;AACF;AAEA;;;;;;;CAOC,GACD,SAAS,KAAK,IAAI;IAChB,MAAM,OAAO,CAAA,GAAA,6KAAA,CAAA,eAAY,AAAD,EAAE,MAAM,CAAC;IACjC,OAAO,CAAC,QAAQ,KAAK,IAAI,KAAK;AAChC;AAEA;;;;;;;CAOC,GACD,SAAS,KAAK,IAAI;IAChB,wBAAwB,GACxB,MAAM,OAAO,IAAI;IAEjB,2BAA2B;IAC3B,+EAA+E;IAC/E,KAAK,MAAM,SAAS,KAAK,QAAQ,CAAE;QACjC,IACE,MAAM,IAAI,KAAK,aACf,CAAC,MAAM,OAAO,KAAK,UAAU,MAAM,OAAO,KAAK,OAAO,GACtD;YACA,IAAI,KAAK,GAAG,CAAC,MAAM,OAAO,GAAG,OAAO;YACpC,KAAK,GAAG,CAAC,MAAM,OAAO;QACxB;IACF;IAEA,2CAA2C;IAC3C,gEAAgE;IAChE,MAAM,QAAQ,KAAK,QAAQ,CAAC,EAAE;IAC9B,OAAO,CAAC,SAAS,MAAM,IAAI,KAAK;AAClC;AAEA;;;;;;;CAOC,GACD,SAAS,KAAK,IAAI;IAChB,MAAM,OAAO,CAAA,GAAA,6KAAA,CAAA,eAAY,AAAD,EAAE,MAAM,CAAC,GAAG;IAEpC,OACE,CAAC,QACA,KAAK,IAAI,KAAK,aACb,CAAC,CAAC,KAAK,IAAI,KAAK,UAAU,CAAA,GAAA,sJAAA,CAAA,aAAU,AAAD,EAAE,KAAK,KAAK,CAAC,MAAM,CAAC,GAAG,KAC1D,CAAC,CACC,KAAK,IAAI,KAAK,aACd,CAAC,KAAK,OAAO,KAAK,UAChB,KAAK,OAAO,KAAK,UACjB,KAAK,OAAO,KAAK,YACjB,KAAK,OAAO,KAAK,WACjB,KAAK,OAAO,KAAK,UAAU,CAC/B;AAEN;AAEA;;;;;;;;;;;;;;CAcC,GACD,SAAS,SAAS,IAAI,EAAE,KAAK,EAAE,MAAM;IACnC,MAAM,WAAW,CAAA,GAAA,6KAAA,CAAA,gBAAa,AAAD,EAAE,QAAQ;IACvC,MAAM,OAAO,CAAA,GAAA,6KAAA,CAAA,eAAY,AAAD,EAAE,MAAM,CAAC,GAAG;IAEpC,yCAAyC;IACzC,IACE,UACA,YACA,SAAS,IAAI,KAAK,aAClB,SAAS,OAAO,KAAK,cACrB,CAAA,GAAA,oKAAA,CAAA,UAAO,AAAD,EAAE,UAAU,OAAO,QAAQ,CAAC,OAAO,CAAC,WAAW,SACrD;QACA,OAAO;IACT;IAEA,OAAO,QAAQ,QAAQ,KAAK,IAAI,KAAK,aAAa,KAAK,OAAO,KAAK;AACrE;AAEA;;;;;;;;;;;CAWC,GACD,SAAS,MAAM,IAAI,EAAE,KAAK,EAAE,MAAM;IAChC,MAAM,WAAW,CAAA,GAAA,6KAAA,CAAA,gBAAa,AAAD,EAAE,QAAQ;IACvC,MAAM,OAAO,CAAA,GAAA,6KAAA,CAAA,eAAY,AAAD,EAAE,MAAM,CAAC;IAEjC,8CAA8C;IAC9C,IACE,UACA,YACA,SAAS,IAAI,KAAK,aAClB,CAAC,SAAS,OAAO,KAAK,WAAW,SAAS,OAAO,KAAK,OAAO,KAC7D,CAAA,GAAA,oKAAA,CAAA,UAAO,AAAD,EAAE,UAAU,OAAO,QAAQ,CAAC,OAAO,CAAC,WAAW,SACrD;QACA,OAAO;IACT;IAEA,OAAO,QAAQ,QAAQ,KAAK,IAAI,KAAK,aAAa,KAAK,OAAO,KAAK;AACrE","ignoreList":[0]}},
    {"offset": {"line": 42344, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 42350, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/hast-util-to-html/lib/handle/element.js"],"sourcesContent":["/**\n * @import {Element, Parents, Properties} from 'hast'\n * @import {State} from '../index.js'\n */\n\nimport {ccount} from 'ccount'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {find, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringifyEntities} from 'stringify-entities'\nimport {closing} from '../omission/closing.js'\nimport {opening} from '../omission/opening.js'\n\n/**\n * Maps of subsets.\n *\n * Each value is a matrix of tuples.\n * The value at `0` causes parse errors, the value at `1` is valid.\n * Of both, the value at `0` is unsafe, and the value at `1` is safe.\n *\n * @type {Record<'double' | 'name' | 'single' | 'unquoted', Array<[Array<string>, Array<string>]>>}\n */\nconst constants = {\n  // See: <https://html.spec.whatwg.org/#attribute-name-state>.\n  name: [\n    ['\\t\\n\\f\\r &/=>'.split(''), '\\t\\n\\f\\r \"&\\'/=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'/<=>'.split(''), '\\0\\t\\n\\f\\r \"&\\'/<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(unquoted)-state>.\n  unquoted: [\n    ['\\t\\n\\f\\r &>'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'<=>`'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(single-quoted)-state>.\n  single: [\n    [\"&'\".split(''), '\"&\\'`'.split('')],\n    [\"\\0&'\".split(''), '\\0\"&\\'`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(double-quoted)-state>.\n  double: [\n    ['\"&'.split(''), '\"&\\'`'.split('')],\n    ['\\0\"&'.split(''), '\\0\"&\\'`'.split('')]\n  ]\n}\n\n/**\n * Serialize an element node.\n *\n * @param {Element} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function element(node, index, parent, state) {\n  const schema = state.schema\n  const omit = schema.space === 'svg' ? false : state.settings.omitOptionalTags\n  let selfClosing =\n    schema.space === 'svg'\n      ? state.settings.closeEmptyElements\n      : state.settings.voids.includes(node.tagName.toLowerCase())\n  /** @type {Array<string>} */\n  const parts = []\n  /** @type {string} */\n  let last\n\n  if (schema.space === 'html' && node.tagName === 'svg') {\n    state.schema = svg\n  }\n\n  const attributes = serializeAttributes(state, node.properties)\n\n  const content = state.all(\n    schema.space === 'html' && node.tagName === 'template' ? node.content : node\n  )\n\n  state.schema = schema\n\n  // If the node is categorised as void, but it has children, remove the\n  // categorisation.\n  // This enables for example `menuitem`s, which are void in W3C HTML but not\n  // void in WHATWG HTML, to be stringified properly.\n  // Note: `menuitem` has since been removed from the HTML spec, and so is no\n  // longer void.\n  if (content) selfClosing = false\n\n  if (attributes || !omit || !opening(node, index, parent)) {\n    parts.push('<', node.tagName, attributes ? ' ' + attributes : '')\n\n    if (\n      selfClosing &&\n      (schema.space === 'svg' || state.settings.closeSelfClosing)\n    ) {\n      last = attributes.charAt(attributes.length - 1)\n      if (\n        !state.settings.tightSelfClosing ||\n        last === '/' ||\n        (last && last !== '\"' && last !== \"'\")\n      ) {\n        parts.push(' ')\n      }\n\n      parts.push('/')\n    }\n\n    parts.push('>')\n  }\n\n  parts.push(content)\n\n  if (!selfClosing && (!omit || !closing(node, index, parent))) {\n    parts.push('</' + node.tagName + '>')\n  }\n\n  return parts.join('')\n}\n\n/**\n * @param {State} state\n * @param {Properties | null | undefined} properties\n * @returns {string}\n */\nfunction serializeAttributes(state, properties) {\n  /** @type {Array<string>} */\n  const values = []\n  let index = -1\n  /** @type {string} */\n  let key\n\n  if (properties) {\n    for (key in properties) {\n      if (properties[key] !== null && properties[key] !== undefined) {\n        const value = serializeAttribute(state, key, properties[key])\n        if (value) values.push(value)\n      }\n    }\n  }\n\n  while (++index < values.length) {\n    const last = state.settings.tightAttributes\n      ? values[index].charAt(values[index].length - 1)\n      : undefined\n\n    // In tight mode, don’t add a space after quoted attributes.\n    if (index !== values.length - 1 && last !== '\"' && last !== \"'\") {\n      values[index] += ' '\n    }\n  }\n\n  return values.join('')\n}\n\n/**\n * @param {State} state\n * @param {string} key\n * @param {Properties[keyof Properties]} value\n * @returns {string}\n */\nfunction serializeAttribute(state, key, value) {\n  const info = find(state.schema, key)\n  const x =\n    state.settings.allowParseErrors && state.schema.space === 'html' ? 0 : 1\n  const y = state.settings.allowDangerousCharacters ? 0 : 1\n  let quote = state.quote\n  /** @type {string | undefined} */\n  let result\n\n  if (info.overloadedBoolean && (value === info.attribute || value === '')) {\n    value = true\n  } else if (\n    (info.boolean || info.overloadedBoolean) &&\n    (typeof value !== 'string' || value === info.attribute || value === '')\n  ) {\n    value = Boolean(value)\n  }\n\n  if (\n    value === null ||\n    value === undefined ||\n    value === false ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return ''\n  }\n\n  const name = stringifyEntities(\n    info.attribute,\n    Object.assign({}, state.settings.characterReferences, {\n      // Always encode without parse errors in non-HTML.\n      subset: constants.name[x][y]\n    })\n  )\n\n  // No value.\n  // There is currently only one boolean property in SVG: `[download]` on\n  // `<a>`.\n  // This property does not seem to work in browsers (Firefox, Safari, Chrome),\n  // so I can’t test if dropping the value works.\n  // But I assume that it should:\n  //\n  // ```html\n  // <!doctype html>\n  // <svg viewBox=\"0 0 100 100\">\n  //   <a href=https://example.com download>\n  //     <circle cx=50 cy=40 r=35 />\n  //   </a>\n  // </svg>\n  // ```\n  //\n  // See: <https://github.com/wooorm/property-information/blob/main/lib/svg.js>\n  if (value === true) return name\n\n  // `spaces` doesn’t accept a second argument, but it’s given here just to\n  // keep the code cleaner.\n  value = Array.isArray(value)\n    ? (info.commaSeparated ? commas : spaces)(value, {\n        padLeft: !state.settings.tightCommaSeparatedLists\n      })\n    : String(value)\n\n  if (state.settings.collapseEmptyAttributes && !value) return name\n\n  // Check unquoted value.\n  if (state.settings.preferUnquoted) {\n    result = stringifyEntities(\n      value,\n      Object.assign({}, state.settings.characterReferences, {\n        attribute: true,\n        subset: constants.unquoted[x][y]\n      })\n    )\n  }\n\n  // If we don’t want unquoted, or if `value` contains character references when\n  // unquoted…\n  if (result !== value) {\n    // If the alternative is less common than `quote`, switch.\n    if (\n      state.settings.quoteSmart &&\n      ccount(value, quote) > ccount(value, state.alternative)\n    ) {\n      quote = state.alternative\n    }\n\n    result =\n      quote +\n      stringifyEntities(\n        value,\n        Object.assign({}, state.settings.characterReferences, {\n          // Always encode without parse errors in non-HTML.\n          subset: (quote === \"'\" ? constants.single : constants.double)[x][y],\n          attribute: true\n        })\n      ) +\n      quote\n  }\n\n  // Don’t add a `=` for unquoted empties.\n  return name + (result ? '=' + result : result)\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 42556, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 42562, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/hast-util-to-html/lib/handle/text.js"],"sourcesContent":["/**\n * @import {Parents, Text} from 'hast'\n * @import {Raw} from 'mdast-util-to-hast'\n * @import {State} from '../index.js'\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\n// Declare array as variable so it can be cached by `stringifyEntities`\nconst textEntitySubset = ['<', '&']\n\n/**\n * Serialize a text node.\n *\n * @param {Raw | Text} node\n *   Node to handle.\n * @param {number | undefined} _\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function text(node, _, parent, state) {\n  // Check if content of `node` should be escaped.\n  return parent &&\n    parent.type === 'element' &&\n    (parent.tagName === 'script' || parent.tagName === 'style')\n    ? node.value\n    : stringifyEntities(\n        node.value,\n        Object.assign({}, state.settings.characterReferences, {\n          subset: textEntitySubset\n        })\n      )\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;AAED;;AAEA,uEAAuE;AACvE,MAAM,mBAAmB;IAAC;IAAK;CAAI;AAgB5B,SAAS,KAAK,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,KAAK;IACzC,gDAAgD;IAChD,OAAO,UACL,OAAO,IAAI,KAAK,aAChB,CAAC,OAAO,OAAO,KAAK,YAAY,OAAO,OAAO,KAAK,OAAO,IACxD,KAAK,KAAK,GACV,CAAA,GAAA,iJAAA,CAAA,oBAAiB,AAAD,EACd,KAAK,KAAK,EACV,OAAO,MAAM,CAAC,CAAC,GAAG,MAAM,QAAQ,CAAC,mBAAmB,EAAE;QACpD,QAAQ;IACV;AAER","ignoreList":[0]}},
    {"offset": {"line": 42582, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 42588, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/hast-util-to-html/lib/handle/raw.js"],"sourcesContent":["/**\n * @import {Parents} from 'hast'\n * @import {Raw} from 'mdast-util-to-hast'\n * @import {State} from '../index.js'\n */\n\nimport {text} from './text.js'\n\n/**\n * Serialize a raw node.\n *\n * @param {Raw} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function raw(node, index, parent, state) {\n  return state.settings.allowDangerousHtml\n    ? node.value\n    : text(node, index, parent, state)\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;AAED;;AAgBO,SAAS,IAAI,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK;IAC5C,OAAO,MAAM,QAAQ,CAAC,kBAAkB,GACpC,KAAK,KAAK,GACV,CAAA,GAAA,+JAAA,CAAA,OAAI,AAAD,EAAE,MAAM,OAAO,QAAQ;AAChC","ignoreList":[0]}},
    {"offset": {"line": 42600, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 42606, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/hast-util-to-html/lib/handle/root.js"],"sourcesContent":["/**\n * @import {Parents, Root} from 'hast'\n * @import {State} from '../index.js'\n */\n\n/**\n * Serialize a root.\n *\n * @param {Root} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function root(node, _1, _2, state) {\n  return state.all(node)\n}\n"],"names":[],"mappings":"AAAA;;;CAGC,GAED;;;;;;;;;;;;;CAaC;;;AACM,SAAS,KAAK,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK;IACtC,OAAO,MAAM,GAAG,CAAC;AACnB","ignoreList":[0]}},
    {"offset": {"line": 42628, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 42634, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/hast-util-to-html/lib/handle/index.js"],"sourcesContent":["/**\n * @import {Nodes, Parents} from 'hast'\n * @import {State} from '../index.js'\n */\n\nimport {zwitch} from 'zwitch'\nimport {comment} from './comment.js'\nimport {doctype} from './doctype.js'\nimport {element} from './element.js'\nimport {raw} from './raw.js'\nimport {root} from './root.js'\nimport {text} from './text.js'\n\n/**\n * @type {(node: Nodes, index: number | undefined, parent: Parents | undefined, state: State) => string}\n */\nexport const handle = zwitch('type', {\n  invalid,\n  unknown,\n  handlers: {comment, doctype, element, raw, root, text}\n})\n\n/**\n * Fail when a non-node is found in the tree.\n *\n * @param {unknown} node\n *   Unknown value.\n * @returns {never}\n *   Never.\n */\nfunction invalid(node) {\n  throw new Error('Expected node, not `' + node + '`')\n}\n\n/**\n * Fail when a node with an unknown type is found in the tree.\n *\n * @param {unknown} node_\n *  Unknown node.\n * @returns {never}\n *   Never.\n */\nfunction unknown(node_) {\n  // `type` is guaranteed by runtime JS.\n  const node = /** @type {Nodes} */ (node_)\n  throw new Error('Cannot compile unknown node `' + node.type + '`')\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKO,MAAM,SAAS,CAAA,GAAA,2HAAA,CAAA,SAAM,AAAD,EAAE,QAAQ;IACnC;IACA;IACA,UAAU;QAAC,SAAA,kKAAA,CAAA,UAAO;QAAE,SAAA,kKAAA,CAAA,UAAO;QAAE,SAAA,kKAAA,CAAA,UAAO;QAAE,KAAA,8JAAA,CAAA,MAAG;QAAE,MAAA,+JAAA,CAAA,OAAI;QAAE,MAAA,+JAAA,CAAA,OAAI;IAAA;AACvD;AAEA;;;;;;;CAOC,GACD,SAAS,QAAQ,IAAI;IACnB,MAAM,IAAI,MAAM,yBAAyB,OAAO;AAClD;AAEA;;;;;;;CAOC,GACD,SAAS,QAAQ,KAAK;IACpB,sCAAsC;IACtC,MAAM,OAA6B;IACnC,MAAM,IAAI,MAAM,kCAAkC,KAAK,IAAI,GAAG;AAChE","ignoreList":[0]}},
    {"offset": {"line": 42688, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 42694, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/hast-util-to-html/lib/index.js"],"sourcesContent":["/**\n * @import {Nodes, Parents, RootContent} from 'hast'\n * @import {Schema} from 'property-information'\n * @import {Options as StringifyEntitiesOptions} from 'stringify-entities'\n */\n\n/**\n * @typedef {Omit<StringifyEntitiesOptions, 'attribute' | 'escapeOnly' | 'subset'>} CharacterReferences\n *\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [allowDangerousCharacters=false]\n *   Do not encode some characters which cause XSS vulnerabilities in older\n *   browsers (default: `false`).\n *\n *   > ⚠️ **Danger**: only set this if you completely trust the content.\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Allow `raw` nodes and insert them as raw HTML (default: `false`).\n *\n *   When `false`, `Raw` nodes are encoded.\n *\n *   > ⚠️ **Danger**: only set this if you completely trust the content.\n * @property {boolean | null | undefined} [allowParseErrors=false]\n *   Do not encode characters which cause parse errors (even though they work),\n *   to save bytes (default: `false`).\n *\n *   Not used in the SVG space.\n *\n *   > 👉 **Note**: intentionally creates parse errors in markup (how parse\n *   > errors are handled is well defined, so this works but isn’t pretty).\n * @property {boolean | null | undefined} [bogusComments=false]\n *   Use “bogus comments” instead of comments to save byes: `<?charlie>`\n *   instead of `<!--charlie-->` (default: `false`).\n *\n *   > 👉 **Note**: intentionally creates parse errors in markup (how parse\n *   > errors are handled is well defined, so this works but isn’t pretty).\n * @property {CharacterReferences | null | undefined} [characterReferences]\n *   Configure how to serialize character references (optional).\n * @property {boolean | null | undefined} [closeEmptyElements=false]\n *   Close SVG elements without any content with slash (`/`) on the opening tag\n *   instead of an end tag: `<circle />` instead of `<circle></circle>`\n *   (default: `false`).\n *\n *   See `tightSelfClosing` to control whether a space is used before the\n *   slash.\n *\n *   Not used in the HTML space.\n * @property {boolean | null | undefined} [closeSelfClosing=false]\n *   Close self-closing nodes with an extra slash (`/`): `<img />` instead of\n *   `<img>` (default: `false`).\n *\n *   See `tightSelfClosing` to control whether a space is used before the\n *   slash.\n *\n *   Not used in the SVG space.\n * @property {boolean | null | undefined} [collapseEmptyAttributes=false]\n *   Collapse empty attributes: get `class` instead of `class=\"\"` (default:\n *   `false`).\n *\n *   Not used in the SVG space.\n *\n *   > 👉 **Note**: boolean attributes (such as `hidden`) are always collapsed.\n * @property {boolean | null | undefined} [omitOptionalTags=false]\n *   Omit optional opening and closing tags (default: `false`).\n *\n *   For example, in `<ol><li>one</li><li>two</li></ol>`, both `</li>` closing\n *   tags can be omitted.\n *   The first because it’s followed by another `li`, the last because it’s\n *   followed by nothing.\n *\n *   Not used in the SVG space.\n * @property {boolean | null | undefined} [preferUnquoted=false]\n *   Leave attributes unquoted if that results in less bytes (default: `false`).\n *\n *   Not used in the SVG space.\n * @property {boolean | null | undefined} [quoteSmart=false]\n *   Use the other quote if that results in less bytes (default: `false`).\n * @property {Quote | null | undefined} [quote='\"']\n *   Preferred quote to use (default: `'\"'`).\n * @property {Space | null | undefined} [space='html']\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it (default: `'html'`).\n *\n *   > 👉 **Note**: hast is not XML.\n *   > It supports SVG as embedded in HTML.\n *   > It does not support the features available in XML.\n *   > Passing SVG might break but fragments of modern SVG should be fine.\n *   > Use [`xast`][xast] if you need to support SVG as XML.\n * @property {boolean | null | undefined} [tightAttributes=false]\n *   Join attributes together, without whitespace, if possible: get\n *   `class=\"a b\"title=\"c d\"` instead of `class=\"a b\" title=\"c d\"` to save\n *   bytes (default: `false`).\n *\n *   Not used in the SVG space.\n *\n *   > 👉 **Note**: intentionally creates parse errors in markup (how parse\n *   > errors are handled is well defined, so this works but isn’t pretty).\n * @property {boolean | null | undefined} [tightCommaSeparatedLists=false]\n *   Join known comma-separated attribute values with just a comma (`,`),\n *   instead of padding them on the right as well (`,␠`, where `␠` represents a\n *   space) (default: `false`).\n * @property {boolean | null | undefined} [tightDoctype=false]\n *   Drop unneeded spaces in doctypes: `<!doctypehtml>` instead of\n *   `<!doctype html>` to save bytes (default: `false`).\n *\n *   > 👉 **Note**: intentionally creates parse errors in markup (how parse\n *   > errors are handled is well defined, so this works but isn’t pretty).\n * @property {boolean | null | undefined} [tightSelfClosing=false]\n *   Do not use an extra space when closing self-closing elements: `<img/>`\n *   instead of `<img />` (default: `false`).\n *\n *   > 👉 **Note**: only used if `closeSelfClosing: true` or\n *   > `closeEmptyElements: true`.\n * @property {boolean | null | undefined} [upperDoctype=false]\n *   Use a `<!DOCTYPE…` instead of `<!doctype…` (default: `false`).\n *\n *   Useless except for XHTML.\n * @property {ReadonlyArray<string> | null | undefined} [voids]\n *   Tag names of elements to serialize without closing tag (default: `html-void-elements`).\n *\n *   Not used in the SVG space.\n *\n *   > 👉 **Note**: It’s highly unlikely that you want to pass this, because\n *   > hast is not for XML, and HTML will not add more void elements.\n *\n * @typedef {'\"' | \"'\"} Quote\n *   HTML quotes for attribute values.\n *\n * @typedef {Omit<Required<{[key in keyof Options]: Exclude<Options[key], null | undefined>}>, 'space' | 'quote'>} Settings\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {(node: Parents | undefined) => string} all\n *   Serialize the children of a parent node.\n * @property {Quote} alternative\n *   Alternative quote.\n * @property {(node: Nodes, index: number | undefined, parent: Parents | undefined) => string} one\n *   Serialize one node.\n * @property {Quote} quote\n *   Preferred quote.\n * @property {Schema} schema\n *   Current schema.\n * @property {Settings} settings\n *   User configuration.\n */\n\nimport {htmlVoidElements} from 'html-void-elements'\nimport {html, svg} from 'property-information'\nimport {handle} from './handle/index.js'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/** @type {CharacterReferences} */\nconst emptyCharacterReferences = {}\n\n/** @type {Array<never>} */\nconst emptyChildren = []\n\n/**\n * Serialize hast as HTML.\n *\n * @param {Array<RootContent> | Nodes} tree\n *   Tree to serialize.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized HTML.\n */\nexport function toHtml(tree, options) {\n  const options_ = options || emptyOptions\n  const quote = options_.quote || '\"'\n  const alternative = quote === '\"' ? \"'\" : '\"'\n\n  if (quote !== '\"' && quote !== \"'\") {\n    throw new Error('Invalid quote `' + quote + '`, expected `\\'` or `\"`')\n  }\n\n  /** @type {State} */\n  const state = {\n    one,\n    all,\n    settings: {\n      omitOptionalTags: options_.omitOptionalTags || false,\n      allowParseErrors: options_.allowParseErrors || false,\n      allowDangerousCharacters: options_.allowDangerousCharacters || false,\n      quoteSmart: options_.quoteSmart || false,\n      preferUnquoted: options_.preferUnquoted || false,\n      tightAttributes: options_.tightAttributes || false,\n      upperDoctype: options_.upperDoctype || false,\n      tightDoctype: options_.tightDoctype || false,\n      bogusComments: options_.bogusComments || false,\n      tightCommaSeparatedLists: options_.tightCommaSeparatedLists || false,\n      tightSelfClosing: options_.tightSelfClosing || false,\n      collapseEmptyAttributes: options_.collapseEmptyAttributes || false,\n      allowDangerousHtml: options_.allowDangerousHtml || false,\n      voids: options_.voids || htmlVoidElements,\n      characterReferences:\n        options_.characterReferences || emptyCharacterReferences,\n      closeSelfClosing: options_.closeSelfClosing || false,\n      closeEmptyElements: options_.closeEmptyElements || false\n    },\n    schema: options_.space === 'svg' ? svg : html,\n    quote,\n    alternative\n  }\n\n  return state.one(\n    Array.isArray(tree) ? {type: 'root', children: tree} : tree,\n    undefined,\n    undefined\n  )\n}\n\n/**\n * Serialize a node.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Nodes} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(node, index, parent) {\n  return handle(node, index, parent, this)\n}\n\n/**\n * Serialize all children of `parent`.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Parents | undefined} parent\n *   Parent whose children to serialize.\n * @returns {string}\n */\nexport function all(parent) {\n  /** @type {Array<string>} */\n  const results = []\n  const children = (parent && parent.children) || emptyChildren\n  let index = -1\n\n  while (++index < children.length) {\n    results[index] = this.one(children[index], index, parent)\n  }\n\n  return results.join('')\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC,GAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA8IC;;;;AAED;AACA;AACA;;;;AAEA,oBAAoB,GACpB,MAAM,eAAe,CAAC;AAEtB,gCAAgC,GAChC,MAAM,2BAA2B,CAAC;AAElC,yBAAyB,GACzB,MAAM,gBAAgB,EAAE;AAYjB,SAAS,OAAO,IAAI,EAAE,OAAO;IAClC,MAAM,WAAW,WAAW;IAC5B,MAAM,QAAQ,SAAS,KAAK,IAAI;IAChC,MAAM,cAAc,UAAU,MAAM,MAAM;IAE1C,IAAI,UAAU,OAAO,UAAU,KAAK;QAClC,MAAM,IAAI,MAAM,oBAAoB,QAAQ;IAC9C;IAEA,kBAAkB,GAClB,MAAM,QAAQ;QACZ;QACA;QACA,UAAU;YACR,kBAAkB,SAAS,gBAAgB,IAAI;YAC/C,kBAAkB,SAAS,gBAAgB,IAAI;YAC/C,0BAA0B,SAAS,wBAAwB,IAAI;YAC/D,YAAY,SAAS,UAAU,IAAI;YACnC,gBAAgB,SAAS,cAAc,IAAI;YAC3C,iBAAiB,SAAS,eAAe,IAAI;YAC7C,cAAc,SAAS,YAAY,IAAI;YACvC,cAAc,SAAS,YAAY,IAAI;YACvC,eAAe,SAAS,aAAa,IAAI;YACzC,0BAA0B,SAAS,wBAAwB,IAAI;YAC/D,kBAAkB,SAAS,gBAAgB,IAAI;YAC/C,yBAAyB,SAAS,uBAAuB,IAAI;YAC7D,oBAAoB,SAAS,kBAAkB,IAAI;YACnD,OAAO,SAAS,KAAK,IAAI,6IAAA,CAAA,mBAAgB;YACzC,qBACE,SAAS,mBAAmB,IAAI;YAClC,kBAAkB,SAAS,gBAAgB,IAAI;YAC/C,oBAAoB,SAAS,kBAAkB,IAAI;QACrD;QACA,QAAQ,SAAS,KAAK,KAAK,QAAQ,4JAAA,CAAA,MAAG,GAAG,4JAAA,CAAA,OAAI;QAC7C;QACA;IACF;IAEA,OAAO,MAAM,GAAG,CACd,MAAM,OAAO,CAAC,QAAQ;QAAC,MAAM;QAAQ,UAAU;IAAI,IAAI,MACvD,WACA;AAEJ;AAEA;;;;;;;;;;;;;CAaC,GACD,SAAS,IAAI,IAAI,EAAE,KAAK,EAAE,MAAM;IAC9B,OAAO,CAAA,GAAA,gKAAA,CAAA,SAAM,AAAD,EAAE,MAAM,OAAO,QAAQ,IAAI;AACzC;AAWO,SAAS,IAAI,MAAM;IACxB,0BAA0B,GAC1B,MAAM,UAAU,EAAE;IAClB,MAAM,WAAW,AAAC,UAAU,OAAO,QAAQ,IAAK;IAChD,IAAI,QAAQ,CAAC;IAEb,MAAO,EAAE,QAAQ,SAAS,MAAM,CAAE;QAChC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,EAAE,OAAO;IACpD;IAEA,OAAO,QAAQ,IAAI,CAAC;AACtB","ignoreList":[0]}},
    {"offset": {"line": 42916, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 42922, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/emoji-regex-xs/index.mjs"],"sourcesContent":["const r = String.raw;\nconst seq = r`(?:\\p{Emoji}\\uFE0F\\u20E3?|\\p{Emoji_Modifier_Base}\\p{Emoji_Modifier}?|\\p{Emoji_Presentation})`;\nconst sTags = r`\\u{E0061}-\\u{E007A}`;\nexport default () => new RegExp(r`[\\u{1F1E6}-\\u{1F1FF}]{2}|\\u{1F3F4}[${sTags}]{2}[\\u{E0030}-\\u{E0039}${sTags}]{1,3}\\u{E007F}|${seq}(?:\\u200D${seq})*`, 'gu');\n"],"names":[],"mappings":";;;AAAA,MAAM,IAAI,OAAO,GAAG;AACpB,MAAM,MAAM,CAAC,CAAC,4FAA4F,CAAC;AAC3G,MAAM,QAAQ,CAAC,CAAC,mBAAmB,CAAC;uCACrB,IAAM,IAAI,OAAO,CAAC,CAAC,mCAAmC,EAAE,MAAM,wBAAwB,EAAE,MAAM,gBAAgB,EAAE,IAAI,SAAS,EAAE,IAAI,EAAE,CAAC,EAAE","ignoreList":[0]}},
    {"offset": {"line": 42929, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 42935, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/regex/src/utils-internals.js"],"sourcesContent":["// Separating some utils for improved tree shaking of the `./internals` export\n\nconst noncapturingDelim = String.raw`\\(\\?(?:[:=!>A-Za-z\\-]|<[=!]|\\(DEFINE\\))`;\n\n/**\nUpdates the array in place by incrementing each value greater than or equal to the threshold.\n@param {Array<number>} arr\n@param {number} threshold\n*/\nfunction incrementIfAtLeast(arr, threshold) {\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] >= threshold) {\n      arr[i]++;\n    }\n  }\n}\n\n/**\n@param {string} str\n@param {number} pos\n@param {string} oldValue\n@param {string} newValue\n@returns {string}\n*/\nfunction spliceStr(str, pos, oldValue, newValue) {\n  return str.slice(0, pos) + newValue + str.slice(pos + oldValue.length);\n}\n\nexport {\n  incrementIfAtLeast,\n  noncapturingDelim,\n  spliceStr,\n};\n"],"names":[],"mappings":"AAAA,8EAA8E;;;;;;AAE9E,MAAM,oBAAoB,OAAO,GAAG,CAAC,uCAAuC,CAAC;AAE7E;;;;AAIA,GACA,SAAS,mBAAmB,GAAG,EAAE,SAAS;IACxC,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,MAAM,EAAE,IAAK;QACnC,IAAI,GAAG,CAAC,EAAE,IAAI,WAAW;YACvB,GAAG,CAAC,EAAE;QACR;IACF;AACF;AAEA;;;;;;AAMA,GACA,SAAS,UAAU,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,QAAQ;IAC7C,OAAO,IAAI,KAAK,CAAC,GAAG,OAAO,WAAW,IAAI,KAAK,CAAC,MAAM,SAAS,MAAM;AACvE","ignoreList":[0]}},
    {"offset": {"line": 42963, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 42969, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/regex/src/atomic.js"],"sourcesContent":["import {incrementIfAtLeast, noncapturingDelim, spliceStr} from './utils-internals.js';\nimport {Context, replaceUnescaped} from 'regex-utilities';\n\nconst atomicPluginToken = new RegExp(String.raw`(?<noncapturingStart>${noncapturingDelim})|(?<capturingStart>\\((?:\\?<[^>]+>)?)|\\\\?.`, 'gsu');\n\n/**\nApply transformations for atomic groups: `(?>…)`.\n@param {string} expression\n@param {import('./regex.js').PluginData} [data]\n@returns {Required<import('./regex.js').PluginResult>}\n*/\nfunction atomic(expression, data) {\n  const hiddenCaptures = data?.hiddenCaptures ?? [];\n  // Capture transfer is used by <github.com/slevithan/oniguruma-to-es>\n  let captureTransfers = data?.captureTransfers ?? new Map();\n  if (!/\\(\\?>/.test(expression)) {\n    return {\n      pattern: expression,\n      captureTransfers,\n      hiddenCaptures,\n    };\n  }\n\n  const aGDelim = '(?>';\n  const emulatedAGDelim = '(?:(?=(';\n  const captureNumMap = [0];\n  const addedHiddenCaptures = [];\n  let numCapturesBeforeAG = 0;\n  let numAGs = 0;\n  let aGPos = NaN;\n  let hasProcessedAG;\n  do {\n    hasProcessedAG = false;\n    let numCharClassesOpen = 0;\n    let numGroupsOpenInAG = 0;\n    let inAG = false;\n    let match;\n    atomicPluginToken.lastIndex = Number.isNaN(aGPos) ? 0 : aGPos + emulatedAGDelim.length;\n    while (match = atomicPluginToken.exec(expression)) {\n      const {0: m, index, groups: {capturingStart, noncapturingStart}} = match;\n      if (m === '[') {\n        numCharClassesOpen++;\n      } else if (!numCharClassesOpen) {\n\n        if (m === aGDelim && !inAG) {\n          aGPos = index;\n          inAG = true;\n        } else if (inAG && noncapturingStart) {\n          numGroupsOpenInAG++;\n        } else if (capturingStart) {\n          if (inAG) {\n            numGroupsOpenInAG++;\n          } else {\n            numCapturesBeforeAG++;\n            captureNumMap.push(numCapturesBeforeAG + numAGs);\n          }\n        } else if (m === ')' && inAG) {\n          if (!numGroupsOpenInAG) {\n            numAGs++;\n            const addedCaptureNum = numCapturesBeforeAG + numAGs;\n            // Replace `expression` and use `<$$N>` as a temporary wrapper for the backref so it\n            // can avoid backref renumbering afterward. Wrap the whole substitution (including the\n            // lookahead and following backref) in a noncapturing group to handle following\n            // quantifiers and literal digits\n            expression = `${expression.slice(0, aGPos)}${emulatedAGDelim}${\n                expression.slice(aGPos + aGDelim.length, index)\n              }))<$$${addedCaptureNum}>)${expression.slice(index + 1)}`;\n            hasProcessedAG = true;\n            addedHiddenCaptures.push(addedCaptureNum);\n            incrementIfAtLeast(hiddenCaptures, addedCaptureNum);\n            if (captureTransfers.size) {\n              const newCaptureTransfers = new Map();\n              captureTransfers.forEach((from, to) => {\n                newCaptureTransfers.set(\n                  to >= addedCaptureNum ? to + 1 : to,\n                  from.map(f => f >= addedCaptureNum ? f + 1 : f)\n                );\n              });\n              captureTransfers = newCaptureTransfers;\n            }\n            break;\n          }\n          numGroupsOpenInAG--;\n        }\n\n      } else if (m === ']') {\n        numCharClassesOpen--;\n      }\n    }\n  // Start over from the beginning of the atomic group's contents, in case the processed group\n  // contains additional atomic groups\n  } while (hasProcessedAG);\n\n  hiddenCaptures.push(...addedHiddenCaptures);\n\n  // Second pass to adjust numbered backrefs\n  expression = replaceUnescaped(\n    expression,\n    String.raw`\\\\(?<backrefNum>[1-9]\\d*)|<\\$\\$(?<wrappedBackrefNum>\\d+)>`,\n    ({0: m, groups: {backrefNum, wrappedBackrefNum}}) => {\n      if (backrefNum) {\n        const bNum = +backrefNum;\n        if (bNum > captureNumMap.length - 1) {\n          throw new Error(`Backref \"${m}\" greater than number of captures`);\n        }\n        return `\\\\${captureNumMap[bNum]}`;\n      }\n      return `\\\\${wrappedBackrefNum}`;\n    },\n    Context.DEFAULT\n  );\n\n  return {\n    pattern: expression,\n    captureTransfers,\n    hiddenCaptures,\n  };\n}\n\nconst baseQuantifier = String.raw`(?:[?*+]|\\{\\d+(?:,\\d*)?\\})`;\n// Complete tokenizer for base syntax; doesn't (need to) know about character-class-only syntax\nconst possessivePluginToken = new RegExp(String.raw`\n\\\\(?: \\d+\n  | c[A-Za-z]\n  | [gk]<[^>]+>\n  | [pPu]\\{[^\\}]+\\}\n  | u[A-Fa-f\\d]{4}\n  | x[A-Fa-f\\d]{2}\n  )\n| \\((?: \\? (?: [:=!>]\n  | <(?:[=!]|[^>]+>)\n  | [A-Za-z\\-]+:\n  | \\(DEFINE\\)\n  ))?\n| (?<qBase>${baseQuantifier})(?<qMod>[?+]?)(?<invalidQ>[?*+\\{]?)\n| \\\\?.\n`.replace(/\\s+/g, ''), 'gsu');\n\n/**\nTransform posessive quantifiers into atomic groups. The posessessive quantifiers are:\n`?+`, `*+`, `++`, `{N}+`, `{N,}+`, `{N,N}+`.\nThis follows Java, PCRE, Perl, and Python.\nPossessive quantifiers in Oniguruma and Onigmo are only: `?+`, `*+`, `++`.\n@param {string} expression\n@returns {import('./regex.js').PluginResult}\n*/\nfunction possessive(expression) {\n  if (!(new RegExp(`${baseQuantifier}\\\\+`).test(expression))) {\n    return {\n      pattern: expression,\n    };\n  }\n\n  const openGroupIndices = [];\n  let lastGroupIndex = null;\n  let lastCharClassIndex = null;\n  let lastToken = '';\n  let numCharClassesOpen = 0;\n  let match;\n  possessivePluginToken.lastIndex = 0;\n  while (match = possessivePluginToken.exec(expression)) {\n    const {0: m, index, groups: {qBase, qMod, invalidQ}} = match;\n    if (m === '[') {\n      if (!numCharClassesOpen) {\n        lastCharClassIndex = index;\n      }\n      numCharClassesOpen++;\n    } else if (m === ']') {\n      if (numCharClassesOpen) {\n        numCharClassesOpen--;\n      // Unmatched `]`\n      } else {\n        lastCharClassIndex = null;\n      }\n    } else if (!numCharClassesOpen) {\n\n      if (qMod === '+' && lastToken && !lastToken.startsWith('(')) {\n        // Invalid following quantifier would become valid via the wrapping group\n        if (invalidQ) {\n          throw new Error(`Invalid quantifier \"${m}\"`);\n        }\n        let charsAdded = -1; // -1 for removed trailing `+`\n        // Possessivizing fixed repetition quantifiers like `{2}` does't change their behavior, so\n        // avoid doing so (convert them to greedy)\n        if (/^\\{\\d+\\}$/.test(qBase)) {\n          expression = spliceStr(expression, index + qBase.length, qMod, '');\n        } else {\n          if (lastToken === ')' || lastToken === ']') {\n            const nodeIndex = lastToken === ')' ? lastGroupIndex : lastCharClassIndex;\n            // Unmatched `)` would break out of the wrapping group and mess with handling.\n            // Unmatched `]` wouldn't be a problem, but it's unnecessary to have dedicated support\n            // for unescaped `]++` since this won't work with flag u or v anyway\n            if (nodeIndex === null) {\n              throw new Error(`Invalid unmatched \"${lastToken}\"`);\n            }\n            expression = `${expression.slice(0, nodeIndex)}(?>${expression.slice(nodeIndex, index)}${qBase})${expression.slice(index + m.length)}`;\n          } else {\n            expression = `${expression.slice(0, index - lastToken.length)}(?>${lastToken}${qBase})${expression.slice(index + m.length)}`;\n          }\n          charsAdded += 4; // `(?>)`\n        }\n        possessivePluginToken.lastIndex += charsAdded;\n      } else if (m[0] === '(') {\n        openGroupIndices.push(index);\n      } else if (m === ')') {\n        lastGroupIndex = openGroupIndices.length ? openGroupIndices.pop() : null;\n      }\n\n    }\n    lastToken = m;\n  }\n\n  return {\n    pattern: expression,\n  };\n}\n\nexport {\n  atomic,\n  possessive,\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 43168, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 43174, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/regex/src/subclass.js"],"sourcesContent":["/**\nWorks the same as JavaScript's native `RegExp` constructor in all contexts, but automatically\nadjusts subpattern matches and indices (with flag `d`) to account for captures added as part of\nemulating extended syntax.\n*/\nclass RegExpSubclass extends RegExp {\n  // Avoid `#private` to allow for subclassing\n  /**\n  @private\n  @type {Map<number, {\n    hidden: true;\n  }>}\n  */\n  _captureMap;\n  /**\n  @overload\n  @param {string} expression\n  @param {string} [flags]\n  @param {{\n    hiddenCaptures?: Array<number>;\n  }} [options]\n  */\n  /**\n  @overload\n  @param {RegExpSubclass} expression\n  @param {string} [flags]\n  */\n  constructor(expression, flags, options) {\n    // Argument `options` isn't provided when regexes are copied via `new RegExpSubclass(regexp)`,\n    // including as part of the internal handling of string methods `matchAll` and `split`\n    if (expression instanceof RegExp) {\n      if (options) {\n        throw new Error('Cannot provide options when copying a regexp');\n      }\n      super(expression, flags);\n      if (expression instanceof RegExpSubclass) {\n        this._captureMap = expression._captureMap;\n      } else {\n        this._captureMap = new Map();\n      }\n    } else {\n      super(expression, flags);\n      const hiddenCaptures = options?.hiddenCaptures ?? [];\n      this._captureMap = createCaptureMap(hiddenCaptures);\n    }\n  }\n  /**\n  Called internally by all String/RegExp methods that use regexes.\n  @override\n  @param {string} str\n  @returns {RegExpExecArray | null}\n  */\n  exec(str) {\n    const match = super.exec(str);\n    if (!match || !this._captureMap.size) {\n      return match;\n    }\n    const matchCopy = [...match];\n    // Empty all but the first value of the array while preserving its other properties\n    match.length = 1;\n    let indicesCopy;\n    if (this.hasIndices) {\n      indicesCopy = [...match.indices];\n      match.indices.length = 1;\n    }\n    for (let i = 1; i < matchCopy.length; i++) {\n      if (!this._captureMap.get(i)?.hidden) {\n        match.push(matchCopy[i]);\n        if (this.hasIndices) {\n          match.indices.push(indicesCopy[i]);\n        }\n      }\n    }\n    return match;\n  }\n}\n\n/**\nBuild the capturing group map, with hidden captures marked to indicate their submatches shouldn't\nappear in match results.\n@param {Array<number>} hiddenCaptures\n@returns {Map<number, {\n  hidden: true;\n}>}\n*/\nfunction createCaptureMap(hiddenCaptures) {\n  const captureMap = new Map();\n  for (const num of hiddenCaptures) {\n    captureMap.set(num, {\n      hidden: true,\n    });\n  }\n  return captureMap;\n}\n\nexport {\n  RegExpSubclass,\n};\n"],"names":[],"mappings":"AAAA;;;;AAIA;;;AACA,MAAM,uBAAuB;IAC3B,4CAA4C;IAC5C;;;;;EAKA,GACA,YAAY;IACZ;;;;;;;EAOA,GACA;;;;EAIA,GACA,YAAY,UAAU,EAAE,KAAK,EAAE,OAAO,CAAE;QACtC,8FAA8F;QAC9F,sFAAsF;QACtF,IAAI,sBAAsB,QAAQ;YAChC,IAAI,SAAS;gBACX,MAAM,IAAI,MAAM;YAClB;YACA,KAAK,CAAC,YAAY;YAClB,IAAI,sBAAsB,gBAAgB;gBACxC,IAAI,CAAC,WAAW,GAAG,WAAW,WAAW;YAC3C,OAAO;gBACL,IAAI,CAAC,WAAW,GAAG,IAAI;YACzB;QACF,OAAO;YACL,KAAK,CAAC,YAAY;YAClB,MAAM,iBAAiB,SAAS,kBAAkB,EAAE;YACpD,IAAI,CAAC,WAAW,GAAG,iBAAiB;QACtC;IACF;IACA;;;;;EAKA,GACA,KAAK,GAAG,EAAE;QACR,MAAM,QAAQ,KAAK,CAAC,KAAK;QACzB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE;YACpC,OAAO;QACT;QACA,MAAM,YAAY;eAAI;SAAM;QAC5B,mFAAmF;QACnF,MAAM,MAAM,GAAG;QACf,IAAI;QACJ,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,cAAc;mBAAI,MAAM,OAAO;aAAC;YAChC,MAAM,OAAO,CAAC,MAAM,GAAG;QACzB;QACA,IAAK,IAAI,IAAI,GAAG,IAAI,UAAU,MAAM,EAAE,IAAK;YACzC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,QAAQ;gBACpC,MAAM,IAAI,CAAC,SAAS,CAAC,EAAE;gBACvB,IAAI,IAAI,CAAC,UAAU,EAAE;oBACnB,MAAM,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE;gBACnC;YACF;QACF;QACA,OAAO;IACT;AACF;AAEA;;;;;;;AAOA,GACA,SAAS,iBAAiB,cAAc;IACtC,MAAM,aAAa,IAAI;IACvB,KAAK,MAAM,OAAO,eAAgB;QAChC,WAAW,GAAG,CAAC,KAAK;YAClB,QAAQ;QACV;IACF;IACA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 43269, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 43275, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 43278, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 43294, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/regex-utilities/src/index.js"],"sourcesContent":["// Constant properties for tracking regex syntax context\nexport const Context = Object.freeze({\n  DEFAULT: 'DEFAULT',\n  CHAR_CLASS: 'CHAR_CLASS',\n});\n\n/**\nReplaces all unescaped instances of a regex pattern in the given context, using a replacement\nstring or callback.\n\nDoesn't skip over complete multicharacter tokens (only `\\` plus its folowing char) so must be used\nwith knowledge of what's safe to do given regex syntax. Assumes UnicodeSets-mode syntax.\n@param {string} expression Search target\n@param {string} needle Search as a regex pattern, with flags `su` applied\n@param {string | (match: RegExpExecArray, details: {\n  context: 'DEFAULT' | 'CHAR_CLASS';\n  negated: boolean;\n}) => string} replacement\n@param {'DEFAULT' | 'CHAR_CLASS'} [context] All contexts if not specified\n@returns {string} Updated expression\n@example\nconst str = '.\\\\.\\\\\\\\.[[\\\\.].].';\nreplaceUnescaped(str, '\\\\.', '@');\n// → '@\\\\.\\\\\\\\@[[\\\\.]@]@'\nreplaceUnescaped(str, '\\\\.', '@', Context.DEFAULT);\n// → '@\\\\.\\\\\\\\@[[\\\\.].]@'\nreplaceUnescaped(str, '\\\\.', '@', Context.CHAR_CLASS);\n// → '.\\\\.\\\\\\\\.[[\\\\.]@].'\n*/\nexport function replaceUnescaped(expression, needle, replacement, context) {\n  const re = new RegExp(String.raw`${needle}|(?<$skip>\\[\\^?|\\\\?.)`, 'gsu');\n  const negated = [false];\n  let numCharClassesOpen = 0;\n  let result = '';\n  for (const match of expression.matchAll(re)) {\n    const {0: m, groups: {$skip}} = match;\n    if (!$skip && (!context || (context === Context.DEFAULT) === !numCharClassesOpen)) {\n      if (replacement instanceof Function) {\n        result += replacement(match, {\n          context: numCharClassesOpen ? Context.CHAR_CLASS : Context.DEFAULT,\n          negated: negated[negated.length - 1],\n        });\n      } else {\n        result += replacement;\n      }\n      continue;\n    }\n    if (m[0] === '[') {\n      numCharClassesOpen++;\n      negated.push(m[1] === '^');\n    } else if (m === ']' && numCharClassesOpen) {\n      numCharClassesOpen--;\n      negated.pop();\n    }\n    result += m;\n  }\n  return result;\n}\n\n/**\nRuns a callback for each unescaped instance of a regex pattern in the given context.\n\nDoesn't skip over complete multicharacter tokens (only `\\` plus its folowing char) so must be used\nwith knowledge of what's safe to do given regex syntax. Assumes UnicodeSets-mode syntax.\n@param {string} expression Search target\n@param {string} needle Search as a regex pattern, with flags `su` applied\n@param {(match: RegExpExecArray, details: {\n  context: 'DEFAULT' | 'CHAR_CLASS';\n  negated: boolean;\n}) => void} callback\n@param {'DEFAULT' | 'CHAR_CLASS'} [context] All contexts if not specified\n*/\nexport function forEachUnescaped(expression, needle, callback, context) {\n  // Do this the easy way\n  replaceUnescaped(expression, needle, callback, context);\n}\n\n/**\nReturns a match object for the first unescaped instance of a regex pattern in the given context, or\n`null`.\n\nDoesn't skip over complete multicharacter tokens (only `\\` plus its folowing char) so must be used\nwith knowledge of what's safe to do given regex syntax. Assumes UnicodeSets-mode syntax.\n@param {string} expression Search target\n@param {string} needle Search as a regex pattern, with flags `su` applied\n@param {number} [pos] Offset to start the search\n@param {'DEFAULT' | 'CHAR_CLASS'} [context] All contexts if not specified\n@returns {RegExpExecArray | null}\n*/\nexport function execUnescaped(expression, needle, pos = 0, context) {\n  // Quick partial test; avoid the loop if not needed\n  if (!(new RegExp(needle, 'su').test(expression))) {\n    return null;\n  }\n  const re = new RegExp(`${needle}|(?<$skip>\\\\\\\\?.)`, 'gsu');\n  re.lastIndex = pos;\n  let numCharClassesOpen = 0;\n  let match;\n  while (match = re.exec(expression)) {\n    const {0: m, groups: {$skip}} = match;\n    if (!$skip && (!context || (context === Context.DEFAULT) === !numCharClassesOpen)) {\n      return match;\n    }\n    if (m === '[') {\n      numCharClassesOpen++;\n    } else if (m === ']' && numCharClassesOpen) {\n      numCharClassesOpen--;\n    }\n    // Avoid an infinite loop on zero-length matches\n    if (re.lastIndex == match.index) {\n      re.lastIndex++;\n    }\n  }\n  return null;\n}\n\n/**\nChecks whether an unescaped instance of a regex pattern appears in the given context.\n\nDoesn't skip over complete multicharacter tokens (only `\\` plus its folowing char) so must be used\nwith knowledge of what's safe to do given regex syntax. Assumes UnicodeSets-mode syntax.\n@param {string} expression Search target\n@param {string} needle Search as a regex pattern, with flags `su` applied\n@param {'DEFAULT' | 'CHAR_CLASS'} [context] All contexts if not specified\n@returns {boolean} Whether the pattern was found\n*/\nexport function hasUnescaped(expression, needle, context) {\n  // Do this the easy way\n  return !!execUnescaped(expression, needle, 0, context);\n}\n\n/**\nExtracts the full contents of a group (subpattern) from the given expression, accounting for\nescaped characters, nested groups, and character classes. The group is identified by the position\nwhere its contents start (the string index just after the group's opening delimiter). Returns the\nrest of the string if the group is unclosed.\n\nAssumes UnicodeSets-mode syntax.\n@param {string} expression Search target\n@param {number} contentsStartPos\n@returns {string}\n*/\nexport function getGroupContents(expression, contentsStartPos) {\n  const token = /\\\\?./gsu;\n  token.lastIndex = contentsStartPos;\n  let contentsEndPos = expression.length;\n  let numCharClassesOpen = 0;\n  // Starting search within an open group, after the group's opening\n  let numGroupsOpen = 1;\n  let match;\n  while (match = token.exec(expression)) {\n    const [m] = match;\n    if (m === '[') {\n      numCharClassesOpen++;\n    } else if (!numCharClassesOpen) {\n      if (m === '(') {\n        numGroupsOpen++;\n      } else if (m === ')') {\n        numGroupsOpen--;\n        if (!numGroupsOpen) {\n          contentsEndPos = match.index;\n          break;\n        }\n      }\n    } else if (m === ']') {\n      numCharClassesOpen--;\n    }\n  }\n  return expression.slice(contentsStartPos, contentsEndPos);\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 43400, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 43406, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/regex-recursion/src/index.js"],"sourcesContent":["import {Context, forEachUnescaped, getGroupContents, hasUnescaped, replaceUnescaped} from 'regex-utilities';\n\nconst r = String.raw;\nconst gRToken = r`\\\\g<(?<gRNameOrNum>[^>&]+)&R=(?<gRDepth>[^>]+)>`;\nconst recursiveToken = r`\\(\\?R=(?<rDepth>[^\\)]+)\\)|${gRToken}`;\nconst namedCaptureDelim = r`\\(\\?<(?![=!])(?<captureName>[^>]+)>`;\nconst captureDelim = r`${namedCaptureDelim}|(?<unnamed>\\()(?!\\?)`;\nconst token = new RegExp(r`${namedCaptureDelim}|${recursiveToken}|\\(\\?|\\\\?.`, 'gsu');\nconst overlappingRecursionMsg = 'Cannot use multiple overlapping recursions';\n\n/**\n@param {string} pattern\n@param {{\n  flags?: string;\n  captureTransfers?: Map<number, Array<number>>;\n  hiddenCaptures?: Array<number>;\n  mode?: 'plugin' | 'external';\n}} [data]\n@returns {{\n  pattern: string;\n  captureTransfers: Map<number, Array<number>>;\n  hiddenCaptures: Array<number>;\n}}\n*/\nfunction recursion(pattern, data) {\n  const {hiddenCaptures, mode} = {\n    hiddenCaptures: [],\n    mode: 'plugin',\n    ...data,\n  };\n  // Capture transfer is used by <github.com/slevithan/oniguruma-to-es>\n  let captureTransfers = data?.captureTransfers ?? new Map();\n  // Keep the initial fail-check (which avoids unneeded processing) as fast as possible by testing\n  // without the accuracy improvement of using `hasUnescaped` with `Context.DEFAULT`\n  if (!(new RegExp(recursiveToken, 'su').test(pattern))) {\n    return {\n      pattern,\n      captureTransfers,\n      hiddenCaptures,\n    };\n  }\n  if (mode === 'plugin' && hasUnescaped(pattern, r`\\(\\?\\(DEFINE\\)`, Context.DEFAULT)) {\n    throw new Error('DEFINE groups cannot be used with recursion');\n  }\n\n  const addedHiddenCaptures = [];\n  const hasNumberedBackref = hasUnescaped(pattern, r`\\\\[1-9]`, Context.DEFAULT);\n  const groupContentsStartPos = new Map();\n  const openGroups = [];\n  let hasRecursed = false;\n  let numCharClassesOpen = 0;\n  let numCapturesPassed = 0;\n  let match;\n  token.lastIndex = 0;\n  while ((match = token.exec(pattern))) {\n    const {0: m, groups: {captureName, rDepth, gRNameOrNum, gRDepth}} = match;\n    if (m === '[') {\n      numCharClassesOpen++;\n    } else if (!numCharClassesOpen) {\n\n      // `(?R=N)`\n      if (rDepth) {\n        assertMaxInBounds(rDepth);\n        if (hasRecursed) {\n          throw new Error(overlappingRecursionMsg);\n        }\n        if (hasNumberedBackref) {\n          // Could add support for numbered backrefs with extra effort, but it's probably not worth\n          // it. To trigger this error, the regex must include recursion and one of the following:\n          // - An interpolated regex that contains a numbered backref (since other numbered\n          //   backrefs are prevented by implicit flag n).\n          // - A numbered backref, when flag n is explicitly disabled.\n          // Note that Regex+'s extended syntax (atomic groups and sometimes subroutines) can also\n          // add numbered backrefs, but those work fine because external plugins like this one run\n          // *before* the transformation of built-in syntax extensions\n          throw new Error(\n            // When used in `external` mode by transpilers other than Regex+, backrefs might have\n            // gone through conversion from named to numbered, so avoid a misleading error\n            `${mode === 'external' ? 'Backrefs' : 'Numbered backrefs'} cannot be used with global recursion`\n          );\n        }\n        const left = pattern.slice(0, match.index);\n        const right = pattern.slice(token.lastIndex);\n        if (hasUnescaped(right, recursiveToken, Context.DEFAULT)) {\n          throw new Error(overlappingRecursionMsg);\n        }\n        const reps = +rDepth - 1;\n        pattern = makeRecursive(\n          left,\n          right,\n          reps,\n          false,\n          hiddenCaptures,\n          addedHiddenCaptures,\n          numCapturesPassed\n        );\n        captureTransfers = mapCaptureTransfers(\n          captureTransfers,\n          left,\n          reps,\n          addedHiddenCaptures.length,\n          0,\n          numCapturesPassed\n        );\n        // No need to parse further\n        break;\n      // `\\g<name&R=N>`, `\\g<number&R=N>`\n      } else if (gRNameOrNum) {\n        assertMaxInBounds(gRDepth);\n        let isWithinReffedGroup = false;\n        for (const g of openGroups) {\n          if (g.name === gRNameOrNum || g.num === +gRNameOrNum) {\n            isWithinReffedGroup = true;\n            if (g.hasRecursedWithin) {\n              throw new Error(overlappingRecursionMsg);\n            }\n            break;\n          }\n        }\n        if (!isWithinReffedGroup) {\n          throw new Error(r`Recursive \\g cannot be used outside the referenced group \"${\n            mode === 'external' ? gRNameOrNum : r`\\g<${gRNameOrNum}&R=${gRDepth}>`\n          }\"`);\n        }\n        const startPos = groupContentsStartPos.get(gRNameOrNum);\n        const groupContents = getGroupContents(pattern, startPos);\n        if (\n          hasNumberedBackref &&\n          hasUnescaped(groupContents, r`${namedCaptureDelim}|\\((?!\\?)`, Context.DEFAULT)\n        ) {\n          throw new Error(\n            // When used in `external` mode by transpilers other than Regex+, backrefs might have\n            // gone through conversion from named to numbered, so avoid a misleading error\n            `${mode === 'external' ? 'Backrefs' : 'Numbered backrefs'} cannot be used with recursion of capturing groups`\n          );\n        }\n        const groupContentsLeft = pattern.slice(startPos, match.index);\n        const groupContentsRight = groupContents.slice(groupContentsLeft.length + m.length);\n        const numAddedHiddenCapturesPreExpansion = addedHiddenCaptures.length;\n        const reps = +gRDepth - 1;\n        const expansion = makeRecursive(\n          groupContentsLeft,\n          groupContentsRight,\n          reps,\n          true,\n          hiddenCaptures,\n          addedHiddenCaptures,\n          numCapturesPassed\n        );\n        captureTransfers = mapCaptureTransfers(\n          captureTransfers,\n          groupContentsLeft,\n          reps,\n          addedHiddenCaptures.length - numAddedHiddenCapturesPreExpansion,\n          numAddedHiddenCapturesPreExpansion,\n          numCapturesPassed\n        );\n        const pre = pattern.slice(0, startPos);\n        const post = pattern.slice(startPos + groupContents.length);\n        // Modify the string we're looping over\n        pattern = `${pre}${expansion}${post}`;\n        // Step forward for the next loop iteration\n        token.lastIndex += expansion.length - m.length - groupContentsLeft.length - groupContentsRight.length;\n        openGroups.forEach(g => g.hasRecursedWithin = true);\n        hasRecursed = true;\n      } else if (captureName) {\n        numCapturesPassed++;\n        groupContentsStartPos.set(String(numCapturesPassed), token.lastIndex);\n        groupContentsStartPos.set(captureName, token.lastIndex);\n        openGroups.push({\n          num: numCapturesPassed,\n          name: captureName,\n        });\n      } else if (m[0] === '(') {\n        const isUnnamedCapture = m === '(';\n        if (isUnnamedCapture) {\n          numCapturesPassed++;\n          groupContentsStartPos.set(String(numCapturesPassed), token.lastIndex);\n        }\n        openGroups.push(isUnnamedCapture ? {num: numCapturesPassed} : {});\n      } else if (m === ')') {\n        openGroups.pop();\n      }\n\n    } else if (m === ']') {\n      numCharClassesOpen--;\n    }\n  }\n\n  hiddenCaptures.push(...addedHiddenCaptures);\n\n  return {\n    pattern,\n    captureTransfers,\n    hiddenCaptures,\n  };\n}\n\n/**\n@param {string} max\n*/\nfunction assertMaxInBounds(max) {\n  const errMsg = `Max depth must be integer between 2 and 100; used ${max}`;\n  if (!/^[1-9]\\d*$/.test(max)) {\n    throw new Error(errMsg);\n  }\n  max = +max;\n  if (max < 2 || max > 100) {\n    throw new Error(errMsg);\n  }\n}\n\n/**\n@param {string} left\n@param {string} right\n@param {number} reps\n@param {boolean} isSubpattern\n@param {Array<number>} hiddenCaptures\n@param {Array<number>} addedHiddenCaptures\n@param {number} numCapturesPassed\n@returns {string}\n*/\nfunction makeRecursive(\n  left,\n  right,\n  reps,\n  isSubpattern,\n  hiddenCaptures,\n  addedHiddenCaptures,\n  numCapturesPassed\n) {\n  const namesInRecursed = new Set();\n  // Can skip this work if not needed\n  if (isSubpattern) {\n    forEachUnescaped(left + right, namedCaptureDelim, ({groups: {captureName}}) => {\n      namesInRecursed.add(captureName);\n    }, Context.DEFAULT);\n  }\n  const rest = [\n    reps,\n    isSubpattern ? namesInRecursed : null,\n    hiddenCaptures,\n    addedHiddenCaptures,\n    numCapturesPassed,\n  ];\n  // Depth 2: 'left(?:left(?:)right)right'\n  // Depth 3: 'left(?:left(?:left(?:)right)right)right'\n  // Empty group in the middle separates tokens and absorbs a following quantifier if present\n  return `${left}${\n    repeatWithDepth(`(?:${left}`, 'forward', ...rest)\n  }(?:)${\n    repeatWithDepth(`${right})`, 'backward', ...rest)\n  }${right}`;\n}\n\n/**\n@param {string} pattern\n@param {'forward' | 'backward'} direction\n@param {number} reps\n@param {Set<string> | null} namesInRecursed\n@param {Array<number>} hiddenCaptures\n@param {Array<number>} addedHiddenCaptures\n@param {number} numCapturesPassed\n@returns {string}\n*/\nfunction repeatWithDepth(\n  pattern,\n  direction,\n  reps,\n  namesInRecursed,\n  hiddenCaptures,\n  addedHiddenCaptures,\n  numCapturesPassed\n) {\n  const startNum = 2;\n  const getDepthNum = i => direction === 'forward' ? (i + startNum) : (reps - i + startNum - 1);\n  let result = '';\n  for (let i = 0; i < reps; i++) {\n    const depthNum = getDepthNum(i);\n    result += replaceUnescaped(\n      pattern,\n      r`${captureDelim}|\\\\k<(?<backref>[^>]+)>`,\n      ({0: m, groups: {captureName, unnamed, backref}}) => {\n        if (backref && namesInRecursed && !namesInRecursed.has(backref)) {\n          // Don't alter backrefs to groups outside the recursed subpattern\n          return m;\n        }\n        const suffix = `_$${depthNum}`;\n        if (unnamed || captureName) {\n          const addedCaptureNum = numCapturesPassed + addedHiddenCaptures.length + 1;\n          addedHiddenCaptures.push(addedCaptureNum);\n          incrementIfAtLeast(hiddenCaptures, addedCaptureNum);\n          return unnamed ? m : `(?<${captureName}${suffix}>`;\n        }\n        return r`\\k<${backref}${suffix}>`;\n      },\n      Context.DEFAULT\n    );\n  }\n  return result;\n}\n\n/**\nUpdates the array in place by incrementing each value greater than or equal to the threshold.\n@param {Array<number>} arr\n@param {number} threshold\n*/\nfunction incrementIfAtLeast(arr, threshold) {\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] >= threshold) {\n      arr[i]++;\n    }\n  }\n}\n\n/**\n@param {Map<number, Array<number>>} captureTransfers\n@param {string} left\n@param {number} reps\n@param {number} numCapturesAddedInExpansion\n@param {number} numAddedHiddenCapturesPreExpansion\n@param {number} numCapturesPassed\n@returns {Map<number, Array<number>>}\n*/\nfunction mapCaptureTransfers(captureTransfers, left, reps, numCapturesAddedInExpansion, numAddedHiddenCapturesPreExpansion, numCapturesPassed) {\n  if (captureTransfers.size && numCapturesAddedInExpansion) {\n    let numCapturesInLeft = 0;\n    forEachUnescaped(left, captureDelim, () => numCapturesInLeft++, Context.DEFAULT);\n    // Is 0 for global recursion\n    const recursionDelimCaptureNum = numCapturesPassed - numCapturesInLeft + numAddedHiddenCapturesPreExpansion;\n    const newCaptureTransfers = new Map();\n    captureTransfers.forEach((from, to) => {\n      const numCapturesInRight = (numCapturesAddedInExpansion - (numCapturesInLeft * reps)) / reps;\n      const numCapturesAddedInLeft = numCapturesInLeft * reps;\n      const newTo = to > (recursionDelimCaptureNum + numCapturesInLeft) ? to + numCapturesAddedInExpansion : to;\n      const newFrom = [];\n      for (const f of from) {\n        // Before the recursed subpattern\n        if (f <= recursionDelimCaptureNum) {\n          newFrom.push(f);\n        // After the recursed subpattern\n        } else if (f > (recursionDelimCaptureNum + numCapturesInLeft + numCapturesInRight)) {\n          newFrom.push(f + numCapturesAddedInExpansion);\n        // Within the recursed subpattern, on the left of the recursion token\n        } else if (f <= (recursionDelimCaptureNum + numCapturesInLeft)) {\n          for (let i = 0; i <= reps; i++) {\n            newFrom.push(f + (numCapturesInLeft * i));\n          }\n        // Within the recursed subpattern, on the right of the recursion token\n        } else {\n          for (let i = 0; i <= reps; i++) {\n            newFrom.push(f + numCapturesAddedInLeft + (numCapturesInRight * i));\n          }\n        }\n      }\n      newCaptureTransfers.set(newTo, newFrom);\n    });\n    return newCaptureTransfers;\n  }\n  return captureTransfers;\n}\n\nexport {\n  recursion,\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 43691, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 43697, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/hast-util-is-element/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Parents} Parents\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is an element.\n * @param {unknown} this\n *   Context object (`this`) to call `test` with\n * @param {unknown} [element]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   Position of `element` in its parent.\n * @param {Parents | null | undefined} [parent]\n *   Parent of `element`.\n * @returns {boolean}\n *   Whether this is an element and passes a test.\n *\n * @typedef {Array<TestFunction | string> | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary element.\n *\n *   * when `string`, checks that the element has that tag name\n *   * when `function`, see `TestFunction`\n *   * when `Array`, checks if one of the subtests pass\n *\n * @callback TestFunction\n *   Check if an element passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Element} element\n *   An element.\n * @param {number | undefined} [index]\n *   Position of `element` in its parent.\n * @param {Parents | undefined} [parent]\n *   Parent of `element`.\n * @returns {boolean | undefined | void}\n *   Whether this element passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `element` is an `Element` and whether it passes the given test.\n *\n * @param element\n *   Thing to check, typically `element`.\n * @param test\n *   Check for a specific element.\n * @param index\n *   Position of `element` in its parent.\n * @param parent\n *   Parent of `element`.\n * @param context\n *   Context object (`this`) to call `test` with.\n * @returns\n *   Whether `element` is an `Element` and passes a test.\n * @throws\n *   When an incorrect `test`, `index`, or `parent` is given; there is no error\n *   thrown when `element` is not a node or not an element.\n */\nexport const isElement =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends TestFunction>(element: unknown, test: Condition, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & Predicate<Condition, Element>) &\n   *   (<Condition extends string>(element: unknown, test: Condition, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & {tagName: Condition}) &\n   *   ((element?: null | undefined) => false) &\n   *   ((element: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element) &\n   *   ((element: unknown, test?: Test, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [element]\n     * @param {Test | undefined} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parents | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (element, test, index, parent, context) {\n      const check = convertElement(test)\n\n      if (\n        index !== null &&\n        index !== undefined &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite `index`')\n      }\n\n      if (\n        parent !== null &&\n        parent !== undefined &&\n        (!parent.type || !parent.children)\n      ) {\n        throw new Error('Expected valid `parent`')\n      }\n\n      if (\n        (index === null || index === undefined) !==\n        (parent === null || parent === undefined)\n      ) {\n        throw new Error('Expected both `index` and `parent`')\n      }\n\n      return looksLikeAnElement(element)\n        ? check.call(context, element, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate a check from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * an `element`, `index`, and `parent`.\n *\n * @param test\n *   A test for a specific element.\n * @returns\n *   A check.\n */\nexport const convertElement =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends TestFunction>(test: Condition) => (element: unknown, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & Predicate<Condition, Element>) &\n   *   (<Condition extends string>(test: Condition) => (element: unknown, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & {tagName: Condition}) &\n   *   ((test?: null | undefined) => (element?: unknown, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test | null | undefined} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return element\n      }\n\n      if (typeof test === 'string') {\n        return tagNameFactory(test)\n      }\n\n      // Assume array.\n      if (typeof test === 'object') {\n        return anyFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or array as `test`')\n    }\n  )\n\n/**\n * Handle multiple tests.\n *\n * @param {Array<TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convertElement(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn a string into a test for an element with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction tagNameFactory(check) {\n  return castFactory(tagName)\n\n  /**\n   * @param {Element} element\n   * @returns {boolean}\n   */\n  function tagName(element) {\n    return element.tagName === check\n  }\n}\n\n/**\n * Turn a custom test into a test for an element that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeAnElement(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\n/**\n * Make sure something is an element.\n *\n * @param {unknown} element\n * @returns {element is Element}\n */\nfunction element(element) {\n  return Boolean(\n    element &&\n      typeof element === 'object' &&\n      'type' in element &&\n      element.type === 'element' &&\n      'tagName' in element &&\n      typeof element.tagName === 'string'\n  )\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Element}\n */\nfunction looksLikeAnElement(value) {\n  return (\n    value !== null &&\n    typeof value === 'object' &&\n    'type' in value &&\n    'tagName' in value\n  )\n}\n"],"names":[],"mappings":"AAAA;;;CAGC,GAED;;;;CAIC,GAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAmCC,GAED;;;;;;;;;;;;;;;;;;CAkBC;;;;AACM,MAAM,YAYT;;;;;;;KAOC,GACD,sCAAsC;AACtC,SAAU,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO;IAC7C,MAAM,QAAQ,eAAe;IAE7B,IACE,UAAU,QACV,UAAU,aACV,CAAC,OAAO,UAAU,YAChB,QAAQ,KACR,UAAU,OAAO,iBAAiB,GACpC;QACA,MAAM,IAAI,MAAM;IAClB;IAEA,IACE,WAAW,QACX,WAAW,aACX,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,QAAQ,GACjC;QACA,MAAM,IAAI,MAAM;IAClB;IAEA,IACE,CAAC,UAAU,QAAQ,UAAU,SAAS,MACtC,CAAC,WAAW,QAAQ,WAAW,SAAS,GACxC;QACA,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO,mBAAmB,WACtB,MAAM,IAAI,CAAC,SAAS,SAAS,OAAO,UACpC;AACN;AAiBG,MAAM,iBAWT;;;KAGC,GACD,SAAU,IAAI;IACZ,IAAI,SAAS,QAAQ,SAAS,WAAW;QACvC,OAAO;IACT;IAEA,IAAI,OAAO,SAAS,UAAU;QAC5B,OAAO,eAAe;IACxB;IAEA,gBAAgB;IAChB,IAAI,OAAO,SAAS,UAAU;QAC5B,OAAO,WAAW;IACpB;IAEA,IAAI,OAAO,SAAS,YAAY;QAC9B,OAAO,YAAY;IACrB;IAEA,MAAM,IAAI,MAAM;AAClB;AAGJ;;;;;CAKC,GACD,SAAS,WAAW,KAAK;IACvB,yBAAyB,GACzB,MAAM,SAAS,EAAE;IACjB,IAAI,QAAQ,CAAC;IAEb,MAAO,EAAE,QAAQ,MAAM,MAAM,CAAE;QAC7B,MAAM,CAAC,MAAM,GAAG,eAAe,KAAK,CAAC,MAAM;IAC7C;IAEA,OAAO,YAAY;;IAEnB;;;GAGC,GACD,SAAS,IAAI,GAAG,UAAU;QACxB,IAAI,QAAQ,CAAC;QAEb,MAAO,EAAE,QAAQ,OAAO,MAAM,CAAE;YAC9B,IAAI,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,aAAa,OAAO;QACpD;QAEA,OAAO;IACT;AACF;AAEA;;;;;CAKC,GACD,SAAS,eAAe,KAAK;IAC3B,OAAO,YAAY;;IAEnB;;;GAGC,GACD,SAAS,QAAQ,OAAO;QACtB,OAAO,QAAQ,OAAO,KAAK;IAC7B;AACF;AAEA;;;;;CAKC,GACD,SAAS,YAAY,YAAY;IAC/B,OAAO;;IAEP;;;GAGC,GACD,SAAS,MAAM,KAAK,EAAE,KAAK,EAAE,MAAM;QACjC,OAAO,QACL,mBAAmB,UACjB,aAAa,IAAI,CACf,IAAI,EACJ,OACA,OAAO,UAAU,WAAW,QAAQ,WACpC,UAAU;IAGlB;AACF;AAEA;;;;;CAKC,GACD,SAAS,QAAQ,OAAO;IACtB,OAAO,QACL,WACE,OAAO,YAAY,YACnB,UAAU,WACV,QAAQ,IAAI,KAAK,aACjB,aAAa,WACb,OAAO,QAAQ,OAAO,KAAK;AAEjC;AAEA;;;CAGC,GACD,SAAS,mBAAmB,KAAK;IAC/B,OACE,UAAU,QACV,OAAO,UAAU,YACjB,UAAU,SACV,aAAa;AAEjB","ignoreList":[0]}},
    {"offset": {"line": 43869, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 43875, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/unist-util-find-after/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {(\n *   Kind extends {children: Array<infer Child>}\n *   ? Child\n *   : never\n * )} Child\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Kind\n *   All node types.\n */\n\nimport {convert} from 'unist-util-is'\n\n/**\n * Find the first node in `parent` after another `node` or after an index,\n * that passes `test`.\n *\n * @param parent\n *   Parent node.\n * @param index\n *   Child node or index.\n * @param [test=undefined]\n *   Test for child to look for (optional).\n * @returns\n *   A child (matching `test`, if given) or `undefined`.\n */\nexport const findAfter =\n  // Note: overloads like this are needed to support optional generics.\n  /**\n   * @type {(\n   *   (<Kind extends UnistParent, Check extends Test>(parent: Kind, index: Child<Kind> | number, test: Check) => Matches<Child<Kind>, Check> | undefined) &\n   *   (<Kind extends UnistParent>(parent: Kind, index: Child<Kind> | number, test?: null | undefined) => Child<Kind> | undefined)\n   * )}\n   */\n  (\n    /**\n     * @param {UnistParent} parent\n     * @param {UnistNode | number} index\n     * @param {Test} [test]\n     * @returns {UnistNode | undefined}\n     */\n    function (parent, index, test) {\n      const is = convert(test)\n\n      if (!parent || !parent.type || !parent.children) {\n        throw new Error('Expected parent node')\n      }\n\n      if (typeof index === 'number') {\n        if (index < 0 || index === Number.POSITIVE_INFINITY) {\n          throw new Error('Expected positive finite number as index')\n        }\n      } else {\n        index = parent.children.indexOf(index)\n\n        if (index < 0) {\n          throw new Error('Expected child node or index')\n        }\n      }\n\n      while (++index < parent.children.length) {\n        if (is(parent.children[index], index, parent)) {\n          return parent.children[index]\n        }\n      }\n\n      return undefined\n    }\n  )\n"],"names":[],"mappings":"AAAA;;;CAGC,GAED;;;;;;;CAOC,GAED;;;;;;;;;;;CAWC,GAED;;;;;;;;;;;;;;;;;;;CAmBC,GAED;;;;;;;;;;;CAWC,GAED;;;;;;;;;CASC;;;AAED;;AAeO,MAAM,YAST;;;;;KAKC,GACD,SAAU,MAAM,EAAE,KAAK,EAAE,IAAI;IAC3B,MAAM,KAAK,CAAA,GAAA,+IAAA,CAAA,UAAO,AAAD,EAAE;IAEnB,IAAI,CAAC,UAAU,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,QAAQ,EAAE;QAC/C,MAAM,IAAI,MAAM;IAClB;IAEA,IAAI,OAAO,UAAU,UAAU;QAC7B,IAAI,QAAQ,KAAK,UAAU,OAAO,iBAAiB,EAAE;YACnD,MAAM,IAAI,MAAM;QAClB;IACF,OAAO;QACL,QAAQ,OAAO,QAAQ,CAAC,OAAO,CAAC;QAEhC,IAAI,QAAQ,GAAG;YACb,MAAM,IAAI,MAAM;QAClB;IACF;IAEA,MAAO,EAAE,QAAQ,OAAO,QAAQ,CAAC,MAAM,CAAE;QACvC,IAAI,GAAG,OAAO,QAAQ,CAAC,MAAM,EAAE,OAAO,SAAS;YAC7C,OAAO,OAAO,QAAQ,CAAC,MAAM;QAC/B;IACF;IAEA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 43967, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 43973, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/hast-util-to-text/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast-util-is-element').TestFunction} TestFunction\n */\n\n/**\n * @typedef {'normal' | 'nowrap' | 'pre' | 'pre-wrap'} Whitespace\n *   Valid and useful whitespace values (from CSS).\n *\n * @typedef {0 | 1 | 2} BreakNumber\n *   Specific break:\n *\n *   *   `0` — space\n *   *   `1` — line ending\n *   *   `2` — blank line\n *\n * @typedef {'\\n'} BreakForce\n *   Forced break.\n *\n * @typedef {boolean} BreakValue\n *   Whether there was a break.\n *\n * @typedef {BreakNumber | BreakValue | undefined} BreakBefore\n *   Any value for a break before.\n *\n * @typedef {BreakForce | BreakNumber | BreakValue | undefined} BreakAfter\n *   Any value for a break after.\n *\n * @typedef CollectionInfo\n *   Info on current collection.\n * @property {BreakAfter} breakAfter\n *   Whether there was a break after.\n * @property {BreakBefore} breakBefore\n *   Whether there was a break before.\n * @property {Whitespace} whitespace\n *   Current whitespace setting.\n *\n * @typedef Options\n *   Configuration.\n * @property {Whitespace | null | undefined} [whitespace='normal']\n *   Initial CSS whitespace setting to use (default: `'normal'`).\n */\n\nimport {findAfter} from 'unist-util-find-after'\nimport {convertElement} from 'hast-util-is-element'\n\nconst searchLineFeeds = /\\n/g\nconst searchTabOrSpaces = /[\\t ]+/g\n\nconst br = convertElement('br')\nconst cell = convertElement(isCell)\nconst p = convertElement('p')\nconst row = convertElement('tr')\n\n// Note that we don’t need to include void elements here as they don’t have text.\n// See: <https://github.com/wooorm/html-void-elements>\nconst notRendered = convertElement([\n  // List from: <https://html.spec.whatwg.org/multipage/rendering.html#hidden-elements>\n  'datalist',\n  'head',\n  'noembed',\n  'noframes',\n  'noscript', // Act as if we support scripting.\n  'rp',\n  'script',\n  'style',\n  'template',\n  'title',\n  // Hidden attribute.\n  hidden,\n  // From: <https://html.spec.whatwg.org/multipage/rendering.html#flow-content-3>\n  closedDialog\n])\n\n// See: <https://html.spec.whatwg.org/multipage/rendering.html#the-css-user-agent-style-sheet-and-presentational-hints>\nconst blockOrCaption = convertElement([\n  'address', // Flow content\n  'article', // Sections and headings\n  'aside', // Sections and headings\n  'blockquote', // Flow content\n  'body', // Page\n  'caption', // `table-caption`\n  'center', // Flow content (legacy)\n  'dd', // Lists\n  'dialog', // Flow content\n  'dir', // Lists (legacy)\n  'dl', // Lists\n  'dt', // Lists\n  'div', // Flow content\n  'figure', // Flow content\n  'figcaption', // Flow content\n  'footer', // Flow content\n  'form,', // Flow content\n  'h1', // Sections and headings\n  'h2', // Sections and headings\n  'h3', // Sections and headings\n  'h4', // Sections and headings\n  'h5', // Sections and headings\n  'h6', // Sections and headings\n  'header', // Flow content\n  'hgroup', // Sections and headings\n  'hr', // Flow content\n  'html', // Page\n  'legend', // Flow content\n  'li', // Lists (as `display: list-item`)\n  'listing', // Flow content (legacy)\n  'main', // Flow content\n  'menu', // Lists\n  'nav', // Sections and headings\n  'ol', // Lists\n  'p', // Flow content\n  'plaintext', // Flow content (legacy)\n  'pre', // Flow content\n  'section', // Sections and headings\n  'ul', // Lists\n  'xmp' // Flow content (legacy)\n])\n\n/**\n * Get the plain-text value of a node.\n *\n * ###### Algorithm\n *\n * *   if `tree` is a comment, returns its `value`\n * *   if `tree` is a text, applies normal whitespace collapsing to its\n *     `value`, as defined by the CSS Text spec\n * *   if `tree` is a root or element, applies an algorithm similar to the\n *     `innerText` getter as defined by HTML\n *\n * ###### Notes\n *\n * > 👉 **Note**: the algorithm acts as if `tree` is being rendered, and as if\n * > we’re a CSS-supporting user agent, with scripting enabled.\n *\n * *   if `tree` is an element that is not displayed (such as a `head`), we’ll\n *     still use the `innerText` algorithm instead of switching to `textContent`\n * *   if descendants of `tree` are elements that are not displayed, they are\n *     ignored\n * *   CSS is not considered, except for the default user agent style sheet\n * *   a line feed is collapsed instead of ignored in cases where Fullwidth, Wide,\n *     or Halfwidth East Asian Width characters are used, the same goes for a case\n *     with Chinese, Japanese, or Yi writing systems\n * *   replaced elements (such as `audio`) are treated like non-replaced elements\n *\n * @param {Nodes} tree\n *   Tree to turn into text.\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `tree`.\n */\nexport function toText(tree, options) {\n  const options_ = options || {}\n  const children = 'children' in tree ? tree.children : []\n  const block = blockOrCaption(tree)\n  const whitespace = inferWhitespace(tree, {\n    whitespace: options_.whitespace || 'normal',\n    breakBefore: false,\n    breakAfter: false\n  })\n\n  /** @type {Array<BreakNumber | string>} */\n  const results = []\n\n  // Treat `text` and `comment` as having normal white-space.\n  // This deviates from the spec as in the DOM the node’s `.data` has to be\n  // returned.\n  // If you want that behavior use `hast-util-to-string`.\n  // All other nodes are later handled as if they are `element`s (so the\n  // algorithm also works on a `root`).\n  // Nodes without children are treated as a void element, so `doctype` is thus\n  // ignored.\n  if (tree.type === 'text' || tree.type === 'comment') {\n    results.push(\n      ...collectText(tree, {\n        whitespace,\n        breakBefore: true,\n        breakAfter: true\n      })\n    )\n  }\n\n  // 1.  If this element is not being rendered, or if the user agent is a\n  //     non-CSS user agent, then return the same value as the textContent IDL\n  //     attribute on this element.\n  //\n  //     Note: we’re not supporting stylesheets so we’re acting as if the node\n  //     is rendered.\n  //\n  //     If you want that behavior use `hast-util-to-string`.\n  //     Important: we’ll have to account for this later though.\n\n  // 2.  Let results be a new empty list.\n  let index = -1\n\n  // 3.  For each child node node of this element:\n  while (++index < children.length) {\n    // 3.1. Let current be the list resulting in running the inner text\n    //      collection steps with node.\n    //      Each item in results will either be a JavaScript string or a\n    //      positive integer (a required line break count).\n    // 3.2. For each item item in current, append item to results.\n    results.push(\n      ...renderedTextCollection(\n        children[index],\n        // @ts-expect-error: `tree` is a parent if we’re here.\n        tree,\n        {\n          whitespace,\n          breakBefore: index ? undefined : block,\n          breakAfter:\n            index < children.length - 1 ? br(children[index + 1]) : block\n        }\n      )\n    )\n  }\n\n  // 4.  Remove any items from results that are the empty string.\n  // 5.  Remove any runs of consecutive required line break count items at the\n  //     start or end of results.\n  // 6.  Replace each remaining run of consecutive required line break count\n  //     items with a string consisting of as many U+000A LINE FEED (LF)\n  //     characters as the maximum of the values in the required line break\n  //     count items.\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {number | undefined} */\n  let count\n\n  index = -1\n\n  while (++index < results.length) {\n    const value = results[index]\n\n    if (typeof value === 'number') {\n      if (count !== undefined && value > count) count = value\n    } else if (value) {\n      if (count !== undefined && count > -1) {\n        result.push('\\n'.repeat(count) || ' ')\n      }\n\n      count = -1\n      result.push(value)\n    }\n  }\n\n  // 7.  Return the concatenation of the string items in results.\n  return result.join('')\n}\n\n/**\n * <https://html.spec.whatwg.org/multipage/dom.html#rendered-text-collection-steps>\n *\n * @param {Nodes} node\n * @param {Parents} parent\n * @param {CollectionInfo} info\n * @returns {Array<BreakNumber | string>}\n */\nfunction renderedTextCollection(node, parent, info) {\n  if (node.type === 'element') {\n    return collectElement(node, parent, info)\n  }\n\n  if (node.type === 'text') {\n    return info.whitespace === 'normal'\n      ? collectText(node, info)\n      : collectPreText(node)\n  }\n\n  return []\n}\n\n/**\n * Collect an element.\n *\n * @param {Element} node\n *   Element node.\n * @param {Parents} parent\n * @param {CollectionInfo} info\n *   Info on current collection.\n * @returns {Array<BreakNumber | string>}\n */\nfunction collectElement(node, parent, info) {\n  // First we infer the `white-space` property.\n  const whitespace = inferWhitespace(node, info)\n  const children = node.children || []\n  let index = -1\n  /** @type {Array<BreakNumber | string>} */\n  let items = []\n\n  // We’re ignoring point 3, and exiting without any content here, because we\n  // deviated from the spec in `toText` at step 3.\n  if (notRendered(node)) {\n    return items\n  }\n\n  /** @type {BreakNumber | undefined} */\n  let prefix\n  /** @type {BreakForce | BreakNumber | undefined} */\n  let suffix\n  // Note: we first detect if there is going to be a break before or after the\n  // contents, as that changes the white-space handling.\n\n  // 2.  If node’s computed value of `visibility` is not `visible`, then return\n  //     items.\n  //\n  //     Note: Ignored, as everything is visible by default user agent styles.\n\n  // 3.  If node is not being rendered, then return items. [...]\n  //\n  //     Note: We already did this above.\n\n  // See `collectText` for step 4.\n\n  // 5.  If node is a `<br>` element, then append a string containing a single\n  //     U+000A LINE FEED (LF) character to items.\n  if (br(node)) {\n    suffix = '\\n'\n  }\n\n  // 7.  If node’s computed value of `display` is `table-row`, and node’s CSS\n  //     box is not the last `table-row` box of the nearest ancestor `table`\n  //     box, then append a string containing a single U+000A LINE FEED (LF)\n  //     character to items.\n  //\n  //     See: <https://html.spec.whatwg.org/multipage/rendering.html#tables-2>\n  //     Note: needs further investigation as this does not account for implicit\n  //     rows.\n  else if (\n    row(node) &&\n    // @ts-expect-error: something up with types of parents.\n    findAfter(parent, node, row)\n  ) {\n    suffix = '\\n'\n  }\n\n  // 8.  If node is a `<p>` element, then append 2 (a required line break count)\n  //     at the beginning and end of items.\n  else if (p(node)) {\n    prefix = 2\n    suffix = 2\n  }\n\n  // 9.  If node’s used value of `display` is block-level or `table-caption`,\n  //     then append 1 (a required line break count) at the beginning and end of\n  //     items.\n  else if (blockOrCaption(node)) {\n    prefix = 1\n    suffix = 1\n  }\n\n  // 1.  Let items be the result of running the inner text collection steps with\n  //     each child node of node in tree order, and then concatenating the\n  //     results to a single list.\n  while (++index < children.length) {\n    items = items.concat(\n      renderedTextCollection(children[index], node, {\n        whitespace,\n        breakBefore: index ? undefined : prefix,\n        breakAfter:\n          index < children.length - 1 ? br(children[index + 1]) : suffix\n      })\n    )\n  }\n\n  // 6.  If node’s computed value of `display` is `table-cell`, and node’s CSS\n  //     box is not the last `table-cell` box of its enclosing `table-row` box,\n  //     then append a string containing a single U+0009 CHARACTER TABULATION\n  //     (tab) character to items.\n  //\n  //     See: <https://html.spec.whatwg.org/multipage/rendering.html#tables-2>\n  if (\n    cell(node) &&\n    // @ts-expect-error: something up with types of parents.\n    findAfter(parent, node, cell)\n  ) {\n    items.push('\\t')\n  }\n\n  // Add the pre- and suffix.\n  if (prefix) items.unshift(prefix)\n  if (suffix) items.push(suffix)\n\n  return items\n}\n\n/**\n * 4.  If node is a Text node, then for each CSS text box produced by node,\n *     in content order, compute the text of the box after application of the\n *     CSS `white-space` processing rules and `text-transform` rules, set\n *     items to the list of the resulting strings, and return items.\n *     The CSS `white-space` processing rules are slightly modified:\n *     collapsible spaces at the end of lines are always collapsed, but they\n *     are only removed if the line is the last line of the block, or it ends\n *     with a br element.\n *     Soft hyphens should be preserved.\n *\n *     Note: See `collectText` and `collectPreText`.\n *     Note: we don’t deal with `text-transform`, no element has that by\n *     default.\n *\n * See: <https://drafts.csswg.org/css-text/#white-space-phase-1>\n *\n * @param {Comment | Text} node\n *   Text node.\n * @param {CollectionInfo} info\n *   Info on current collection.\n * @returns {Array<BreakNumber | string>}\n *   Result.\n */\nfunction collectText(node, info) {\n  const value = String(node.value)\n  /** @type {Array<string>} */\n  const lines = []\n  /** @type {Array<BreakNumber | string>} */\n  const result = []\n  let start = 0\n\n  while (start <= value.length) {\n    searchLineFeeds.lastIndex = start\n\n    const match = searchLineFeeds.exec(value)\n    const end = match && 'index' in match ? match.index : value.length\n\n    lines.push(\n      // Any sequence of collapsible spaces and tabs immediately preceding or\n      // following a segment break is removed.\n      trimAndCollapseSpacesAndTabs(\n        // […] ignoring bidi formatting characters (characters with the\n        // Bidi_Control property [UAX9]: ALM, LTR, RTL, LRE-RLO, LRI-PDI) as if\n        // they were not there.\n        value\n          .slice(start, end)\n          .replace(/[\\u061C\\u200E\\u200F\\u202A-\\u202E\\u2066-\\u2069]/g, ''),\n        start === 0 ? info.breakBefore : true,\n        end === value.length ? info.breakAfter : true\n      )\n    )\n\n    start = end + 1\n  }\n\n  // Collapsible segment breaks are transformed for rendering according to the\n  // segment break transformation rules.\n  // So here we jump to 4.1.2 of [CSSTEXT]:\n  // Any collapsible segment break immediately following another collapsible\n  // segment break is removed\n  let index = -1\n  /** @type {BreakNumber | undefined} */\n  let join\n\n  while (++index < lines.length) {\n    // *   If the character immediately before or immediately after the segment\n    //     break is the zero-width space character (U+200B), then the break is\n    //     removed, leaving behind the zero-width space.\n    if (\n      lines[index].charCodeAt(lines[index].length - 1) === 0x20_0b /* ZWSP */ ||\n      (index < lines.length - 1 &&\n        lines[index + 1].charCodeAt(0) === 0x20_0b) /* ZWSP */\n    ) {\n      result.push(lines[index])\n      join = undefined\n    }\n\n    // *   Otherwise, if the East Asian Width property [UAX11] of both the\n    //     character before and after the segment break is Fullwidth, Wide, or\n    //     Halfwidth (not Ambiguous), and neither side is Hangul, then the\n    //     segment break is removed.\n    //\n    //     Note: ignored.\n    // *   Otherwise, if the writing system of the segment break is Chinese,\n    //     Japanese, or Yi, and the character before or after the segment break\n    //     is punctuation or a symbol (Unicode general category P* or S*) and\n    //     has an East Asian Width property of Ambiguous, and the character on\n    //     the other side of the segment break is Fullwidth, Wide, or Halfwidth,\n    //     and not Hangul, then the segment break is removed.\n    //\n    //     Note: ignored.\n\n    // *   Otherwise, the segment break is converted to a space (U+0020).\n    else if (lines[index]) {\n      if (typeof join === 'number') result.push(join)\n      result.push(lines[index])\n      join = 0\n    } else if (index === 0 || index === lines.length - 1) {\n      // If this line is empty, and it’s the first or last, add a space.\n      // Note that this function is only called in normal whitespace, so we\n      // don’t worry about `pre`.\n      result.push(0)\n    }\n  }\n\n  return result\n}\n\n/**\n * Collect a text node as “pre” whitespace.\n *\n * @param {Text} node\n *   Text node.\n * @returns {Array<BreakNumber | string>}\n *   Result.\n */\nfunction collectPreText(node) {\n  return [String(node.value)]\n}\n\n/**\n * 3.  Every collapsible tab is converted to a collapsible space (U+0020).\n * 4.  Any collapsible space immediately following another collapsible\n *     space—even one outside the boundary of the inline containing that\n *     space, provided both spaces are within the same inline formatting\n *     context—is collapsed to have zero advance width. (It is invisible,\n *     but retains its soft wrap opportunity, if any.)\n *\n * @param {string} value\n *   Value to collapse.\n * @param {BreakBefore} breakBefore\n *   Whether there was a break before.\n * @param {BreakAfter} breakAfter\n *   Whether there was a break after.\n * @returns {string}\n *   Result.\n */\nfunction trimAndCollapseSpacesAndTabs(value, breakBefore, breakAfter) {\n  /** @type {Array<string>} */\n  const result = []\n  let start = 0\n  /** @type {number | undefined} */\n  let end\n\n  while (start < value.length) {\n    searchTabOrSpaces.lastIndex = start\n    const match = searchTabOrSpaces.exec(value)\n    end = match ? match.index : value.length\n\n    // If we’re not directly after a segment break, but there was white space,\n    // add an empty value that will be turned into a space.\n    if (!start && !end && match && !breakBefore) {\n      result.push('')\n    }\n\n    if (start !== end) {\n      result.push(value.slice(start, end))\n    }\n\n    start = match ? end + match[0].length : end\n  }\n\n  // If we reached the end, there was trailing white space, and there’s no\n  // segment break after this node, add an empty value that will be turned\n  // into a space.\n  if (start !== end && !breakAfter) {\n    result.push('')\n  }\n\n  return result.join(' ')\n}\n\n/**\n * Figure out the whitespace of a node.\n *\n * We don’t support void elements here (so `nobr wbr` -> `normal` is ignored).\n *\n * @param {Nodes} node\n *   Node (typically `Element`).\n * @param {CollectionInfo} info\n *   Info on current collection.\n * @returns {Whitespace}\n *   Applied whitespace.\n */\nfunction inferWhitespace(node, info) {\n  if (node.type === 'element') {\n    const properties = node.properties || {}\n    switch (node.tagName) {\n      case 'listing':\n      case 'plaintext':\n      case 'xmp': {\n        return 'pre'\n      }\n\n      case 'nobr': {\n        return 'nowrap'\n      }\n\n      case 'pre': {\n        return properties.wrap ? 'pre-wrap' : 'pre'\n      }\n\n      case 'td':\n      case 'th': {\n        return properties.noWrap ? 'nowrap' : info.whitespace\n      }\n\n      case 'textarea': {\n        return 'pre-wrap'\n      }\n\n      default:\n    }\n  }\n\n  return info.whitespace\n}\n\n/**\n * @type {TestFunction}\n * @param {Element} node\n * @returns {node is {properties: {hidden: true}}}\n */\nfunction hidden(node) {\n  return Boolean((node.properties || {}).hidden)\n}\n\n/**\n * @type {TestFunction}\n * @param {Element} node\n * @returns {node is {tagName: 'td' | 'th'}}\n */\nfunction isCell(node) {\n  return node.tagName === 'td' || node.tagName === 'th'\n}\n\n/**\n * @type {TestFunction}\n */\nfunction closedDialog(node) {\n  return node.tagName === 'dialog' && !(node.properties || {}).open\n}\n"],"names":[],"mappings":"AAAA;;;;;;;CAOC,GAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAoCC;;;AAGD;AADA;;;AAGA,MAAM,kBAAkB;AACxB,MAAM,oBAAoB;AAE1B,MAAM,KAAK,CAAA,GAAA,yJAAA,CAAA,iBAAc,AAAD,EAAE;AAC1B,MAAM,OAAO,CAAA,GAAA,yJAAA,CAAA,iBAAc,AAAD,EAAE;AAC5B,MAAM,IAAI,CAAA,GAAA,yJAAA,CAAA,iBAAc,AAAD,EAAE;AACzB,MAAM,MAAM,CAAA,GAAA,yJAAA,CAAA,iBAAc,AAAD,EAAE;AAE3B,iFAAiF;AACjF,sDAAsD;AACtD,MAAM,cAAc,CAAA,GAAA,yJAAA,CAAA,iBAAc,AAAD,EAAE;IACjC,qFAAqF;IACrF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,oBAAoB;IACpB;IACA,+EAA+E;IAC/E;CACD;AAED,uHAAuH;AACvH,MAAM,iBAAiB,CAAA,GAAA,yJAAA,CAAA,iBAAc,AAAD,EAAE;IACpC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAM,wBAAwB;CAC/B;AAmCM,SAAS,OAAO,IAAI,EAAE,OAAO;IAClC,MAAM,WAAW,WAAW,CAAC;IAC7B,MAAM,WAAW,cAAc,OAAO,KAAK,QAAQ,GAAG,EAAE;IACxD,MAAM,QAAQ,eAAe;IAC7B,MAAM,aAAa,gBAAgB,MAAM;QACvC,YAAY,SAAS,UAAU,IAAI;QACnC,aAAa;QACb,YAAY;IACd;IAEA,wCAAwC,GACxC,MAAM,UAAU,EAAE;IAElB,2DAA2D;IAC3D,yEAAyE;IACzE,YAAY;IACZ,uDAAuD;IACvD,sEAAsE;IACtE,qCAAqC;IACrC,6EAA6E;IAC7E,WAAW;IACX,IAAI,KAAK,IAAI,KAAK,UAAU,KAAK,IAAI,KAAK,WAAW;QACnD,QAAQ,IAAI,IACP,YAAY,MAAM;YACnB;YACA,aAAa;YACb,YAAY;QACd;IAEJ;IAEA,uEAAuE;IACvE,4EAA4E;IAC5E,iCAAiC;IACjC,EAAE;IACF,4EAA4E;IAC5E,mBAAmB;IACnB,EAAE;IACF,2DAA2D;IAC3D,8DAA8D;IAE9D,uCAAuC;IACvC,IAAI,QAAQ,CAAC;IAEb,gDAAgD;IAChD,MAAO,EAAE,QAAQ,SAAS,MAAM,CAAE;QAChC,mEAAmE;QACnE,mCAAmC;QACnC,oEAAoE;QACpE,uDAAuD;QACvD,8DAA8D;QAC9D,QAAQ,IAAI,IACP,uBACD,QAAQ,CAAC,MAAM,EACf,sDAAsD;QACtD,MACA;YACE;YACA,aAAa,QAAQ,YAAY;YACjC,YACE,QAAQ,SAAS,MAAM,GAAG,IAAI,GAAG,QAAQ,CAAC,QAAQ,EAAE,IAAI;QAC5D;IAGN;IAEA,+DAA+D;IAC/D,4EAA4E;IAC5E,+BAA+B;IAC/B,0EAA0E;IAC1E,sEAAsE;IACtE,yEAAyE;IACzE,mBAAmB;IACnB,0BAA0B,GAC1B,MAAM,SAAS,EAAE;IACjB,+BAA+B,GAC/B,IAAI;IAEJ,QAAQ,CAAC;IAET,MAAO,EAAE,QAAQ,QAAQ,MAAM,CAAE;QAC/B,MAAM,QAAQ,OAAO,CAAC,MAAM;QAE5B,IAAI,OAAO,UAAU,UAAU;YAC7B,IAAI,UAAU,aAAa,QAAQ,OAAO,QAAQ;QACpD,OAAO,IAAI,OAAO;YAChB,IAAI,UAAU,aAAa,QAAQ,CAAC,GAAG;gBACrC,OAAO,IAAI,CAAC,KAAK,MAAM,CAAC,UAAU;YACpC;YAEA,QAAQ,CAAC;YACT,OAAO,IAAI,CAAC;QACd;IACF;IAEA,+DAA+D;IAC/D,OAAO,OAAO,IAAI,CAAC;AACrB;AAEA;;;;;;;CAOC,GACD,SAAS,uBAAuB,IAAI,EAAE,MAAM,EAAE,IAAI;IAChD,IAAI,KAAK,IAAI,KAAK,WAAW;QAC3B,OAAO,eAAe,MAAM,QAAQ;IACtC;IAEA,IAAI,KAAK,IAAI,KAAK,QAAQ;QACxB,OAAO,KAAK,UAAU,KAAK,WACvB,YAAY,MAAM,QAClB,eAAe;IACrB;IAEA,OAAO,EAAE;AACX;AAEA;;;;;;;;;CASC,GACD,SAAS,eAAe,IAAI,EAAE,MAAM,EAAE,IAAI;IACxC,6CAA6C;IAC7C,MAAM,aAAa,gBAAgB,MAAM;IACzC,MAAM,WAAW,KAAK,QAAQ,IAAI,EAAE;IACpC,IAAI,QAAQ,CAAC;IACb,wCAAwC,GACxC,IAAI,QAAQ,EAAE;IAEd,2EAA2E;IAC3E,gDAAgD;IAChD,IAAI,YAAY,OAAO;QACrB,OAAO;IACT;IAEA,oCAAoC,GACpC,IAAI;IACJ,iDAAiD,GACjD,IAAI;IACJ,4EAA4E;IAC5E,sDAAsD;IAEtD,6EAA6E;IAC7E,aAAa;IACb,EAAE;IACF,4EAA4E;IAE5E,8DAA8D;IAC9D,EAAE;IACF,uCAAuC;IAEvC,gCAAgC;IAEhC,4EAA4E;IAC5E,gDAAgD;IAChD,IAAI,GAAG,OAAO;QACZ,SAAS;IACX,OAUK,IACH,IAAI,SACJ,wDAAwD;IACxD,CAAA,GAAA,0JAAA,CAAA,YAAS,AAAD,EAAE,QAAQ,MAAM,MACxB;QACA,SAAS;IACX,OAIK,IAAI,EAAE,OAAO;QAChB,SAAS;QACT,SAAS;IACX,OAKK,IAAI,eAAe,OAAO;QAC7B,SAAS;QACT,SAAS;IACX;IAEA,8EAA8E;IAC9E,wEAAwE;IACxE,gCAAgC;IAChC,MAAO,EAAE,QAAQ,SAAS,MAAM,CAAE;QAChC,QAAQ,MAAM,MAAM,CAClB,uBAAuB,QAAQ,CAAC,MAAM,EAAE,MAAM;YAC5C;YACA,aAAa,QAAQ,YAAY;YACjC,YACE,QAAQ,SAAS,MAAM,GAAG,IAAI,GAAG,QAAQ,CAAC,QAAQ,EAAE,IAAI;QAC5D;IAEJ;IAEA,4EAA4E;IAC5E,6EAA6E;IAC7E,2EAA2E;IAC3E,gCAAgC;IAChC,EAAE;IACF,4EAA4E;IAC5E,IACE,KAAK,SACL,wDAAwD;IACxD,CAAA,GAAA,0JAAA,CAAA,YAAS,AAAD,EAAE,QAAQ,MAAM,OACxB;QACA,MAAM,IAAI,CAAC;IACb;IAEA,2BAA2B;IAC3B,IAAI,QAAQ,MAAM,OAAO,CAAC;IAC1B,IAAI,QAAQ,MAAM,IAAI,CAAC;IAEvB,OAAO;AACT;AAEA;;;;;;;;;;;;;;;;;;;;;;;CAuBC,GACD,SAAS,YAAY,IAAI,EAAE,IAAI;IAC7B,MAAM,QAAQ,OAAO,KAAK,KAAK;IAC/B,0BAA0B,GAC1B,MAAM,QAAQ,EAAE;IAChB,wCAAwC,GACxC,MAAM,SAAS,EAAE;IACjB,IAAI,QAAQ;IAEZ,MAAO,SAAS,MAAM,MAAM,CAAE;QAC5B,gBAAgB,SAAS,GAAG;QAE5B,MAAM,QAAQ,gBAAgB,IAAI,CAAC;QACnC,MAAM,MAAM,SAAS,WAAW,QAAQ,MAAM,KAAK,GAAG,MAAM,MAAM;QAElE,MAAM,IAAI,CACR,uEAAuE;QACvE,wCAAwC;QACxC,6BACE,+DAA+D;QAC/D,uEAAuE;QACvE,uBAAuB;QACvB,MACG,KAAK,CAAC,OAAO,KACb,OAAO,CAAC,mDAAmD,KAC9D,UAAU,IAAI,KAAK,WAAW,GAAG,MACjC,QAAQ,MAAM,MAAM,GAAG,KAAK,UAAU,GAAG;QAI7C,QAAQ,MAAM;IAChB;IAEA,4EAA4E;IAC5E,sCAAsC;IACtC,yCAAyC;IACzC,0EAA0E;IAC1E,2BAA2B;IAC3B,IAAI,QAAQ,CAAC;IACb,oCAAoC,GACpC,IAAI;IAEJ,MAAO,EAAE,QAAQ,MAAM,MAAM,CAAE;QAC7B,2EAA2E;QAC3E,0EAA0E;QAC1E,oDAAoD;QACpD,IACE,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,GAAG,OAAO,QAAQ,QAAQ,OACpE,QAAQ,MAAM,MAAM,GAAG,KACtB,KAAK,CAAC,QAAQ,EAAE,CAAC,UAAU,CAAC,OAAO,SACrC;YACA,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM;YACxB,OAAO;QACT,OAkBK,IAAI,KAAK,CAAC,MAAM,EAAE;YACrB,IAAI,OAAO,SAAS,UAAU,OAAO,IAAI,CAAC;YAC1C,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM;YACxB,OAAO;QACT,OAAO,IAAI,UAAU,KAAK,UAAU,MAAM,MAAM,GAAG,GAAG;YACpD,kEAAkE;YAClE,qEAAqE;YACrE,2BAA2B;YAC3B,OAAO,IAAI,CAAC;QACd;IACF;IAEA,OAAO;AACT;AAEA;;;;;;;CAOC,GACD,SAAS,eAAe,IAAI;IAC1B,OAAO;QAAC,OAAO,KAAK,KAAK;KAAE;AAC7B;AAEA;;;;;;;;;;;;;;;;CAgBC,GACD,SAAS,6BAA6B,KAAK,EAAE,WAAW,EAAE,UAAU;IAClE,0BAA0B,GAC1B,MAAM,SAAS,EAAE;IACjB,IAAI,QAAQ;IACZ,+BAA+B,GAC/B,IAAI;IAEJ,MAAO,QAAQ,MAAM,MAAM,CAAE;QAC3B,kBAAkB,SAAS,GAAG;QAC9B,MAAM,QAAQ,kBAAkB,IAAI,CAAC;QACrC,MAAM,QAAQ,MAAM,KAAK,GAAG,MAAM,MAAM;QAExC,0EAA0E;QAC1E,uDAAuD;QACvD,IAAI,CAAC,SAAS,CAAC,OAAO,SAAS,CAAC,aAAa;YAC3C,OAAO,IAAI,CAAC;QACd;QAEA,IAAI,UAAU,KAAK;YACjB,OAAO,IAAI,CAAC,MAAM,KAAK,CAAC,OAAO;QACjC;QAEA,QAAQ,QAAQ,MAAM,KAAK,CAAC,EAAE,CAAC,MAAM,GAAG;IAC1C;IAEA,wEAAwE;IACxE,wEAAwE;IACxE,gBAAgB;IAChB,IAAI,UAAU,OAAO,CAAC,YAAY;QAChC,OAAO,IAAI,CAAC;IACd;IAEA,OAAO,OAAO,IAAI,CAAC;AACrB;AAEA;;;;;;;;;;;CAWC,GACD,SAAS,gBAAgB,IAAI,EAAE,IAAI;IACjC,IAAI,KAAK,IAAI,KAAK,WAAW;QAC3B,MAAM,aAAa,KAAK,UAAU,IAAI,CAAC;QACvC,OAAQ,KAAK,OAAO;YAClB,KAAK;YACL,KAAK;YACL,KAAK;gBAAO;oBACV,OAAO;gBACT;YAEA,KAAK;gBAAQ;oBACX,OAAO;gBACT;YAEA,KAAK;gBAAO;oBACV,OAAO,WAAW,IAAI,GAAG,aAAa;gBACxC;YAEA,KAAK;YACL,KAAK;gBAAM;oBACT,OAAO,WAAW,MAAM,GAAG,WAAW,KAAK,UAAU;gBACvD;YAEA,KAAK;gBAAY;oBACf,OAAO;gBACT;YAEA;QACF;IACF;IAEA,OAAO,KAAK,UAAU;AACxB;AAEA;;;;CAIC,GACD,SAAS,OAAO,IAAI;IAClB,OAAO,QAAQ,CAAC,KAAK,UAAU,IAAI,CAAC,CAAC,EAAE,MAAM;AAC/C;AAEA;;;;CAIC,GACD,SAAS,OAAO,IAAI;IAClB,OAAO,KAAK,OAAO,KAAK,QAAQ,KAAK,OAAO,KAAK;AACnD;AAEA;;CAEC,GACD,SAAS,aAAa,IAAI;IACxB,OAAO,KAAK,OAAO,KAAK,YAAY,CAAC,CAAC,KAAK,UAAU,IAAI,CAAC,CAAC,EAAE,IAAI;AACnE","ignoreList":[0]}},
    {"offset": {"line": 44436, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 44442, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/hast-util-from-dom/lib/index.js"],"sourcesContent":["/**\n * @import {\n *   Comment as HastComment,\n *   Doctype as HastDoctype,\n *   Element as HastElement,\n *   Nodes as HastNodes,\n *   RootContent as HastRootContent,\n *   Root as HastRoot,\n *   Text as HastText,\n * } from 'hast'\n */\n\n/**\n * @callback AfterTransform\n *   Callback called when each node is transformed.\n * @param {Node} domNode\n *   DOM node that was handled.\n * @param {HastNodes} hastNode\n *   Corresponding hast node.\n * @returns {undefined | void}\n *   Nothing.\n *\n *   Note: `void` included until TS infers `undefined` nicely.\n *\n * @typedef Options\n *   Configuration.\n * @property {AfterTransform | null | undefined} [afterTransform]\n *   Callback called when each node is transformed (optional).\n */\n\nimport {h, s} from 'hastscript'\nimport {webNamespaces} from 'web-namespaces'\n\n/**\n * Transform a DOM tree to a hast tree.\n *\n * @param {Node} tree\n *   DOM tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {HastNodes}\n *   Equivalent hast node.\n */\nexport function fromDom(tree, options) {\n  return transform(tree, options || {}) || {type: 'root', children: []}\n}\n\n/**\n * @param {Node} node\n *   DOM node to transform.\n * @param {Options} options\n *   Configuration.\n * @returns {HastNodes | undefined}\n *   Equivalent hast node.\n *\n *   Note that certain legacy DOM nodes (i.e., Attr nodes (2),  CDATA, processing instructions)\n */\nfunction transform(node, options) {\n  const transformed = one(node, options)\n  if (transformed && options.afterTransform)\n    options.afterTransform(node, transformed)\n  return transformed\n}\n\n/**\n * @param {Node} node\n *   DOM node to transform.\n * @param {Options} options\n *   Configuration.\n * @returns {HastNodes | undefined}\n *   Equivalent hast node.\n */\nfunction one(node, options) {\n  switch (node.nodeType) {\n    case 1 /* Element */: {\n      const domNode = /** @type {Element} */ (node)\n      return element(domNode, options)\n    }\n\n    // Ignore: Attr (2).\n\n    case 3 /* Text */: {\n      const domNode = /** @type {Text} */ (node)\n      return text(domNode)\n    }\n\n    // Ignore: CDATA (4).\n    // Removed: Entity reference (5)\n    // Removed: Entity (6)\n    // Ignore: Processing instruction (7).\n\n    case 8 /* Comment */: {\n      const domNode = /** @type {Comment} */ (node)\n      return comment(domNode)\n    }\n\n    case 9 /* Document */: {\n      const domNode = /** @type {Document} */ (node)\n      return root(domNode, options)\n    }\n\n    case 10 /* Document type */: {\n      return doctype()\n    }\n\n    case 11 /* Document fragment */: {\n      const domNode = /** @type {DocumentFragment} */ (node)\n      return root(domNode, options)\n    }\n\n    default: {\n      return undefined\n    }\n  }\n}\n\n/**\n * Transform a document.\n *\n * @param {Document | DocumentFragment} node\n *   DOM node to transform.\n * @param {Options} options\n *   Configuration.\n * @returns {HastRoot}\n *   Equivalent hast node.\n */\nfunction root(node, options) {\n  return {type: 'root', children: all(node, options)}\n}\n\n/**\n * Transform a doctype.\n *\n * @returns {HastDoctype}\n *   Equivalent hast node.\n */\nfunction doctype() {\n  return {type: 'doctype'}\n}\n\n/**\n * Transform a text.\n *\n * @param {Text} node\n *   DOM node to transform.\n * @returns {HastText}\n *   Equivalent hast node.\n */\nfunction text(node) {\n  return {type: 'text', value: node.nodeValue || ''}\n}\n\n/**\n * Transform a comment.\n *\n * @param {Comment} node\n *   DOM node to transform.\n * @returns {HastComment}\n *   Equivalent hast node.\n */\nfunction comment(node) {\n  return {type: 'comment', value: node.nodeValue || ''}\n}\n\n/**\n * Transform an element.\n *\n * @param {Element} node\n *   DOM node to transform.\n * @param {Options} options\n *   Configuration.\n * @returns {HastElement}\n *   Equivalent hast node.\n */\nfunction element(node, options) {\n  const space = node.namespaceURI\n  const x = space === webNamespaces.svg ? s : h\n  const tagName =\n    space === webNamespaces.html ? node.tagName.toLowerCase() : node.tagName\n  /** @type {DocumentFragment | Element} */\n  const content =\n    // @ts-expect-error: DOM types are wrong, content can exist.\n    space === webNamespaces.html && tagName === 'template' ? node.content : node\n  const attributes = node.getAttributeNames()\n  /** @type {Record<string, string>} */\n  const properties = {}\n  let index = -1\n\n  while (++index < attributes.length) {\n    properties[attributes[index]] = node.getAttribute(attributes[index]) || ''\n  }\n\n  return x(tagName, properties, all(content, options))\n}\n\n/**\n * Transform child nodes in a parent.\n *\n * @param {Document | DocumentFragment | Element} node\n *   DOM node to transform.\n * @param {Options} options\n *   Configuration.\n * @returns {Array<HastRootContent>}\n *   Equivalent hast nodes.\n */\nfunction all(node, options) {\n  const nodes = node.childNodes\n  /** @type {Array<HastRootContent>} */\n  const children = []\n  let index = -1\n\n  while (++index < nodes.length) {\n    const child = transform(nodes[index], options)\n\n    if (child !== undefined) {\n      // @ts-expect-error Assume no document inside document.\n      children.push(child)\n    }\n  }\n\n  return children\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;CAUC,GAED;;;;;;;;;;;;;;;;CAgBC;;;AAGD;AADA;;;AAaO,SAAS,QAAQ,IAAI,EAAE,OAAO;IACnC,OAAO,UAAU,MAAM,WAAW,CAAC,MAAM;QAAC,MAAM;QAAQ,UAAU,EAAE;IAAA;AACtE;AAEA;;;;;;;;;CASC,GACD,SAAS,UAAU,IAAI,EAAE,OAAO;IAC9B,MAAM,cAAc,IAAI,MAAM;IAC9B,IAAI,eAAe,QAAQ,cAAc,EACvC,QAAQ,cAAc,CAAC,MAAM;IAC/B,OAAO;AACT;AAEA;;;;;;;CAOC,GACD,SAAS,IAAI,IAAI,EAAE,OAAO;IACxB,OAAQ,KAAK,QAAQ;QACnB,KAAK,EAAE,WAAW;YAAI;gBACpB,MAAM,UAAkC;gBACxC,OAAO,QAAQ,SAAS;YAC1B;QAEA,oBAAoB;QAEpB,KAAK,EAAE,QAAQ;YAAI;gBACjB,MAAM,UAA+B;gBACrC,OAAO,KAAK;YACd;QAEA,qBAAqB;QACrB,gCAAgC;QAChC,sBAAsB;QACtB,sCAAsC;QAEtC,KAAK,EAAE,WAAW;YAAI;gBACpB,MAAM,UAAkC;gBACxC,OAAO,QAAQ;YACjB;QAEA,KAAK,EAAE,YAAY;YAAI;gBACrB,MAAM,UAAmC;gBACzC,OAAO,KAAK,SAAS;YACvB;QAEA,KAAK,GAAG,iBAAiB;YAAI;gBAC3B,OAAO;YACT;QAEA,KAAK,GAAG,qBAAqB;YAAI;gBAC/B,MAAM,UAA2C;gBACjD,OAAO,KAAK,SAAS;YACvB;QAEA;YAAS;gBACP,OAAO;YACT;IACF;AACF;AAEA;;;;;;;;;CASC,GACD,SAAS,KAAK,IAAI,EAAE,OAAO;IACzB,OAAO;QAAC,MAAM;QAAQ,UAAU,IAAI,MAAM;IAAQ;AACpD;AAEA;;;;;CAKC,GACD,SAAS;IACP,OAAO;QAAC,MAAM;IAAS;AACzB;AAEA;;;;;;;CAOC,GACD,SAAS,KAAK,IAAI;IAChB,OAAO;QAAC,MAAM;QAAQ,OAAO,KAAK,SAAS,IAAI;IAAE;AACnD;AAEA;;;;;;;CAOC,GACD,SAAS,QAAQ,IAAI;IACnB,OAAO;QAAC,MAAM;QAAW,OAAO,KAAK,SAAS,IAAI;IAAE;AACtD;AAEA;;;;;;;;;CASC,GACD,SAAS,QAAQ,IAAI,EAAE,OAAO;IAC5B,MAAM,QAAQ,KAAK,YAAY;IAC/B,MAAM,IAAI,UAAU,sIAAA,CAAA,gBAAa,CAAC,GAAG,GAAG,sIAAA,CAAA,IAAC,GAAG,sIAAA,CAAA,IAAC;IAC7C,MAAM,UACJ,UAAU,sIAAA,CAAA,gBAAa,CAAC,IAAI,GAAG,KAAK,OAAO,CAAC,WAAW,KAAK,KAAK,OAAO;IAC1E,uCAAuC,GACvC,MAAM,UACJ,4DAA4D;IAC5D,UAAU,sIAAA,CAAA,gBAAa,CAAC,IAAI,IAAI,YAAY,aAAa,KAAK,OAAO,GAAG;IAC1E,MAAM,aAAa,KAAK,iBAAiB;IACzC,mCAAmC,GACnC,MAAM,aAAa,CAAC;IACpB,IAAI,QAAQ,CAAC;IAEb,MAAO,EAAE,QAAQ,WAAW,MAAM,CAAE;QAClC,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,KAAK,YAAY,CAAC,UAAU,CAAC,MAAM,KAAK;IAC1E;IAEA,OAAO,EAAE,SAAS,YAAY,IAAI,SAAS;AAC7C;AAEA;;;;;;;;;CASC,GACD,SAAS,IAAI,IAAI,EAAE,OAAO;IACxB,MAAM,QAAQ,KAAK,UAAU;IAC7B,mCAAmC,GACnC,MAAM,WAAW,EAAE;IACnB,IAAI,QAAQ,CAAC;IAEb,MAAO,EAAE,QAAQ,MAAM,MAAM,CAAE;QAC7B,MAAM,QAAQ,UAAU,KAAK,CAAC,MAAM,EAAE;QAEtC,IAAI,UAAU,WAAW;YACvB,uDAAuD;YACvD,SAAS,IAAI,CAAC;QAChB;IACF;IAEA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 44640, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 44646, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/hast-util-from-html-isomorphic/lib/browser.js"],"sourcesContent":["/**\n * @typedef {import('hast').Root} Root\n *\n * @typedef {typeof import('./index.js').fromHtmlIsomorphic} FromHtmlIsomorphic\n */\n\nimport {fromDom} from 'hast-util-from-dom'\n\nconst parser = new DOMParser()\n\n/** @type {FromHtmlIsomorphic} */\nexport function fromHtmlIsomorphic(value, options) {\n  const node = options?.fragment\n    ? parseFragment(value)\n    : parser.parseFromString(value, 'text/html')\n\n  return /** @type {Root} */ (fromDom(node))\n}\n\n/**\n * Parse as a fragment.\n *\n * @param {string} value\n * @returns {DocumentFragment}\n */\nfunction parseFragment(value) {\n  const template = document.createElement('template')\n  template.innerHTML = value\n  return template.content\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;AAED;;AAEA,MAAM,SAAS,IAAI;AAGZ,SAAS,mBAAmB,KAAK,EAAE,OAAO;IAC/C,MAAM,OAAO,SAAS,WAClB,cAAc,SACd,OAAO,eAAe,CAAC,OAAO;IAElC,OAA4B,CAAA,GAAA,uJAAA,CAAA,UAAO,AAAD,EAAE;AACtC;AAEA;;;;;CAKC,GACD,SAAS,cAAc,KAAK;IAC1B,MAAM,WAAW,SAAS,aAAa,CAAC;IACxC,SAAS,SAAS,GAAG;IACrB,OAAO,SAAS,OAAO;AACzB","ignoreList":[0]}},
    {"offset": {"line": 44670, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 44676, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/rehype-katex/lib/index.js"],"sourcesContent":["/**\n * @import {ElementContent, Root} from 'hast'\n * @import {KatexOptions} from 'katex'\n * @import {VFile} from 'vfile'\n */\n\n/**\n * @typedef {Omit<KatexOptions, 'displayMode' | 'throwOnError'>} Options\n */\n\nimport {fromHtmlIsomorphic} from 'hast-util-from-html-isomorphic'\nimport {toText} from 'hast-util-to-text'\nimport katex from 'katex'\nimport {SKIP, visitParents} from 'unist-util-visit-parents'\n\n/** @type {Readonly<Options>} */\nconst emptyOptions = {}\n/** @type {ReadonlyArray<unknown>} */\nconst emptyClasses = []\n\n/**\n * Render elements with a `language-math` (or `math-display`, `math-inline`)\n * class with KaTeX.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport default function rehypeKatex(options) {\n  const settings = options || emptyOptions\n\n  /**\n   * Transform.\n   *\n   * @param {Root} tree\n   *   Tree.\n   * @param {VFile} file\n   *   File.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  return function (tree, file) {\n    visitParents(tree, 'element', function (element, parents) {\n      const classes = Array.isArray(element.properties.className)\n        ? element.properties.className\n        : emptyClasses\n      // This class can be generated from markdown with ` ```math `.\n      const languageMath = classes.includes('language-math')\n      // This class is used by `remark-math` for flow math (block, `$$\\nmath\\n$$`).\n      const mathDisplay = classes.includes('math-display')\n      // This class is used by `remark-math` for text math (inline, `$math$`).\n      const mathInline = classes.includes('math-inline')\n      let displayMode = mathDisplay\n\n      // Any class is fine.\n      if (!languageMath && !mathDisplay && !mathInline) {\n        return\n      }\n\n      let parent = parents[parents.length - 1]\n      let scope = element\n\n      // If this was generated with ` ```math `, replace the `<pre>` and use\n      // display.\n      if (\n        element.tagName === 'code' &&\n        languageMath &&\n        parent &&\n        parent.type === 'element' &&\n        parent.tagName === 'pre'\n      ) {\n        scope = parent\n        parent = parents[parents.length - 2]\n        displayMode = true\n      }\n\n      /* c8 ignore next -- verbose to test. */\n      if (!parent) return\n\n      const value = toText(scope, {whitespace: 'pre'})\n\n      /** @type {Array<ElementContent> | string | undefined} */\n      let result\n\n      try {\n        result = katex.renderToString(value, {\n          ...settings,\n          displayMode,\n          throwOnError: true\n        })\n      } catch (error) {\n        const cause = /** @type {Error} */ (error)\n        const ruleId = cause.name.toLowerCase()\n\n        file.message('Could not render math with KaTeX', {\n          ancestors: [...parents, element],\n          cause,\n          place: element.position,\n          ruleId,\n          source: 'rehype-katex'\n        })\n\n        // KaTeX *should* handle `ParseError` itself, but not others.\n        // it doesn’t always:\n        // <https://github.com/remarkjs/react-markdown/issues/853>\n        try {\n          result = katex.renderToString(value, {\n            ...settings,\n            displayMode,\n            strict: 'ignore',\n            throwOnError: false\n          })\n        } catch {\n          // Generate similar markup if this is an other error.\n          // See: <https://github.com/KaTeX/KaTeX/blob/5dc7af0/docs/error.md>.\n          result = [\n            {\n              type: 'element',\n              tagName: 'span',\n              properties: {\n                className: ['katex-error'],\n                style: 'color:' + (settings.errorColor || '#cc0000'),\n                title: String(error)\n              },\n              children: [{type: 'text', value}]\n            }\n          ]\n        }\n      }\n\n      if (typeof result === 'string') {\n        const root = fromHtmlIsomorphic(result, {fragment: true})\n        // Cast as we don’t expect `doctypes` in KaTeX result.\n        result = /** @type {Array<ElementContent>} */ (root.children)\n      }\n\n      const index = parent.children.indexOf(scope)\n      parent.children.splice(index, 1, ...result)\n      return SKIP\n    })\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC,GAED;;CAEC;;;AAID;AACA;AAFA;AADA;;;;;AAKA,8BAA8B,GAC9B,MAAM,eAAe,CAAC;AACtB,mCAAmC,GACnC,MAAM,eAAe,EAAE;AAWR,SAAS,YAAY,OAAO;IACzC,MAAM,WAAW,WAAW;IAE5B;;;;;;;;;GASC,GACD,OAAO,SAAU,IAAI,EAAE,IAAI;QACzB,CAAA,GAAA,6JAAA,CAAA,eAAY,AAAD,EAAE,MAAM,WAAW,SAAU,OAAO,EAAE,OAAO;YACtD,MAAM,UAAU,MAAM,OAAO,CAAC,QAAQ,UAAU,CAAC,SAAS,IACtD,QAAQ,UAAU,CAAC,SAAS,GAC5B;YACJ,8DAA8D;YAC9D,MAAM,eAAe,QAAQ,QAAQ,CAAC;YACtC,6EAA6E;YAC7E,MAAM,cAAc,QAAQ,QAAQ,CAAC;YACrC,wEAAwE;YACxE,MAAM,aAAa,QAAQ,QAAQ,CAAC;YACpC,IAAI,cAAc;YAElB,qBAAqB;YACrB,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,YAAY;gBAChD;YACF;YAEA,IAAI,SAAS,OAAO,CAAC,QAAQ,MAAM,GAAG,EAAE;YACxC,IAAI,QAAQ;YAEZ,sEAAsE;YACtE,WAAW;YACX,IACE,QAAQ,OAAO,KAAK,UACpB,gBACA,UACA,OAAO,IAAI,KAAK,aAChB,OAAO,OAAO,KAAK,OACnB;gBACA,QAAQ;gBACR,SAAS,OAAO,CAAC,QAAQ,MAAM,GAAG,EAAE;gBACpC,cAAc;YAChB;YAEA,sCAAsC,GACtC,IAAI,CAAC,QAAQ;YAEb,MAAM,QAAQ,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,OAAO;gBAAC,YAAY;YAAK;YAE9C,uDAAuD,GACvD,IAAI;YAEJ,IAAI;gBACF,SAAS,mIAAA,CAAA,UAAK,CAAC,cAAc,CAAC,OAAO;oBACnC,GAAG,QAAQ;oBACX;oBACA,cAAc;gBAChB;YACF,EAAE,OAAO,OAAO;gBACd,MAAM,QAA8B;gBACpC,MAAM,SAAS,MAAM,IAAI,CAAC,WAAW;gBAErC,KAAK,OAAO,CAAC,oCAAoC;oBAC/C,WAAW;2BAAI;wBAAS;qBAAQ;oBAChC;oBACA,OAAO,QAAQ,QAAQ;oBACvB;oBACA,QAAQ;gBACV;gBAEA,6DAA6D;gBAC7D,qBAAqB;gBACrB,0DAA0D;gBAC1D,IAAI;oBACF,SAAS,mIAAA,CAAA,UAAK,CAAC,cAAc,CAAC,OAAO;wBACnC,GAAG,QAAQ;wBACX;wBACA,QAAQ;wBACR,cAAc;oBAChB;gBACF,EAAE,OAAM;oBACN,qDAAqD;oBACrD,oEAAoE;oBACpE,SAAS;wBACP;4BACE,MAAM;4BACN,SAAS;4BACT,YAAY;gCACV,WAAW;oCAAC;iCAAc;gCAC1B,OAAO,WAAW,CAAC,SAAS,UAAU,IAAI,SAAS;gCACnD,OAAO,OAAO;4BAChB;4BACA,UAAU;gCAAC;oCAAC,MAAM;oCAAQ;gCAAK;6BAAE;wBACnC;qBACD;gBACH;YACF;YAEA,IAAI,OAAO,WAAW,UAAU;gBAC9B,MAAM,OAAO,CAAA,GAAA,wKAAA,CAAA,qBAAkB,AAAD,EAAE,QAAQ;oBAAC,UAAU;gBAAI;gBACvD,sDAAsD;gBACtD,SAA+C,KAAK,QAAQ;YAC9D;YAEA,MAAM,QAAQ,OAAO,QAAQ,CAAC,OAAO,CAAC;YACtC,OAAO,QAAQ,CAAC,MAAM,CAAC,OAAO,MAAM;YACpC,OAAO,6JAAA,CAAA,OAAI;QACb;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 44800, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 44805, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/parse-numeric-range/index.js"],"sourcesContent":["/**\n * @param {string} string    The string to parse\n * @returns {Array<number>}  Returns an energetic array.\n */\nfunction parsePart(string) {\n  let res = [];\n  let m;\n\n  for (let str of string.split(\",\").map((str) => str.trim())) {\n    // just a number\n    if (/^-?\\d+$/.test(str)) {\n      res.push(parseInt(str, 10));\n    } else if (\n      (m = str.match(/^(-?\\d+)(-|\\.\\.\\.?|\\u2025|\\u2026|\\u22EF)(-?\\d+)$/))\n    ) {\n      // 1-5 or 1..5 (equivalent) or 1...5 (doesn't include 5)\n      let [_, lhs, sep, rhs] = m;\n\n      if (lhs && rhs) {\n        lhs = parseInt(lhs);\n        rhs = parseInt(rhs);\n        const incr = lhs < rhs ? 1 : -1;\n\n        // Make it inclusive by moving the right 'stop-point' away by one.\n        if (sep === \"-\" || sep === \"..\" || sep === \"\\u2025\") rhs += incr;\n\n        for (let i = lhs; i !== rhs; i += incr) res.push(i);\n      }\n    }\n  }\n\n  return res;\n}\n\nexports.default = parsePart;\nmodule.exports = parsePart;\n"],"names":[],"mappings":"AAAA;;;CAGC,GACD,SAAS,UAAU,MAAM;IACvB,IAAI,MAAM,EAAE;IACZ,IAAI;IAEJ,KAAK,IAAI,OAAO,OAAO,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,MAAQ,IAAI,IAAI,IAAK;QAC1D,gBAAgB;QAChB,IAAI,UAAU,IAAI,CAAC,MAAM;YACvB,IAAI,IAAI,CAAC,SAAS,KAAK;QACzB,OAAO,IACJ,IAAI,IAAI,KAAK,CAAC,qDACf;YACA,wDAAwD;YACxD,IAAI,CAAC,GAAG,KAAK,KAAK,IAAI,GAAG;YAEzB,IAAI,OAAO,KAAK;gBACd,MAAM,SAAS;gBACf,MAAM,SAAS;gBACf,MAAM,OAAO,MAAM,MAAM,IAAI,CAAC;gBAE9B,kEAAkE;gBAClE,IAAI,QAAQ,OAAO,QAAQ,QAAQ,QAAQ,UAAU,OAAO;gBAE5D,IAAK,IAAI,IAAI,KAAK,MAAM,KAAK,KAAK,KAAM,IAAI,IAAI,CAAC;YACnD;QACF;IACF;IAEA,OAAO;AACT;AAEA,QAAQ,OAAO,GAAG;AAClB,OAAO,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 44832, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 44838, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/hast-util-to-string/lib/index.js"],"sourcesContent":["/**\n * @import {Nodes, Parents} from 'hast'\n */\n\n/**\n * Get the plain-text value of a hast node.\n *\n * @param {Nodes} node\n *   Node to serialize.\n * @returns {string}\n *   Serialized node.\n */\nexport function toString(node) {\n  // “The concatenation of data of all the Text node descendants of the context\n  // object, in tree order.”\n  if ('children' in node) {\n    return all(node)\n  }\n\n  // “Context object’s data.”\n  return 'value' in node ? node.value : ''\n}\n\n/**\n * @param {Nodes} node\n *   Node.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(node) {\n  if (node.type === 'text') {\n    return node.value\n  }\n\n  return 'children' in node ? all(node) : ''\n}\n\n/**\n * @param {Parents} node\n *   Node.\n * @returns {string}\n *   Serialized node.\n */\nfunction all(node) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n\n  while (++index < node.children.length) {\n    result[index] = one(node.children[index])\n  }\n\n  return result.join('')\n}\n"],"names":[],"mappings":"AAAA;;CAEC,GAED;;;;;;;CAOC;;;AACM,SAAS,SAAS,IAAI;IAC3B,6EAA6E;IAC7E,0BAA0B;IAC1B,IAAI,cAAc,MAAM;QACtB,OAAO,IAAI;IACb;IAEA,2BAA2B;IAC3B,OAAO,WAAW,OAAO,KAAK,KAAK,GAAG;AACxC;AAEA;;;;;CAKC,GACD,SAAS,IAAI,IAAI;IACf,IAAI,KAAK,IAAI,KAAK,QAAQ;QACxB,OAAO,KAAK,KAAK;IACnB;IAEA,OAAO,cAAc,OAAO,IAAI,QAAQ;AAC1C;AAEA;;;;;CAKC,GACD,SAAS,IAAI,IAAI;IACf,IAAI,QAAQ,CAAC;IACb,0BAA0B,GAC1B,MAAM,SAAS,EAAE;IAEjB,MAAO,EAAE,QAAQ,KAAK,QAAQ,CAAC,MAAM,CAAE;QACrC,MAAM,CAAC,MAAM,GAAG,IAAI,KAAK,QAAQ,CAAC,MAAM;IAC1C;IAEA,OAAO,OAAO,IAAI,CAAC;AACrB","ignoreList":[0]}},
    {"offset": {"line": 44883, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 44889, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/hast-util-from-html/lib/errors.js"],"sourcesContent":["/**\n * @typedef ErrorInfo\n *   Info on a `parse5` error.\n * @property {string} reason\n *   Reason of error.\n * @property {string} description\n *   More info on error.\n * @property {false} [url]\n *   Turn off if this is not documented in the html5 spec (optional).\n */\n\nexport const errors = {\n  /** @type {ErrorInfo} */\n  abandonedHeadElementChild: {\n    reason: 'Unexpected metadata element after head',\n    description:\n      'Unexpected element after head. Expected the element before `</head>`',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  abruptClosingOfEmptyComment: {\n    reason: 'Unexpected abruptly closed empty comment',\n    description: 'Unexpected `>` or `->`. Expected `-->` to close comments'\n  },\n  /** @type {ErrorInfo} */\n  abruptDoctypePublicIdentifier: {\n    reason: 'Unexpected abruptly closed public identifier',\n    description:\n      'Unexpected `>`. Expected a closing `\"` or `\\'` after the public identifier'\n  },\n  /** @type {ErrorInfo} */\n  abruptDoctypeSystemIdentifier: {\n    reason: 'Unexpected abruptly closed system identifier',\n    description:\n      'Unexpected `>`. Expected a closing `\"` or `\\'` after the identifier identifier'\n  },\n  /** @type {ErrorInfo} */\n  absenceOfDigitsInNumericCharacterReference: {\n    reason: 'Unexpected non-digit at start of numeric character reference',\n    description:\n      'Unexpected `%c`. Expected `[0-9]` for decimal references or `[0-9a-fA-F]` for hexadecimal references'\n  },\n  /** @type {ErrorInfo} */\n  cdataInHtmlContent: {\n    reason: 'Unexpected CDATA section in HTML',\n    description:\n      'Unexpected `<![CDATA[` in HTML. Remove it, use a comment, or encode special characters instead'\n  },\n  /** @type {ErrorInfo} */\n  characterReferenceOutsideUnicodeRange: {\n    reason: 'Unexpected too big numeric character reference',\n    description:\n      'Unexpectedly high character reference. Expected character references to be at most hexadecimal 10ffff (or decimal 1114111)'\n  },\n  /** @type {ErrorInfo} */\n  closingOfElementWithOpenChildElements: {\n    reason: 'Unexpected closing tag with open child elements',\n    description:\n      'Unexpectedly closing tag. Expected other tags to be closed first',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  controlCharacterInInputStream: {\n    reason: 'Unexpected control character',\n    description:\n      'Unexpected control character `%x`. Expected a non-control code point, 0x00, or ASCII whitespace'\n  },\n  /** @type {ErrorInfo} */\n  controlCharacterReference: {\n    reason: 'Unexpected control character reference',\n    description:\n      'Unexpectedly control character in reference. Expected a non-control code point, 0x00, or ASCII whitespace'\n  },\n  /** @type {ErrorInfo} */\n  disallowedContentInNoscriptInHead: {\n    reason: 'Disallowed content inside `<noscript>` in `<head>`',\n    description:\n      'Unexpected text character `%c`. Only use text in `<noscript>`s in `<body>`',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  duplicateAttribute: {\n    reason: 'Unexpected duplicate attribute',\n    description:\n      'Unexpectedly double attribute. Expected attributes to occur only once'\n  },\n  /** @type {ErrorInfo} */\n  endTagWithAttributes: {\n    reason: 'Unexpected attribute on closing tag',\n    description: 'Unexpected attribute. Expected `>` instead'\n  },\n  /** @type {ErrorInfo} */\n  endTagWithTrailingSolidus: {\n    reason: 'Unexpected slash at end of closing tag',\n    description: 'Unexpected `%c-1`. Expected `>` instead'\n  },\n  /** @type {ErrorInfo} */\n  endTagWithoutMatchingOpenElement: {\n    reason: 'Unexpected unopened end tag',\n    description: 'Unexpected end tag. Expected no end tag or another end tag',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  eofBeforeTagName: {\n    reason: 'Unexpected end of file',\n    description: 'Unexpected end of file. Expected tag name instead'\n  },\n  /** @type {ErrorInfo} */\n  eofInCdata: {\n    reason: 'Unexpected end of file in CDATA',\n    description: 'Unexpected end of file. Expected `]]>` to close the CDATA'\n  },\n  /** @type {ErrorInfo} */\n  eofInComment: {\n    reason: 'Unexpected end of file in comment',\n    description: 'Unexpected end of file. Expected `-->` to close the comment'\n  },\n  /** @type {ErrorInfo} */\n  eofInDoctype: {\n    reason: 'Unexpected end of file in doctype',\n    description:\n      'Unexpected end of file. Expected a valid doctype (such as `<!doctype html>`)'\n  },\n  /** @type {ErrorInfo} */\n  eofInElementThatCanContainOnlyText: {\n    reason: 'Unexpected end of file in element that can only contain text',\n    description: 'Unexpected end of file. Expected text or a closing tag',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  eofInScriptHtmlCommentLikeText: {\n    reason: 'Unexpected end of file in comment inside script',\n    description: 'Unexpected end of file. Expected `-->` to close the comment'\n  },\n  /** @type {ErrorInfo} */\n  eofInTag: {\n    reason: 'Unexpected end of file in tag',\n    description: 'Unexpected end of file. Expected `>` to close the tag'\n  },\n  /** @type {ErrorInfo} */\n  incorrectlyClosedComment: {\n    reason: 'Incorrectly closed comment',\n    description: 'Unexpected `%c-1`. Expected `-->` to close the comment'\n  },\n  /** @type {ErrorInfo} */\n  incorrectlyOpenedComment: {\n    reason: 'Incorrectly opened comment',\n    description: 'Unexpected `%c`. Expected `<!--` to open the comment'\n  },\n  /** @type {ErrorInfo} */\n  invalidCharacterSequenceAfterDoctypeName: {\n    reason: 'Invalid sequence after doctype name',\n    description: 'Unexpected sequence at `%c`. Expected `public` or `system`'\n  },\n  /** @type {ErrorInfo} */\n  invalidFirstCharacterOfTagName: {\n    reason: 'Invalid first character in tag name',\n    description: 'Unexpected `%c`. Expected an ASCII letter instead'\n  },\n  /** @type {ErrorInfo} */\n  misplacedDoctype: {\n    reason: 'Misplaced doctype',\n    description: 'Unexpected doctype. Expected doctype before head',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  misplacedStartTagForHeadElement: {\n    reason: 'Misplaced `<head>` start tag',\n    description:\n      'Unexpected start tag `<head>`. Expected `<head>` directly after doctype',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  missingAttributeValue: {\n    reason: 'Missing attribute value',\n    description:\n      'Unexpected `%c-1`. Expected an attribute value or no `%c-1` instead'\n  },\n  /** @type {ErrorInfo} */\n  missingDoctype: {\n    reason: 'Missing doctype before other content',\n    description: 'Expected a `<!doctype html>` before anything else',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  missingDoctypeName: {\n    reason: 'Missing doctype name',\n    description: 'Unexpected doctype end at `%c`. Expected `html` instead'\n  },\n  /** @type {ErrorInfo} */\n  missingDoctypePublicIdentifier: {\n    reason: 'Missing public identifier in doctype',\n    description: 'Unexpected `%c`. Expected identifier for `public` instead'\n  },\n  /** @type {ErrorInfo} */\n  missingDoctypeSystemIdentifier: {\n    reason: 'Missing system identifier in doctype',\n    description:\n      'Unexpected `%c`. Expected identifier for `system` instead (suggested: `\"about:legacy-compat\"`)'\n  },\n  /** @type {ErrorInfo} */\n  missingEndTagName: {\n    reason: 'Missing name in end tag',\n    description: 'Unexpected `%c`. Expected an ASCII letter instead'\n  },\n  /** @type {ErrorInfo} */\n  missingQuoteBeforeDoctypePublicIdentifier: {\n    reason: 'Missing quote before public identifier in doctype',\n    description: 'Unexpected `%c`. Expected `\"` or `\\'` instead'\n  },\n  /** @type {ErrorInfo} */\n  missingQuoteBeforeDoctypeSystemIdentifier: {\n    reason: 'Missing quote before system identifier in doctype',\n    description: 'Unexpected `%c`. Expected `\"` or `\\'` instead'\n  },\n  /** @type {ErrorInfo} */\n  missingSemicolonAfterCharacterReference: {\n    reason: 'Missing semicolon after character reference',\n    description: 'Unexpected `%c`. Expected `;` instead'\n  },\n  /** @type {ErrorInfo} */\n  missingWhitespaceAfterDoctypePublicKeyword: {\n    reason: 'Missing whitespace after public identifier in doctype',\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\n  },\n  /** @type {ErrorInfo} */\n  missingWhitespaceAfterDoctypeSystemKeyword: {\n    reason: 'Missing whitespace after system identifier in doctype',\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\n  },\n  /** @type {ErrorInfo} */\n  missingWhitespaceBeforeDoctypeName: {\n    reason: 'Missing whitespace before doctype name',\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\n  },\n  /** @type {ErrorInfo} */\n  missingWhitespaceBetweenAttributes: {\n    reason: 'Missing whitespace between attributes',\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\n  },\n  /** @type {ErrorInfo} */\n  missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers: {\n    reason:\n      'Missing whitespace between public and system identifiers in doctype',\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\n  },\n  /** @type {ErrorInfo} */\n  nestedComment: {\n    reason: 'Unexpected nested comment',\n    description: 'Unexpected `<!--`. Expected `-->`'\n  },\n  /** @type {ErrorInfo} */\n  nestedNoscriptInHead: {\n    reason: 'Unexpected nested `<noscript>` in `<head>`',\n    description:\n      'Unexpected `<noscript>`. Expected a closing tag or a meta element',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  nonConformingDoctype: {\n    reason: 'Unexpected non-conforming doctype declaration',\n    description:\n      'Expected `<!doctype html>` or `<!doctype html system \"about:legacy-compat\">`',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  nonVoidHtmlElementStartTagWithTrailingSolidus: {\n    reason: 'Unexpected trailing slash on start tag of non-void element',\n    description: 'Unexpected `/`. Expected `>` instead'\n  },\n  /** @type {ErrorInfo} */\n  noncharacterCharacterReference: {\n    reason:\n      'Unexpected noncharacter code point referenced by character reference',\n    description: 'Unexpected code point. Do not use noncharacters in HTML'\n  },\n  /** @type {ErrorInfo} */\n  noncharacterInInputStream: {\n    reason: 'Unexpected noncharacter character',\n    description: 'Unexpected code point `%x`. Do not use noncharacters in HTML'\n  },\n  /** @type {ErrorInfo} */\n  nullCharacterReference: {\n    reason: 'Unexpected NULL character referenced by character reference',\n    description: 'Unexpected code point. Do not use NULL characters in HTML'\n  },\n  /** @type {ErrorInfo} */\n  openElementsLeftAfterEof: {\n    reason: 'Unexpected end of file',\n    description: 'Unexpected end of file. Expected closing tag instead',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  surrogateCharacterReference: {\n    reason: 'Unexpected surrogate character referenced by character reference',\n    description:\n      'Unexpected code point. Do not use lone surrogate characters in HTML'\n  },\n  /** @type {ErrorInfo} */\n  surrogateInInputStream: {\n    reason: 'Unexpected surrogate character',\n    description:\n      'Unexpected code point `%x`. Do not use lone surrogate characters in HTML'\n  },\n  /** @type {ErrorInfo} */\n  unexpectedCharacterAfterDoctypeSystemIdentifier: {\n    reason: 'Invalid character after system identifier in doctype',\n    description: 'Unexpected character at `%c`. Expected `>`'\n  },\n  /** @type {ErrorInfo} */\n  unexpectedCharacterInAttributeName: {\n    reason: 'Unexpected character in attribute name',\n    description:\n      'Unexpected `%c`. Expected whitespace, `/`, `>`, `=`, or probably an ASCII letter'\n  },\n  /** @type {ErrorInfo} */\n  unexpectedCharacterInUnquotedAttributeValue: {\n    reason: 'Unexpected character in unquoted attribute value',\n    description: 'Unexpected `%c`. Quote the attribute value to include it'\n  },\n  /** @type {ErrorInfo} */\n  unexpectedEqualsSignBeforeAttributeName: {\n    reason: 'Unexpected equals sign before attribute name',\n    description: 'Unexpected `%c`. Add an attribute name before it'\n  },\n  /** @type {ErrorInfo} */\n  unexpectedNullCharacter: {\n    reason: 'Unexpected NULL character',\n    description:\n      'Unexpected code point `%x`. Do not use NULL characters in HTML'\n  },\n  /** @type {ErrorInfo} */\n  unexpectedQuestionMarkInsteadOfTagName: {\n    reason: 'Unexpected question mark instead of tag name',\n    description: 'Unexpected `%c`. Expected an ASCII letter instead'\n  },\n  /** @type {ErrorInfo} */\n  unexpectedSolidusInTag: {\n    reason: 'Unexpected slash in tag',\n    description:\n      'Unexpected `%c-1`. Expected it followed by `>` or in a quoted attribute value'\n  },\n  /** @type {ErrorInfo} */\n  unknownNamedCharacterReference: {\n    reason: 'Unexpected unknown named character reference',\n    description:\n      'Unexpected character reference. Expected known named character references'\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 45154, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 45160, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/hast-util-from-html/lib/index.js"],"sourcesContent":["/**\n * @import {Root} from 'hast'\n * @import {ParserError} from 'parse5'\n * @import {Value} from 'vfile'\n * @import {ErrorCode, Options} from './types.js'\n */\n\nimport {ok as assert} from 'devlop'\nimport {fromParse5} from 'hast-util-from-parse5'\nimport {parse, parseFragment} from 'parse5'\nimport {VFile} from 'vfile'\nimport {VFileMessage} from 'vfile-message'\nimport {errors} from './errors.js'\n\nconst base = 'https://html.spec.whatwg.org/multipage/parsing.html#parse-error-'\n\nconst dashToCamelRe = /-[a-z]/g\nconst formatCRe = /%c(?:([-+])(\\d+))?/g\nconst formatXRe = /%x/g\n\nconst fatalities = {2: true, 1: false, 0: null}\n\n/** @type {Readonly<Options>} */\nconst emptyOptions = {}\n\n/**\n * Turn serialized HTML into a hast tree.\n *\n * @param {VFile | Value} value\n *   Serialized HTML to parse.\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Root}\n *   Tree.\n */\nexport function fromHtml(value, options) {\n  const settings = options || emptyOptions\n  const onerror = settings.onerror\n  const file = value instanceof VFile ? value : new VFile(value)\n  const parseFunction = settings.fragment ? parseFragment : parse\n  const document = String(file)\n  const p5Document = parseFunction(document, {\n    sourceCodeLocationInfo: true,\n    // Note `parse5` types currently do not allow `undefined`.\n    onParseError: settings.onerror ? internalOnerror : null,\n    scriptingEnabled: false\n  })\n\n  // `parse5` returns document which are always mapped to roots.\n  return /** @type {Root} */ (\n    fromParse5(p5Document, {\n      file,\n      space: settings.space,\n      verbose: settings.verbose\n    })\n  )\n\n  /**\n   * Handle a parse error.\n   *\n   * @param {ParserError} error\n   *   Parse5 error.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function internalOnerror(error) {\n    const code = error.code\n    const name = camelcase(code)\n    const setting = settings[name]\n    const config = setting === null || setting === undefined ? true : setting\n    const level = typeof config === 'number' ? config : config ? 1 : 0\n\n    if (level) {\n      const info = errors[name]\n      assert(info, 'expected known error from `parse5`')\n\n      const message = new VFileMessage(format(info.reason), {\n        place: {\n          start: {\n            line: error.startLine,\n            column: error.startCol,\n            offset: error.startOffset\n          },\n          end: {\n            line: error.endLine,\n            column: error.endCol,\n            offset: error.endOffset\n          }\n        },\n        ruleId: code,\n        source: 'hast-util-from-html'\n      })\n\n      if (file.path) {\n        message.file = file.path\n        message.name = file.path + ':' + message.name\n      }\n\n      message.fatal = fatalities[level]\n      message.note = format(info.description)\n      message.url = info.url === false ? undefined : base + code\n\n      assert(onerror, '`internalOnerror` is not passed if `onerror` is not set')\n      onerror(message)\n    }\n\n    /**\n     * Format a human readable string about an error.\n     *\n     * @param {string} value\n     *   Value to format.\n     * @returns {string}\n     *   Formatted.\n     */\n    function format(value) {\n      return value.replace(formatCRe, formatC).replace(formatXRe, formatX)\n\n      /**\n       * Format the character.\n       *\n       * @param {string} _\n       *   Match.\n       * @param {string} $1\n       *   Sign (`-` or `+`, optional).\n       * @param {string} $2\n       *   Offset.\n       * @returns {string}\n       *   Formatted.\n       */\n      function formatC(_, $1, $2) {\n        const offset =\n          ($2 ? Number.parseInt($2, 10) : 0) * ($1 === '-' ? -1 : 1)\n        const char = document.charAt(error.startOffset + offset)\n        return visualizeCharacter(char)\n      }\n\n      /**\n       * Format the character code.\n       *\n       * @returns {string}\n       *   Formatted.\n       */\n      function formatX() {\n        return visualizeCharacterCode(document.charCodeAt(error.startOffset))\n      }\n    }\n  }\n}\n\n/**\n * @param {string} value\n *   Error code in dash case.\n * @returns {ErrorCode}\n *   Error code in camelcase.\n */\nfunction camelcase(value) {\n  // This should match an error code.\n  return /** @type {ErrorCode} */ (value.replace(dashToCamelRe, dashToCamel))\n}\n\n/**\n * @param {string} $0\n *   Match.\n * @returns {string}\n *   Camelcased.\n */\nfunction dashToCamel($0) {\n  return $0.charAt(1).toUpperCase()\n}\n\n/**\n * @param {string} char\n *   Character.\n * @returns {string}\n *   Formatted.\n */\nfunction visualizeCharacter(char) {\n  return char === '`' ? '` ` `' : char\n}\n\n/**\n * @param {number} charCode\n *   Character code.\n * @returns {string}\n *   Formatted.\n */\nfunction visualizeCharacterCode(charCode) {\n  return '0x' + charCode.toString(16).toUpperCase()\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 45322, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 45328, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/rehype-parse/lib/index.js"],"sourcesContent":["/**\n * @import {Root} from 'hast'\n * @import {Options as FromHtmlOptions} from 'hast-util-from-html'\n * @import {Parser, Processor} from 'unified'\n */\n\n/**\n * @typedef {Omit<FromHtmlOptions, 'onerror'> & RehypeParseFields} Options\n *   Configuration.\n *\n * @typedef RehypeParseFields\n *   Extra fields.\n * @property {boolean | null | undefined} [emitParseErrors=false]\n *   Whether to emit parse errors while parsing (default: `false`).\n *\n *   > 👉 **Note**: parse errors are currently being added to HTML.\n *   > Not all errors emitted by parse5 (or us) are specced yet.\n *   > Some documentation may still be missing.\n */\n\nimport {fromHtml} from 'hast-util-from-html'\n\n/**\n * Plugin to add support for parsing from HTML.\n *\n * > 👉 **Note**: this is not an XML parser.\n * > It supports SVG as embedded in HTML.\n * > It does not support the features available in XML.\n * > Passing SVG files might break but fragments of modern SVG should be fine.\n * > Use [`xast-util-from-xml`][xast-util-from-xml] to parse XML.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function rehypeParse(options) {\n  /** @type {Processor<Root>} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n  const {emitParseErrors, ...settings} = {...self.data('settings'), ...options}\n\n  self.parser = parser\n\n  /**\n   * @type {Parser<Root>}\n   */\n  function parser(document, file) {\n    return fromHtml(document, {\n      ...settings,\n      onerror: emitParseErrors\n        ? function (message) {\n            if (file.path) {\n              message.name = file.path + ':' + message.name\n              message.file = file.path\n            }\n\n            file.messages.push(message)\n          }\n        : undefined\n    })\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC,GAED;;;;;;;;;;;;CAYC;;;AAED;;AAgBe,SAAS,YAAY,OAAO;IACzC,4BAA4B,GAC5B,oFAAoF;IACpF,MAAM,OAAO,IAAI;IACjB,MAAM,EAAC,eAAe,EAAE,GAAG,UAAS,GAAG;QAAC,GAAG,KAAK,IAAI,CAAC,WAAW;QAAE,GAAG,OAAO;IAAA;IAE5E,KAAK,MAAM,GAAG;IAEd;;GAEC,GACD,SAAS,OAAO,QAAQ,EAAE,IAAI;QAC5B,OAAO,CAAA,GAAA,wJAAA,CAAA,WAAQ,AAAD,EAAE,UAAU;YACxB,GAAG,QAAQ;YACX,SAAS,kBACL,SAAU,OAAO;gBACf,IAAI,KAAK,IAAI,EAAE;oBACb,QAAQ,IAAI,GAAG,KAAK,IAAI,GAAG,MAAM,QAAQ,IAAI;oBAC7C,QAAQ,IAAI,GAAG,KAAK,IAAI;gBAC1B;gBAEA,KAAK,QAAQ,CAAC,IAAI,CAAC;YACrB,IACA;QACN;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 45372, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 45378, "column": 0}, "map": {"version":3,"sources":["file:///Users/bonus/develop/jobs/quantera.ai/docs/node_modules/rehype-pretty-code/dist/index.js"],"sourcesContent":["import { getHighlighter } from 'shiki';\nimport { visit } from 'unist-util-visit';\nimport { toString } from 'hast-util-to-string';\nimport rangeParser2 from 'parse-numeric-range';\nimport { unified } from 'unified';\nimport rehypeParse from 'rehype-parse';\n\n// src/index.ts\nfunction isJSONTheme(value) {\n  return value ? Object.hasOwn(value, \"tokenColors\") : false;\n}\nfunction isElement(value) {\n  return value ? value.type === \"element\" : false;\n}\nfunction isText(value) {\n  return value ? value.type === \"text\" : false;\n}\nfunction isInlineCode(element, parent, bypass = false) {\n  if (bypass) {\n    return false;\n  }\n  return element.tagName === \"code\" && isElement(parent) && parent.tagName !== \"pre\" || element.tagName === \"inlineCode\";\n}\nfunction isBlockCode(element) {\n  return element.tagName === \"pre\" && Array.isArray(element.children) && element.children.length === 1 && isElement(element.children[0]) && element.children[0].tagName === \"code\";\n}\nfunction getInlineCodeLang(meta, defaultFallbackLang) {\n  const placeholder = \"\\0\";\n  let temp = meta.replace(/\\\\\\\\/g, placeholder);\n  temp = temp.replace(/\\\\({:[a-zA-Z.-]+})$/, \"$1\");\n  const lang = temp.match(/{:([a-zA-Z.-]+)}$/)?.[1];\n  return lang?.replace(new RegExp(placeholder, \"g\"), \"\\\\\") || defaultFallbackLang;\n}\nfunction parseBlockMetaString(element, filter, defaultFallback) {\n  let meta = filter(\n    element.data?.meta ?? element.properties?.metastring ?? \"\"\n  );\n  const titleMatch = meta.match(/title=\"([^\"]*)\"/);\n  const title = titleMatch?.[1] ?? null;\n  meta = meta.replace(titleMatch?.[0] ?? \"\", \"\");\n  const captionMatch = meta.match(/caption=\"([^\"]*)\"/);\n  const caption = captionMatch?.[1] ?? null;\n  meta = meta.replace(captionMatch?.[0] ?? \"\", \"\");\n  let lang = defaultFallback;\n  if (element.properties && Array.isArray(element.properties.className) && typeof element.properties.className[0] === \"string\" && element.properties.className[0].startsWith(\"language-\")) {\n    lang = element.properties.className[0].replace(\"language-\", \"\");\n  }\n  return {\n    title,\n    caption,\n    lang,\n    meta\n  };\n}\nfunction getThemeNames(theme) {\n  if (isJSONTheme(theme)) {\n    return [theme.name];\n  }\n  if (typeof theme === \"string\") {\n    return [theme];\n  }\n  return Object.values(theme).map(\n    (theme2) => typeof theme2 === \"string\" ? theme2 : theme2.name\n  );\n}\nfunction replaceLineClass(element) {\n  if (Array.isArray(element.properties?.className) && element.properties.className.includes(\"line\")) {\n    const className = element.properties.className.filter((c) => c !== \"line\");\n    element.properties.className = className.length > 0 ? className : void 0;\n    element.properties[\"data-line\"] = \"\";\n  }\n}\nfunction getLineId(lineNumber, meta) {\n  const segments = meta.match(/\\{[^}]+\\}#[a-zA-Z0-9]+/g);\n  if (!segments) return null;\n  for (const segment of segments) {\n    const [range, id] = segment.split(\"#\");\n    if (!(range && id)) continue;\n    const match = range.match(/\\{(.*?)\\}/);\n    const capture = match?.[1];\n    if (capture && rangeParser2(capture).includes(lineNumber)) {\n      return id;\n    }\n  }\n  return null;\n}\n\n// src/chars/splitElement.ts\nfunction splitElement({\n  elements,\n  elementToWrap,\n  innerString,\n  rightString,\n  leftString,\n  rest,\n  nextElementContinues,\n  index,\n  ignoreChars\n}) {\n  if (isElement(elementToWrap) && elementToWrap.children?.[0]?.type !== \"text\" || ignoreChars) {\n    return [elementToWrap, index];\n  }\n  let newIndex = index;\n  const textElement = elementToWrap.children[0];\n  if (isText(textElement)) {\n    textElement.value = innerString;\n  }\n  let rightStr = rightString;\n  const leftStr = leftString;\n  if (rest.length > 0) {\n    rightStr += rest.map((s) => s === \"\" ? innerString : innerString + s).join(\"\");\n  }\n  if (leftStr.length > 0) {\n    elements.splice(newIndex, 0, {\n      ...elementToWrap,\n      properties: { ...elementToWrap.properties },\n      children: [{ type: \"text\", value: leftStr }]\n    });\n  }\n  if (rightStr.length > 0 && !nextElementContinues) {\n    newIndex = leftStr.length > 0 ? newIndex + 2 : newIndex + 1;\n    elements.splice(newIndex, 0, {\n      ...elementToWrap,\n      properties: { ...elementToWrap.properties },\n      children: [{ type: \"text\", value: rightStr }]\n    });\n  }\n  return [elementToWrap, index + 1];\n}\nfunction nextElementMaybeContinuesChars({\n  elements,\n  nextIndex,\n  remainingPart\n}) {\n  if (remainingPart === \"\") {\n    return false;\n  }\n  const nextNode = elements[nextIndex];\n  const content = getContent(nextNode);\n  if (!content) {\n    return false;\n  }\n  const includesNext = content.startsWith(remainingPart) || remainingPart.startsWith(content);\n  const overlap = findOverlap(content, remainingPart);\n  if (overlap === remainingPart && content.startsWith(remainingPart)) {\n    return true;\n  }\n  if (includesNext) {\n    return nextElementMaybeContinuesChars({\n      elements,\n      nextIndex: nextIndex + 1,\n      remainingPart: remainingPart.replace(content, \"\")\n    });\n  }\n  return false;\n}\nfunction getContent(node) {\n  if (!node) return;\n  return toString(node);\n}\nfunction findOverlap(a, b) {\n  if (b.length === 0) {\n    return \"\";\n  }\n  if (a.endsWith(b)) {\n    return b;\n  }\n  if (a.indexOf(b) >= 0) {\n    return b;\n  }\n  return findOverlap(a, b.substring(0, b.length - 1));\n}\nfunction reverseString(s) {\n  return s.split(\"\").reverse().join(\"\");\n}\n\n// src/chars/getElementsToHighlight.ts\nfunction getElementsToHighlight(element, chars, startIndex = 0, ignoreChars = false) {\n  const toWrap = [];\n  let charsSoFar = \"\";\n  if (element.children) {\n    const elements = element.children;\n    for (let i = startIndex; i < elements.length; i++) {\n      const remaining = charsSoFar ? chars.replace(charsSoFar, \"\") : chars;\n      if (remaining === \"\") {\n        return toWrap;\n      }\n      const maybeElement = elements[i];\n      if (!maybeElement || maybeElement.type !== \"element\" || // ignore any previously matched chars within\n      Object.hasOwn(\n        maybeElement.properties ?? {},\n        \"rehype-pretty-code-visited\"\n      )) {\n        continue;\n      }\n      const content = getContent(maybeElement) || \"\";\n      if (content === chars || charsSoFar + content === chars) {\n        toWrap.push({ element: maybeElement, index: i });\n        return toWrap;\n      }\n      if (chars.startsWith(charsSoFar + content)) {\n        if (nextElementMaybeContinuesChars({\n          elements,\n          nextIndex: i + 1,\n          remainingPart: remaining.replace(content, \"\")\n        })) {\n          toWrap.push({ element: elements[i], index: i });\n          charsSoFar += content;\n          continue;\n        }\n      }\n      const overlap = findOverlap(content, remaining);\n      const partialMatch = overlap && remaining.startsWith(overlap);\n      if (partialMatch) {\n        const nextPart = remaining.replace(overlap, \"\");\n        if (nextPart !== \"\" && getContent(elements[i + 1]) && !nextElementMaybeContinuesChars({\n          elements,\n          nextIndex: i + 1,\n          remainingPart: nextPart\n        })) {\n          continue;\n        }\n        const splitParts = content.split(overlap);\n        const [leftPart, rightPart, ...rest] = splitParts;\n        if (rightPart || leftPart || rest.length > 0) {\n          const withNextNode = content + (getContent(elements[i + 1]) ? getContent(elements[i + 1]) : \"\");\n          const nextNodeOverlap = findOverlap(withNextNode, remaining);\n          const splitIndex = withNextNode.indexOf(nextNodeOverlap);\n          if (chars.endsWith(overlap) || chars.startsWith(overlap)) {\n            const rightString = rightPart.replace(overlap, \"\");\n            const innerString = overlap;\n            const leftString = content.substring(0, splitIndex);\n            const nextElementContinues = nextElementMaybeContinuesChars({\n              elements,\n              nextIndex: i + 1,\n              remainingPart: nextPart\n            });\n            const [newElement, updatedIndex] = splitElement({\n              elements,\n              elementToWrap: elements[i],\n              innerString,\n              rightString,\n              leftString,\n              rest,\n              nextElementContinues,\n              index: i,\n              ignoreChars\n            });\n            charsSoFar += overlap;\n            toWrap.push({\n              element: newElement,\n              index: updatedIndex\n            });\n          }\n        }\n      }\n    }\n  }\n  return toWrap;\n}\n\n// src/chars/wrapHighlightedChars.ts\nfunction wrapHighlightedChars(parentElement, elementsToWrap, options, ignoreWord, onVisitHighlightedChars) {\n  if (!elementsToWrap || elementsToWrap.length === 0) {\n    return;\n  }\n  const [{ element }] = elementsToWrap;\n  if (ignoreWord) {\n    if (element.properties) {\n      element.properties[\"rehype-pretty-code-visited\"] = \"\";\n    }\n    return;\n  }\n  if (elementsToWrap.length > 1) {\n    parentElement.children.splice(\n      elementsToWrap[0].index,\n      elementsToWrap.length,\n      {\n        type: \"element\",\n        tagName: \"mark\",\n        properties: { \"data-highlighted-chars-mark\": \"\" },\n        children: elementsToWrap.map(({ element: element3 }) => element3)\n      }\n    );\n    const element2 = parentElement.children[elementsToWrap[0].index];\n    if (!isElement(element2)) {\n      return;\n    }\n    const wordStr = element2.children.reduce((acc, node) => {\n      const textElement = isElement(node) ? node.children[0] : null;\n      if (isText(textElement)) {\n        return acc + textElement.value;\n      }\n      return acc;\n    }, \"\");\n    const id = options.idsMap.get(wordStr);\n    element2.properties = element2.properties || {};\n    element2.properties[\"data-highlighted-chars\"] = \"\";\n    element2.properties[\"data-chars-id\"] = id;\n    element2.tagName = \"mark\";\n    onVisitHighlightedChars?.(element2, id);\n  } else {\n    const [{ element: element2 }] = elementsToWrap;\n    const textElement = element2.children[0];\n    if (!isText(textElement)) {\n      return;\n    }\n    const id = options.idsMap.get(textElement.value);\n    element2.properties = element2.properties || {};\n    element2.properties[\"rehype-pretty-code-visited\"] = \"\";\n    element2.properties[\"data-highlighted-chars\"] = \"\";\n    element2.properties[\"data-chars-id\"] = id;\n    element2.tagName = \"mark\";\n    element2.children = [\n      {\n        type: \"element\",\n        tagName: \"span\",\n        properties: {\n          style: element2.properties.style\n        },\n        children: element2.children\n      }\n    ];\n    element2.properties.style = void 0;\n    onVisitHighlightedChars?.(element2, id);\n  }\n}\nfunction charsHighlighter(element, charsList, options, onVisitHighlightedChars) {\n  const { ranges = [] } = options;\n  const textContent = toString(element);\n  charsList.forEach((chars, index) => {\n    if (chars && textContent?.includes(chars)) {\n      let textContent2 = toString(element);\n      let startIndex = 0;\n      while (textContent2.includes(chars)) {\n        const currentCharsRange = ranges[index] || [];\n        const id = `${chars}-${index}`;\n        options.counterMap.set(id, (options.counterMap.get(id) || 0) + 1);\n        const ignoreChars = currentCharsRange.length > 0 && !currentCharsRange.includes(options.counterMap.get(id) ?? -1);\n        const elementsToWrap = getElementsToHighlight(\n          element,\n          chars,\n          startIndex,\n          ignoreChars\n        );\n        if (elementsToWrap.length === 0) break;\n        wrapHighlightedChars(\n          element,\n          elementsToWrap,\n          options,\n          ignoreChars,\n          onVisitHighlightedChars\n        );\n        startIndex = Math.max(\n          elementsToWrap[elementsToWrap.length - 1].index - 2,\n          0\n        );\n        textContent2 = element.children.map((childNode) => {\n          const props = isElement(childNode) ? childNode.properties : {};\n          if (props && !Object.hasOwn(props, \"rehype-pretty-code-visited\") && !Object.hasOwn(props, \"data-highlighted-chars-mark\")) {\n            return toString(childNode);\n          }\n        }).join(\"\");\n      }\n    }\n  });\n  element.children.forEach((childNode) => {\n    if (!isElement(childNode)) return;\n    if (Object.hasOwn(childNode.properties, \"rehype-pretty-code-visited\")) {\n      childNode.properties[\"rehype-pretty-code-visited\"] = void 0;\n    }\n  });\n}\n\n// src/index.ts\nfunction apply(element, {\n  tree,\n  lang,\n  title,\n  caption,\n  inline = false,\n  keepBackground = true,\n  grid = true,\n  lineNumbersMaxDigits = 1,\n  theme,\n  onVisitTitle,\n  onVisitCaption\n}) {\n  element.tagName = inline ? \"span\" : \"figure\";\n  element.properties[\"data-rehype-pretty-code-figure\"] = \"\";\n  const codeData = element.children[0]?.data;\n  element.children = [tree].flatMap((tree2) => {\n    const pre = tree2.children[0];\n    const themeNames = getThemeNames(theme);\n    const themeNamesString = themeNames.join(\" \");\n    if (!(isElement(pre) && pre.properties)) {\n      return [];\n    }\n    const code = pre.children[0];\n    if (Array.isArray(pre.properties.className) && pre.properties.className.includes(\"shiki\")) {\n      const className = pre.properties.className.filter(\n        (c) => c !== \"shiki\" && c !== \"shiki-themes\" && (typeof c === \"string\" ? !themeNames.includes(c) : true)\n      );\n      pre.properties.className = className.length > 0 ? className : void 0;\n    }\n    if (!keepBackground) {\n      pre.properties.style = void 0;\n    }\n    pre.properties[\"data-language\"] = lang;\n    pre.properties[\"data-theme\"] = themeNamesString;\n    if (!(isElement(code) && code.properties)) {\n      return [];\n    }\n    code.properties[\"data-language\"] = lang;\n    code.properties[\"data-theme\"] = themeNamesString;\n    code.data = codeData;\n    if (inline) {\n      if (keepBackground) {\n        code.properties.style = pre.properties.style;\n      }\n      return code;\n    }\n    if (grid) {\n      if (code.properties.style) {\n        code.properties.style += \"display: grid;\";\n      } else {\n        code.properties.style = \"display: grid;\";\n      }\n    }\n    if (Object.hasOwn(code.properties, \"data-line-numbers\")) {\n      code.properties[\"data-line-numbers-max-digits\"] = lineNumbersMaxDigits.toString().length;\n    }\n    const fragments = [];\n    if (title) {\n      const elementContent = {\n        type: \"element\",\n        tagName: caption ? \"div\" : \"figcaption\",\n        properties: {\n          \"data-rehype-pretty-code-title\": \"\",\n          \"data-language\": lang,\n          \"data-theme\": themeNamesString\n        },\n        children: [{ type: \"text\", value: title }]\n      };\n      onVisitTitle?.(elementContent);\n      fragments.push(elementContent);\n    }\n    fragments.push(pre);\n    if (caption) {\n      const elementContent = {\n        type: \"element\",\n        tagName: \"figcaption\",\n        properties: {\n          \"data-rehype-pretty-code-caption\": \"\",\n          \"data-language\": lang,\n          \"data-theme\": themeNamesString\n        },\n        children: [{ type: \"text\", value: caption }]\n      };\n      onVisitCaption?.(elementContent);\n      fragments.push(elementContent);\n    }\n    return fragments;\n  });\n}\nvar globalHighlighterCache = /* @__PURE__ */ new Map();\nvar hastParser = unified().use(rehypeParse, { fragment: true });\nvar src_default = rehypePrettyCode;\nfunction rehypePrettyCode(options = {}) {\n  const {\n    grid = true,\n    theme = \"github-dark-dimmed\",\n    keepBackground = true,\n    bypassInlineCode = false,\n    defaultLang = \"\",\n    tokensMap = {},\n    filterMetaString = (v) => v,\n    getHighlighter: getHighlighter$1 = getHighlighter,\n    transformers,\n    onVisitLine,\n    onVisitHighlightedLine,\n    onVisitHighlightedChars,\n    onVisitTitle,\n    onVisitCaption\n  } = options;\n  const key = JSON.stringify(theme);\n  let cachedHighlighter = globalHighlighterCache.get(key);\n  if (!cachedHighlighter) {\n    cachedHighlighter = getHighlighter$1({\n      themes: isJSONTheme(theme) || typeof theme === \"string\" ? [theme] : Object.values(theme),\n      langs: [\"plaintext\"]\n    });\n    globalHighlighterCache.set(key, cachedHighlighter);\n  }\n  const defaultCodeBlockLang = typeof defaultLang === \"string\" ? defaultLang : defaultLang.block || \"\";\n  const defaultInlineCodeLang = typeof defaultLang === \"string\" ? defaultLang : defaultLang.inline || \"\";\n  function getOptions(lang, meta) {\n    const multipleThemes = !isJSONTheme(theme) && typeof theme === \"object\" ? theme : null;\n    const singleTheme = isJSONTheme(theme) || typeof theme === \"string\" ? theme : null;\n    return {\n      lang,\n      meta: { __raw: meta },\n      transformers,\n      defaultColor: typeof theme === \"string\" ? theme : false,\n      ...multipleThemes ? { themes: multipleThemes } : { theme: singleTheme }\n    };\n  }\n  return async (tree) => {\n    const langsToLoad = /* @__PURE__ */ new Set();\n    const highlighter = await cachedHighlighter;\n    if (!highlighter) return;\n    visit(tree, \"element\", (element, _, parent) => {\n      if (isInlineCode(element, parent, bypassInlineCode)) {\n        const textElement = element.children[0];\n        if (!isText(textElement)) return;\n        const value = textElement.value;\n        if (!value) return;\n        const lang = getInlineCodeLang(value, defaultInlineCodeLang);\n        if (lang && lang[0] !== \".\") {\n          langsToLoad.add(lang);\n        }\n      }\n      if (isBlockCode(element)) {\n        const codeElement = element.children[0];\n        if (!isElement(codeElement)) return;\n        const { lang } = parseBlockMetaString(\n          codeElement,\n          filterMetaString,\n          defaultCodeBlockLang\n        );\n        if (lang) {\n          langsToLoad.add(lang);\n        }\n      }\n    });\n    try {\n      await Promise.allSettled(\n        Array.from(langsToLoad).map((lang) => {\n          try {\n            return highlighter.loadLanguage(\n              lang\n            );\n          } catch (e) {\n            return Promise.reject(e);\n          }\n        })\n      );\n    } catch (e) {\n      console.error(e);\n    }\n    visit(tree, \"element\", (element, _, parent) => {\n      if (isInlineCode(element, parent, bypassInlineCode)) {\n        const textElement = element.children[0];\n        if (!isText(textElement)) return;\n        const value = textElement.value;\n        if (!value) return;\n        const keepLangPart = /\\\\{:[a-zA-Z.-]+}$/.test(value);\n        const strippedValue = keepLangPart ? value.replace(/\\\\({:[a-zA-Z.-]+})$/, \"$1\") : value.replace(/{:[a-zA-Z.-]+}$/, \"\");\n        textElement.value = strippedValue;\n        const lang = keepLangPart ? \"\" : getInlineCodeLang(value, defaultInlineCodeLang);\n        const isLang = lang[0] !== \".\";\n        if (!lang) return;\n        let codeTree;\n        if (isLang) {\n          try {\n            codeTree = hastParser.parse(\n              highlighter.codeToHtml(strippedValue, getOptions(lang))\n            );\n          } catch {\n            codeTree = hastParser.parse(\n              highlighter.codeToHtml(strippedValue, getOptions(\"plaintext\"))\n            );\n          }\n        } else {\n          const themeNames = getThemeNames(theme);\n          const isMultiTheme = typeof theme === \"object\" && !isJSONTheme(theme);\n          const themeKeys = isMultiTheme ? Object.keys(theme) : null;\n          const colorsByTheme = themeNames.map(\n            (name) => name ? highlighter.getTheme(name).settings.find(\n              ({ scope }) => scope?.includes(tokensMap[lang.slice(1)] ?? lang.slice(1))\n            )?.settings.foreground ?? \"inherit\" : \"inherit\"\n          );\n          if (isMultiTheme && themeKeys) {\n            codeTree = hastParser.parse(\n              `<pre><code><span style=\"${themeKeys.map((key2, i) => `--shiki-${key2}:${colorsByTheme[i]}`).join(\";\")}\">${strippedValue}</span></code></pre>`\n            );\n          } else {\n            codeTree = hastParser.parse(\n              `<pre><code><span style=\"color:${colorsByTheme[0]}\">${strippedValue}</span></code></pre>`\n            );\n          }\n        }\n        visit(codeTree, \"element\", replaceLineClass);\n        apply(element, {\n          tree: codeTree,\n          lang: isLang ? lang : \".token\",\n          inline: true,\n          keepBackground,\n          theme\n        });\n      }\n      if (isBlockCode(element)) {\n        const codeElement = element.children[0];\n        if (!isElement(codeElement)) return;\n        const textElement = codeElement.children[0];\n        const { title, caption, meta, lang } = parseBlockMetaString(\n          codeElement,\n          filterMetaString,\n          defaultCodeBlockLang\n        );\n        if (!lang || lang === \"math\") return;\n        const lineNumbers = [];\n        if (meta) {\n          const matches = meta.matchAll(/\\B\\{(.*?)\\}\\B/g);\n          for (const match of matches) {\n            if (match[1]) {\n              lineNumbers.push(...rangeParser2(match[1]));\n            }\n          }\n        }\n        let lineNumbersMaxDigits = 0;\n        const lineIdMap = /* @__PURE__ */ new Map();\n        const charsList = [];\n        const charsListNumbers = [];\n        const charsListIdMap = /* @__PURE__ */ new Map();\n        const charsMatches = meta ? [\n          ...meta.matchAll(\n            /(?<delimiter>[\"/])(?<chars>.*?)\\k<delimiter>(?<charsIdAndOrRange>\\S*)/g\n          )\n        ] : void 0;\n        lineNumbers.forEach((lineNumber) => {\n          const id = getLineId(lineNumber, meta);\n          id && lineIdMap.set(lineNumber, id);\n        });\n        if (Array.isArray(charsMatches)) {\n          charsMatches.forEach((name) => {\n            const { chars, charsIdAndOrRange } = name.groups;\n            charsList.push(chars);\n            if (charsIdAndOrRange === \"\") {\n              charsListNumbers.push([]);\n            } else {\n              const [range, id] = charsIdAndOrRange.split(\"#\");\n              range && charsListNumbers.push(rangeParser2(range));\n              id && charsListIdMap.set(chars, id);\n            }\n          });\n        }\n        if (!isText(textElement)) return;\n        const strippedValue = textElement.value.replace(/\\n$/, \"\");\n        let codeTree;\n        try {\n          codeTree = hastParser.parse(\n            highlighter.codeToHtml(strippedValue, getOptions(lang, meta))\n          );\n        } catch {\n          codeTree = hastParser.parse(\n            highlighter.codeToHtml(\n              strippedValue,\n              getOptions(\"plaintext\", meta)\n            )\n          );\n        }\n        let lineCounter = 0;\n        const charsHighlighterOptions = {\n          ranges: charsListNumbers,\n          idsMap: charsListIdMap,\n          counterMap: /* @__PURE__ */ new Map()\n        };\n        visit(codeTree, \"element\", (element2) => {\n          if (element2.tagName === \"code\" && /srebmuNeniLwohs(?!(.*)(\\/))/.test(reverseString(meta))) {\n            if (element2.properties) {\n              element2.properties[\"data-line-numbers\"] = \"\";\n            }\n            const lineNumbersStartAtMatch = reverseString(meta).match(\n              /(?:\\}(\\d+){)?srebmuNeniLwohs(?!(.*)(\\/))/\n            );\n            const startNumberString = lineNumbersStartAtMatch?.[1];\n            if (startNumberString) {\n              const startAt = startNumberString ? Number(reverseString(startNumberString)) - 1 : 0;\n              lineNumbersMaxDigits = startAt;\n              if (element2.properties) {\n                element2.properties.style = `counter-set: line ${startAt};`;\n              }\n            }\n          }\n          if (Array.isArray(element2.properties?.className) && element2.properties?.className?.[0] === \"line\") {\n            if (grid && toString(element2) === \"\") {\n              element2.children = [{ type: \"text\", value: \" \" }];\n            }\n            replaceLineClass(element2);\n            onVisitLine?.(element2);\n            lineCounter++;\n            if (lineNumbers.includes(lineCounter)) {\n              element2.properties[\"data-highlighted-line\"] = \"\";\n              const lineId = lineIdMap.get(lineCounter);\n              if (lineId) {\n                element2.properties[\"data-highlighted-line-id\"] = lineId;\n              }\n              onVisitHighlightedLine?.(element2, lineId);\n            }\n            charsHighlighter(\n              element2,\n              charsList,\n              charsHighlighterOptions,\n              onVisitHighlightedChars\n            );\n            lineNumbersMaxDigits++;\n          }\n        });\n        apply(element, {\n          tree: codeTree,\n          lang,\n          title,\n          caption,\n          keepBackground,\n          grid,\n          lineNumbersMaxDigits,\n          theme,\n          onVisitTitle,\n          onVisitCaption\n        });\n      }\n    });\n  };\n}\n\nexport { src_default as default, rehypePrettyCode };\n"],"names":[],"mappings":";;;;AAGA;AADA;AAEA;AACA;AAJA;AADA;;;;;;;AAOA,eAAe;AACf,SAAS,YAAY,KAAK;IACxB,OAAO,QAAQ,OAAO,MAAM,CAAC,OAAO,iBAAiB;AACvD;AACA,SAAS,UAAU,KAAK;IACtB,OAAO,QAAQ,MAAM,IAAI,KAAK,YAAY;AAC5C;AACA,SAAS,OAAO,KAAK;IACnB,OAAO,QAAQ,MAAM,IAAI,KAAK,SAAS;AACzC;AACA,SAAS,aAAa,OAAO,EAAE,MAAM,EAAE,SAAS,KAAK;IACnD,IAAI,QAAQ;QACV,OAAO;IACT;IACA,OAAO,QAAQ,OAAO,KAAK,UAAU,UAAU,WAAW,OAAO,OAAO,KAAK,SAAS,QAAQ,OAAO,KAAK;AAC5G;AACA,SAAS,YAAY,OAAO;IAC1B,OAAO,QAAQ,OAAO,KAAK,SAAS,MAAM,OAAO,CAAC,QAAQ,QAAQ,KAAK,QAAQ,QAAQ,CAAC,MAAM,KAAK,KAAK,UAAU,QAAQ,QAAQ,CAAC,EAAE,KAAK,QAAQ,QAAQ,CAAC,EAAE,CAAC,OAAO,KAAK;AAC5K;AACA,SAAS,kBAAkB,IAAI,EAAE,mBAAmB;IAClD,MAAM,cAAc;IACpB,IAAI,OAAO,KAAK,OAAO,CAAC,SAAS;IACjC,OAAO,KAAK,OAAO,CAAC,uBAAuB;IAC3C,MAAM,OAAO,KAAK,KAAK,CAAC,sBAAsB,CAAC,EAAE;IACjD,OAAO,MAAM,QAAQ,IAAI,OAAO,aAAa,MAAM,SAAS;AAC9D;AACA,SAAS,qBAAqB,OAAO,EAAE,MAAM,EAAE,eAAe;IAC5D,IAAI,OAAO,OACT,QAAQ,IAAI,EAAE,QAAQ,QAAQ,UAAU,EAAE,cAAc;IAE1D,MAAM,aAAa,KAAK,KAAK,CAAC;IAC9B,MAAM,QAAQ,YAAY,CAAC,EAAE,IAAI;IACjC,OAAO,KAAK,OAAO,CAAC,YAAY,CAAC,EAAE,IAAI,IAAI;IAC3C,MAAM,eAAe,KAAK,KAAK,CAAC;IAChC,MAAM,UAAU,cAAc,CAAC,EAAE,IAAI;IACrC,OAAO,KAAK,OAAO,CAAC,cAAc,CAAC,EAAE,IAAI,IAAI;IAC7C,IAAI,OAAO;IACX,IAAI,QAAQ,UAAU,IAAI,MAAM,OAAO,CAAC,QAAQ,UAAU,CAAC,SAAS,KAAK,OAAO,QAAQ,UAAU,CAAC,SAAS,CAAC,EAAE,KAAK,YAAY,QAAQ,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC,UAAU,CAAC,cAAc;QACvL,OAAO,QAAQ,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC,OAAO,CAAC,aAAa;IAC9D;IACA,OAAO;QACL;QACA;QACA;QACA;IACF;AACF;AACA,SAAS,cAAc,KAAK;IAC1B,IAAI,YAAY,QAAQ;QACtB,OAAO;YAAC,MAAM,IAAI;SAAC;IACrB;IACA,IAAI,OAAO,UAAU,UAAU;QAC7B,OAAO;YAAC;SAAM;IAChB;IACA,OAAO,OAAO,MAAM,CAAC,OAAO,GAAG,CAC7B,CAAC,SAAW,OAAO,WAAW,WAAW,SAAS,OAAO,IAAI;AAEjE;AACA,SAAS,iBAAiB,OAAO;IAC/B,IAAI,MAAM,OAAO,CAAC,QAAQ,UAAU,EAAE,cAAc,QAAQ,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS;QACjG,MAAM,YAAY,QAAQ,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,IAAM,MAAM;QACnE,QAAQ,UAAU,CAAC,SAAS,GAAG,UAAU,MAAM,GAAG,IAAI,YAAY,KAAK;QACvE,QAAQ,UAAU,CAAC,YAAY,GAAG;IACpC;AACF;AACA,SAAS,UAAU,UAAU,EAAE,IAAI;IACjC,MAAM,WAAW,KAAK,KAAK,CAAC;IAC5B,IAAI,CAAC,UAAU,OAAO;IACtB,KAAK,MAAM,WAAW,SAAU;QAC9B,MAAM,CAAC,OAAO,GAAG,GAAG,QAAQ,KAAK,CAAC;QAClC,IAAI,CAAC,CAAC,SAAS,EAAE,GAAG;QACpB,MAAM,QAAQ,MAAM,KAAK,CAAC;QAC1B,MAAM,UAAU,OAAO,CAAC,EAAE;QAC1B,IAAI,WAAW,CAAA,GAAA,8IAAA,CAAA,UAAY,AAAD,EAAE,SAAS,QAAQ,CAAC,aAAa;YACzD,OAAO;QACT;IACF;IACA,OAAO;AACT;AAEA,4BAA4B;AAC5B,SAAS,aAAa,EACpB,QAAQ,EACR,aAAa,EACb,WAAW,EACX,WAAW,EACX,UAAU,EACV,IAAI,EACJ,oBAAoB,EACpB,KAAK,EACL,WAAW,EACZ;IACC,IAAI,UAAU,kBAAkB,cAAc,QAAQ,EAAE,CAAC,EAAE,EAAE,SAAS,UAAU,aAAa;QAC3F,OAAO;YAAC;YAAe;SAAM;IAC/B;IACA,IAAI,WAAW;IACf,MAAM,cAAc,cAAc,QAAQ,CAAC,EAAE;IAC7C,IAAI,OAAO,cAAc;QACvB,YAAY,KAAK,GAAG;IACtB;IACA,IAAI,WAAW;IACf,MAAM,UAAU;IAChB,IAAI,KAAK,MAAM,GAAG,GAAG;QACnB,YAAY,KAAK,GAAG,CAAC,CAAC,IAAM,MAAM,KAAK,cAAc,cAAc,GAAG,IAAI,CAAC;IAC7E;IACA,IAAI,QAAQ,MAAM,GAAG,GAAG;QACtB,SAAS,MAAM,CAAC,UAAU,GAAG;YAC3B,GAAG,aAAa;YAChB,YAAY;gBAAE,GAAG,cAAc,UAAU;YAAC;YAC1C,UAAU;gBAAC;oBAAE,MAAM;oBAAQ,OAAO;gBAAQ;aAAE;QAC9C;IACF;IACA,IAAI,SAAS,MAAM,GAAG,KAAK,CAAC,sBAAsB;QAChD,WAAW,QAAQ,MAAM,GAAG,IAAI,WAAW,IAAI,WAAW;QAC1D,SAAS,MAAM,CAAC,UAAU,GAAG;YAC3B,GAAG,aAAa;YAChB,YAAY;gBAAE,GAAG,cAAc,UAAU;YAAC;YAC1C,UAAU;gBAAC;oBAAE,MAAM;oBAAQ,OAAO;gBAAS;aAAE;QAC/C;IACF;IACA,OAAO;QAAC;QAAe,QAAQ;KAAE;AACnC;AACA,SAAS,+BAA+B,EACtC,QAAQ,EACR,SAAS,EACT,aAAa,EACd;IACC,IAAI,kBAAkB,IAAI;QACxB,OAAO;IACT;IACA,MAAM,WAAW,QAAQ,CAAC,UAAU;IACpC,MAAM,UAAU,WAAW;IAC3B,IAAI,CAAC,SAAS;QACZ,OAAO;IACT;IACA,MAAM,eAAe,QAAQ,UAAU,CAAC,kBAAkB,cAAc,UAAU,CAAC;IACnF,MAAM,UAAU,YAAY,SAAS;IACrC,IAAI,YAAY,iBAAiB,QAAQ,UAAU,CAAC,gBAAgB;QAClE,OAAO;IACT;IACA,IAAI,cAAc;QAChB,OAAO,+BAA+B;YACpC;YACA,WAAW,YAAY;YACvB,eAAe,cAAc,OAAO,CAAC,SAAS;QAChD;IACF;IACA,OAAO;AACT;AACA,SAAS,WAAW,IAAI;IACtB,IAAI,CAAC,MAAM;IACX,OAAO,CAAA,GAAA,wJAAA,CAAA,WAAQ,AAAD,EAAE;AAClB;AACA,SAAS,YAAY,CAAC,EAAE,CAAC;IACvB,IAAI,EAAE,MAAM,KAAK,GAAG;QAClB,OAAO;IACT;IACA,IAAI,EAAE,QAAQ,CAAC,IAAI;QACjB,OAAO;IACT;IACA,IAAI,EAAE,OAAO,CAAC,MAAM,GAAG;QACrB,OAAO;IACT;IACA,OAAO,YAAY,GAAG,EAAE,SAAS,CAAC,GAAG,EAAE,MAAM,GAAG;AAClD;AACA,SAAS,cAAc,CAAC;IACtB,OAAO,EAAE,KAAK,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC;AACpC;AAEA,sCAAsC;AACtC,SAAS,uBAAuB,OAAO,EAAE,KAAK,EAAE,aAAa,CAAC,EAAE,cAAc,KAAK;IACjF,MAAM,SAAS,EAAE;IACjB,IAAI,aAAa;IACjB,IAAI,QAAQ,QAAQ,EAAE;QACpB,MAAM,WAAW,QAAQ,QAAQ;QACjC,IAAK,IAAI,IAAI,YAAY,IAAI,SAAS,MAAM,EAAE,IAAK;YACjD,MAAM,YAAY,aAAa,MAAM,OAAO,CAAC,YAAY,MAAM;YAC/D,IAAI,cAAc,IAAI;gBACpB,OAAO;YACT;YACA,MAAM,eAAe,QAAQ,CAAC,EAAE;YAChC,IAAI,CAAC,gBAAgB,aAAa,IAAI,KAAK,aAAa,6CAA6C;YACrG,OAAO,MAAM,CACX,aAAa,UAAU,IAAI,CAAC,GAC5B,+BACC;gBACD;YACF;YACA,MAAM,UAAU,WAAW,iBAAiB;YAC5C,IAAI,YAAY,SAAS,aAAa,YAAY,OAAO;gBACvD,OAAO,IAAI,CAAC;oBAAE,SAAS;oBAAc,OAAO;gBAAE;gBAC9C,OAAO;YACT;YACA,IAAI,MAAM,UAAU,CAAC,aAAa,UAAU;gBAC1C,IAAI,+BAA+B;oBACjC;oBACA,WAAW,IAAI;oBACf,eAAe,UAAU,OAAO,CAAC,SAAS;gBAC5C,IAAI;oBACF,OAAO,IAAI,CAAC;wBAAE,SAAS,QAAQ,CAAC,EAAE;wBAAE,OAAO;oBAAE;oBAC7C,cAAc;oBACd;gBACF;YACF;YACA,MAAM,UAAU,YAAY,SAAS;YACrC,MAAM,eAAe,WAAW,UAAU,UAAU,CAAC;YACrD,IAAI,cAAc;gBAChB,MAAM,WAAW,UAAU,OAAO,CAAC,SAAS;gBAC5C,IAAI,aAAa,MAAM,WAAW,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,+BAA+B;oBACpF;oBACA,WAAW,IAAI;oBACf,eAAe;gBACjB,IAAI;oBACF;gBACF;gBACA,MAAM,aAAa,QAAQ,KAAK,CAAC;gBACjC,MAAM,CAAC,UAAU,WAAW,GAAG,KAAK,GAAG;gBACvC,IAAI,aAAa,YAAY,KAAK,MAAM,GAAG,GAAG;oBAC5C,MAAM,eAAe,UAAU,CAAC,WAAW,QAAQ,CAAC,IAAI,EAAE,IAAI,WAAW,QAAQ,CAAC,IAAI,EAAE,IAAI,EAAE;oBAC9F,MAAM,kBAAkB,YAAY,cAAc;oBAClD,MAAM,aAAa,aAAa,OAAO,CAAC;oBACxC,IAAI,MAAM,QAAQ,CAAC,YAAY,MAAM,UAAU,CAAC,UAAU;wBACxD,MAAM,cAAc,UAAU,OAAO,CAAC,SAAS;wBAC/C,MAAM,cAAc;wBACpB,MAAM,aAAa,QAAQ,SAAS,CAAC,GAAG;wBACxC,MAAM,uBAAuB,+BAA+B;4BAC1D;4BACA,WAAW,IAAI;4BACf,eAAe;wBACjB;wBACA,MAAM,CAAC,YAAY,aAAa,GAAG,aAAa;4BAC9C;4BACA,eAAe,QAAQ,CAAC,EAAE;4BAC1B;4BACA;4BACA;4BACA;4BACA;4BACA,OAAO;4BACP;wBACF;wBACA,cAAc;wBACd,OAAO,IAAI,CAAC;4BACV,SAAS;4BACT,OAAO;wBACT;oBACF;gBACF;YACF;QACF;IACF;IACA,OAAO;AACT;AAEA,oCAAoC;AACpC,SAAS,qBAAqB,aAAa,EAAE,cAAc,EAAE,OAAO,EAAE,UAAU,EAAE,uBAAuB;IACvG,IAAI,CAAC,kBAAkB,eAAe,MAAM,KAAK,GAAG;QAClD;IACF;IACA,MAAM,CAAC,EAAE,OAAO,EAAE,CAAC,GAAG;IACtB,IAAI,YAAY;QACd,IAAI,QAAQ,UAAU,EAAE;YACtB,QAAQ,UAAU,CAAC,6BAA6B,GAAG;QACrD;QACA;IACF;IACA,IAAI,eAAe,MAAM,GAAG,GAAG;QAC7B,cAAc,QAAQ,CAAC,MAAM,CAC3B,cAAc,CAAC,EAAE,CAAC,KAAK,EACvB,eAAe,MAAM,EACrB;YACE,MAAM;YACN,SAAS;YACT,YAAY;gBAAE,+BAA+B;YAAG;YAChD,UAAU,eAAe,GAAG,CAAC,CAAC,EAAE,SAAS,QAAQ,EAAE,GAAK;QAC1D;QAEF,MAAM,WAAW,cAAc,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAC,KAAK,CAAC;QAChE,IAAI,CAAC,UAAU,WAAW;YACxB;QACF;QACA,MAAM,UAAU,SAAS,QAAQ,CAAC,MAAM,CAAC,CAAC,KAAK;YAC7C,MAAM,cAAc,UAAU,QAAQ,KAAK,QAAQ,CAAC,EAAE,GAAG;YACzD,IAAI,OAAO,cAAc;gBACvB,OAAO,MAAM,YAAY,KAAK;YAChC;YACA,OAAO;QACT,GAAG;QACH,MAAM,KAAK,QAAQ,MAAM,CAAC,GAAG,CAAC;QAC9B,SAAS,UAAU,GAAG,SAAS,UAAU,IAAI,CAAC;QAC9C,SAAS,UAAU,CAAC,yBAAyB,GAAG;QAChD,SAAS,UAAU,CAAC,gBAAgB,GAAG;QACvC,SAAS,OAAO,GAAG;QACnB,0BAA0B,UAAU;IACtC,OAAO;QACL,MAAM,CAAC,EAAE,SAAS,QAAQ,EAAE,CAAC,GAAG;QAChC,MAAM,cAAc,SAAS,QAAQ,CAAC,EAAE;QACxC,IAAI,CAAC,OAAO,cAAc;YACxB;QACF;QACA,MAAM,KAAK,QAAQ,MAAM,CAAC,GAAG,CAAC,YAAY,KAAK;QAC/C,SAAS,UAAU,GAAG,SAAS,UAAU,IAAI,CAAC;QAC9C,SAAS,UAAU,CAAC,6BAA6B,GAAG;QACpD,SAAS,UAAU,CAAC,yBAAyB,GAAG;QAChD,SAAS,UAAU,CAAC,gBAAgB,GAAG;QACvC,SAAS,OAAO,GAAG;QACnB,SAAS,QAAQ,GAAG;YAClB;gBACE,MAAM;gBACN,SAAS;gBACT,YAAY;oBACV,OAAO,SAAS,UAAU,CAAC,KAAK;gBAClC;gBACA,UAAU,SAAS,QAAQ;YAC7B;SACD;QACD,SAAS,UAAU,CAAC,KAAK,GAAG,KAAK;QACjC,0BAA0B,UAAU;IACtC;AACF;AACA,SAAS,iBAAiB,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,uBAAuB;IAC5E,MAAM,EAAE,SAAS,EAAE,EAAE,GAAG;IACxB,MAAM,cAAc,CAAA,GAAA,wJAAA,CAAA,WAAQ,AAAD,EAAE;IAC7B,UAAU,OAAO,CAAC,CAAC,OAAO;QACxB,IAAI,SAAS,aAAa,SAAS,QAAQ;YACzC,IAAI,eAAe,CAAA,GAAA,wJAAA,CAAA,WAAQ,AAAD,EAAE;YAC5B,IAAI,aAAa;YACjB,MAAO,aAAa,QAAQ,CAAC,OAAQ;gBACnC,MAAM,oBAAoB,MAAM,CAAC,MAAM,IAAI,EAAE;gBAC7C,MAAM,KAAK,GAAG,MAAM,CAAC,EAAE,OAAO;gBAC9B,QAAQ,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI;gBAC/D,MAAM,cAAc,kBAAkB,MAAM,GAAG,KAAK,CAAC,kBAAkB,QAAQ,CAAC,QAAQ,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC;gBAC/G,MAAM,iBAAiB,uBACrB,SACA,OACA,YACA;gBAEF,IAAI,eAAe,MAAM,KAAK,GAAG;gBACjC,qBACE,SACA,gBACA,SACA,aACA;gBAEF,aAAa,KAAK,GAAG,CACnB,cAAc,CAAC,eAAe,MAAM,GAAG,EAAE,CAAC,KAAK,GAAG,GAClD;gBAEF,eAAe,QAAQ,QAAQ,CAAC,GAAG,CAAC,CAAC;oBACnC,MAAM,QAAQ,UAAU,aAAa,UAAU,UAAU,GAAG,CAAC;oBAC7D,IAAI,SAAS,CAAC,OAAO,MAAM,CAAC,OAAO,iCAAiC,CAAC,OAAO,MAAM,CAAC,OAAO,gCAAgC;wBACxH,OAAO,CAAA,GAAA,wJAAA,CAAA,WAAQ,AAAD,EAAE;oBAClB;gBACF,GAAG,IAAI,CAAC;YACV;QACF;IACF;IACA,QAAQ,QAAQ,CAAC,OAAO,CAAC,CAAC;QACxB,IAAI,CAAC,UAAU,YAAY;QAC3B,IAAI,OAAO,MAAM,CAAC,UAAU,UAAU,EAAE,+BAA+B;YACrE,UAAU,UAAU,CAAC,6BAA6B,GAAG,KAAK;QAC5D;IACF;AACF;AAEA,eAAe;AACf,SAAS,MAAM,OAAO,EAAE,EACtB,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,OAAO,EACP,SAAS,KAAK,EACd,iBAAiB,IAAI,EACrB,OAAO,IAAI,EACX,uBAAuB,CAAC,EACxB,KAAK,EACL,YAAY,EACZ,cAAc,EACf;IACC,QAAQ,OAAO,GAAG,SAAS,SAAS;IACpC,QAAQ,UAAU,CAAC,iCAAiC,GAAG;IACvD,MAAM,WAAW,QAAQ,QAAQ,CAAC,EAAE,EAAE;IACtC,QAAQ,QAAQ,GAAG;QAAC;KAAK,CAAC,OAAO,CAAC,CAAC;QACjC,MAAM,MAAM,MAAM,QAAQ,CAAC,EAAE;QAC7B,MAAM,aAAa,cAAc;QACjC,MAAM,mBAAmB,WAAW,IAAI,CAAC;QACzC,IAAI,CAAC,CAAC,UAAU,QAAQ,IAAI,UAAU,GAAG;YACvC,OAAO,EAAE;QACX;QACA,MAAM,OAAO,IAAI,QAAQ,CAAC,EAAE;QAC5B,IAAI,MAAM,OAAO,CAAC,IAAI,UAAU,CAAC,SAAS,KAAK,IAAI,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU;YACzF,MAAM,YAAY,IAAI,UAAU,CAAC,SAAS,CAAC,MAAM,CAC/C,CAAC,IAAM,MAAM,WAAW,MAAM,kBAAkB,CAAC,OAAO,MAAM,WAAW,CAAC,WAAW,QAAQ,CAAC,KAAK,IAAI;YAEzG,IAAI,UAAU,CAAC,SAAS,GAAG,UAAU,MAAM,GAAG,IAAI,YAAY,KAAK;QACrE;QACA,IAAI,CAAC,gBAAgB;YACnB,IAAI,UAAU,CAAC,KAAK,GAAG,KAAK;QAC9B;QACA,IAAI,UAAU,CAAC,gBAAgB,GAAG;QAClC,IAAI,UAAU,CAAC,aAAa,GAAG;QAC/B,IAAI,CAAC,CAAC,UAAU,SAAS,KAAK,UAAU,GAAG;YACzC,OAAO,EAAE;QACX;QACA,KAAK,UAAU,CAAC,gBAAgB,GAAG;QACnC,KAAK,UAAU,CAAC,aAAa,GAAG;QAChC,KAAK,IAAI,GAAG;QACZ,IAAI,QAAQ;YACV,IAAI,gBAAgB;gBAClB,KAAK,UAAU,CAAC,KAAK,GAAG,IAAI,UAAU,CAAC,KAAK;YAC9C;YACA,OAAO;QACT;QACA,IAAI,MAAM;YACR,IAAI,KAAK,UAAU,CAAC,KAAK,EAAE;gBACzB,KAAK,UAAU,CAAC,KAAK,IAAI;YAC3B,OAAO;gBACL,KAAK,UAAU,CAAC,KAAK,GAAG;YAC1B;QACF;QACA,IAAI,OAAO,MAAM,CAAC,KAAK,UAAU,EAAE,sBAAsB;YACvD,KAAK,UAAU,CAAC,+BAA+B,GAAG,qBAAqB,QAAQ,GAAG,MAAM;QAC1F;QACA,MAAM,YAAY,EAAE;QACpB,IAAI,OAAO;YACT,MAAM,iBAAiB;gBACrB,MAAM;gBACN,SAAS,UAAU,QAAQ;gBAC3B,YAAY;oBACV,iCAAiC;oBACjC,iBAAiB;oBACjB,cAAc;gBAChB;gBACA,UAAU;oBAAC;wBAAE,MAAM;wBAAQ,OAAO;oBAAM;iBAAE;YAC5C;YACA,eAAe;YACf,UAAU,IAAI,CAAC;QACjB;QACA,UAAU,IAAI,CAAC;QACf,IAAI,SAAS;YACX,MAAM,iBAAiB;gBACrB,MAAM;gBACN,SAAS;gBACT,YAAY;oBACV,mCAAmC;oBACnC,iBAAiB;oBACjB,cAAc;gBAChB;gBACA,UAAU;oBAAC;wBAAE,MAAM;wBAAQ,OAAO;oBAAQ;iBAAE;YAC9C;YACA,iBAAiB;YACjB,UAAU,IAAI,CAAC;QACjB;QACA,OAAO;IACT;AACF;AACA,IAAI,yBAAyB,aAAa,GAAG,IAAI;AACjD,IAAI,aAAa,CAAA,GAAA,mIAAA,CAAA,UAAO,AAAD,IAAI,GAAG,CAAC,2IAAA,CAAA,UAAW,EAAE;IAAE,UAAU;AAAK;AAC7D,IAAI,cAAc;AAClB,SAAS,iBAAiB,UAAU,CAAC,CAAC;IACpC,MAAM,EACJ,OAAO,IAAI,EACX,QAAQ,oBAAoB,EAC5B,iBAAiB,IAAI,EACrB,mBAAmB,KAAK,EACxB,cAAc,EAAE,EAChB,YAAY,CAAC,CAAC,EACd,mBAAmB,CAAC,IAAM,CAAC,EAC3B,gBAAgB,mBAAmB,4JAAA,CAAA,iBAAc,EACjD,YAAY,EACZ,WAAW,EACX,sBAAsB,EACtB,uBAAuB,EACvB,YAAY,EACZ,cAAc,EACf,GAAG;IACJ,MAAM,MAAM,KAAK,SAAS,CAAC;IAC3B,IAAI,oBAAoB,uBAAuB,GAAG,CAAC;IACnD,IAAI,CAAC,mBAAmB;QACtB,oBAAoB,iBAAiB;YACnC,QAAQ,YAAY,UAAU,OAAO,UAAU,WAAW;gBAAC;aAAM,GAAG,OAAO,MAAM,CAAC;YAClF,OAAO;gBAAC;aAAY;QACtB;QACA,uBAAuB,GAAG,CAAC,KAAK;IAClC;IACA,MAAM,uBAAuB,OAAO,gBAAgB,WAAW,cAAc,YAAY,KAAK,IAAI;IAClG,MAAM,wBAAwB,OAAO,gBAAgB,WAAW,cAAc,YAAY,MAAM,IAAI;IACpG,SAAS,WAAW,IAAI,EAAE,IAAI;QAC5B,MAAM,iBAAiB,CAAC,YAAY,UAAU,OAAO,UAAU,WAAW,QAAQ;QAClF,MAAM,cAAc,YAAY,UAAU,OAAO,UAAU,WAAW,QAAQ;QAC9E,OAAO;YACL;YACA,MAAM;gBAAE,OAAO;YAAK;YACpB;YACA,cAAc,OAAO,UAAU,WAAW,QAAQ;YAClD,GAAG,iBAAiB;gBAAE,QAAQ;YAAe,IAAI;gBAAE,OAAO;YAAY,CAAC;QACzE;IACF;IACA,OAAO,OAAO;QACZ,MAAM,cAAc,aAAa,GAAG,IAAI;QACxC,MAAM,cAAc,MAAM;QAC1B,IAAI,CAAC,aAAa;QAClB,CAAA,GAAA,kKAAA,CAAA,QAAK,AAAD,EAAE,MAAM,WAAW,CAAC,SAAS,GAAG;YAClC,IAAI,aAAa,SAAS,QAAQ,mBAAmB;gBACnD,MAAM,cAAc,QAAQ,QAAQ,CAAC,EAAE;gBACvC,IAAI,CAAC,OAAO,cAAc;gBAC1B,MAAM,QAAQ,YAAY,KAAK;gBAC/B,IAAI,CAAC,OAAO;gBACZ,MAAM,OAAO,kBAAkB,OAAO;gBACtC,IAAI,QAAQ,IAAI,CAAC,EAAE,KAAK,KAAK;oBAC3B,YAAY,GAAG,CAAC;gBAClB;YACF;YACA,IAAI,YAAY,UAAU;gBACxB,MAAM,cAAc,QAAQ,QAAQ,CAAC,EAAE;gBACvC,IAAI,CAAC,UAAU,cAAc;gBAC7B,MAAM,EAAE,IAAI,EAAE,GAAG,qBACf,aACA,kBACA;gBAEF,IAAI,MAAM;oBACR,YAAY,GAAG,CAAC;gBAClB;YACF;QACF;QACA,IAAI;YACF,MAAM,QAAQ,UAAU,CACtB,MAAM,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;gBAC3B,IAAI;oBACF,OAAO,YAAY,YAAY,CAC7B;gBAEJ,EAAE,OAAO,GAAG;oBACV,OAAO,QAAQ,MAAM,CAAC;gBACxB;YACF;QAEJ,EAAE,OAAO,GAAG;YACV,QAAQ,KAAK,CAAC;QAChB;QACA,CAAA,GAAA,kKAAA,CAAA,QAAK,AAAD,EAAE,MAAM,WAAW,CAAC,SAAS,GAAG;YAClC,IAAI,aAAa,SAAS,QAAQ,mBAAmB;gBACnD,MAAM,cAAc,QAAQ,QAAQ,CAAC,EAAE;gBACvC,IAAI,CAAC,OAAO,cAAc;gBAC1B,MAAM,QAAQ,YAAY,KAAK;gBAC/B,IAAI,CAAC,OAAO;gBACZ,MAAM,eAAe,oBAAoB,IAAI,CAAC;gBAC9C,MAAM,gBAAgB,eAAe,MAAM,OAAO,CAAC,uBAAuB,QAAQ,MAAM,OAAO,CAAC,mBAAmB;gBACnH,YAAY,KAAK,GAAG;gBACpB,MAAM,OAAO,eAAe,KAAK,kBAAkB,OAAO;gBAC1D,MAAM,SAAS,IAAI,CAAC,EAAE,KAAK;gBAC3B,IAAI,CAAC,MAAM;gBACX,IAAI;gBACJ,IAAI,QAAQ;oBACV,IAAI;wBACF,WAAW,WAAW,KAAK,CACzB,YAAY,UAAU,CAAC,eAAe,WAAW;oBAErD,EAAE,OAAM;wBACN,WAAW,WAAW,KAAK,CACzB,YAAY,UAAU,CAAC,eAAe,WAAW;oBAErD;gBACF,OAAO;oBACL,MAAM,aAAa,cAAc;oBACjC,MAAM,eAAe,OAAO,UAAU,YAAY,CAAC,YAAY;oBAC/D,MAAM,YAAY,eAAe,OAAO,IAAI,CAAC,SAAS;oBACtD,MAAM,gBAAgB,WAAW,GAAG,CAClC,CAAC,OAAS,OAAO,YAAY,QAAQ,CAAC,MAAM,QAAQ,CAAC,IAAI,CACvD,CAAC,EAAE,KAAK,EAAE,GAAK,OAAO,SAAS,SAAS,CAAC,KAAK,KAAK,CAAC,GAAG,IAAI,KAAK,KAAK,CAAC,MACrE,SAAS,cAAc,YAAY;oBAExC,IAAI,gBAAgB,WAAW;wBAC7B,WAAW,WAAW,KAAK,CACzB,CAAC,wBAAwB,EAAE,UAAU,GAAG,CAAC,CAAC,MAAM,IAAM,CAAC,QAAQ,EAAE,KAAK,CAAC,EAAE,aAAa,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,EAAE,EAAE,cAAc,oBAAoB,CAAC;oBAElJ,OAAO;wBACL,WAAW,WAAW,KAAK,CACzB,CAAC,8BAA8B,EAAE,aAAa,CAAC,EAAE,CAAC,EAAE,EAAE,cAAc,oBAAoB,CAAC;oBAE7F;gBACF;gBACA,CAAA,GAAA,kKAAA,CAAA,QAAK,AAAD,EAAE,UAAU,WAAW;gBAC3B,MAAM,SAAS;oBACb,MAAM;oBACN,MAAM,SAAS,OAAO;oBACtB,QAAQ;oBACR;oBACA;gBACF;YACF;YACA,IAAI,YAAY,UAAU;gBACxB,MAAM,cAAc,QAAQ,QAAQ,CAAC,EAAE;gBACvC,IAAI,CAAC,UAAU,cAAc;gBAC7B,MAAM,cAAc,YAAY,QAAQ,CAAC,EAAE;gBAC3C,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,qBACrC,aACA,kBACA;gBAEF,IAAI,CAAC,QAAQ,SAAS,QAAQ;gBAC9B,MAAM,cAAc,EAAE;gBACtB,IAAI,MAAM;oBACR,MAAM,UAAU,KAAK,QAAQ,CAAC;oBAC9B,KAAK,MAAM,SAAS,QAAS;wBAC3B,IAAI,KAAK,CAAC,EAAE,EAAE;4BACZ,YAAY,IAAI,IAAI,CAAA,GAAA,8IAAA,CAAA,UAAY,AAAD,EAAE,KAAK,CAAC,EAAE;wBAC3C;oBACF;gBACF;gBACA,IAAI,uBAAuB;gBAC3B,MAAM,YAAY,aAAa,GAAG,IAAI;gBACtC,MAAM,YAAY,EAAE;gBACpB,MAAM,mBAAmB,EAAE;gBAC3B,MAAM,iBAAiB,aAAa,GAAG,IAAI;gBAC3C,MAAM,eAAe,OAAO;uBACvB,KAAK,QAAQ,CACd;iBAEH,GAAG,KAAK;gBACT,YAAY,OAAO,CAAC,CAAC;oBACnB,MAAM,KAAK,UAAU,YAAY;oBACjC,MAAM,UAAU,GAAG,CAAC,YAAY;gBAClC;gBACA,IAAI,MAAM,OAAO,CAAC,eAAe;oBAC/B,aAAa,OAAO,CAAC,CAAC;wBACpB,MAAM,EAAE,KAAK,EAAE,iBAAiB,EAAE,GAAG,KAAK,MAAM;wBAChD,UAAU,IAAI,CAAC;wBACf,IAAI,sBAAsB,IAAI;4BAC5B,iBAAiB,IAAI,CAAC,EAAE;wBAC1B,OAAO;4BACL,MAAM,CAAC,OAAO,GAAG,GAAG,kBAAkB,KAAK,CAAC;4BAC5C,SAAS,iBAAiB,IAAI,CAAC,CAAA,GAAA,8IAAA,CAAA,UAAY,AAAD,EAAE;4BAC5C,MAAM,eAAe,GAAG,CAAC,OAAO;wBAClC;oBACF;gBACF;gBACA,IAAI,CAAC,OAAO,cAAc;gBAC1B,MAAM,gBAAgB,YAAY,KAAK,CAAC,OAAO,CAAC,OAAO;gBACvD,IAAI;gBACJ,IAAI;oBACF,WAAW,WAAW,KAAK,CACzB,YAAY,UAAU,CAAC,eAAe,WAAW,MAAM;gBAE3D,EAAE,OAAM;oBACN,WAAW,WAAW,KAAK,CACzB,YAAY,UAAU,CACpB,eACA,WAAW,aAAa;gBAG9B;gBACA,IAAI,cAAc;gBAClB,MAAM,0BAA0B;oBAC9B,QAAQ;oBACR,QAAQ;oBACR,YAAY,aAAa,GAAG,IAAI;gBAClC;gBACA,CAAA,GAAA,kKAAA,CAAA,QAAK,AAAD,EAAE,UAAU,WAAW,CAAC;oBAC1B,IAAI,SAAS,OAAO,KAAK,UAAU,8BAA8B,IAAI,CAAC,cAAc,QAAQ;wBAC1F,IAAI,SAAS,UAAU,EAAE;4BACvB,SAAS,UAAU,CAAC,oBAAoB,GAAG;wBAC7C;wBACA,MAAM,0BAA0B,cAAc,MAAM,KAAK,CACvD;wBAEF,MAAM,oBAAoB,yBAAyB,CAAC,EAAE;wBACtD,IAAI,mBAAmB;4BACrB,MAAM,UAAU,oBAAoB,OAAO,cAAc,sBAAsB,IAAI;4BACnF,uBAAuB;4BACvB,IAAI,SAAS,UAAU,EAAE;gCACvB,SAAS,UAAU,CAAC,KAAK,GAAG,CAAC,kBAAkB,EAAE,QAAQ,CAAC,CAAC;4BAC7D;wBACF;oBACF;oBACA,IAAI,MAAM,OAAO,CAAC,SAAS,UAAU,EAAE,cAAc,SAAS,UAAU,EAAE,WAAW,CAAC,EAAE,KAAK,QAAQ;wBACnG,IAAI,QAAQ,CAAA,GAAA,wJAAA,CAAA,WAAQ,AAAD,EAAE,cAAc,IAAI;4BACrC,SAAS,QAAQ,GAAG;gCAAC;oCAAE,MAAM;oCAAQ,OAAO;gCAAI;6BAAE;wBACpD;wBACA,iBAAiB;wBACjB,cAAc;wBACd;wBACA,IAAI,YAAY,QAAQ,CAAC,cAAc;4BACrC,SAAS,UAAU,CAAC,wBAAwB,GAAG;4BAC/C,MAAM,SAAS,UAAU,GAAG,CAAC;4BAC7B,IAAI,QAAQ;gCACV,SAAS,UAAU,CAAC,2BAA2B,GAAG;4BACpD;4BACA,yBAAyB,UAAU;wBACrC;wBACA,iBACE,UACA,WACA,yBACA;wBAEF;oBACF;gBACF;gBACA,MAAM,SAAS;oBACb,MAAM;oBACN;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;gBACF;YACF;QACF;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 46062, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}